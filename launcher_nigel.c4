// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_12 = "NULL";
    l_15 = 0.0;
    l_19 = -0.0375;
    l_1A = 0.17;
    l_1E = 80.0;
    l_1F = 140.0;
    l_20 = 180.0;
    l_23 = 3;
    l_28 = 1;
    l_29 = 65;
    l_2A = 49;
    l_2B = 64;
    l_2F = UI::_4A9923385BDB9DAD();
    l_30 = UI::_GET_BLIP_INFO_ID_ITERATOR();
    l_5C = sub_11fb4(64);
    l_5D = sub_11fb4(63);
    l_5E = ${u_m_m_aldinapoli};
    l_5F = ${premier};
    l_6C = -1;
    GAMEPLAY::_6F2135B6129620C1(1);
    sub_11f9a();
    asm .vardef<F> 2, "[{\"type\":\"field\",\"value\":[{\"offset\":17,\"value\":2}]},{\"type\":\"field\",\"value\":[{\"offset\":28,\"value\":6}]},{\"type\":\"field\",\"value\":[{\"offset\":35,\"value\":5}]},{\"type\":\"field\",\"value\":[{\"offset\":41,\"value\":6}]}]"
    v_3F/*{3}*/ = {0.0, 0.0, 0.0 };
    asm .vardef<F> 0x42, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":15}]}]"
    sub_11f67(&v_2);
    v_3F/*{3}*/ = l_6F._f1[0/*3*/];
    v_76._f1 = -1;
    asm .vardef<F> 0x80, "[{\"offset\":0,\"value\":7}]"
    v_80[0/*1*/] = 37;
    v_80[1/*1*/] = 38;
    v_80[2/*1*/] = 39;
    v_80[3/*1*/] = 40;
    v_80[4/*1*/] = 41;
    v_80[5/*1*/] = 42;
    v_80[6/*1*/] = 43;
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(83)) {
        sub_11f55("Force cleanup [TERMINATING]");
        if (v_2 != -1) {
            if (g_186DF[v_2/*10*/]._f9 != -1) {
                sub_11f55("Relinquishing candidate id...");
                sub_11f18(&g_186DF[v_2/*10*/]._f9);
            }
        }
        sub_11ac2(&v_2, &v_76, 1);
    }
    if (!sub_11964(&v_80, &v_2, v_3F, 1.0)) {
        sub_1194a();
        sub_11f55("SCRIPT TERMINATED");
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    if (!sub_115aa(v_2)) {
        sub_1194a();
        sub_11f55("SCRIPT TERMINATED");
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    if (sub_11556(v_2)) {
        sub_1194a();
        sub_11f55("SCRIPT TERMINATED");
        SCRIPT::TERMINATE_THIS_THREAD();
    }
    while (!sub_d986(&v_2, &v_42)) {
        SYSTEM::WAIT(0);
        if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
            sub_11f55("Player out of range [TERMINATING]");
            sub_11ac2(&v_2, &v_76, 1);
        }
    }
    if (v_2 == 43) {
        v_76 = 0;
    }
    GAMEPLAY::CLEAR_AREA(v_3F, v_2._fF, 1, 0, 0, 0);
    while (1) {
        SYSTEM::WAIT(0);
        if (!sub_c37d(&v_2, 1)) {
            sub_11ac2(&v_2, &v_76, 1);
        }
        sub_c355(v_2);
        sub_c046(&l_6C, &v_2._f9, v_3F);
        if (v_2 == 42) {
            if (CUTSCENE::_B56BBBCC2955D9CB()) {
                CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(sub_c03a(), 4, 0, 0, sub_c02d());
                sub_11f55("Nigel 2 : set Di Napoli's cutscene trousers variation in launcher");
            }
        }
        if (sub_c008(&l_60) && (v_2 == 37)) {
            sub_bc77(v_2._f1C[1/*1*/], &l_60, v_2);
        }
        if (v_2 == 37) {
            sub_badb(&v_2, v_3F, "NIG1AAU", "NIG1A_AMB", 0, "NIGEL", 1, "MRSTHORNHILL", &l_6E);
        } else if (v_2 == 42) {
            sub_b8ee(&v_2, v_3F, "NIG2AUD", "NIG2_AMB", 4, "NIGEL", 5000, 14.0);
        } else if (v_2 == 43) {
            sub_b58f(&v_76, &v_2._f23[0/*1*/], &v_2._f1C[1/*1*/]);
            sub_b8ee(&v_2, -44.75, -1289.8599853515625, 29.16, "NIGE3AU", "NIGEL3_AMB", 4, "NIGEL", 8000, 0x41a00000);
        }
        v_88 = 0;
        if (v_2 == 41) {
            if (sub_b496(&v_2, &v_42) || sub_b3d2(&v_2)) {
                v_88 = 1;
            }
        } else if (sub_a219(&v_2, 0)) {
            v_88 = 1;
        }
        if (v_88) {
            if (v_2 == 42) {
                sub_a1e6(1, 0, 1, 0);
            }
            if (sub_a157(v_2)) {
                sub_9c8d(v_2, &l_6D);
            }
            if (!sub_39d(&v_2)) {
                sub_11ac2(&v_2, &v_76, 1);
            }
            if (sub_37f(&v_2)) {
                sub_11ac2(&v_2, &v_76, 0);
            }
        }
    }
}

auto sub_37f(auto a_0) {
    while (!g_186DF[a_0/*10*/]) {
        SYSTEM::WAIT(0);
    }
    return 1;
}

auto sub_39d(auto a_0) {
    if (!sub_9c69()) {
        while (!sub_97fe(a_0)) {
            if (sub_97bd(a_0)) {
                sub_9412();
            }
            if (!sub_c37d(a_0, a_0 != 2)) {
                sub_11f55("LAUNCH_RC_MISSION - NOT IS_RC_FINE_AND_IN_RANGE() [TERMINATING]");
                return 0;
            }
            SYSTEM::WAIT(0);
        }
    }
    if (sub_93f0()) {
        sub_9389();
    }
    if (!sub_8a3c(a_0)) {
        sub_11f55("STEP_7_COMMON_LaunchMission - Trying to launch a null script string name");
        return 0;
    }
    sub_741e(a_0, &v_3);
    v_23/*"16"*/ = sub_6fd1(a_0);
    sub_6f64(&v_23, v_3._f3, 0);
    sub_6f0b(a_0);
    if (!sub_9c69()) {
        if (a_0._f10 == 2) {
            sub_dee(&a_0._f1, 0);
        } else { 
            sub_dee(&a_0._f1, 1);
        }
    }
    sub_45f(a_0, v_3);
    return 1;
}

void sub_45f(auto a_0, auto a_1) {
    sub_ddb(a_1);
    GAMEPLAY::CLEAR_BIT(&game_state._f4338[a_0/*6*/], 5);
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
        while (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
            sub_d6f();
            SYSTEM::WAIT(0);
        }
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) < 1) {
        g_D96C = 0;
        SCRIPT::REQUEST_SCRIPT("mission_stat_watcher");
        while (!SCRIPT::HAS_SCRIPT_LOADED("mission_stat_watcher")) {
            SYSTEM::WAIT(0);
        }
        SYSTEM::START_NEW_SCRIPT("mission_stat_watcher", 1828);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED("mission_stat_watcher");
    }
    while (!GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 5)) {
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
            GAMEPLAY::SET_BIT(&game_state._f4338[a_0/*6*/], 5);
        }
    }
    sub_51e(a_0);
}

void sub_51e(auto a_0) {
    if (g_D969 == 1) {
        sub_d36();
        g_D969 = 0;
        if (g_D964) {
            return ;
        }
    }
    if (g_3) {
        g_D96C = 1;
        sub_bca();
        return ;
    }
    g_D97A/*"16"*/ = sub_b92(a_0);
    g_D96E = 0;
    g_D96D = 0;
    switch (a_0) {
    case 1:
    case 9:
        g_D961 = 1;
        g_D964 = 1;
        g_D967 = 1;
        break;
    case 0:
    case 4:
    case 7:
    case 10:
    case 11:
    case 13:
    case 15:
    case 27:
    case 31:
    case 35:
    case 36:
    case 37:
    case 44:
    case 45:
    case 48:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
        g_D96C = 1;
        g_D96D = 1;
        sub_bca();
        sub_d6f();
        return ;
        break;
    }
    v_3 = g_10940;
    g_10940 = 1;
    v_4 = g_10941;
    g_10941 = a_0;
    if (!g_D961) {
        if (((g_10941 != v_4) || (g_108AA == 0)) || (v_3 != g_10940)) {
            g_6314 = 0;
            sub_bca();
            sub_72b(a_0);
        } else { 
            g_D964 = 1;
        }
    }
    g_D987 = GAMEPLAY::GET_GAME_TIMER();
    sub_678();
    g_D96B = 0;
}

void sub_678() {
    if (!g_D968) {
        return ;
    }
    if (g_108AA == 0) {
        return ;
    }
    v_2 = 0;
    for (v_2 = 0; v_2 < g_108AA; v_2 += 1) {
        switch (g_DA4C[g_108AB[v_2/*9*/]/*13*/]) {
        case 1:
        case 9:
            g_108AB[v_2/*9*/]._f3 = 1;
            break;
        case 4:
            if (g_D973) {
                g_108AB[v_2/*9*/]._f3 = 1;
            }
            break;
        case 6:
            if (g_DA4C[g_108AB[v_2/*9*/]/*13*/]._f3) {
                if (g_108AB[v_2/*9*/]._f1 != 0) {
                    g_108AB[v_2/*9*/]._f3 = 1;
                }
            }
            break;
        }
    }
    g_D968 = 0;
}

void sub_72b(auto a_0) {
    switch (a_0) {
    case 2:
        sub_b13(741);
        sub_b13(742);
        return ;
    case 3:
        sub_b13(743);
        sub_b13(744);
        return ;
    case 5:
        sub_b13(745);
        sub_b13(746);
        return ;
    case 6:
        sub_b13(747);
        sub_b13(748);
        return ;
    case 8:
        sub_b13(749);
        return ;
    case 12:
        sub_b13(750);
        return ;
    case 14:
        sub_b13(751);
        sub_b13(752);
        return ;
    case 16:
        sub_b13(753);
        sub_b13(754);
        return ;
    case 17:
        sub_b13(755);
        sub_b13(756);
        sub_b13(757);
        return ;
    case 18:
        sub_b13(758);
        sub_b13(759);
        return ;
    case 19:
        sub_b13(760);
        sub_b13(761);
        return ;
    case 20:
        sub_b13(762);
        return ;
    case 21:
        sub_b13(763);
        return ;
    case 22:
        sub_b13(764);
        sub_b13(765);
        return ;
    case 23:
        sub_b13(766);
        return ;
    case 25:
        sub_b13(767);
        sub_b13(768);
        sub_b13(769);
        return ;
    case 26:
        sub_b13(770);
        sub_b13(771);
        return ;
    case 28:
        sub_b13(772);
        sub_b13(773);
        return ;
    case 29:
        sub_b13(774);
        sub_b13(775);
        return ;
    case 30:
        sub_b13(776);
        sub_b13(777);
        return ;
    case 32:
        sub_b13(778);
        sub_b13(779);
        return ;
    case 33:
        sub_b13(780);
        sub_b13(781);
        sub_b13(782);
        return ;
    case 34:
        sub_b13(783);
        sub_b13(784);
        return ;
    case 38:
        sub_b13(785);
        sub_b13(786);
        return ;
    case 39:
        sub_b13(787);
        sub_b13(788);
        return ;
    case 40:
        sub_b13(789);
        return ;
    case 41:
        sub_b13(790);
        sub_b13(791);
        sub_b13(792);
        return ;
    case 42:
        sub_b13(793);
        sub_b13(794);
        sub_b13(795);
        return ;
    case 43:
        sub_b13(796);
        sub_b13(797);
        return ;
    case 46:
        sub_b13(798);
        sub_b13(799);
        return ;
    }
    switch (a_0) {
    case 47:
        sub_b13(800);
        sub_b13(801);
        return ;
    case 49:
        sub_b13(802);
        sub_b13(803);
        return ;
    case 50:
        sub_b13(804);
        sub_b13(805);
        return ;
    case 51:
        sub_b13(806);
        return ;
    case 57:
        sub_b13(807);
        sub_b13(808);
        sub_b13(809);
        return ;
    case 58:
        sub_b13(828);
        sub_b13(829);
        sub_b13(830);
        return ;
    case 59:
        sub_b13(831);
        sub_b13(832);
        sub_b13(833);
        return ;
    case 60:
        sub_b13(834);
        sub_b13(835);
        sub_b13(836);
        return ;
    case 61:
        sub_b13(837);
        sub_b13(838);
        sub_b13(839);
        return ;
    case 62:
        sub_b13(840);
        sub_b13(841);
        sub_b13(842);
        return ;
    case 24:
        sub_b13(843);
        sub_b13(844);
        sub_b13(845);
        return ;
    }
}

void sub_b13(auto a_0) {
    g_D964 = 1;
    g_D967 = 1;
    if (g_108AA > 15) {
        return ;
    }
    sub_b5e(g_108AA);
    g_108AB[g_108AA/*9*/] = a_0;
    g_108AA += 1;
    if (g_DA4C[a_0/*13*/] == 16) {
        g_10942 = 1;
    }
}

void sub_b5e(auto a_0) {
    g_108AB[a_0/*9*/]._f1 = 0;
    g_108AB[a_0/*9*/]._f2 = 0.0;
    g_108AB[a_0/*9*/]._f3 = 0;
    g_108AB[a_0/*9*/]._f4 = 0;
}

auto<2> sub_b92(auto a_0) {
    v_3/*"8"*/ = "";
    v_5/*{2}*/ = sub_6fd1(a_0);
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_5)) {
    } else { 
        v_3/*"8"*/ = "RC_";
        v_3/*8*/ += v_5;
    }
    return v_3;
}

void sub_bca() {
    if (g_D96B) {
        return ;
    }
    g_D974 = 0;
    g_108AA = 0;
    g_D976 = 0;
    if (g_D973) {}
    g_D973 = 0;
    sub_d22(0);
    sub_cf8();
    g_10942 = 0;
    g_D96A = 1;
    sub_c90();
    sub_c84();
    sub_c4d();
    sub_c20();
    g_D961 = 0;
    g_D97F = 0;
    g_D987 = -1;
}

void sub_c20() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 4; v_2 += 1) {
        g_10965[v_2/*2*/]._f1 = -1;
    }
    g_1096E = 0;
}

void sub_c4d() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 16; v_2 += 1) {
        g_10943[v_2/*2*/] = 0;
        g_10943[v_2/*2*/]._f1 = -1;
    }
    g_10964 = 0;
}

void sub_c84() {
    g_DA0A = 0;
}

void sub_c90() {
    g_D97E = 0;
    g_D982 = sub_ce4(0xd8146ad1);
    g_D981 = sub_ce4(0x82feb19d);
    g_D984 = sub_ce4(0x8eaf083b);
    g_D983 = sub_ce4(0x786bbd76);
    g_D986 = sub_ce4(0x9c1a8ca0);
    g_D985 = sub_ce4(0x9d82ded);
}

auto sub_ce4(auto a_0) {
    STATS::STAT_GET_INT(a_0, &v_3, -1);
    return v_3;
}

void sub_cf8() {
    g_D988 = 0;
    v_2 = 0;
    for (v_2 = 0; v_2 < 64; v_2 += 1) {
        g_D989[v_2/*2*/] = 0;
    }
}

void sub_d22(auto a_0) {
    g_10FC9 = a_0;
    g_10FCA = a_0;
}

void sub_d36() {
    g_D969 = 1;
    v_2 = 0;
    for (v_2 = 0; v_2 < g_108AA; v_2 += 1) {
        g_108AB[v_2/*9*/]._f3 = 2;
    }
    if (g_D973) {}
    g_D973 = 0;
}

void sub_d6f() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
        if (sub_db1()) {
            if (g_D966 && (!g_D965)) {
                g_D966 = 0;
                GAMEPLAY::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
            }
        } else { 
            GAMEPLAY::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
        }
    }
}

auto sub_db1() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) < 1) {
        return 0;
    }
    if (!g_D964) {
        return 0;
    } else { }
    return g_D970;
}

void sub_ddb(auto a_0) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, a_0)) {}
}

void sub_dee(auto a_0, auto a_1) {
    GAMEPLAY::CLEAR_BIT(&g_163E2._f14, 17);
    sub_e0b(a_0, a_1, 0);
}

void sub_e0b(auto a_0, auto a_1, auto a_2) {
    if ((g_163E2 != 10) && (g_163E2 != 9)) {
        g_16AEE/*"32"*/ = a_0;
        sub_1ae4(&g_16AF6, a_0, 0, "Start", a_1, a_2);
        sub_e50();
        g_14E71 = 0;
    } else { }
}

void sub_e50() {
    g_1745B = g_16AF6;
    g_1745B._f1 = g_16AF6._f1;
    g_1745B._f6 = g_16AF6._f6;
    g_1745B._f7 = g_16AF6._f7;
    g_1745B._f8 = g_16AF6._f8;
    g_1745B._f2 = g_16AF6._f2;
    g_1745B._f3 = g_16AF6._f3;
    g_1745B._f4 = g_16AF6._f4;
    g_1745B._f5 = g_16AF6._f5;
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        g_1745B._f9[v_3/*1*/] = g_16AF6._f9[v_3/*1*/];
        g_1745B._fD[v_3/*1*/] = g_16AF6._fD[v_3/*1*/];
        g_1745B._f11[v_3/*1*/] = g_16AF6._f11[v_3/*1*/];
        g_1745B._f15[v_3/*1*/] = g_16AF6._f15[v_3/*1*/];
        g_1745B._f19[0/*295*/][v_3/*98*/]/*{98}*/ = g_16AF6._f19[0/*295*/][v_3/*98*/];
        g_1745B._f19[1/*295*/][v_3/*98*/]/*{98}*/ = g_16AF6._f19[1/*295*/][v_3/*98*/];
        for (v_2 = 0; v_2 < 12; v_2 += 1) {
            g_1745B._f268[v_3/*65*/][v_2/*1*/] = g_16AF6._f268[v_3/*65*/][v_2/*1*/];
            g_1745B._f268[v_3/*65*/]._fD[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._fD[v_2/*1*/];
            g_1745B._f268[v_3/*65*/]._f1A[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._f1A[v_2/*1*/];
        }
        g_1745B._f268[v_3/*65*/]._f3B = g_16AF6._f268[v_3/*65*/]._f3B;
        g_1745B._f268[v_3/*65*/]._f3C = g_16AF6._f268[v_3/*65*/]._f3C;
        g_1745B._f268[v_3/*65*/]._f3D = g_16AF6._f268[v_3/*65*/]._f3D;
        g_1745B._f268[v_3/*65*/]._f3E = g_16AF6._f268[v_3/*65*/]._f3E;
        g_1745B._f268[v_3/*65*/]._f3F = g_16AF6._f268[v_3/*65*/]._f3F;
        g_1745B._f268[v_3/*65*/]._f40 = g_16AF6._f268[v_3/*65*/]._f40;
        for (v_2 = 0; v_2 < 9; v_2 += 1) {
            g_1745B._f268[v_3/*65*/]._f27[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._f27[v_2/*1*/];
            g_1745B._f268[v_3/*65*/]._f31[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._f31[v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 44; v_2 += 1) {
            g_1745B._f32C[v_3/*284*/][v_2/*3*/]/*{3}*/ = g_16AF6._f32C[v_3/*284*/][v_2/*3*/];
        }
        for (v_2 = 0; v_2 < 50; v_2 += 1) {
            g_1745B._f32C[v_3/*284*/]._f85[v_2/*3*/]/*{3}*/ = g_16AF6._f32C[v_3/*284*/]._f85[v_2/*3*/];
        }
        for (v_2 = 0; v_2 < 4; v_2 += 1) {
            g_1745B._f681[v_3/*32*/][v_2/*1*/] = g_16AF6._f681[v_3/*32*/][v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 10; v_2 += 1) {
            g_1745B._f681[v_3/*32*/]._f5[v_2/*1*/] = g_16AF6._f681[v_3/*32*/]._f5[v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 15; v_2 += 1) {
            g_1745B._f681[v_3/*32*/]._f10[v_2/*1*/] = g_16AF6._f681[v_3/*32*/]._f10[v_2/*1*/];
        }
        g_1745B._f6E2[v_3/*1*/] = g_16AF6._f6E2[v_3/*1*/];
        for (v_2 = 0; v_2 <= 3; v_2 += 1) {
            g_1745B._f8D3[v_3/*15*/][v_2/*1*/] = g_16AF6._f8D3[v_3/*15*/][v_2/*1*/];
            g_1745B._f8D3[v_3/*15*/]._f5[v_2/*1*/] = g_16AF6._f8D3[v_3/*15*/]._f5[v_2/*1*/];
            g_1745B._f8D3[v_3/*15*/]._fA[v_2/*1*/] = g_16AF6._f8D3[v_3/*15*/]._fA[v_2/*1*/];
        }
        for (v_2 = 0; v_2 <= 2; v_2 += 1) {
            g_1745B._f6E6[v_3/*164*/][v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/][v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f4[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f4[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f8[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f8[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._fC[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._fC[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f10[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f10[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f14[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f14[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f18[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f18[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f1C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f1C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f20[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f20[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f24[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f24[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f28[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f28[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f2C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f2C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f30[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f30[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f34[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f34[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f38[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f38[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f3C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f3C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f40[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f40[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f44[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f44[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f48[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f48[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f4C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f4C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f50[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f50[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f54[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f54[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f58[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f58[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f5C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f5C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f60[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f60[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f64[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f64[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f68[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f68[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f6C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f6C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f70[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f70[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f74[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f74[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f78[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f78[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f7C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f7C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f80[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f80[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f84[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f84[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f88[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f88[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f8C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f8C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f90[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f90[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f94[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f94[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f98[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f98[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f9C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f9C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._fA0[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._fA0[v_2/*1*/];
        }
    }
    g_1745B._f901/*{3}*/ = g_16AF6._f901;
    g_1745B._f901._f3 = g_16AF6._f901._f3;
    g_1745B._f907/*{3}*/ = g_16AF6._f907;
    g_1745B._f907._f3/*{3}*/ = g_16AF6._f907._f3;
    g_1745B._f907._f6 = g_16AF6._f907._f6;
    g_1745B._f907._f8 = g_1745B._f907._f8;
    g_1745B._f907._f7 = g_16AF6._f907._f7;
    g_1745B._f907._f9 = g_16AF6._f907._f9;
    g_1745B._f907._fB = g_16AF6._f907._fB;
    g_1745B._f907._fA = g_16AF6._f907._fA;
    g_1745B._f907._fC = g_16AF6._f907._fC;
    g_1745B._f907._fC._f1/*{4}*/ = g_16AF6._f907._fC._f1;
    g_1745B._f907._fC._f5 = g_16AF6._f907._fC._f5;
    g_1745B._f907._fC._f6 = g_16AF6._f907._fC._f6;
    g_1745B._f907._fC._f7 = g_16AF6._f907._fC._f7;
    g_1745B._f907._fC._f8 = g_16AF6._f907._fC._f8;
    g_1745B._f907._fC._f9/*{50}*/ = g_16AF6._f907._fC._f9;
    g_1745B._f907._fC._f3B/*{3}*/ = g_16AF6._f907._fC._f3B;
    g_1745B._f907._fC._f3E = g_16AF6._f907._fC._f3E;
    g_1745B._f907._fC._f3F = g_16AF6._f907._fC._f3F;
    g_1745B._f907._fC._f40 = g_16AF6._f907._fC._f40;
    g_1745B._f907._fC._f41 = g_16AF6._f907._fC._f41;
    g_1745B._f907._fC._f4D = g_16AF6._f907._fC._f4D;
    g_1745B._f907._fC._f42 = g_16AF6._f907._fC._f42;
    g_1745B._f907._fC._f43 = g_16AF6._f907._fC._f43;
    g_1745B._f907._fC._f44 = g_16AF6._f907._fC._f44;
    g_1745B._f907._fC._f45 = g_16AF6._f907._fC._f45;
    g_1745B._f907._fC._f47 = g_16AF6._f907._fC._f47;
    g_1745B._f907._fC._f48 = g_16AF6._f907._fC._f48;
    g_1745B._f907._fC._f49 = g_16AF6._f907._fC._f49;
    g_1745B._f907._fC._f4A = g_16AF6._f907._fC._f4A;
    g_1745B._f907._fC._f4B = g_16AF6._f907._fC._f4B;
    g_1745B._f907._fC._f4C = g_16AF6._f907._fC._f4C;
    g_1745B._f961 = g_16AF6._f961;
    g_1745B._f961._f1 = g_16AF6._f961._f1;
    g_1745B._f961._f2 = g_16AF6._f961._f2;
    g_1745B._f961._f3 = g_16AF6._f961._f3;
}

void sub_1ae4(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_0 = sub_6ef2();
    a_0._f1 = sub_6c06();
    GAMEPLAY::_GET_WEATHER_TYPE_TRANSITION(&a_0._f6, &a_0._f7, &a_0._f8);
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        sub_53d9(&a_0._f901, 0);
        sub_539d(PLAYER::PLAYER_PED_ID());
        sub_41f7(PLAYER::PLAYER_PED_ID(), 0);
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &a_0._f2, 1);
        if ((a_0._f2 == 0) || (a_0._f2 == ${object})) {
            a_0._f2 = ${weapon_unarmed};
        }
    }
    for (v_9 = 0; v_9 < 3; v_9 += 1) {
        a_0._f11[v_9/*1*/] = game_state._f6EA._f21B._f126[v_9/*1*/];
        if (v_9 == sub_40d3()) {
            sub_3701(PLAYER::PLAYER_PED_ID(), &a_0._f268[v_9/*65*/], 1);
        } else { 
            for (v_8 = 0; v_8 < 12; v_8 += 1) {
                a_0._f268[v_9/*65*/][v_8/*1*/] = g_16310[v_9/*65*/][v_8/*1*/];
                a_0._f268[v_9/*65*/]._fD[v_8/*1*/] = g_16310[v_9/*65*/]._fD[v_8/*1*/];
            }
            a_0._f268[v_9/*65*/]._f3B = g_16310[v_9/*65*/]._f3B;
            a_0._f268[v_9/*65*/]._f3C = g_16310[v_9/*65*/]._f3C;
            a_0._f268[v_9/*65*/]._f3D = g_16310[v_9/*65*/]._f3D;
            a_0._f268[v_9/*65*/]._f3E = g_16310[v_9/*65*/]._f3E;
            a_0._f268[v_9/*65*/]._f3F = g_16310[v_9/*65*/]._f3F;
            a_0._f268[v_9/*65*/]._f40 = g_16310[v_9/*65*/]._f40;
            for (v_8 = 0; v_8 < 9; v_8 += 1) {
                a_0._f268[v_9/*65*/]._f27[v_8/*1*/] = g_16310[v_9/*65*/]._f27[v_8/*1*/];
                a_0._f268[v_9/*65*/]._f31[v_8/*1*/] = g_16310[v_9/*65*/]._f31[v_8/*1*/];
            }
        }
        for (v_8 = 0; v_8 < 44; v_8 += 1) {
            a_0._f32C[v_9/*284*/][v_8/*3*/]/*{3}*/ = game_state._f6EA._f21B._f12A[v_9/*284*/][v_8/*3*/];
        }
        for (v_8 = 0; v_8 < 50; v_8 += 1) {
            a_0._f32C[v_9/*284*/]._f85[v_8/*3*/]/*{3}*/ = game_state._f6EA._f21B._f12A[v_9/*284*/]._f85[v_8/*3*/];
        }
        switch (v_9) {
        case 0:
            STATS::STAT_GET_INT(0xbbe7bea0, &a_0._f681[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xbd0ac0e6, &a_0._f681[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0x407407aa, &a_0._f681[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xae46634d, &a_0._f681[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0xd25eab9d, &a_0._f681[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0xbf938607, &a_0._f681[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0x876d959c, &a_0._f681[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0x87af642a, &a_0._f681[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x4ee77297, &a_0._f681[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x2d4e2f65, &a_0._f681[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0xf079b5bd, &a_0._f681[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0x40b7d638, &a_0._f681[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0x13e87c9a, &a_0._f681[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0xe22a991f, &a_0._f681[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0xa9322733, &a_0._f681[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0xf77e43c6, &a_0._f681[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0xccfeeecc, &a_0._f681[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0xa43cfe56, &a_0._f681[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0x72301a3d, &a_0._f681[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf875dedc, &a_0._f681[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xb5b048e, &a_0._f681[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0xd3eebb4e, &a_0._f681[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xb9588622, &a_0._f681[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0x3d718e5a, &a_0._f681[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0x6b5d6a31, &a_0._f681[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0x9058b423, &a_0._f681[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0xb19a20d6, &a_0._f681[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x84614665, &a_0._f681[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x6f2a1bf7, &a_0._f681[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0xe6fe8b9e, &a_0._f681[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0xf8c12f23, &a_0._f681[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0xc31bc3d9, &a_0._f681[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0xd4596654, &a_0._f681[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0x2d381820, &a_0._f681[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0x40febfad, &a_0._f681[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0x9c7512f, &a_0._f681[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0x5fd50bf0, &a_0._f681[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0x9198ef77, &a_0._f681[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xa967697, &a_0._f681[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xe4562a17, &a_0._f681[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0x6aaef0a, &a_0._f681[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xf4614a77, &a_0._f681[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0xe96f3493, &a_0._f681[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0xdaac970e, &a_0._f681[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0xcd6f7c94, &a_0._f681[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0xd87a875, &a_0._f681[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x8d73284e, &a_0._f681[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x734bf3fc, &a_0._f681[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0x41ec913e, &a_0._f681[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0x581ebda2, &a_0._f681[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0xcc81a66a, &a_0._f681[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0x9ab3c2cf, &a_0._f681[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0xb0deef25, &a_0._f681[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0x7f240bb0, &a_0._f681[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0xff888c7b, &a_0._f681[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0xffba48db, &a_0._f681[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0xf293ae8e, &a_0._f681[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        }
        a_0._f9[v_9/*1*/] = game_state._f61C9._fE9[v_9/*69*/]._f1;
        a_0._fD[v_9/*1*/] = g_CE62[v_9/*1*/];
        a_0._f19[0/*295*/][v_9/*98*/]/*{98}*/ = game_state._f6EA._f21B._f663[0/*295*/][v_9/*98*/];
        a_0._f19[1/*295*/][v_9/*98*/]/*{98}*/ = game_state._f6EA._f21B._f663[1/*295*/][v_9/*98*/];
        for (v_8 = 0; v_8 <= 3; v_8 += 1) {
            a_0._f8D3[v_9/*15*/][v_8/*1*/] = game_state._f6EA._f1ED[v_9/*15*/][v_8/*1*/];
            a_0._f8D3[v_9/*15*/]._f5[v_8/*1*/] = game_state._f6EA._f1ED[v_9/*15*/]._f5[v_8/*1*/];
            a_0._f8D3[v_9/*15*/]._fA[v_8/*1*/] = game_state._f6EA._f1ED[v_9/*15*/]._fA[v_8/*1*/];
        }
        for (v_8 = 0; v_8 <= 2; v_8 += 1) {
            a_0._f6E6[v_9/*164*/][v_8/*1*/] = game_state._f6EA[v_9/*164*/][v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f4[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f4[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f8[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f8[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._fC[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._fC[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f10[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f10[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f14[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f14[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f18[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f18[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f1C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f1C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f20[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f20[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f24[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f24[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f28[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f28[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f2C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f2C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f30[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f30[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f34[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f34[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f38[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f38[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f3C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f3C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f40[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f40[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f44[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f44[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f48[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f48[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f4C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f4C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f50[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f50[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f54[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f54[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f58[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f58[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f5C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f5C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f60[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f60[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f64[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f64[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f68[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f68[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f6C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f6C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f70[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f70[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f74[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f74[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f78[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f78[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f7C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f7C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f80[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f80[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f84[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f84[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f88[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f88[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f8C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f8C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f90[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f90[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f94[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f94[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f98[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f98[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f9C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f9C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._fA0[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._fA0[v_8/*1*/];
        }
    }
    STATS::STAT_GET_INT(0xdcdd4ca8, &a_0._f6E2[0/*1*/], -1);
    STATS::STAT_GET_INT(0x15151676, &a_0._f6E2[1/*1*/], -1);
    STATS::STAT_GET_INT(0x78fe7a3, &a_0._f6E2[2/*1*/], -1);
    a_0._f5 = 145;
    if (a_4 == 1) {
        sub_298e(&a_0._f907, a_0, a_5, 1, 1, 0);
    }
    sub_296c(&a_0._f961);
    a_3 = a_3;
    a_2 = a_2;
}

auto sub_296c(auto a_0) {
    a_0 = g_154F8;
    a_0._f1 = g_154F9;
    a_0._f2 = 0;
    a_0._f3 = 0;
    return 1;
}

void sub_298e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_2 == 0) {
        a_2 = PLAYER::PLAYER_PED_ID();
    } else { }
    if (ENTITY::DOES_ENTITY_EXIST(a_2)) {
        a_1._f5 = sub_369a(a_2);
    }
    if (sub_3423(a_2, &v_8, a_3, a_5)) {
        sub_2a15(a_0, a_1, v_8, a_4);
    } else if (ENTITY::DOES_ENTITY_EXIST(v_8)) {
        if (!ENTITY::IS_ENTITY_DEAD(v_8)) {
            if (VEHICLE::IS_VEHICLE_MODEL(v_8, ${skylift}) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_8, 0)) {
                sub_2a15(a_0, a_1, v_8, a_4);
            }
        }
    }
}

auto sub_2a15(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_2, 0)) {
        sub_2a83(a_0, a_2, a_3);
        a_1._f4 = a_2;
        if (sub_2a55(a_2)) {
            a_1._f3 = 1;
        } else { 
            a_1._f3 = 0;
        }
        return 1;
    } else { }
    return 0;
}

auto sub_2a55(auto a_0) {
    for (v_3 = 0; v_3 <= 6; v_3 += 1) {
        if (g_163E2._f16[v_3/*1*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

void sub_2a83(auto a_0, auto a_1, auto a_2) {
    sub_2f3c(a_1, &a_0._fC);
    a_0._f7 = sub_2c04(a_1, 145, 0);
    a_0._fB = sub_2ba1(a_1);
    if (!a_0._f7) {
        if (!a_0._fA) {
            a_0._fA = sub_2b5f(a_1);
        }
    }
    if (a_2 == 1) {
        a_0/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_1, 1);
        a_0._f6 = ENTITY::GET_ENTITY_HEADING(a_1);
        a_0._f3/*{3}*/ = ENTITY::GET_ENTITY_VELOCITY(a_1);
        if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(a_1, -1154.3255615234375, -1523.871337890625, 3.2621889114379883, -1158.4525146484375, -1517.7496337890625, 6.374244213104248, 13.0, 0, 1, 0)) {
            a_0/*{3}*/ = {-1160.0950927734375, -1515.406982421875, 3.1496 };
            a_0._f6 = 305.64239501953125;
        }
        if (g_10DE3 == a_1) {
            a_0._f9 = 1;
        }
    }
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
        a_0._f8 = 1;
    } else { 
        a_0._f8 = 0;
    }
}

auto sub_2b5f(auto a_0) {
    for (v_3 = 0; v_3 < 68; v_3 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_10A5A._f1E4[v_3/*1*/])) {
            if (a_0 == g_10A5A._f1E4[v_3/*1*/]) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_2ba1(auto a_0) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 145;
    }
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 145;
    }
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_15AC2[v_3/*1*/])) {
            if (g_15AC2[v_3/*1*/] == a_0) {
                return g_15ACC[v_3/*1*/];
            }
        }
    }
    return 145;
}

auto sub_2c04(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 0;
    }
    for (v_5 = 0; v_5 < 9; v_5 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_15AC2[v_5/*1*/])) {
            if (g_15AC2[v_5/*1*/] == a_0) {
                if ((a_1 == 145) || (a_1 == g_15ACC[v_5/*1*/])) {
                    if ((a_2 == 0) || (ENTITY::GET_ENTITY_MODEL(a_0) == sub_2c92(a_1, a_2))) {
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_2c92(auto a_0, auto a_1) {
    if (sub_2f30(a_0)) {
        asm .vardef<F> 4, "[{\"type\":\"field\",\"value\":[{\"offset\":11,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":31,\"value\":49}]},{\"type\":\"field\",\"value\":[{\"offset\":81,\"value\":2}]}]"
        sub_2cd4(a_0, &v_4, a_1);
        return v_4;
    } else if (a_0 != 145) {}
    return 0;
}

void sub_2cd4(auto a_0, auto a_1, auto a_2) {
    a_1._f58 = 1;
    a_1._f54 = 255;
    a_1._f55 = 255;
    a_1._f56 = 255;
    a_1._f61 = 1;
    a_1._f3 = 1000;
    a_1._f1 = 0;
    switch (a_0) {
    case 0:
        v_5 = ${tailgater};
        if (game_state._f1E27._f63._f3A[128/*1*/] && (!game_state._f1E27._f63._f3A[131/*1*/])) {
            v_5 = ${premier};
        }
        switch (v_5) {
        case ${tailgater}:
            a_1 = v_5;
            a_1._f2 = 3.0;
            a_1._f4 = 0;
            a_1._f9 = 1;
            a_1._fB[0/*1*/] = 1;
            a_1._f1B/*"16"*/ = "5MDS003";
            break;
        case ${premier}:
            a_1 = v_5;
            a_1._f2 = 14.899999999999999;
            a_1._f5 = 43;
            a_1._f6 = 43;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._f9 = 0;
            a_1._f1B/*"16"*/ = "880HS955";
            break;
        }
        break;
    case 2:
        v_5 = ${bodhi2};
        switch (v_5) {
        case ${bodhi2}:
            a_1 = v_5;
            a_1._f2 = 14.0;
            a_1._f5 = 32;
            a_1._f6 = 0;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._f1B/*"16"*/ = "BETTY 32";
            if (game_state._f1E27._f63._f3A[119/*1*/]) {
                a_1._fB[1/*1*/] = 1;
            }
            break;
        }
        break;
    case 1:
        if (a_2 == 1) {
            v_5 = ${buffalo2};
        } else if (a_2 == 2) {
            v_5 = ${bagger};
        } else if (game_state._f1E27._f63._f3A[118/*1*/]) {
            v_5 = ${bagger};
        } else { 
            v_5 = ${buffalo2};
        }
        switch (v_5) {
        case ${bagger}:
            a_1 = v_5;
            a_1._f2 = 6.0;
            a_1._f5 = 53;
            a_1._f6 = 0;
            a_1._f7 = 59;
            a_1._f8 = 156;
            a_1._f1B/*"16"*/ = "FC88";
            break;
        case ${buffalo2}:
            a_1 = v_5;
            a_1._f2 = 0.0;
            a_1._f5 = 111;
            a_1._f6 = 111;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._fA = 1;
            a_1._f1B/*"16"*/ = "FC1988";
            a_1._fB[0/*1*/] = 1;
            a_1._fB[1/*1*/] = 1;
            a_1._fB[2/*1*/] = 1;
            a_1._fB[3/*1*/] = 1;
            a_1._fB[4/*1*/] = 1;
            a_1._fB[5/*1*/] = 1;
            a_1._fB[6/*1*/] = 1;
            a_1._fB[7/*1*/] = 1;
            a_1._fB[8/*1*/] = 1;
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_2f30(auto a_0) {
    return a_0 < 3;
}

void sub_2f3c(auto a_0, auto a_1) {
    if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        sub_3372(a_1);
        a_1._f42 = ENTITY::GET_ENTITY_MODEL(a_0);
        a_1._f1/*"16"*/ = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(a_0);
        a_1 = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(a_0);
        VEHICLE::GET_VEHICLE_COLOURS(a_0, &a_1._f5, &a_1._f6);
        VEHICLE::GET_VEHICLE_EXTRA_COLOURS(a_0, &a_1._f7, &a_1._f8);
        VEHICLE::GET_VEHICLE_TYRE_SMOKE_COLOR(a_0, &a_1._f3E, &a_1._f3F, &a_1._f40);
        a_1._f41 = VEHICLE::GET_VEHICLE_WINDOW_TINT(a_0);
        a_1._f43 = VEHICLE::GET_VEHICLE_LIVERY(a_0);
        a_1._f45 = VEHICLE::GET_VEHICLE_WHEEL_TYPE(a_0);
        a_1._f46 = VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(a_0);
        VEHICLE::GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(a_0, &a_1._f47, &a_1._f48, &a_1._f49);
        VEHICLE::_GET_VEHICLE_NEON_LIGHTS_COLOUR(a_0, &a_1._f4A, &a_1._f4B, &a_1._f4C);
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 2)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 28);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 3)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 29);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 30);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 1)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 31);
        }
        if ((a_1._f41 == -1) && (a_1._f42 != ${granger})) {
            a_1._f41 = 0;
        }
        if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(a_0, 0)) {
            a_1._f44 = VEHICLE::GET_CONVERTIBLE_ROOF_STATE(a_0);
        }
        if (VEHICLE::IS_THIS_MODEL_A_PLANE(a_1._f42)) {
            if (VEHICLE::_4198AB0022B15F87(a_0)) {
                switch (VEHICLE::_GET_VEHICLE_LANDING_GEAR(a_0)) {
                case 0:
                case 2:
                    GAMEPLAY::CLEAR_BIT(&a_1._f4D, 23);
                    GAMEPLAY::SET_BIT(&a_1._f4D, 22);
                    break;
                case 1:
                case 3:
                    GAMEPLAY::CLEAR_BIT(&a_1._f4D, 23);
                    GAMEPLAY::CLEAR_BIT(&a_1._f4D, 22);
                    break;
                case 4:
                    GAMEPLAY::SET_BIT(&a_1._f4D, 23);
                    break;
                }
            } else { 
                GAMEPLAY::SET_BIT(&a_1._f4D, 23);
            }
        }
        if (!VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 9);
        }
        if (VEHICLE::IS_VEHICLE_STOLEN(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 10);
        }
        if (VEHICLE::GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 13);
            VEHICLE::GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(a_0, &a_1._f47, &a_1._f48, &a_1._f49);
        } else { }
        if (VEHICLE::GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 12);
        }
        sub_3298(&a_0, &a_1._f9, &a_1._f3B);
        for (v_4 = 0; v_4 <= 11; v_4 += 1) {
            if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(a_0, v_4 + 1)) {
                GAMEPLAY::SET_BIT(&a_1._f4D, sub_31e8(v_4 + 1));
            }
        }
        if (GRAPHICS::_HAS_VEHICLE_GOT_DECAL(a_0, 0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 11);
        } else { 
            GAMEPLAY::CLEAR_BIT(&a_1._f4D, 11);
        }
        if (DECORATOR::DECOR_EXIST_ON(a_0, "IgnoredByQuickSave") && DECORATOR::DECOR_GET_BOOL(a_0, "IgnoredByQuickSave")) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 27);
        } else { 
            GAMEPLAY::CLEAR_BIT(&a_1._f4D, 27);
        }
    }
}

auto sub_31e8(auto a_0) {
    switch (a_0) {
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 4;
        break;
    case 6:
        return 5;
        break;
    case 7:
        return 6;
        break;
    case 8:
        return 7;
        break;
    case 9:
        return 8;
        break;
    case 10:
        return 24;
        break;
    case 11:
        return 25;
        break;
    case 12:
        return 26;
        break;
    }
    return 0;
}

auto sub_3298(auto a_0, auto a_1, auto a_2) {
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 0;
    }
    if (VEHICLE::GET_NUM_MOD_KITS(a_0) == 0) {
        return 0;
    }
    for (v_5 = 0; v_5 < a_1; v_5 += 1) {
        v_6 = v_5;
        if ((((((v_6 == 17) || (v_6 == 18)) || (v_6 == 19)) || (v_6 == 20)) || (v_6 == 21)) || (v_6 == 22)) {
            a_1[v_5/*1*/] = 0;
            if (VEHICLE::IS_TOGGLE_MOD_ON(a_0, v_6)) {
                a_1[v_5/*1*/] = 1;
            }
        } else { 
            a_1[v_5/*1*/] = VEHICLE::GET_VEHICLE_MOD(a_0, v_5) + 1;
            if (v_5 == 23) {
                a_2[0/*1*/] = VEHICLE::GET_VEHICLE_MOD_VARIATION(a_0, v_5);
            } else if (v_5 == 24) {
                a_2[1/*1*/] = VEHICLE::GET_VEHICLE_MOD_VARIATION(a_0, v_5);
            }
        }
    }
    return 1;
}

void sub_3372(auto a_0) {
    a_0._f42 = 0;
    a_0._f4D = 0;
    a_0._f41 = 0;
    a_0._f3E = 0;
    a_0._f3F = 0;
    a_0._f40 = 0;
    a_0._f4A = 0;
    a_0._f4B = 0;
    a_0._f4C = 0;
    a_0 = 0;
    a_0._f1/*"16"*/ = "";
    a_0._f5 = 0;
    a_0._f6 = 0;
    a_0._f7 = 0;
    a_0._f8 = 0;
    for (v_3 = 0; v_3 < 49; v_3 += 1) {
        a_0._f9[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 2; v_3 += 1) {
        a_0._f3B[v_3/*1*/] = 0;
    }
    a_0._f43 = 0;
    a_0._f44 = 0;
    a_0._f45 = 0;
    a_0._f46 = 1;
    a_0._f47 = 0;
    a_0._f48 = 0;
    a_0._f49 = 0;
}

auto sub_3423(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            if (a_0 == PLAYER::PLAYER_PED_ID()) {
                a_1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
            } else { 
                a_1 = PED::GET_VEHICLE_PED_IS_IN(a_0, 1);
            }
            if (ENTITY::DOES_ENTITY_EXIST(a_1)) {
                if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_1, 0)) {
                    if ((a_2 == 0) || (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(a_1, 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 100.0)) {
                        if (VEHICLE::IS_VEHICLE_MODEL(a_1, ${taxi})) {
                            if ((VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_1, -1) != a_0) && (VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_1, -1) != 0)) {
                                return 0;
                            }
                        }
                        if (sub_3550(a_1, sub_6ef2(), 1)) {
                            v_6 = SCRIPT::GET_THIS_SCRIPT_NAME();
                            if (!GAMEPLAY::ARE_STRINGS_EQUAL(v_6, "save_anywhere")) {
                                return 0;
                            } else if (!PED::IS_PED_IN_ANY_VEHICLE(a_0, 1)) {
                                return 0;
                            } else { }
                        } else { }
                        if (a_3 == 1) {
                            if (DECORATOR::DECOR_EXIST_ON(a_1, "IgnoredByQuickSave")) {
                                if (DECORATOR::DECOR_GET_BOOL(a_1, "IgnoredByQuickSave")) {
                                    return 0;
                                }
                            }
                        } else if (VEHICLE::IS_VEHICLE_MODEL(a_1, ${blimp})) {
                            return 0;
                        }
                        return 1;
                    }
                }
            } else { }
        } else { }
    } else { }
    return 0;
}

auto sub_3550(auto a_0, auto a_1, auto a_2) {
    if ((!ENTITY::DOES_ENTITY_EXIST(a_0)) || (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0))) {
        return 0;
    }
    v_5 = 0;
    while (sub_35c1(a_1, v_5, &v_6, &v_E)) {
        if ((!a_2) || GAMEPLAY::IS_BIT_SET(game_state._f16E7[v_E/*1*/], 0)) {
            if (VEHICLE::IS_VEHICLE_IN_GARAGE_AREA(&v_6, a_0)) {
                return 1;
            } else { }
        } else { }
        v_5 += 1;
    }
    return 0;
}

auto sub_35c1(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_2/*"32"*/ = "";
    switch (a_0) {
    case 0:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Michael - Beverly Hills";
            a_3 = 0;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Trevor - Countryside";
            a_3 = 1;
            return 1;
        }
        break;
    case 1:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Franklin - Aunt";
            a_3 = 5;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Franklin - Hills";
            a_3 = 6;
            return 1;
        }
        break;
    case 2:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Trevor - Countryside";
            a_3 = 2;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Trevor - City";
            a_3 = 3;
            return 1;
        } else if (a_1 == 2) {
            a_2/*"32"*/ = "Trevor - Stripclub";
            a_3 = 4;
            return 1;
        }
        break;
    }
    return 0;
}

auto sub_369a(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_36d7(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_36d7(auto a_0) {
    if (sub_2f30(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

void sub_3701(auto a_0, auto a_1, auto a_2) {
    if (!PED::IS_PED_INJURED(a_0)) {
        v_5 = sub_369a(a_0);
        for (v_6 = 0; v_6 < 12; v_6 += 1) {
            sub_3e91(a_0, v_6, &a_1._fD[v_6/*1*/], &a_1[v_6/*1*/], &a_1._f1A[v_6/*1*/], a_2, 145);
        }
        for (v_6 = 0; v_6 < 9; v_6 += 1) {
            sub_3949(a_0, v_6, &a_1._f27[v_6/*1*/], &a_1._f31[v_6/*1*/], a_2, 145);
        }
        if (sub_2f30(v_5)) {
            a_1._f3B = game_state._f6EA._f21B[v_5/*65*/]._f3B;
            a_1._f3C = game_state._f6EA._f21B[v_5/*65*/]._f3C;
            a_1._f3D = game_state._f6EA._f21B[v_5/*65*/]._f3D;
            a_1._f3E = game_state._f6EA._f21B[v_5/*65*/]._f3E;
            a_1._f3F = game_state._f6EA._f21B[v_5/*65*/]._f3F;
            a_1._f40 = game_state._f6EA._f21B[v_5/*65*/]._f40;
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (ENTITY::GET_ENTITY_MODEL(a_0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))) {
            if (sub_391d(161, -1)) {
                a_1._f3B = sub_38ab(2040, g_10E38, 0);
            } else { 
                a_1._f3B = sub_38ab(742, g_10E38, 0);
            }
            a_1._f3C = sub_38ab(743, g_10E38, 0);
            a_1._f3D = sub_38ab(744, g_10E38, 0);
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (a_0 == PLAYER::PLAYER_PED_ID())) {
            if (sub_391d(161, -1)) {
                a_1._f3B = sub_38ab(2040, g_10E38, 0);
            } else { 
                a_1._f3B = sub_38ab(742, g_10E38, 0);
            }
        }
    }
}

auto sub_38ab(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    v_5 = g_25A3D6[a_0/*5*/][sub_38dd(a_1)/*1*/];
    if (STATS::STAT_GET_INT(v_5, &v_6, -1)) {
        return v_6;
    }
    return 0;
}

auto sub_38dd(auto a_0) {
    v_3 = a_0;
    if (v_3 == -1) {
        v_4 = sub_3911();
        if (v_4 > -1) {
            g_25A2B7 = 0;
            v_3 = v_4;
        } else { 
            v_3 = 0;
            g_25A2B7 = 1;
        }
    }
    return v_3;
}

auto sub_3911() {
    return g_1407EA;
}

auto sub_391d(auto a_0, auto a_1) {
    v_4 = g_25F257[a_0/*5*/][sub_38dd(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

void sub_3949(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = sub_369a(a_0);
    if (a_0 != 0) {
        a_2 = PED::GET_PED_PROP_INDEX(a_0, a_1);
        a_3 = PED::GET_PED_PROP_TEXTURE_INDEX(a_0, a_1);
    } else { 
        v_8 = a_5;
    }
    if (a_4 == 0) {
        return ;
    }
    if (a_1 == 0) {
        if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
            if (a_0 != 0) {
                if (PED::IS_PED_WEARING_HELMET(a_0) && (PED::_451294E859ECC018(a_0) != -1)) {
                    a_2 = PED::_451294E859ECC018(a_0);
                    a_3 = PED::_9D728C1E12BF5518(a_0);
                }
            }
        }
    }
    switch (v_8) {
    case 0:
        if (a_1 == 0) {
            if (a_2 == 7) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 11) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 16) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 23) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 27) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 28) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if ((a_2 >= 14) && (a_2 <= 20)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        } else if (a_1 == 1) {
            if (a_2 == 1) {
                if (((a_4 & 2) != 0) || ((a_4 & 64) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    case 1:
        if (a_1 == 0) {
            if (a_2 == 2) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 4) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 16) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 6) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 17) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 20) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if ((a_2 >= 8) && (a_2 <= 14)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    case 2:
        if (a_1 == 0) {
            if (a_2 == 9) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 11) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 12) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 23) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 27) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (((a_2 >= 14) && (a_2 <= 20)) || (a_2 == 2)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    }
}

void sub_3e91(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = sub_369a(a_0);
    if (a_0 != 0) {
        a_2 = PED::GET_PED_DRAWABLE_VARIATION(a_0, a_1);
        a_3 = PED::GET_PED_TEXTURE_VARIATION(a_0, a_1);
        a_4 = PED::GET_PED_PALETTE_VARIATION(a_0, a_1);
    } else { 
        v_9 = a_6;
    }
    if (a_5 == 0) {
        return ;
    }
    switch (v_9) {
    case 0:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 15) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 64) != 0)) {
                if ((a_2 == 3) || (a_2 == 22)) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 5) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                if (a_2 == 8) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    case 1:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if ((a_2 == 1) || (a_2 == 10)) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 64) != 0)) {
                if (a_2 == 19) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                if (a_2 == 5) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    case 2:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 3) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if ((a_2 >= 5) && (a_2 <= 7)) {
                if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    }
}

auto sub_40d3() {
    sub_40ec();
    return game_state._f6EA._f21B._fDDD;
}

void sub_40ec() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_36d7(game_state._f6EA._f21B._fDDD) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_369a(PLAYER::PLAYER_PED_ID());
            if (sub_2f30(v_2) && ((!sub_41e9(14)) || g_18658)) {
                if ((game_state._f6EA._f21B._fDDD != v_2) && sub_2f30(game_state._f6EA._f21B._fDDD)) {
                    game_state._f6EA._f21B._fDDE = game_state._f6EA._f21B._fDDD;
                }
                game_state._f6EA._f21B._fDDF = v_2;
                game_state._f6EA._f21B._fDDD = v_2;
                return ;
            }
        } else { 
            if (game_state._f6EA._f21B._fDDD != 145) {
                game_state._f6EA._f21B._fDDF = game_state._f6EA._f21B._fDDD;
            }
            return ;
        }
    }
    game_state._f6EA._f21B._fDDD = 145;
}

auto sub_41e9(auto a_0) {
    return g_8B74 == a_0;
}

void sub_41f7(auto a_0, auto a_1) {
    v_4 = sub_369a(a_0);
    if (sub_2f30(v_4) && (!PED::IS_PED_INJURED(a_0))) {
        if (a_0 == PLAYER::PLAYER_PED_ID()) {
            sub_42ea(a_0, &game_state._f6EA._f21B._f12A[v_4/*284*/]);
            for (v_6 = 0; v_6 <= (8 - 1); v_6 += 1) {
                game_state._f6EA._f21B._f47F[v_6/*4*/][v_4/*1*/] = UI::_A13E93403F26C812(v_6);
                if (a_1) {
                    v_5 = UI::_A48931185F0536FE();
                    if (game_state._f6EA._f21B._f47F[v_6/*4*/][v_4/*1*/] == v_5) {
                        game_state._f6EA._f21B._f4A0 = v_6;
                    }
                }
            }
            PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &v_7);
            if (v_4 == 0) {
                STATS::STAT_SET_INT(0xc8fd0844, v_7, 1);
            } else if (v_4 == 1) {
                STATS::STAT_SET_INT(0xd3161861, v_7, 1);
            } else if (v_4 == 2) {
                STATS::STAT_SET_INT(0xe205ca9b, v_7, 1);
            }
        }
    }
}

void sub_42ea(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            a_1[v_4/*3*/]._f1 = 0;
        }
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            v_7 = sub_5129(v_4);
            if (v_7 != 0) {
                v_8 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(a_0, sub_5129(v_4));
                v_8._f1 = 0;
                v_8._f2 = 0;
                if ((v_8 != 0) && (v_8 != ${weapon_unarmed})) {
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (v_8 == ${gadget_parachute}) {
                        v_8._f1 = 1;
                    }
                    GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1[v_4/*3*/]._f1 = v_8._f1;
                    v_5 = 0;
                    v_6 = sub_4692(v_8, v_5);
                    while (v_6 != 0) {
                        if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_6)) {
                            GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                        }
                        v_5 += 1;
                        v_6 = sub_4692(v_8, v_5);
                    }
                }
                a_1[v_4/*3*/]/*{3}*/ = v_8;
            }
        }
        for (v_4 = 0; v_4 <= (50 - 1); v_4 += 1) {
            a_1._f85[v_4/*3*/]._f1 = 0;
        }
        v_C = DLC1::GET_NUM_DLC_WEAPONS();
        for (v_B = 0; v_B < v_C; v_B += 1) {
            if ((DLC1::GET_DLC_WEAPON_DATA(v_B, &v_D) && (!sub_454e(v_D._f1))) && (v_4A < 50)) {
                if (!DLC1::_IS_OUTFIT_EMPTY(v_D)) {
                    v_8 = v_D._f1;
                    v_8._f1 = 0;
                    v_8._f2 = 0;
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    } else { 
                        GAMEPLAY::SET_BIT(&v_8._f2, 20);
                    }
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1._f85[v_4A/*3*/]._f1 = v_8._f1;
                    for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_B); v_5 += 1) {
                        if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_B, v_5, &v_34)) {
                            if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_34._f3)) {
                                GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                            }
                        }
                    }
                }
                if (v_8 != 0) {
                    if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        v_8 = 0;
                        v_8._f1 = 0;
                    }
                }
                a_1._f85[v_4A/*3*/]/*{3}*/ = v_8;
                v_4A += 1;
            }
        }
    }
}

auto sub_454e(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
    } else { 
        switch (a_0) {
        case 0x99aeeb3b:
        case ${weapon_bullpupshotgun}:
        case ${weapon_assaultsmg}:
            return 0;
            break;
        case ${weapon_snspistol}:
        case ${weapon_bottle}:
        case 0x61012683:
            return 0;
            break;
        case ${weapon_specialcarbine}:
        case ${weapon_heavypistol}:
            return 0;
            break;
        case ${weapon_bullpuprifle}:
            return 0;
            break;
        case 0x92a27487:
        case 0x83839c4:
            return 0;
            break;
        case 0xa89cb99e:
        case 0x7f7497e5:
            return 0;
            break;
        case 0xc734385a:
        case 0x3aabbbaa:
            return 0;
            break;
        case 0xab564b93:
        case 0x63ab0442:
            return 0;
            break;
        case 0xd8df3c3c:
        case 0xdc4db296:
        case 0xa3d4d34:
            return 0;
            break;
        case 0x8210d4d5:
        case 0x8bb05fd7:
        case ${weapon_programmablear}:
        case 0xa52e2957:
        case 0xc1b3c3d1:
        case ${weapon_heavyrifle}:
        case ${weapon_rubbergun}:
        case 0xd04c944d:
        case 0xd866acd1:
        case ${weapon_assaultmg}:
        case 0xdfe37640:
        case 0xe232c28c:
        case ${weapon_loudhailer}:
        case 0xef951fbb:
        case 0x787f0bb:
        case ${weapon_assaultsniper}:
        case 0x47757124:
        case 0x624fe830:
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_4692(auto a_0, auto a_1) {
    v_4 = 0;
    switch (a_0) {
    case ${weapon_pistol}:
        switch (a_1) {
        case 0:
            v_4 = 0xfed0fd71;
            break;
        case 1:
            v_4 = 0xed265a1c;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = 0x65ea7ebb;
            break;
        case 4:
            v_4 = 0xd7391086;
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x721b079;
            break;
        case 1:
            v_4 = 0xd67b4f2d;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0xc6654d72;
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x31c4b22a;
            break;
        case 1:
            v_4 = 0x249a17d5;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x9b76c72c;
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xcb48aef0;
            break;
        case 1:
            v_4 = 0x10e6ba2b;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x487aae09;
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_1) {
        case 0:
            v_4 = 0x26574997;
            break;
        case 1:
            v_4 = 0x350966fb;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x3cc6ba57;
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x27872c90;
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xbe5eea16;
            break;
        case 1:
            v_4 = 0xb1214f9b;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_scope_macro};
            break;
        case 5:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 6:
            v_4 = 0x4ead7533;
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9fbe33ec;
            break;
        case 1:
            v_4 = 0x91109691;
            break;
        case 2:
            v_4 = 0x75414f30;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = ${component_at_ar_flsh};
            break;
        case 5:
            v_4 = ${component_at_scope_medium};
            break;
        case 6:
            v_4 = ${component_at_ar_supp};
            break;
        case 7:
            v_4 = 0xd89b9658;
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xfa8fa10f;
            break;
        case 1:
            v_4 = 0x8ec1c979;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = 0x377cd377;
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_1) {
        case 0:
            v_4 = 0xf434ef84;
            break;
        case 1:
            v_4 = 0x82158b47;
            break;
        case 2:
            v_4 = 0x3c00afed;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = 0xd6dababe;
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xe1ffb34a;
            break;
        case 1:
            v_4 = 0xd6c59cd6;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        case 4:
            v_4 = 0x92feccdd;
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_sr_supp};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = 0xa2d79ddb;
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x94e81bc7;
            break;
        case 1:
            v_4 = 0x86bd7f72;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9bc64089;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x4032b5e7;
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_1) {
        case 0:
            v_4 = 0x476f52f4;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_scope_small};
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_1) {
        case 0:
            v_4 = 0xc8de6f06;
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0x8d1307b0;
            break;
        case 1:
            v_4 = 0xbb46e417;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x278c78af;
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_ar_supp_02};
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_1) {
        case 0:
            v_4 = 0x2297be19;
            break;
        case 1:
            v_4 = 0xd9d3ac92;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x77b8ab2f;
            break;
        }
        break;
    case 0xa3d4d34:
        switch (a_1) {
        case 0:
            v_4 = 0x4317f19e;
            break;
        case 1:
            v_4 = 0x334a5203;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_afgrip};
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x85a64df9;
            break;
        }
        break;
    case ${weapon_bullpuprifle}:
        switch (a_1) {
        case 0:
            v_4 = ${component_bullpuprifle_clip_01};
            break;
        case 1:
            v_4 = ${component_bullpuprifle_clip_02};
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0xa857bc78;
            break;
        }
        break;
    case ${weapon_snspistol}:
        switch (a_1) {
        case 0:
            v_4 = ${component_snspistol_clip_01};
            break;
        case 1:
            v_4 = ${component_snspistol_clip_02};
            break;
        case 2:
            v_4 = 0x8033ecaf;
            break;
        }
        break;
    case ${weapon_specialcarbine}:
        switch (a_1) {
        case 0:
            v_4 = ${component_specialcarbine_clip_01};
            break;
        case 1:
            v_4 = ${component_specialcarbine_clip_02};
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x730154f2;
            break;
        }
        break;
    case 0xd8df3c3c:
        switch (a_1) {
        case 0:
            v_4 = 0xc613f685;
            break;
        case 1:
            v_4 = 0xeed9fd63;
            break;
        case 2:
            v_4 = 0x50910c31;
            break;
        case 3:
            v_4 = 0x9761d9dc;
            break;
        case 4:
            v_4 = 0x7decfe30;
            break;
        case 5:
            v_4 = 0x3f4e8aa6;
            break;
        case 6:
            v_4 = 0x8b808bb;
            break;
        case 7:
            v_4 = 0xe28babef;
            break;
        case 8:
            v_4 = 0x7af3f785;
            break;
        }
        break;
    case 0xdb1aa450:
        switch (a_1) {
        case 0:
            v_4 = 0x476e85ff;
            break;
        case 1:
            v_4 = 0xb92c6979;
            break;
        case 2:
            v_4 = ${component_at_pi_supp};
            break;
        }
        break;
    case 0xdfe37640:
        switch (a_1) {
        case 0:
            v_4 = 0x5b3e7db6;
            break;
        case 1:
            v_4 = 0xe7939662;
            break;
        }
        break;
    case 0xc1b3c3d1:
        switch (a_1) {
        case 0:
            v_4 = 0xe9867ce3;
            break;
        case 1:
            v_4 = 0x16ee3040;
            break;
        case 2:
            v_4 = 0x9493b80d;
            break;
        }
        break;
    default:
        if (a_0 != 0) {
            v_5 = sub_50ee(a_0, &v_6);
            if (v_5 != -1) {
                if (a_1 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_5)) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_5, a_1, &v_2D)) {
                        return v_2D._f3;
                    }
                }
            }
        }
        break;
    }
    return v_4;
}

auto sub_50ee(auto a_0, auto a_1) {
    v_5 = DLC1::GET_NUM_DLC_WEAPONS();
    for (v_4 = 0; v_4 < v_5; v_4 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_4, a_1)) {
            if (a_1._f1 == a_0) {
                return v_4;
            }
        }
    }
    return -1;
}

auto sub_5129(auto a_0) {
    v_3 = 0;
    switch (a_0) {
    case 0:
        v_3 = ${slot_unarmed};
        break;
    case 1:
        v_3 = ${slot_knife};
        break;
    case 2:
        v_3 = ${slot_nightstick};
        break;
    case 3:
        v_3 = ${slot_hammer};
        break;
    case 4:
        v_3 = ${slot_bat};
        break;
    case 5:
        v_3 = ${slot_crowbar};
        break;
    case 6:
        v_3 = ${slot_golfclub};
        break;
    case 7:
        v_3 = ${slot_stungun};
        break;
    case 8:
        v_3 = ${slot_pistol};
        break;
    case 9:
        v_3 = ${slot_combatpistol};
        break;
    case 10:
        v_3 = ${slot_appistol};
        break;
    case 11:
        v_3 = ${slot_microsmg};
        break;
    case 12:
        v_3 = ${slot_smg};
        break;
    case 13:
        v_3 = ${slot_assaultrifle};
        break;
    case 14:
        v_3 = ${slot_carbinerifle};
        break;
    case 15:
        v_3 = ${slot_advancedrifle};
        break;
    case 16:
        v_3 = ${slot_mg};
        break;
    case 17:
        v_3 = ${slot_combatmg};
        break;
    case 18:
        v_3 = ${slot_pumpshotgun};
        break;
    case 19:
        v_3 = ${slot_sawnoffshotgun};
        break;
    case 20:
        v_3 = ${slot_assaultshotgun};
        break;
    case 21:
        v_3 = ${slot_sniperrifle};
        break;
    case 22:
        v_3 = ${slot_heavysniper};
        break;
    case 23:
        v_3 = ${slot_grenadelauncher};
        break;
    case 24:
        v_3 = ${slot_rpg};
        break;
    case 25:
        v_3 = ${slot_minigun};
        break;
    case 26:
        v_3 = ${slot_grenade};
        break;
    case 27:
        v_3 = ${slot_stickybomb};
        break;
    case 28:
        v_3 = ${slot_smokegrenade};
        break;
    case 29:
        v_3 = ${slot_molotov};
        break;
    case 30:
        v_3 = ${slot_fireextinguisher};
        break;
    case 31:
        v_3 = ${slot_petrolcan};
        break;
    case 33:
        v_3 = ${slot_parachute};
        break;
    case 34:
        v_3 = ${slot_digiscanner};
        break;
    case 35:
        v_3 = ${slot_object};
        break;
    case 36:
        v_3 = ${slot_assaultsmg};
        break;
    case 37:
        v_3 = ${slot_bullpupshotgun};
        break;
    case 38:
        v_3 = 0x22541ebe;
        break;
    }
    return v_3;
}

void sub_539d(auto a_0) {
    v_3 = sub_369a(a_0);
    if (sub_2f30(v_3) && (!PED::IS_PED_INJURED(a_0))) {
        game_state._f6EA._f21B._f126[v_3/*1*/] = PED::GET_PED_ARMOUR(a_0);
    }
}

void sub_53d9(auto a_0, auto a_1) {
    a_0/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
    a_0._f3 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
    a_0._f5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        a_0._f4 = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
    }
    if (SYSTEM::VDIST(a_0, 320.993408203125, 265.2514953613281, 82.12210083) < 10.0) {
        a_0/*{3}*/ = {301.2161865234375, 202.1356964111328, 103.37969970703125 };
        a_0._f3 = 156.514404296875;
    } else if (SYSTEM::VDIST(a_0, 377.15301513671875, -717.5670166015625, 10.0536) < 10.0) {
        a_0/*{3}*/ = {394.2567138671875, -713.5438842773438, 28.28529930114746 };
        a_0._f3 = 276.6272888183594;
    } else if (SYSTEM::VDIST(a_0, -1425.564453125, -244.3, 15.805299758911133) < 10.0) {
        a_0/*{3}*/ = {-1423.472412109375, -214.25390625, 45.5004 };
        a_0._f3 = 353.8757019042969;
    } else if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${finale_choice}) > 0) {
        a_0/*{3}*/ = {4.258699893951416, 525.0214233398438, 173.6280975341797 };
        a_0._f3 = 203.6746063232422;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 4)) {
        a_0/*{3}*/ = {452.0255126953125, 5571.85, 780.1859130859375 };
        a_0._f3 = 78.98580169677734;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 5)) {
        a_0/*{3}*/ = {-745.4462280273438, 5595.146484375, 40.6594 };
        a_0._f3 = 261.747;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 6)) {
        a_0/*{3}*/ = {-1675.521484375, -1125.59, 12.091 };
        a_0._f3 = 271.8208;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 7)) {
        a_0/*{3}*/ = {-1631.21923828125, -1112.80517578125, 12.02120018 };
        a_0._f3 = 316.8879089355469;
    } else if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(1272.6588134765625, -1715.4669189453125, 53.77149963378906, "v_lesters")) {
        a_0/*{3}*/ = {1276.9564208984375, -1725.189208984375, 53.65510177612305 };
        a_0._f3 = 204.17030334472656;
    } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -415.43646240234375, 2068.28857421875, 113.3, -564.9515991210938, 1884.7025146484375, 134.04034423828125, 258.75, 0, 1, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -596.4705810546875, 2089.9208984375, 125.41275024414062, -581.2134399414062, 2036.256103515625, 136.28363037109375, 9.5, 0, 1, 0)) {
        a_0/*{3}*/ = {-601.59, 2099.197265625, 128.892807 };
        a_0._f3 = 204.7498016357422;
    } else if (SYSTEM::VDIST(a_0, -1007.3926391601562, -477.95843505859375, 52.535701751708984) < 8.0) {
        a_0/*{3}*/ = {-1018.3756103515625, -483.943603515625, 36.09640121459961 };
        a_0._f3 = 114.76640319824219;
    } else if (SYSTEM::VDIST(a_0, 480.66619873046875, -1317.8084716796875, 28.20302963256836) < 15.0) {
        a_0/*{3}*/ = {497.7237854, -1310.9322509765625, 28.237199783325195 };
        a_0._f3 = 289.3663024902344;
    } else if (SYSTEM::VDIST(a_0, 2329.526611328125, 2571.311279296875, 45.67789840698242) < 5.0) {
        a_0/*{3}*/ = {2316.930419921875, 2594.15283203125, 45.71989822387695 };
        a_0._f3 = 348.13250732421875;
    }
    if (a_1 == 1) {
        if (sub_603a(&v_4)) {
            if (sub_5978(v_4, &v_5, &v_8)) {
                v_5._f2 += 1.0;
                a_0/*{3}*/ = v_5;
                a_0._f3 = v_8;
            }
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.43357849121094, -1019.79541015625, -100.47276306152344, 189.93377685546875, -1019.6234741210938, -95.56883239746094, 17.1875, 0, 1, 0)) {
            v_9 = sub_6ef2();
            if (v_9 == 0) {
                a_0/*{3}*/ = {-65.12339782714844, 81.25170135498047, 70.56439971923828 };
                a_0._f3 = 71.623703;
            } else if (v_9 == 1) {
                a_0/*{3}*/ = {-68.5531, -1824.37744140625, 25.9424 };
                a_0._f3 = 215.82949829101562;
            } else if (v_9 == 2) {
                a_0/*{3}*/ = {-220.8188934326172, -1162.3016357421875, 22.0242 };
                a_0._f3 = 70.27110290527344;
            }
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 483.71746826171875, -1326.6298828125, 28.213499069213867, 474.96435546875, -1307.998291015625, 34.49497604370117, 12.0, 0, 1, 0)) {
            a_0/*{3}*/ = {495.4107971191406, -1306.08, 29.288299560546875 };
            a_0._f3 = 213.62730407714844;
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1146.77, -1534.219970703125, 3.37, -1158.4525146484375, -1517.7496337890625, 6.374244213104248, 13.0, 0, 1, 0)) {
            a_0/*{3}*/ = {-1160.0950927734375, -1515.406982421875, 3.1496 };
            a_0._f3 = 305.64239501953125;
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 439.54315185546875, -996.9768676757812, 24.88307, 428.2935485839844, -997.0192260742188, 28.574581146240234, 8.5, 0, 1, 0)) {
            a_0/*{3}*/ = {431.88531494140625, -1013.1329956054688, 28.7907 };
            a_0._f3 = 186.681396484375;
        } else if (sub_5934(a_0, "v_hospital", 307.3064880371094, -589.95947265625, 43.301998138427734)) {
            a_0/*{3}*/ = {279.4136962890625, -585.8814697265625, 43.25019836425781 };
            a_0._f3 = 48.802799224853516;
        }
    }
}

auto sub_5934(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (!INTERIOR::_ARE_COORDS_COLLIDING_WITH_EXTERIOR(a_0)) {
        v_9 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(a_4, a_3);
        if (!INTERIOR::IS_VALID_INTERIOR(v_9)) {
            return 0;
        }
        v_A = INTERIOR::GET_INTERIOR_FROM_COLLISION(a_0);
        if (v_A == v_9) {
            return 1;
        }
    }
    return 0;
}

auto sub_5978(auto a_0, auto a_1, auto a_2) {
    a_1/*{3}*/ = {0.0, 0.0, 0.0 };
    a_2 = 0.0;
    switch (a_0) {
    case 0:
        a_1/*{3}*/ = {-829.8419799804688, -191.7454071044922, 36.4385986328125 };
        a_2 = 29.5060997;
        break;
    case 1:
        a_1/*{3}*/ = {129.84840393066406, -1716.52783203125, 28.0702 };
        a_2 = 50.3483;
        break;
    case 2:
        a_1/*{3}*/ = {-1296.912841796875, -1120.99853515625, 5.3951 };
        a_2 = 0.9933;
        break;
    case 3:
        a_1/*{3}*/ = {1938.028076171875, 3718.73583984375, 31.315399169921875 };
        a_2 = 118.23049926757812;
        break;
    case 4:
        a_1/*{3}*/ = {1197.8656, -469.3808898925781, 65.0885 };
        a_2 = 346.44769287109375;
        break;
    case 5:
        a_1/*{3}*/ = {-32.2160987854, -135.82119750976562, 56.053199768066406 };
        a_2 = 186.0052032470703;
        break;
    case 6:
        a_1/*{3}*/ = {-287.76959228515625, 6238.08056640625, 30.290199279785156 };
        a_2 = 316.1348876953125;
        break;
    case 7:
        a_1/*{3}*/ = {99.28759765625, -1395.159912109375, 28.27589988708496 };
        a_2 = 320.2738952636719;
        break;
    case 8:
        a_1/*{3}*/ = {1679.445068359375, 4819.05615234375, 41.003501892089844 };
        a_2 = 4.6192;
        break;
    case 9:
        a_1/*{3}*/ = {411.3063049316406, -809.186279296875, 28.155399322509766 };
        a_2 = 1.8972;
        break;
    case 10:
        a_1/*{3}*/ = {-1088.0535888671875, 2699.1669921875, 19.274799346923828 };
        a_2 = 129.7382049560547;
        break;
    case 11:
        a_1/*{3}*/ = {1194.1629638671875, 2695.6435546875, 36.9225 };
        a_2 = 1.1454;
        break;
    case 12:
        a_1/*{3}*/ = {-821.2828979492188, -1088.027099609375, 10.0499 };
        a_2 = 120.58830261230469;
        break;
    case 13:
        a_1/*{3}*/ = {3.3416, 6521.302734375, 30.2961 };
        a_2 = 316.4450988769531;
        break;
    case 14:
        a_1/*{3}*/ = {-1208.417236328125, -785.9635, 16.0139 };
        a_2 = 36.3181;
        break;
    case 15:
        a_1/*{3}*/ = {623.1845092773438, 2739.19091796875, 40.95880126953125 };
        a_2 = 3.541100025177;
        break;
    case 16:
        a_1/*{3}*/ = {130.95550537109375, -198.20840454101562, 53.41 };
        a_2 = 251.35060119628906;
        break;
    case 17:
        a_1/*{3}*/ = {-3164.06494140625, 1067.3170166015625, 19.677799224853516 };
        a_2 = 101.2229;
        break;
    case 18:
        a_1/*{3}*/ = {-713.2797241210938, -174.27670288085938, 35.89619827270508 };
        a_2 = 29.8138;
        break;
    case 19:
        a_1/*{3}*/ = {-147.0615997314453, -306.43218994140625, 37.79119873046875 };
        a_2 = 160.45260620117188;
        break;
    case 20:
        a_1/*{3}*/ = {-1461.355224609375, -230.6092071533203, 48.3064 };
        a_2 = 318.78509521484375;
        break;
    case 21:
        a_1/*{3}*/ = {-1347.7391357421875, -1278.5733642578125, 3.8952 };
        a_2 = 17.9365;
        break;
    case 22:
        a_1/*{3}*/ = {325.68328857421875, 164.3262939453125, 102.44249725341797 };
        a_2 = 68.64070129394531;
        break;
    case 23:
        a_1/*{3}*/ = {1858.7740478515625, 3742.392822265625, 32.0779 };
        a_2 = 301.23291015625;
        break;
    case 24:
        a_1/*{3}*/ = {-286.32720947265625, 6202.80224609375, 30.3323 };
        a_2 = 225.13340759277344;
        break;
    case 25:
        a_1/*{3}*/ = {-1161.5958251953125, -1417.69970703125, 3.7119999999999997 };
        a_2 = 246.91610717773438;
        break;
    case 26:
        a_1/*{3}*/ = {1308.9522705078125, -1660.611083984375, 50.23619842529297 };
        a_2 = 163.54559326171875;
        break;
    case 27:
        a_1/*{3}*/ = {-3161.5849609375, 1074.213623046875, 19.6847 };
        a_2 = 98.60919952392578;
        break;
    case 28:
        a_1/*{3}*/ = {28.423, -1110.8135986328125, 28.284799575805664 };
        a_2 = 85.24949645996094;
        break;
    case 29:
        a_1/*{3}*/ = {1704.966064453125, 3749.709228515625, 33.018798828125 };
        a_2 = 45.677799224853516;
        break;
    case 30:
        a_1/*{3}*/ = {223.949, -38.789398193359375, 68.6483 };
        a_2 = 159.42649841308594;
        break;
    case 31:
        a_1/*{3}*/ = {837.7854, -1017.9628295898438, 26.3045 };
        a_2 = 181.04449462890625;
        break;
    case 32:
        a_1/*{3}*/ = {-313.19140625, 6093.35107421875, 30.462499618530273 };
        a_2 = 315.84051513671875;
        break;
    case 33:
        a_1/*{3}*/ = {-663.4630737304688, -952.806884765625, 20.3143 };
        a_2 = 92.67960357666016;
        break;
    case 34:
        a_1/*{3}*/ = {-1323.0596923828125, -392.8576965332031, 35.459598541259766 };
        a_2 = 210.73980712890625;
        break;
    case 35:
        a_1/*{3}*/ = {-1106.101806640625, 2684.35, 18.0953 };
        a_2 = 127.03829956054688;
        break;
    case 36:
        a_1/*{3}*/ = {-3157.93212890625, 1081.3089599609375, 19.69529914855957 };
        a_2 = 100.29419708251953;
        break;
    case 37:
        a_1/*{3}*/ = {2562.8818359375, 312.8641052246094, 107.46119689941406 };
        a_2 = 179.205;
        break;
    case 38:
        a_1/*{3}*/ = {822.47998046875, -2142.87451171875, 27.849599838256836 };
        a_2 = 355.059814453125;
        break;
    case 39:
        a_1/*{3}*/ = {-1137.0531, -1993.9161376953125, 12.167699813842773 };
        a_2 = 43.121299743652344;
        break;
    case 40:
        a_1/*{3}*/ = {717.8107299804688, -1084.0814208984375, 21.3094 };
        a_2 = 93.2649;
        break;
    case 41:
        a_1/*{3}*/ = {-387.67889404296875, -128.25680541992188, 37.67959976196289 };
        a_2 = 119.1084976196289;
        break;
    case 42:
        a_1/*{3}*/ = {117.88349914550781, 6599.4150390625, 31.013399124145508 };
        a_2 = 90.72250366210938;
        break;
    case 43:
        a_1/*{3}*/ = {1201.7088623046875, 2664.8134765625, 36.81019973754883 };
        a_2 = 133.9;
        break;
    case 44:
        a_1/*{3}*/ = {-200.152099609375, -1297.50244140625, 30.296 };
        a_2 = 269.0686950683594;
        break;
    }
    return !sub_5ff3(a_1, 0.0, 0.0, 0.0, 0);
}

auto sub_5ff3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_6) {
        return (a_0 == a_3) && (a_0._f1 == a_3._f1);
    } else { 
        return ((a_0 == a_3) && (a_0._f1 == a_3._f1)) && (a_0._f2 == a_3._f2);
    }
}

auto sub_603a(auto a_0) {
    if ((!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) && (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))) {
        if (sub_6bf5()) {
            a_0 = sub_63d7(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), 5, -1, 0, 1, -1);
            if (sub_63c7(a_0) && (!sub_6094(a_0))) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_6094(auto a_0) {
    return sub_60a4(a_0, 0, 1);
}

auto sub_60a4(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        return GAMEPLAY::IS_BIT_SET(g_16416._f514[a_0/*1*/], a_1);
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_63bc() == 0) {
            return GAMEPLAY::IS_BIT_SET(sub_38ab(sub_6104(a_0), -1, 0), a_1);
        }
    } else { 
        return GAMEPLAY::IS_BIT_SET(game_state._f29C[a_0/*1*/], a_1);
    }
    return 0;
}

auto sub_6104(auto a_0) {
    switch (a_0) {
    case 0:
        return 817;
        break;
    case 1:
        return 818;
        break;
    case 2:
        return 819;
        break;
    case 3:
        return 820;
        break;
    case 4:
        return 821;
        break;
    case 5:
        return 822;
        break;
    case 6:
        return 823;
        break;
    case 7:
        return 824;
        break;
    case 8:
        return 825;
        break;
    case 9:
        return 826;
        break;
    case 10:
        return 827;
        break;
    case 11:
        return 828;
        break;
    case 12:
        return 829;
        break;
    case 13:
        return 830;
        break;
    case 14:
        return 831;
        break;
    case 15:
        return 833;
        break;
    case 16:
        return 834;
        break;
    case 17:
        return 835;
        break;
    case 18:
        return 836;
        break;
    case 19:
        return 837;
        break;
    case 20:
        return 838;
        break;
    case 21:
        return 839;
        break;
    case 22:
        return 840;
        break;
    case 23:
        return 841;
        break;
    case 24:
        return 842;
        break;
    case 25:
        return 843;
        break;
    case 26:
        return 844;
        break;
    case 27:
        return 845;
        break;
    case 28:
        return 846;
        break;
    case 29:
        return 847;
        break;
    case 30:
        return 848;
        break;
    case 31:
        return 849;
        break;
    case 32:
        return 850;
        break;
    case 33:
        return 851;
        break;
    case 34:
        return 852;
        break;
    case 35:
        return 853;
        break;
    case 36:
        return 854;
        break;
    case 37:
        return 855;
        break;
    case 38:
        return 856;
        break;
    case 39:
        return 857;
        break;
    case 40:
        return 861;
        break;
    case 41:
        return 862;
        break;
    case 42:
        return 863;
        break;
    case 43:
        return 864;
        break;
    case 44:
        return 3693;
        break;
    default:
        break;
    }
    return 3790;
}

auto sub_63bc() {
    return g_621B;
}

auto sub_63c7(auto a_0) {
    return sub_60a4(a_0, 5, 1);
}

auto sub_63d7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_C = 1000000.0;
    v_D = -1;
    for (v_A = 0; v_A <= 44; v_A += 1) {
        if ((a_3 == 5) || (a_3 == sub_698f(v_A))) {
            if ((!a_5) || sub_697f(v_A)) {
                v_B = GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(a_0, sub_6479(v_A, 0), 1);
                if ((((v_B < v_C) && ((v_B <= ((float)a_4)) || (a_4 == -1))) && (a_6 || (v_A != 21))) && (v_A != a_7)) {
                    v_C = v_B;
                    v_D = v_A;
                }
            }
        }
    }
    return v_D;
}

auto<3> sub_6479(auto a_0, auto a_1) {
    switch (a_0) {
    case -1:
        return {0.0, 0.0, 0.0 };
        break;
    case 0:
        return {-821.99462890625, -187.17759704589844, 36.56890106201172 };
        break;
    case 1:
        return {133.57020568847656, -1710.91796875, 28.29159927368164 };
        break;
    case 2:
        return {-1287.0821533203125, -1116.5576171875, 5.9901 };
        break;
    case 3:
        return {1933.119140625, 3726.0791015625, 31.8444 };
        break;
    case 4:
        return {1208.33349609375, -470.9169921875, 65.208 };
        break;
    case 5:
        return {-30.7448, -148.49209594726562, 56.0765 };
        break;
    case 6:
        return {-280.8164978027344, 6231.7705078125, 30.695499420166016 };
        break;
    case 7:
        return {80.665, -1391.66943359375, 28.3761 };
        break;
    case 8:
        return {1687.8812255859375, 4820.5498046875, 41.00960159301758 };
        break;
    case 9:
        return {419.531, -807.5786743164062, 28.489599227905273 };
        break;
    case 10:
        return {-1094.0487060546875, 2704.170654296875, 18.087299346923828 };
        break;
    case 11:
        return {1197.97216796875, 2704.220458984375, 37.15719985961914 };
        break;
    case 12:
        return {-818.621826171875, -1077.532958984375, 10.3282 };
        break;
    case 13:
        return {-0.2361, 6516.04541015625, 30.8684 };
        break;
    case 14:
        return {-1199.8092041015625, -776.6885986328125, 16.3237 };
        break;
    case 15:
        return {618.1857299804688, 2752.566650390625, 41.0881 };
        break;
    case 16:
        return {126.685302734375, -212.5027, 53.5578 };
        break;
    case 17:
        return {-3168.96630859375, 1055.286865234375, 19.863199234 };
        break;
    case 18:
        return {-715.3598022460938, -155.7742, 36.410499572753906 };
        break;
    case 19:
        return {-158.2198944091797, -304.96630859375, 38.735 };
        break;
    case 20:
        return {-1455.0045166015625, -233.186203, 48.79359817504883 };
        break;
    case 21:
        return {-1335.9730224609375, -1278.554931640625, 3.8598001 };
        break;
    case 22:
        return {321.60980224609375, 179.41650390625, 102.58650207519531 };
        break;
    case 23:
        return {1861.685302734375, 3750.079833984375, 32.03179931640625 };
        break;
    case 24:
        return {-290.1603088378906, 6199.0947265625, 30.4871 };
        break;
    case 25:
        return {-1153.9481201171875, -1425.0185546875, 3.9544 };
        break;
    case 26:
        return {1322.4547119140625, -1651.125244140625, 51.188499450683594 };
        break;
    case 27:
        return {-3169.42041015625, 1074.7271728515625, 19.834299087524414 };
        break;
    case 28:
        return {17.6804, -1114.2879638671875, 28.797000885 };
        break;
    case 29:
        return {1697.978759765625, 3753.2, 33.705299377441406 };
        break;
    case 30:
        return {245.27110290527344, -45.812599182128906, 68.941 };
        break;
    case 31:
        return {844.1248168945312, -1025.5706787109375, 27.194799423217773 };
        break;
    case 32:
        return {-325.8904113769531, 6077.0263671875, 30.45479965209961 };
        break;
    case 33:
        return {-664.2177734375, -943.3646240234375, 20.8292 };
        break;
    case 34:
        return {-1313.948486328125, -390.9637145996094, 35.592 };
        break;
    case 35:
        return {-1111.237548828125, 2688.462646484375, 17.6131 };
        break;
    case 36:
        return {-3165.230712890625, 1082.8551025390625, 19.843799591064453 };
        break;
    case 37:
        return {2569.611572265625, 302.57598876953125, 107.73490142822266 };
        break;
    case 38:
        return {811.869873046875, -2149.1015625, 28.6362991333 };
        break;
    case 39:
        return {-1147.3138427734375, -1992.4344482421875, 12.180299758911133 };
        break;
    case 40:
        return {724.5239868164062, -1089.0810546875, 21.1692 };
        break;
    case 41:
        return {-354.5271911621094, -135.40109252929688, 38.185 };
        break;
    case 42:
        return {113.2614974975586, 6624.2802734375, 30.787099838256836 };
        break;
    case 43:
        return {1174.7073974609375, 2644.44970703125, 36.75519943237305 };
        break;
    case 44:
        if (a_1) {
            return {-211.5, 1324.1999999999998, 30.296 };
        } else { 
            return {-205.6654052734375, -1311.1126708984375, 30.296 };
        }
        break;
    }
    return {1000000.0, 1000000.0, 1000000.0 };
}

auto sub_697f(auto a_0) {
    return sub_60a4(a_0, 0, 0);
}

auto sub_698f(auto a_0) {
    switch (a_0) {
    case -1:
        return 5;
        break;
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 0;
        break;
    case 3:
        return 0;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 0;
        break;
    case 6:
        return 0;
        break;
    case 7:
        return 1;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 1;
        break;
    case 10:
        return 1;
        break;
    case 11:
        return 1;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 1;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 1;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 2;
        break;
    case 23:
        return 2;
        break;
    case 24:
        return 2;
        break;
    case 25:
        return 2;
        break;
    case 26:
        return 2;
        break;
    case 27:
        return 2;
        break;
    case 28:
        return 3;
        break;
    case 29:
        return 3;
        break;
    case 30:
        return 3;
        break;
    case 31:
        return 3;
        break;
    case 32:
        return 3;
        break;
    case 33:
        return 3;
        break;
    case 34:
        return 3;
        break;
    case 35:
        return 3;
        break;
    case 36:
        return 3;
        break;
    case 37:
        return 3;
        break;
    case 38:
        return 3;
        break;
    case 39:
        return 4;
        break;
    case 40:
        return 4;
        break;
    case 41:
        return 4;
        break;
    case 42:
        return 4;
        break;
    case 43:
        return 4;
        break;
    case 44:
        return 4;
        break;
    }
    return 5;
}

auto sub_6bf5() {
    return g_16416._f128 > 0;
}

auto sub_6c06() {
    sub_6eb6(&v_2, TIME::GET_CLOCK_SECONDS());
    sub_6e7b(&v_2, TIME::GET_CLOCK_MINUTES());
    sub_6e41(&v_2, TIME::GET_CLOCK_HOURS());
    sub_6d05(&v_2, TIME::GET_CLOCK_DAY_OF_MONTH());
    sub_6cd2(&v_2, TIME::GET_CLOCK_MONTH());
    sub_6c4c(&v_2, TIME::GET_CLOCK_YEAR());
    return v_2;
}

void sub_6c4c(auto a_0, auto a_1) {
    if (a_1 <= 0) {
        return ;
    }
    if ((a_1 > 2043) || (a_1 < 1979)) {
        return ;
    }
    a_0 -= a_0 & 0x7c000000;
    if (a_1 < 2011) {
        a_0 |= SYSTEM::SHIFT_LEFT(2011 - a_1, 26);
        a_0 |= 0x80000000;
    } else { 
        a_0 |= SYSTEM::SHIFT_LEFT(a_1 - 2011, 26);
        a_0 -= a_0 & 0x80000000;
    }
}

void sub_6cd2(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return ;
    }
    a_0 -= a_0 & 15;
    a_0 |= a_1;
}

void sub_6d05(auto a_0, auto a_1) {
    v_4 = sub_6e34(a_0);
    v_5 = sub_6df8(a_0);
    if ((a_1 < 1) || (a_1 > sub_6d56(v_4, v_5))) {
        return ;
    }
    a_0 -= a_0 & 496;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 4);
}

auto sub_6d56(auto a_0, auto a_1) {
    if (a_1 < 0) {
        a_1 = 0;
    }
    switch (a_0) {
    case 0:
    case 2:
    case 4:
    case 6:
    case 7:
    case 9:
    case 11:
        return 31;
        break;
    case 3:
    case 5:
    case 8:
    case 10:
        return 30;
        break;
    case 1:
        if ((a_1 % 4) == 0) {
            if ((a_1 % 100) != 0) {
                return 29;
            } else if ((a_1 % 400) == 0) {
                return 29;
            }
        }
        return 28;
        break;
    }
    return 30;
}

auto sub_6df8(auto a_0) {
    return ((SYSTEM::SHIFT_RIGHT(a_0, 26) & 31) * sub_6e1d(GAMEPLAY::IS_BIT_SET(a_0, 31), -1, 1)) + 2011;
}

auto sub_6e1d(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

auto sub_6e34(auto a_0) {
    return a_0 & 15;
}

void sub_6e41(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 24)) {
        return ;
    }
    a_0 -= a_0 & 15872;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 9);
}

void sub_6e7b(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0xfc000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 14);
}

void sub_6eb6(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0x3f00000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 20);
}

auto sub_6ef2() {
    sub_40ec();
    return game_state._f6EA._f21B._fDDD;
}

void sub_6f0b(auto a_0) {
    if (GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) {
        v_3 = a_0;
        NETWORK::NETWORK_SET_RICH_PRESENCE(9, &v_3, 1, 1);
    } else if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
        v_4/*"24"*/ = "SPRC_";
        v_4/*24*/ += a_0;
        v_4/*24*/ += "_STR";
        NETWORK::_3E200C2BCF4164EB(9, &v_4);
    }
}

void sub_6f64(auto a_0, auto a_1, auto a_2) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_159BD)) {
        STATS::PLAYSTATS_MISSION_OVER(&g_159BD, 0, 0, 0, 1, 0);
        g_159BD/*"64"*/ = "";
    }
    g_159BD/*"64"*/ = a_0;
    STATS::PLAYSTATS_MISSION_STARTED(a_0, a_1, a_2, sub_6fa6(0));
}

auto sub_6fa6(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10FBD, 0);
}

auto<2> sub_6fd1(auto a_0) {
    v_3/*"8"*/ = "";
    switch (a_0) {
    case 0:
        v_3/*"8"*/ = "ABI1";
        break;
    case 1:
        v_3/*"8"*/ = "ABI2";
        break;
    case 2:
        v_3/*"8"*/ = "BA1";
        break;
    case 3:
        v_3/*"8"*/ = "BA2";
        break;
    case 4:
        v_3/*"8"*/ = "BA3";
        break;
    case 5:
        v_3/*"8"*/ = "BA3A";
        break;
    case 6:
        v_3/*"8"*/ = "BA3C";
        break;
    case 7:
        v_3/*"8"*/ = "BA4";
        break;
    case 8:
        v_3/*"8"*/ = "DRE1";
        break;
    case 9:
        v_3/*"8"*/ = "EPS1";
        break;
    case 10:
        v_3/*"8"*/ = "EPS2";
        break;
    case 11:
        v_3/*"8"*/ = "EPS3";
        break;
    case 12:
        v_3/*"8"*/ = "EPS4";
        break;
    case 13:
        v_3/*"8"*/ = "EPS5";
        break;
    case 14:
        v_3/*"8"*/ = "EPS6";
        break;
    case 15:
        v_3/*"8"*/ = "EPS7";
        break;
    case 16:
        v_3/*"8"*/ = "EPS8";
        break;
    case 17:
        v_3/*"8"*/ = "EXT1";
        break;
    case 18:
        v_3/*"8"*/ = "EXT2";
        break;
    case 19:
        v_3/*"8"*/ = "EXT3";
        break;
    case 20:
        v_3/*"8"*/ = "EXT4";
        break;
    case 21:
        v_3/*"8"*/ = "FAN1";
        break;
    case 22:
        v_3/*"8"*/ = "FAN2";
        break;
    case 23:
        v_3/*"8"*/ = "FAN3";
        break;
    case 24:
        v_3/*"8"*/ = "HAO1";
        break;
    case 25:
        v_3/*"8"*/ = "HUN1";
        break;
    case 26:
        v_3/*"8"*/ = "HUN2";
        break;
    case 27:
        v_3/*"8"*/ = "JOS1";
        break;
    case 28:
        v_3/*"8"*/ = "JOS2";
        break;
    case 29:
        v_3/*"8"*/ = "JOS3";
        break;
    case 30:
        v_3/*"8"*/ = "JOS4";
        break;
    case 31:
        v_3/*"8"*/ = "MAU1";
        break;
    case 32:
        v_3/*"8"*/ = "MIN1";
        break;
    case 33:
        v_3/*"8"*/ = "MIN2";
        break;
    case 34:
        v_3/*"8"*/ = "MIN3";
        break;
    case 35:
        v_3/*"8"*/ = "MRS1";
        break;
    case 36:
        v_3/*"8"*/ = "MRS2";
        break;
    case 37:
        v_3/*"8"*/ = "NI1";
        break;
    case 38:
        v_3/*"8"*/ = "NI1A";
        break;
    case 39:
        v_3/*"8"*/ = "NI1B";
        break;
    case 40:
        v_3/*"8"*/ = "NI1C";
        break;
    case 41:
        v_3/*"8"*/ = "NI1D";
        break;
    case 42:
        v_3/*"8"*/ = "NI2";
        break;
    case 43:
        v_3/*"8"*/ = "NI3";
        break;
    case 44:
        v_3/*"8"*/ = "OME1";
        break;
    case 45:
        v_3/*"8"*/ = "OME2";
        break;
    case 46:
        v_3/*"8"*/ = "PA1";
        break;
    case 47:
        v_3/*"8"*/ = "PA2";
        break;
    case 48:
        v_3/*"8"*/ = "PA3";
        break;
    case 49:
        v_3/*"8"*/ = "PA3A";
        break;
    case 50:
        v_3/*"8"*/ = "PA3B";
        break;
    case 51:
        v_3/*"8"*/ = "PA4";
        break;
    case 52:
        v_3/*"8"*/ = "RAM1";
        break;
    case 53:
        v_3/*"8"*/ = "RAM2";
        break;
    case 54:
        v_3/*"8"*/ = "RAM3";
        break;
    case 55:
        v_3/*"8"*/ = "RAM4";
        break;
    case 56:
        v_3/*"8"*/ = "RAM5";
        break;
    case 57:
        v_3/*"8"*/ = "SAS1";
        break;
    case 58:
        v_3/*"8"*/ = "TON1";
        break;
    case 59:
        v_3/*"8"*/ = "TON2";
        break;
    case 60:
        v_3/*"8"*/ = "TON3";
        break;
    case 61:
        v_3/*"8"*/ = "TON4";
        break;
    case 62:
        v_3/*"8"*/ = "TON5";
        break;
    default:
        break;
    }
    return v_3;
}

void sub_741e(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        sub_8665(a_1, "Abigail1", sub_b92(a_0), 0, 0, 4, -1604.66796875, 5239.1, 3.01, 66, "", 109, 0, "ambient_Diving", 0, 0, 1, 4, 1, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 1:
        sub_8665(a_1, "Abigail2", sub_b92(a_0), 0, 0, 4, -1592.8399658203125, 5214.04, 3.01, 400, "", 110, 0, "", 0, 0, -1, 4, 1, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 2:
        sub_8665(a_1, "Barry1", sub_b92(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", 74, 0, "", 0, 1, -1, 4, 1, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 3:
        sub_8665(a_1, "Barry2", sub_b92(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_86f6(a_0), 1, 1);
        break;
    case 4:
        sub_8665(a_1, "Barry3", sub_b92(a_0), 0, 1, 4, 414.0, -761.0, 29.0, 381, "", -1, 0, "", 164, 1, -1, 0, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 5:
        sub_8665(a_1, "Barry3A", sub_b92(a_0), 1, 1, 0, 1199.27, -1255.63, 34.23, 381, "BARSTASH", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 6:
        sub_8665(a_1, "Barry3C", sub_b92(a_0), 3, 1, 0, 468.9, -1713.06, 18.21, 381, "", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 7:
        sub_8665(a_1, "Barry4", sub_b92(a_0), 0, 1, 4, 237.64999999999998, -385.41, 44.4, 381, "", 85, 0, "postRC_Barry4", 0, 0, -1, 4, 2, 800, 2000, sub_86f6(a_0), 0, 0);
        break;
    case 8:
        sub_8665(a_1, "Dreyfuss1", sub_b92(a_0), 0, 2, 4, -1458.969970703125, 485.99, 115.38, 66, "LETTERS_HINT", 106, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 9:
        sub_8665(a_1, "Epsilon1", sub_b92(a_0), 0, 3, 4, -1622.89, 4204.8701171875, 83.3, 66, "", 86, 0, "", 0, 1, 10, 4, 1, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 10:
        sub_8665(a_1, "Epsilon2", sub_b92(a_0), 0, 3, 4, 242.7, 362.7, 104.74, 206, "", 87, 16, "", 0, 0, 11, 4, 1, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 11:
        sub_8665(a_1, "Epsilon3", sub_b92(a_0), 0, 3, 4, 1835.53, 4705.85986328125, 38.1, 206, "", 88, 16, "epsCars", 0, 0, 12, 4, 1, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 12:
        sub_8665(a_1, "Epsilon4", sub_b92(a_0), 0, 3, 4, 1826.13, 4698.8798828125, 38.919999999999995, 206, "", 90, 16, "postRC_Epsilon4", 0, 0, 13, 4, 1, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 13:
        sub_8665(a_1, "Epsilon5", sub_b92(a_0), 0, 3, 4, 637.02, 119.70929718017578, 89.5, 206, "", 89, 16, "epsRobes", 0, 0, 14, 4, 1, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 14:
        sub_8665(a_1, "Epsilon6", sub_b92(a_0), 0, 3, 4, -2892.929931640625, 3192.3701171875, 11.66, 206, "", 93, 0, "", 0, 0, 15, 4, 1, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 15:
        sub_8665(a_1, "Epsilon7", sub_b92(a_0), 0, 3, 4, 524.43, 3079.82, 39.48, 206, "", -1, 16, "epsDesert", 0, 0, 16, 4, 1, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 16:
        sub_8665(a_1, "Epsilon8", sub_b92(a_0), 0, 3, 4, -697.75, 45.38, 43.03, 206, "", 94, 16, "epsilonTract", 0, 0, -1, 4, 1, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 17:
        sub_8665(a_1, "Extreme1", sub_b92(a_0), 0, 4, 4, -188.22, 1296.1, 302.8599853515625, 66, "", -1, 0, "", 4, 1, 18, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 18:
        sub_8665(a_1, "Extreme2", sub_b92(a_0), 0, 4, 4, -954.19, -2760.05, 14.64, 382, "", 96, 0, "", 171, 0, 19, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 19:
        sub_8665(a_1, "Extreme3", sub_b92(a_0), 0, 4, 4, 63.8, -809.5, 321.8, 382, "", 97, 0, "", 0, 0, 20, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 20:
        sub_8665(a_1, "Extreme4", sub_b92(a_0), 0, 4, 4, 1731.41, 96.96, 170.39, 382, "", 98, 16, "", 0, 0, -1, 4, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 21:
        sub_8665(a_1, "Fanatic1", sub_b92(a_0), 0, 5, 4, -1877.8199462890625, -440.64898681640625, 45.05, 405, "", 74, 0, "", 0, 1, -1, 4, 1, 700, 2000, sub_86f6(a_0), 1, 0);
        break;
    case 22:
        sub_8665(a_1, "Fanatic2", sub_b92(a_0), 0, 5, 4, 809.6599731445312, 1279.76, 360.49, 405, "", -1, 0, "", 0, 1, -1, 4, 4, 700, 2000, sub_86f6(a_0), 1, 0);
        break;
    case 23:
        sub_8665(a_1, "Fanatic3", sub_b92(a_0), 0, 5, 4, 915.6, 6139.2, 5.5, 405, "", -1, 0, "", 0, 1, -1, 4, 2, 700, 2000, sub_86f6(a_0), 0, 1);
        break;
    case 24:
        sub_8665(a_1, "Hao1", sub_b92(a_0), 0, 6, 4, -72.29, -1260.63, 28.14, 66, "", -1, 0, "controller_Races", 13, 1, -1, 4, 2, 2000, 500, sub_86f6(a_0), 0, 1);
        break;
    case 25:
        sub_8665(a_1, "Hunting1", sub_b92(a_0), 0, 7, 4, 1804.3199462890625, 3931.33, 32.82, 66, "", -1, 0, "", 174, 1, 26, 4, 4, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 26:
        sub_8665(a_1, "Hunting2", sub_b92(a_0), 0, 7, 4, -684.1699829101562, 5839.16015625, 16.09, 384, "", 99, 0, "", 7, 0, -1, 4, 4, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 27:
        sub_8665(a_1, "Josh1", sub_b92(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 66, "", -1, 0, "forSaleSigns", 0, 1, 28, 4, 4, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 28:
        sub_8665(a_1, "Josh2", sub_b92(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", 105, 0, "", 0, 0, 29, 4, 4, 0, 2359, sub_86f6(a_0), 1, 1);
        break;
    case 29:
        sub_8665(a_1, "Josh3", sub_b92(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", -1, 16, "", 0, 0, 30, 4, 4, 0, 2359, sub_86f6(a_0), 1, 1);
        break;
    case 30:
        sub_8665(a_1, "Josh4", sub_b92(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 385, "", -1, 36, "", 0, 0, -1, 4, 4, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 31:
        sub_8665(a_1, "Maude1", sub_b92(a_0), 0, 9, 4, 2726.1, 4145.0, 44.3, 66, "", -1, 0, "BailBond_Launcher", 0, 1, -1, 4, 4, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 32:
        sub_8665(a_1, "Minute1", sub_b92(a_0), 0, 10, 4, 327.85, 3405.7, 35.73, 66, "", -1, 0, "", 0, 1, 33, 4, 4, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 33:
        sub_8665(a_1, "Minute2", sub_b92(a_0), 0, 10, 4, 18.0, 4527.0, 105.0, 386, "", -1, 10, "", 0, 0, 34, 4, 4, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 34:
        sub_8665(a_1, "Minute3", sub_b92(a_0), 0, 10, 4, -303.82, 6211.29, 31.05, 386, "", -1, 10, "", 0, 0, -1, 4, 4, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 35:
        sub_8665(a_1, "MrsPhilips1", sub_b92(a_0), 0, 11, 4, 1972.5899658203125, 3816.429931640625, 32.419999999999995, 66, "", -1, 0, "ambient_MrsPhilips", 0, 1, -1, 4, 4, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 36:
        sub_8665(a_1, "MrsPhilips2", sub_b92(a_0), 0, 11, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 37:
        sub_8665(a_1, "Nigel1", sub_b92(a_0), 0, 12, 4, -1097.16, 790.01, 164.52, 66, "", -1, 0, "", 177, 1, -1, 1, 4, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 38:
        sub_8665(a_1, "Nigel1A", sub_b92(a_0), 0, 12, 1, -558.65, 284.49, 90.86, 149, "NIGITEMS", 100, 0, "", 0, 0, 42, 4, 4, 0, 2359, sub_86f6(a_0), 1, 1);
        break;
    case 39:
        sub_8665(a_1, "Nigel1B", sub_b92(a_0), 0, 12, 1, -1034.15, 366.0799865722656, 80.11, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_86f6(a_0), 1, 1);
        break;
    case 40:
        sub_8665(a_1, "Nigel1C", sub_b92(a_0), 0, 12, 1, -623.9099731445312, -266.17, 37.76, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_86f6(a_0), 1, 1);
        break;
    case 41:
        sub_8665(a_1, "Nigel1D", sub_b92(a_0), 0, 12, 1, -1096.8499755859375, 67.68, 52.95, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_86f6(a_0), 1, 1);
        break;
    case 42:
        sub_8665(a_1, "Nigel2", sub_b92(a_0), 0, 12, 4, 1310.6999999999998, -640.219970703125, 26.54, 149, "", -1, 8, "", 0, 0, 43, 4, 4, 0, 2359, sub_86f6(a_0), 1, 1);
        break;
    case 43:
        sub_8665(a_1, "Nigel3", sub_b92(a_0), 0, 12, 4, -44.75, -1288.67, 28.21, 149, "", -1, 16, "postRC_Nigel3", 0, 0, -1, 4, 4, 0, 2359, sub_86f6(a_0), 1, 1);
        break;
    case 44:
        sub_8665(a_1, "Omega1", sub_b92(a_0), 0, 13, 4, 2468.51, 3437.389892578125, 49.9, 66, "", -1, 0, "spaceshipParts", 0, 1, 45, 4, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 45:
        sub_8665(a_1, "Omega2", sub_b92(a_0), 0, 13, 4, 2319.43994140625, 2583.58, 46.76, 387, "", 107, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 46:
        sub_8665(a_1, "Paparazzo1", sub_b92(a_0), 0, 14, 4, -149.75, 285.81, 93.67, 66, "", -1, 0, "", 0, 1, 47, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 47:
        sub_8665(a_1, "Paparazzo2", sub_b92(a_0), 0, 14, 4, 70.71, 301.43, 106.79, 389, "", -1, 8, "", 0, 0, 48, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 48:
        sub_8665(a_1, "Paparazzo3", sub_b92(a_0), 0, 14, 4, -257.22, 292.85, 90.63, 389, "", -1, 8, "", 183, 1, -1, 2, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 49:
        sub_8665(a_1, "Paparazzo3A", sub_b92(a_0), 0, 14, 2, 305.5199890136719, 157.19, 102.94, 389, "PAPPHOTO", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 50:
        sub_8665(a_1, "Paparazzo3B", sub_b92(a_0), 0, 14, 2, 1040.9599609375, -534.4199829101562, 60.169999999999995, 389, "", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 51:
        sub_8665(a_1, "Paparazzo4", sub_b92(a_0), 0, 14, 4, -484.2, 229.67999999999998, 82.21, 389, "", -1, 8, "", 0, 1, -1, 4, 2, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 52:
        sub_8665(a_1, "Rampage1", sub_b92(a_0), 0, 15, 4, 908.0, 3643.7, 32.2, 66, "", -1, 0, "", 0, 1, 54, 4, 4, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 54:
        sub_8665(a_1, "Rampage3", sub_b92(a_0), 0, 15, 4, 465.1, -1849.3, 27.8, 84, "", -1, 0, "", 0, 1, 55, 4, 4, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 55:
        sub_8665(a_1, "Rampage4", sub_b92(a_0), 0, 15, 4, -161.0, 1669.6999999999998, 33.0, 84, "", -1, 0, "", 0, 0, 56, 4, 4, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 56:
        sub_8665(a_1, "Rampage5", sub_b92(a_0), 0, 15, 4, 1298.1999999999998, 2504.139892578125, 21.09, 84, "", -1, 0, "", 0, 0, 53, 4, 4, 0, 2359, sub_86f6(a_0), 0, 0);
        break;
    case 53:
        sub_8665(a_1, "Rampage2", sub_b92(a_0), 0, 15, 4, 1181.5, -400.1, 67.5, 84, "", -1, 0, "rampage_controller", 0, 0, -1, 4, 4, 0, 2359, sub_86f6(a_0), 1, 0);
        break;
    case 57:
        sub_8665(a_1, "TheLastOne", sub_b92(a_0), 0, 16, 4, -1298.97998046875, 4640.16015625, 105.67, 66, "", 133, 1, "", 0, 1, -1, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 58:
        sub_8665(a_1, "Tonya1", sub_b92(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 66, "AM_H_RCFS", -1, 0, "ambient_TonyaCall", 24, 1, 59, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 59:
        sub_8665(a_1, "Tonya2", sub_b92(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "ambient_Tonya", 185, 0, 60, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 60:
        sub_8665(a_1, "Tonya3", sub_b92(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 187, 0, 61, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 61:
        sub_8665(a_1, "Tonya4", sub_b92(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 0, 62, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    case 62:
        sub_8665(a_1, "Tonya5", sub_b92(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "", 0, 0, -1, 4, 2, 0, 2359, sub_86f6(a_0), 0, 1);
        break;
    default:
        break;
    }
}

void sub_8665(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17, auto a_18, auto a_19, auto a_20, auto a_21, auto a_22, auto a_23, auto a_24) {
    a_0._f4 = a_5;
    a_0 = a_1;
    a_0._f1/*{2}*/ = a_2;
    a_0._f3 = a_4;
    a_0._f5 = a_6;
    a_0._f6/*{3}*/ = a_7;
    a_0._f9 = a_A;
    a_0._fA/*"16"*/ = a_B;
    a_0._fE = a_C;
    a_0._fF = a_D;
    a_0._f10/*"24"*/ = a_E;
    a_0._f16 = a_F;
    a_0._f17 = a_10;
    a_0._f18 = a_11;
    a_0._f19 = a_12;
    a_0._f1A = a_13;
    a_0._f1B = a_14;
    a_0._f1C = a_15;
    a_0._f1D = a_16;
    a_0._f1E = a_17;
    a_0._f1F = a_18;
}

auto sub_86f6(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 1;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 1;
        break;
    case 6:
        return 1;
        break;
    case 7:
        return 0;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 0;
        break;
    case 10:
        return 0;
        break;
    case 11:
        return 0;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 0;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 0;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 1;
        break;
    case 23:
        return 1;
        break;
    case 24:
        return 1;
        break;
    case 25:
        return 1;
        break;
    case 26:
        return 1;
        break;
    case 27:
        return 0;
        break;
    case 28:
        return 1;
        break;
    case 29:
        return 1;
        break;
    case 30:
        return 1;
        break;
    case 31:
        return 0;
        break;
    case 32:
        return 1;
        break;
    case 33:
        return 1;
        break;
    case 34:
        return 1;
        break;
    case 35:
        return 0;
        break;
    case 36:
        return 0;
        break;
    case 37:
        return 0;
        break;
    case 38:
        return 1;
        break;
    case 39:
        return 1;
        break;
    case 40:
        return 1;
        break;
    case 41:
        return 1;
        break;
    case 42:
        return 1;
        break;
    case 43:
        return 1;
        break;
    case 44:
        return 0;
        break;
    case 45:
        return 0;
        break;
    case 46:
        return 1;
        break;
    case 47:
        return 1;
        break;
    case 48:
        return 0;
        break;
    case 49:
        return 1;
        break;
    case 50:
        return 1;
        break;
    case 51:
        return 1;
        break;
    case 52:
        return 1;
        break;
    case 54:
        return 1;
        break;
    case 55:
        return 1;
        break;
    case 56:
        return 1;
        break;
    case 53:
        return 1;
        break;
    case 57:
        return 1;
        break;
    case 58:
        return 1;
        break;
    case 59:
        return 1;
        break;
    case 60:
        return 1;
        break;
    case 61:
        return 1;
        break;
    case 62:
        return 1;
        break;
    default:
        break;
    }
    return 0;
}

auto sub_8a3c(auto a_0) {
    if (sub_934c(&a_0._f1)) {
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_0._f9)) {
            sub_9114(1);
            sub_8fb5(a_0, 1, sub_90a9(a_0));
        }
        if (a_0._f1B) {
            if (sub_8f62(a_0)) {
                while (!PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) {
                    sub_9412();
                    SYSTEM::WAIT(0);
                }
            }
        }
        sub_8ae0(a_0);
        v_3 = SYSTEM::START_NEW_SCRIPT_WITH_ARGS(&a_0._f1, a_0, 61, 18000);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(&a_0._f1);
        if (CUTSCENE::HAS_CUTSCENE_LOADED()) {
            sub_11f55("Initial cutscene loaded and passing to RC mission.");
            CUTSCENE::_8D9DF6ECA8768583(v_3);
        } else { 
            sub_11f55("Initial cutscene wasn't loaded in time to pass to RC mission.");
            CUTSCENE::REMOVE_CUTSCENE();
        }
        return 1;
    }
    return 0;
}

void sub_8ae0(auto a_0) {
    sub_8ee5();
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 32, 0);
        PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 250, 0);
    }
    if (sub_8e92(a_0)) {
        PED::REMOVE_PED_HELMET(PLAYER::PLAYER_PED_ID(), 0);
    }
    PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
    UI::CLEAR_ADDITIONAL_TEXT(0, 1);
    UI::CLEAR_ADDITIONAL_TEXT(3, 1);
    UI::CLEAR_ADDITIONAL_TEXT(2, 1);
    if (g_8F8E == 1) {
        if (sub_8e52(PLAYER::PLAYER_PED_ID())) {
            sub_8bd9(PLAYER::PLAYER_PED_ID());
        }
    }
    if (!sub_9c69()) {
        if (a_0 < 63) {
            sub_8b7b(a_0);
            v_3/*{2}*/ = sub_b92(a_0);
            UI::SET_MISSION_NAME(1, &v_3);
        }
    }
}

void sub_8b7b(auto a_0) {
    if (a_0 < 63) {
        sub_8ba1();
        g_10FC4 = a_0;
        g_10FC3 = 0;
        g_10FC6 = 7;
    } else { }
}

void sub_8ba1() {
    if (g_10FC3 != 6) {}
    if (g_10FC8) {
        UI::RESET_HUD_COMPONENT_VALUES(15);
        g_10FC8 = 0;
        g_4369._f1EB1 = 0;
    }
    g_10FC3 = 6;
    g_10FC5 = -1;
    g_10FC4 = -1;
}

void sub_8bd9(auto a_0) {
    if (a_0 == 0) {
        return ;
    }
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return ;
    }
    v_3 = sub_8e09(a_0);
    if (!(v_3 == -1)) {
        v_4 = g_8EC9[v_3/*5*/];
        sub_8ce6(1, v_4, 1);
        return ;
    }
    v_5 = sub_8cb5(a_0);
    if (v_5 == -1) {
        return ;
    }
    sub_8c32(v_5);
}

void sub_8c32(auto a_0) {
    if ((a_0 < 0) || (a_0 >= 5)) {
        return ;
    }
    if (!(g_8EAF[a_0/*5*/]._f1 == 0)) {
        if (g_8EAF[a_0/*5*/]._f1 == PLAYER::PLAYER_PED_ID()) {
            g_8F8C = 0;
        }
    }
    g_8EAF[a_0/*5*/] = 13;
    g_8EAF[a_0/*5*/]._f1 = 0;
    g_8EAF[a_0/*5*/]._f2 = 0;
    g_8EAF[a_0/*5*/]._f3 = 0;
    g_8EAF[a_0/*5*/]._f4 = 0;
    g_8EAE -= 1;
    if (g_8EAE < 0) {
        g_8EAE = 0;
    }
}

auto sub_8cb5(auto a_0) {
    v_3 = 0;
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        if (g_8EAF[v_3/*5*/]._f1 == a_0) {
            return v_3;
        }
    }
    return -1;
}

void sub_8ce6(auto a_0, auto a_1, auto a_2) {
    sub_8cfa(a_0, a_1, a_2, 0, 0);
}

void sub_8cfa(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1 == -1) {
        return ;
    }
    if (a_2 == 6) {
        return ;
    }
    if (sub_8da2(a_0, a_1, a_2)) {
        return ;
    }
    v_7 = sub_8d71();
    if (v_7 == -1) {
        return ;
    }
    g_8F1A[v_7/*5*/] = a_0;
    g_8F1A[v_7/*5*/]._f1 = a_1;
    g_8F1A[v_7/*5*/]._f2 = a_2;
    g_8F1A[v_7/*5*/]._f3 = a_3;
    g_8F1A[v_7/*5*/]._f4 = a_4;
}

auto sub_8d71() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 16; v_2 += 1) {
        if (g_8F1A[v_2/*5*/]._f2 == 6) {
            return v_2;
        }
    }
    return -1;
}

auto sub_8da2(auto a_0, auto a_1, auto a_2) {
    if (sub_8dbd(a_0, a_1, a_2) == -1) {
        return 0;
    }
    return 1;
}

auto sub_8dbd(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    for (v_5 = 0; v_5 < 16; v_5 += 1) {
        if (a_2 == g_8F1A[v_5/*5*/]._f2) {
            if (a_0 == g_8F1A[v_5/*5*/]) {
                if (a_1 == g_8F1A[v_5/*5*/]._f1) {
                    return v_5;
                }
            }
        }
    }
    return -1;
}

auto sub_8e09(auto a_0) {
    if (a_0 == 0) {
        return -1;
    }
    v_3 = 0;
    for (v_3 = 0; v_3 < 16; v_3 += 1) {
        if (!(g_8EC9[v_3/*5*/] == -1)) {
            if (a_0 == g_8EC9[v_3/*5*/]._f1) {
                return v_3;
            }
        }
    }
    return -1;
}

auto sub_8e52(auto a_0) {
    if (sub_8e72(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_8e72(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_8e92(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
    case 60:
    case 61:
        return 0;
        break;
    }
    return 1;
}

void sub_8ee5() {
    if (g_C10[0/*2811*/][0/*281*/]._f103 == 2) {
        g_C10[0/*2811*/][0/*281*/]._f103 = 0;
    }
    if (g_C10[1/*2811*/][0/*281*/]._f103 == 2) {
        g_C10[1/*2811*/][0/*281*/]._f103 = 0;
    }
    if (g_C10[2/*2811*/][0/*281*/]._f103 == 2) {
        g_C10[2/*2811*/][0/*281*/]._f103 = 0;
    }
    GAMEPLAY::CLEAR_BIT(&g_8EB, 25);
    GAMEPLAY::SET_BIT(&g_8EC, 11);
}

auto sub_8f62(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 14:
    case 16:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
        return 0;
        break;
    }
    return 1;
}

void sub_8fb5(auto a_0, auto a_1, auto a_2) {
    for (v_5 = 0; v_5 < 6; v_5 += 1) {
        if (sub_8e72(a_0._f1C[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f1C[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    for (v_5 = 0; v_5 < 5; v_5 += 1) {
        if (sub_8e72(a_0._f23[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f23[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    for (v_5 = 0; v_5 < 6; v_5 += 1) {
        if (sub_8e72(a_0._f29[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f29[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
        ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), a_1);
        if (a_2) {
            WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
        }
    }
}

auto sub_90a9(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 14:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
        return 0;
        break;
    }
    return 1;
}

void sub_9114(auto a_0) {
    v_3 = PLAYER::GET_PLAYER_INDEX();
    if (!PLAYER::IS_PLAYER_DEAD(v_3)) {
        if (a_0) {
        } else { }
        PLAYER::SET_PLAYER_CONTROL(v_3, a_0, 16);
        PLAYER::SET_PLAYER_CONTROL(v_3, a_0, 32);
    }
    sub_9150(1, 1, 0, 0);
}

void sub_9150(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0) {
        PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID());
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 1);
        sub_9329(1);
        UI::_A8FDB297A8D25FBA();
        UI::_FDB423997FA30340();
        if (current_character._f1 > 3) {
            if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
                AUDIO::STOP_SCRIPTED_CONVERSATION(0);
            }
            if (!sub_9302()) {
                current_character._f1 = 3;
            }
            g_3D60 = 5;
        }
        sub_a1e6(1, a_3, a_2, 0);
        g_D971 = 1;
        g_10983 = 1;
        g_10EC3 = 1;
    } else { 
        sub_9329(0);
        UI::_E1CD1E48E025E661();
        g_D971 = 0;
        if (a_1) {
            GRAPHICS::_03FC694AE06C5A20();
        }
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 0);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 0);
        sub_a1e6(0, a_3, a_2, 0);
        if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (!sub_9223(PLAYER::PLAYER_ID()))) {
            ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), 0);
        }
        g_10EC3 = 0;
    }
}

auto sub_9223(auto a_0) {
    if (sub_9276(a_0, 0)) {
        return 1;
    }
    if (sub_9265()) {
        if (a_0 == PLAYER::PLAYER_ID()) {
            return 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_24E1AF[a_0/*306*/]._fC2, 2)) {
        return 1;
    }
    return 0;
}

auto sub_9265() {
    return GAMEPLAY::IS_BIT_SET(g_240005, 3);
}

auto sub_9276(auto a_0, auto a_1) {
    if (a_0 == PLAYER::PLAYER_ID()) {
        v_4 = sub_92c1(-1, 0) == 8;
    } else { 
        v_4 = g_1837E7[a_0/*410*/]._fC0 == 8;
    }
    if (a_1 == 1) {
        if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
            v_4 = PLAYER::GET_PLAYER_TEAM(a_0) == 8;
        }
    }
    return v_4;
}

auto sub_92c1(auto a_0, auto a_1) {
    v_5 = a_0;
    if (v_5 == -1) {
        v_5 = sub_3911();
    }
    if (g_141431[v_5/*1*/] == 1) {
        if (a_1) {}
        v_4 = 8;
    } else { 
        v_4 = g_1407E4[v_5/*1*/];
        if (a_1) {}
    }
    return v_4;
}

auto sub_9302() {
    if ((current_character._f1 == 1) || (current_character._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_9329(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 13);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 13);
    }
}

auto sub_934c(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        SCRIPT::REQUEST_SCRIPT(a_0);
        while (!SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
            SCRIPT::REQUEST_SCRIPT(a_0);
            SYSTEM::WAIT(0);
        }
        return 1;
    }
    sub_11f55("Attempting to launch invalid script file [TERMINATING]");
    return 0;
}

void sub_9389() {
    g_38F2 = 0;
    sub_9399();
}

void sub_9399() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (current_character._f1 == 9)) || (g_384C == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
        current_character._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

auto sub_93f0() {
    if ((g_3D60 != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_9412() {
    sub_9657();
    sub_9606();
    sub_9426();
}

void sub_9426() {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            if (sub_947e(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), 10.5, 1, 0x3f000000, 0, 1, 0)) {
                if (AI::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0xce98fbb3) != 1) {
                    AI::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
                }
            }
        }
    }
}

auto sub_947e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    CONTROLS::DISABLE_CONTROL_ACTION(0, 71, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 72, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 76, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 73, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 59, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 60, 1);
    if (a_5) {
        CONTROLS::DISABLE_CONTROL_ACTION(0, 75, 1);
    }
    CONTROLS::DISABLE_CONTROL_ACTION(0, 80, 1);
    if (!a_6) {
        CONTROLS::DISABLE_CONTROL_ACTION(0, 69, 1);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 70, 1);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 68, 1);
    }
    CONTROLS::DISABLE_CONTROL_ACTION(0, 74, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 86, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 81, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 82, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 138, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 136, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 114, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 107, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 110, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 89, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 89, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 87, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 88, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 113, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 115, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 116, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 117, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 118, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 119, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 131, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 132, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 123, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 126, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 129, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 130, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 133, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 134, 1);
    CAM::_17FCA7199A530203();
    if ((GAMEPLAY::GET_GAME_TIMER() - g_1D) > 500) {
        VEHICLE::_TASK_BRING_VEHICLE_TO_HALT(a_0, a_1, a_2, a_4);
    }
    g_1D = GAMEPLAY::GET_GAME_TIMER();
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        if (GAMEPLAY::ABSF(ENTITY::GET_ENTITY_SPEED(a_0)) <= a_3) {
            return 1;
        }
    }
    return 0;
}

void sub_9606() {
    CONTROLS::DISABLE_CONTROL_ACTION(0, 21, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 37, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 25, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 141, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 140, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 24, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 257, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 22, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 23, 1);
}

void sub_9657() {
    if (!(current_character._f1 == 1)) {
        if (sub_9763(0)) {
            sub_967f(0);
        }
        GAMEPLAY::SET_BIT(&g_8EC, 2);
    }
}

void sub_967f(auto a_0) {
    if (g_38EB) {
        sub_96ef(0, 0);
    }
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8EC, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D60 = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 30);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 30);
    }
    if (!sub_9302()) {
        current_character._f1 = 3;
    }
}

void sub_96ef(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_9763(0)) {
            g_38EB = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_380E);
            }
            g_3805/*{3}*/ = g_3817[g_3816/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    } else if (g_38EB == 1) {
        g_38EB = 0;
        g_3805/*{3}*/ = g_381E[g_3816/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_380E);
        } else { 
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    }
}

auto sub_9763(auto a_0) {
    if (a_0 == 1) {
        if (current_character._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (current_character._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

auto sub_97bd(auto a_0) {
    if (((((a_0 == 52) || (a_0 == 53)) || (a_0 == 54)) || (a_0 == 55)) || (a_0 == 56)) {
        return 1;
    }
    return 0;
}

auto sub_97fe(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_9c0f();
    }
    if (a_0 == -1) {
        return 0;
    }
    v_3 = sub_9875(&g_186DF[a_0/*10*/]._f9, 1, 4, 0, 0);
    if (!(v_3 == 1)) {
        return 0;
    }
    sub_9843(a_0);
    return 1;
}

void sub_9843(auto a_0) {
    g_186DF[a_0/*10*/]._f4 = 1;
    g_186DF[a_0/*10*/]._f5 = 0;
    g_186DF[a_0/*10*/]._f6 = 0;
    g_186DF[a_0/*10*/] = 0;
}

auto sub_9875(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_1 == 7) {
        return 0;
    }
    if (!a_3) {
        if (g_15B55._f2C == 1) {
            return 2;
        }
    }
    if (a_1 == 0) {
        if (sub_9bed(0)) {
            return 0;
        }
        g_8B50 += 1;
        a_0 = g_8B50;
        PLAYER::SET_PLAYER_INVINCIBLE(PLAYER::GET_PLAYER_INDEX(), 0);
        g_42DE._f5 = 0;
        if (a_2 != 5) {
            PLAYER::FORCE_CLEANUP(8);
        }
        g_8B74 = a_2;
        g_8B4E = a_0;
        g_8B4F = a_4;
        g_8B4D = 0;
        return 1;
    }
    if (a_0 != -1) {
        if (g_8B4D > 0) {
            v_7 = 0;
            for (v_7 = 0; v_7 < g_8B4D; v_7 += 1) {
                if (g_8B53[v_7/*4*/] == a_0) {
                    return 2;
                }
            }
        } else if (g_8B4E == a_0) {
            return 1;
        }
        a_0 = -1;
    }
    if (a_0 == -1) {
        if (!sub_99fb(a_2)) {
            return 0;
        }
        if (g_8B4D == 8) {
            return 0;
        }
        g_8B50 += 1;
        a_0 = g_8B50;
        g_8B53[g_8B4D/*4*/] = g_8B50;
        g_8B53[g_8B4D/*4*/]._f1 = a_1;
        g_8B53[g_8B4D/*4*/]._f2 = a_2;
        g_8B53[g_8B4D/*4*/]._f3 = 0;
        g_8B4D += 1;
        if (a_4 != 0) {
            sub_99ac(a_0, a_4);
        }
    }
    return 2;
}

void sub_99ac(auto a_0, auto a_1) {
    if (g_8B4D == 0) {
        return ;
    }
    if (a_0 == -1) {
        return ;
    }
    v_4 = 0;
    for (v_4 = 0; v_4 < g_8B4D; v_4 += 1) {
        if (g_8B53[v_4/*4*/] == a_0) {
            g_8B53[v_4/*4*/]._f3 = a_1;
        }
    }
    a_0 = -1;
}

auto sub_99fb(auto a_0) {
    return sub_9a0c(a_0, g_8B74);
}

auto sub_9a0c(auto a_0, auto a_1) {
    if (a_1 == 15) {
        return 1;
    }
    if (a_0 == 15) {
        return 0;
    }
    switch (a_0) {
    case 16:
        switch (a_1) {
        case 7:
        case 9:
        case 10:
        case 13:
        case 14:
            return 0;
            break;
        }
        return 1;
        break;
    case 0:
        switch (a_1) {
        case 5:
        case 17:
            return 1;
            break;
        }
        break;
    case 2:
    case 3:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
        case 17:
            return 1;
            break;
        }
        break;
    case 4:
        if (a_1 == 17) {
            return 1;
        }
        break;
    case 5:
        break;
    case 6:
    case 8:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 7:
        if (a_1 == 6) {
            return 1;
        }
        break;
    case 9:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 10:
        switch (a_1) {
        case 5:
        case 6:
        case 17:
            return 1;
            break;
        }
        break;
    case 11:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 17:
        switch (a_1) {
        case 5:
        case 12:
        case 17:
            return 1;
            break;
        }
        break;
    case 12:
    case 18:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
            return 1;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    }
    return 0;
}

auto sub_9bed(auto a_0) {
    if (g_8B74 == 15) {
        return 0;
    }
    if (sub_99fb(a_0)) {
        return 0;
    }
    return 1;
}

auto sub_9c0f() {
    return sub_9c20(SCRIPT::GET_THIS_SCRIPT_NAME(), 0);
}

auto sub_9c20(auto a_0, auto a_1) {
    v_25 = GAMEPLAY::GET_HASH_KEY(a_0);
    v_26 = 0;
    for (v_26 = 0; v_26 < 63; v_26 += 1) {
        v_4 = v_26;
        sub_741e(v_4, &v_5);
        if (GAMEPLAY::GET_HASH_KEY(v_5) == v_25) {
            return v_4;
        }
    }
    if (a_1 == 0) {}
    return -1;
}

auto sub_9c69() {
    if ((g_163E2 == 10) || (g_163E2 == 9)) {
        return 1;
    }
    return 0;
}

void sub_9c8d(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        a_1 = sub_a114(-1604.66796875, 5239.1, 3.01, 0);
        UI::SET_BLIP_SPRITE(a_1, 66);
        UI::SET_BLIP_COLOUR(a_1, 42);
        break;
    case 1:
        a_1 = sub_a114(-1592.8399658203125, 5214.04, 3.01, 0);
        UI::SET_BLIP_SPRITE(a_1, 400);
        UI::SET_BLIP_COLOUR(a_1, 42);
        break;
    case 2:
    case 3:
        a_1 = sub_a114(190.26, -956.3499755859375, 29.63, 0);
        if ((GAMEPLAY::IS_BIT_SET(game_state._f4338[2/*6*/], 3) || GAMEPLAY::IS_BIT_SET(game_state._f4338[4/*6*/], 3)) || GAMEPLAY::IS_BIT_SET(game_state._f4338[4/*6*/], 3)) {
            UI::SET_BLIP_SPRITE(a_1, 381);
        } else { 
            UI::SET_BLIP_SPRITE(a_1, 66);
        }
        if (a_0 == 2) {
            UI::SET_BLIP_COLOUR(a_1, 42);
        } else { 
            UI::SET_BLIP_COLOUR(a_1, 44);
        }
        break;
    case 4:
        a_1 = sub_a114(414.0, -761.0, 29.0, 0);
        if (GAMEPLAY::IS_BIT_SET(game_state._f4338[2/*6*/], 3) || GAMEPLAY::IS_BIT_SET(game_state._f4338[3/*6*/], 3)) {
            UI::SET_BLIP_SPRITE(a_1, 381);
        } else { 
            UI::SET_BLIP_SPRITE(a_1, 66);
        }
        UI::SET_BLIP_COLOUR(a_1, 43);
        break;
    case 9:
        a_1 = sub_a114(-1622.89, 4204.8701171875, 83.3, 0);
        UI::SET_BLIP_SPRITE(a_1, 66);
        UI::SET_BLIP_COLOUR(a_1, 42);
        break;
    case 11:
    case 12:
    case 13:
        if (a_0 == 11) {
            a_1 = sub_a114(1835.53, 4705.85986328125, 38.1, 0);
        } else if (a_0 == 12) {
            a_1 = sub_a114(1826.13, 4698.8798828125, 38.919999999999995, 0);
        } else { 
            a_1 = sub_a114(637.02, 119.70929718017578, 89.5, 0);
        }
        UI::SET_BLIP_SPRITE(a_1, 206);
        UI::SET_BLIP_COLOUR(a_1, 42);
        break;
    case 18:
    case 19:
        if (a_0 == 18) {
            a_1 = sub_a114(-954.19, -2760.05, 14.64, 0);
        } else { 
            a_1 = sub_a114(63.8, -809.5, 321.8, 0);
        }
        UI::SET_BLIP_SPRITE(a_1, 382);
        UI::SET_BLIP_COLOUR(a_1, 43);
        break;
    case 21:
    case 23:
        if (a_0 == 21) {
            a_1 = sub_a114(-1877.8199462890625, -440.64898681640625, 45.05, 0);
        } else { 
            a_1 = sub_a114(915.6, 6139.2, 5.5, 0);
        }
        if ((GAMEPLAY::IS_BIT_SET(game_state._f4338[21/*6*/], 3) || GAMEPLAY::IS_BIT_SET(game_state._f4338[22/*6*/], 3)) || GAMEPLAY::IS_BIT_SET(game_state._f4338[23/*6*/], 3)) {
            UI::SET_BLIP_SPRITE(a_1, 405);
        } else { 
            UI::SET_BLIP_SPRITE(a_1, 66);
        }
        if (a_0 == 21) {
            UI::SET_BLIP_COLOUR(a_1, 42);
        } else { 
            UI::SET_BLIP_COLOUR(a_1, 43);
        }
        break;
    case 27:
        a_1 = sub_a114(-1104.93, 291.25, 64.3, 0);
        UI::SET_BLIP_SPRITE(a_1, 66);
        UI::SET_BLIP_COLOUR(a_1, 44);
        break;
    case 30:
        a_1 = sub_a114(-1104.93, 291.25, 64.3, 0);
        UI::SET_BLIP_SPRITE(a_1, 385);
        UI::SET_BLIP_COLOUR(a_1, 44);
        break;
    case 34:
        a_1 = sub_a114(-303.82, 6211.29, 31.05, 0);
        UI::SET_BLIP_SPRITE(a_1, 386);
        UI::SET_BLIP_COLOUR(a_1, 44);
        break;
    case 43:
        a_1 = sub_a114(-44.75, -1288.67, 28.21, 0);
        UI::SET_BLIP_SPRITE(a_1, 149);
        UI::SET_BLIP_COLOUR(a_1, 44);
        break;
    case 46:
        a_1 = sub_a114(-149.75, 285.81, 93.67, 0);
        UI::SET_BLIP_SPRITE(a_1, 66);
        UI::SET_BLIP_COLOUR(a_1, 43);
        break;
    case 47:
    case 48:
        if (a_0 == 47) {
            a_1 = sub_a114(70.71, 301.43, 106.79, 0);
        } else { 
            a_1 = sub_a114(-257.22, 292.85, 90.63, 0);
        }
        UI::SET_BLIP_SPRITE(a_1, 389);
        UI::SET_BLIP_COLOUR(a_1, 43);
        break;
    }
}

auto sub_a114(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = UI::ADD_BLIP_FOR_COORD(a_0);
    UI::SET_BLIP_SCALE(v_6, sub_a140(NETWORK::NETWORK_IS_GAME_IN_PROGRESS(), 1.0, 1.0));
    UI::SET_BLIP_ROUTE(v_6, a_3);
    return v_6;
}

auto sub_a140(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

auto sub_a157(auto a_0) {
    switch (a_0) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 9:
    case 11:
    case 12:
    case 13:
    case 18:
    case 19:
    case 21:
    case 23:
    case 27:
    case 30:
    case 34:
    case 43:
    case 46:
    case 47:
    case 48:
        return 1;
        break;
    }
    return 0;
}

auto sub_a1e6(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0;
    if (GAMEPLAY::IS_PC_VERSION()) {
        if ((CUTSCENE::_A0FE76168A189DDB() != a_0) && a_2) {
            CUTSCENE::_20746F7B1032A3C7(a_0, a_1, 1, a_3);
            v_6 = 1;
        }
    }
    return v_6;
}

auto sub_a219(auto a_0, auto a_1) {
    switch (a_0._f10) {
    case 0:
        if (a_0 == 12) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 1826.630615234375, 4699.115234375, 35.380889892578125, 1812.8775634765625, 4710.45703125, 42.05353546142578, 23.75, 0, 1, 0)) {
                if (sub_8e72(a_0._f1C[0/*1*/])) {
                    if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < 3.0) {
                        if (sub_abc9(2)) {
                            if (sub_ab08(a_0._f1B)) {
                                sub_aaa4(a_0._f1B, a_0);
                                sub_11f55("ARE_RC_TRIGGER_CONDITIONS_MET: RC_TRIG_CHAR - Used special case Eps 4 trigger.");
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else if (sub_8e72(a_0._f1C[0/*1*/])) {
                if (sub_aa16(a_0)) {
                    if (sub_abc9(2)) {
                        if (sub_ab08(a_0._f1B)) {
                            sub_aaa4(a_0._f1B, a_0);
                            return 1;
                        }
                    }
                }
            } else { 
                return 0;
            }
        } else if (a_0 == 21) {
            if (((((!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1895.7879638671875, -434.01922607421875, 40.3012580871582, -1883.03759765625, -444.08111572265625, 50.24509048461914, 8.5, 0, 1, 0)) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1883.576416015625, -443.64337158203125, 36.40580749511719, -1874.8258056640625, -448.0797119140625, 49.15161895751953, 8.5, 0, 1, 0))) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1876.3426513671875, -446.2214050292969, 35.64636993408203, -1866.951904296875, -456.56, 49.04419708251953, 8.5, 0, 1, 0))) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1882.997314453125, -438.9921569824219, 44.172462463378906, -1874.079345703125, -443.342041015625, 48.69178771972656, 0.75, 0, 1, 0))) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1878.822265625, -441.7655029296875, 44.917503356933594, -1877.94091796875, -439.95220947265625, 47.28981781, 1.25, 0, 1, 0)) {
                if (sub_8e72(a_0._f1C[0/*1*/])) {
                    if (sub_aa16(a_0)) {
                        if (sub_abc9(2)) {
                            if (sub_ab08(a_0._f1B)) {
                                sub_aaa4(a_0._f1B, a_0);
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
        } else if (a_0 == 22) {
            if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 837.0730590820312, 1261.086181640625, 366.1591796875, 780.8382568359375, 1260.82861328125, 351.4049987792969, 17.75, 0, 1, 0)) {
                if (sub_8e72(a_0._f1C[0/*1*/])) {
                    if (sub_aa16(a_0)) {
                        if (sub_abc9(2)) {
                            if (sub_ab08(a_0._f1B)) {
                                sub_aaa4(a_0._f1B, a_0);
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
        } else if (sub_8e72(a_0._f1C[0/*1*/])) {
            if (sub_aa16(a_0)) {
                if (sub_abc9(2)) {
                    if (sub_ab08(a_0._f1B)) {
                        sub_aaa4(a_0._f1B, a_0);
                        return 1;
                    }
                }
            }
        } else { 
            return 0;
        }
        break;
    case 2:
        if (sub_8e72(a_0._f23[0/*1*/])) {
            if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0._f23[0/*1*/], 0)) {
                if (sub_abc9(3)) {
                    sub_aaa4(a_0._f1B, a_0);
                    return 1;
                }
            } else if (a_1 == 1) {
                sub_a9fb();
            }
        } else { 
            return 0;
        }
        break;
    case 1:
        if (ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_DEAD(a_0._f23[0/*1*/])) {
                if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f23[0/*1*/], 1), 1) < a_0._fF) {
                    if (sub_abc9(2)) {
                        if (sub_ab08(a_0._f1B)) {
                            sub_aaa4(a_0._f1B, a_0);
                            return 1;
                        }
                    }
                }
            }
        } else { 
            return 0;
        }
        break;
    case 3:
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), a_0._f11[0/*3*/], 1) < a_0._fF) {
            if (sub_abc9(2)) {
                if (sub_ab08(a_0._f1B)) {
                    sub_aaa4(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 4:
        if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), a_0._f11[0/*3*/], a_0._f11[1/*3*/], 0, 1, 0)) {
            if (sub_abc9(2)) {
                if (sub_ab08(a_0._f1B)) {
                    sub_aaa4(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 5:
        if (a_0 == 6) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                if (sub_8e72(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0))) {
                    if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${towtruck}) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${towtruck2})) {
                        if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), a_0._f23[0/*1*/])) {
                            if (sub_abc9(3)) {
                                return 1;
                            }
                        }
                    } else if ((VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob}) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob2})) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob3})) {
                        if (VEHICLE::_IS_CARGOBOB_HOOK_ACTIVE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0)) && VEHICLE::IS_VEHICLE_ATTACHED_TO_CARGOBOB(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), a_0._f23[0/*1*/])) {
                            if (sub_abc9(3)) {
                                return 1;
                            }
                        }
                    }
                }
            }
        } else if (a_0 == 10) {
            if (AI::GET_PED_DESIRED_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID()) >= 2.0) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 245.88848876953125, 371.9034118652344, 103.9884262084961, 241.58984375, 359.645751953125, 107.34612274169922, 1.25, 0, 1, 0)) {
                    if (sub_abc9(2)) {
                        if (sub_ab08(a_0._f1B)) {
                            sub_aaa4(a_0._f1B, a_0);
                            sub_11f55("RC5_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - Eps 2 special case trigger used");
                            return 1;
                        }
                    }
                }
            }
        } else if (a_0 == 46) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -164.20455932617188, 277.4866333, 91.55321502685547, 153.6, 277.40606689453125, 97.338134765625, 10.0, 0, 1, 0)) {
                return 0;
            }
        } else if (a_0 == 31) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2728.9482421875, 4143.43994140625, 42.292945861816406, 2722.21337890625, 4144.521484375, 45.43182373046875, 10.0, 0, 1, 0)) {
                if (sub_abc9(2)) {
                    if (sub_ab08(1)) {
                        sub_aaa4(1, a_0);
                        sub_11f55("RC_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - RC_MAUDE_1 special case vehicle launch area");
                        return 1;
                    }
                }
            }
        } else if (a_0 == 39) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -992.4994506835938, 358.7454528808594, 96.37350463867188, -1021.9401245117188, 361.8887634277344, 65.36148071289062, 30.0, 0, 1, 0)) {
                if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -983.5426025390625, 369.1103515625, 68.46017456054688, -1028.5662841796875, 395.4613342285156, 94.57244873046875, 15.0, 0, 1, 0)) {
                    if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -983.875, 346.7556457519531, 68.02095794677734, -1021.451416015625, 336.3458251953125, 93.18714141845703, 14.5, 0, 1, 0)) {
                        if (sub_abc9(2)) {
                            if (sub_ab08(a_0._f1B)) {
                                sub_aaa4(a_0._f1B, a_0);
                                sub_11f55("RC_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - RC_NIGEL_1B special case vehicle launch area");
                                return 1;
                            }
                        }
                    }
                }
            }
        }
        if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), a_0._f11[0/*3*/], a_0._f11[1/*3*/], a_0._f18, 0, 1, 0)) {
            if (a_0 == 45) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2338.696533203125, 2597.037353515625, 45.39051818847656, 2324.00341796875, 2597.18505859375, 47.74960708618164, 8.5, 0, 1, 0)) {
                    return 0;
                }
            }
            if (sub_abc9(2)) {
                if (sub_ab08(a_0._f1B)) {
                    sub_aaa4(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 6:
        break;
    }
    return 0;
}

void sub_a9fb() {
    sub_298e(&g_16AF6._f907, &g_16AF6, 0, 1, 1, 0);
}

auto sub_aa16(auto a_0) {
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0) && a_0._f1B) {
        if ((a_0 == 27) || (a_0 == 30)) {
            v_3 = 1.0;
        } else { 
            v_3 = 5.0;
        }
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < (a_0._fF + v_3)) {
            return 1;
        }
    } else if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < a_0._fF) {
        return 1;
    }
    return 0;
}

void sub_aaa4(auto a_0, auto a_1) {
    if (a_0 == 1) {
        if (!sub_8f62(a_1)) {
            return ;
        }
        if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            sub_11f55("RC_STOP_PLAYER_VEHICLE_CHECK: Stopping player's vehicle.");
            if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID())) {
                sub_11f55("RC_STOP_PLAYER_VEHICLE_CHECK: Turning off engine for plane or helicopter.");
                VEHICLE::SET_VEHICLE_ENGINE_ON(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), 0, 1, 0);
            }
            sub_9412();
        }
    }
}

auto sub_ab08(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::GET_PLAYER_INDEX())) {
        if (PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) {
            return 1;
        } else if (a_0) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                v_3 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                if (sub_ab9f(v_3)) {
                    if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID())) {
                        if (((!ENTITY::HAS_ENTITY_COLLIDED_WITH_ANYTHING(v_3)) && (!ENTITY::IS_ENTITY_IN_AIR(v_3))) && (ENTITY::GET_ENTITY_SPEED(v_3) < 1.0)) {
                            return 1;
                        }
                    } else if (!ENTITY::IS_ENTITY_IN_AIR(v_3)) {
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_ab9f(auto a_0) {
    if (sub_8e72(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
            if (!FIRE::IS_ENTITY_ON_FIRE(a_0)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_abc9(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
            if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
                v_3 = sub_6ef2();
                if (!sub_2f30(v_3)) {
                    return 0;
                }
                switch (a_0) {
                case 0:
                case 9:
                    if ((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_b3b6()) || g_186B7) || g_621D) || sub_b3aa()) || sub_b36f(8, -1)) || sub_6bf5()) || sub_b35e()) || sub_b334()) || sub_b31a()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 1:
                    if (((((((((PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1) || sub_b3b6()) || g_621D) || sub_b3aa()) || sub_b36f(8, -1)) || sub_b334()) || sub_6bf5()) || sub_b35e()) || sub_b31a()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 2:
                    if (((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_b3b6()) || g_186B7) || g_621D) || sub_b3aa()) || sub_b36f(8, -1)) || sub_b334()) || sub_6bf5()) || sub_b35e()) || sub_b31a()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) || (g_8D97 != -1)) {
                        return 0;
                    }
                    break;
                case 3:
                    if ((((((((((((PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_b3b6()) || g_186B7) || g_621D) || sub_b3aa()) || sub_b36f(8, -1)) || sub_6bf5()) || sub_b35e()) || sub_b31a()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 4:
                    if (((((sub_b3b6() || (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) || sub_b36f(8, -1)) || sub_b31a()) || sub_b2f4()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 5:
                    if ((((sub_b36f(8, -1) || sub_6bf5()) || sub_b35e()) || sub_b2f4()) || sub_b2e6()) {
                        return 0;
                    }
                    if ((STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)) && (STREAMING::GET_PLAYER_SWITCH_STATE() < 8)) {
                        return 0;
                    }
                    break;
                case 6:
                    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
                        if ((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || sub_b3b6()) || g_621D) || sub_b3aa()) || sub_b36f(8, -1)) || sub_b35e()) || sub_b334()) || sub_b31a()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                            return 0;
                        }
                    }
                    break;
                case 7:
                    if ((((((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || (!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()))) || (!CAM::IS_SCREEN_FADED_IN())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || sub_b3b6()) || sub_b35e()) || g_186B7) || g_621D) || sub_b3aa()) || g_8F8E) || sub_b36f(8, -1)) || sub_b334()) || sub_b2f4()) || sub_b31a()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 8:
                    if (((((((((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || (!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()))) || (!CAM::IS_SCREEN_FADED_IN())) || PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_SWIMMING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || sub_b3b6()) || g_186B7) || g_621D) || sub_b3aa()) || sub_b36f(8, -1)) || sub_b334()) || sub_b2f4()) || sub_6bf5()) || sub_b35e()) || sub_b31a()) {
                        return 0;
                    }
                    break;
                }
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        return 0;
    }
    return 1;
}

auto sub_b2e6() {
    return g_16409._f1;
}

auto sub_b2f4() {
    if (g_15929 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_14133[g_15929/*34*/]._fF, 13);
    }
    return 0;
}

auto sub_b31a() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${player_timetable_scene}) > 0) {
        return 1;
    }
    return 0;
}

auto sub_b334() {
    if (g_10FC9) {
        return 1;
    } else if (g_D965 && (!g_D96B)) {
        return 1;
    }
    return 0;
}

auto sub_b35e() {
    return g_16416._f129 > 0;
}

auto sub_b36f(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_146CF3._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_146CF3._f3B5, a_0);
}

auto sub_b3aa() {
    return g_141447;
}

auto sub_b3b6() {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return g_15B55._f2C == 1;
    }
    return 0;
}

auto sub_b3d2(auto a_0) {
    v_3 = 0;
    if (sub_8e72(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f1C[v_3/*1*/])) {
                if (sub_8e72(a_0._f1C[v_3/*1*/])) {
                    if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 1) || GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_3/*1*/], 1), 7.5, 1)) {
                        if (sub_abc9(2)) {
                            sub_aaa4(a_0._f1B, a_0);
                            return 1;
                        } else { 
                            sub_11f55("Player damaged the N1D peds but it's not safe to trigger the mission!");
                        }
                    }
                } else if (sub_abc9(2)) {
                    sub_aaa4(a_0._f1B, a_0);
                    return 1;
                } else { 
                    sub_11f55("Player killed a N1D ped but it's not safe to trigger the mission!");
                }
            }
        }
    }
    return 0;
}

auto sub_b496(auto a_0, auto a_1) {
    if (sub_b4d3(a_1, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1))) {
        if (sub_abc9(2)) {
            if (sub_ab08(a_0._f1B)) {
                sub_aaa4(a_0._f1B, a_0);
                return 1;
            }
        }
    }
    return 0;
}

auto sub_b4d3(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0._f2E < 3) {}
    v_6 = 0;
    v_7 = 0;
    v_8 = a_0._f2E - 1;
    for (; v_7 < a_0._f2E; v_7 += 1) {
        if (((a_0[v_7/*3*/]._f1 < a_1._f1) && (a_0[v_8/*3*/]._f1 >= a_1._f1)) || ((a_0[v_8/*3*/]._f1 < a_1._f1) && (a_0[v_7/*3*/]._f1 >= a_1._f1))) {
            if ((a_0[v_7/*3*/] + (((a_1._f1 - a_0[v_7/*3*/]._f1) / (a_0[v_8/*3*/]._f1 - a_0[v_7/*3*/]._f1)) * (a_0[v_8/*3*/] - a_0[v_7/*3*/]))) < a_1) {
                v_6 = !v_6;
            }
        }
        v_8 = v_7;
    }
    return v_6;
}

void sub_b58f(auto a_0, auto a_1, auto a_2) {
    if (sub_8e72(a_1)) {
        switch (a_0) {
        case 0:
            if (AUDIO::REQUEST_SCRIPT_AUDIO_BANK("CAR_TRUNK_THUMPS", 0)) {
                a_0._f1 = AUDIO::GET_SOUND_ID();
                a_0._f2 = GAMEPLAY::GET_GAME_TIMER();
                a_0._f3 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(6000, 12000);
                a_0 = 1;
            }
            break;
        case 1:
            if ((GAMEPLAY::GET_GAME_TIMER() - a_0._f2) > a_0._f3) {
                AUDIO::PLAY_SOUND_FROM_COORD(a_0._f1, "TRUNK_THUMPS", ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_1, 0.0, -2.2, 0.5), 0, 0, 0, 0);
                AUDIO::_PLAY_AMBIENT_SPEECH_WITH_VOICE(a_2, "NIGE3_CXAA", "DINAPOLI", sub_b6f9(0), 0);
                a_0._f4 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(3, 7);
                a_0._f5 = 0;
                a_0._f6 = GAMEPLAY::GET_GAME_TIMER();
                a_0._f7 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(100, 250);
                a_0 = 2;
            }
            break;
        case 2:
            if ((GAMEPLAY::GET_GAME_TIMER() - a_0._f6) > a_0._f7) {
                a_0._f8 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(-200, -120);
                a_0._f9 = 0.5 * __678_$BBDA792448DB5A89(GAMEPLAY::GET_RANDOM_INT_IN_RANGE(-2, 3));
                ENTITY::APPLY_FORCE_TO_ENTITY(a_1, 1, 0.0, 0.0, (float)a_0._f8, a_0._f9, -1.5, 0.0, 0, 1, 1, 0, 1, 1);
                a_0._f5 += 1;
                if (a_0._f5 < a_0._f4) {
                    a_0._f6 = GAMEPLAY::GET_GAME_TIMER();
                    a_0._f7 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(150, 280);
                } else { 
                    a_0._f2 = GAMEPLAY::GET_GAME_TIMER();
                    a_0._f3 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(6000, 12000);
                    a_0 = 1;
                }
            }
            break;
        }
    }
}

auto sub_b6f9(auto a_0) {
    switch (a_0) {
    case 0:
        return "SPEECH_PARAMS_STANDARD";
    case 1:
        return "SPEECH_PARAMS_ALLOW_REPEAT";
    case 2:
        return "SPEECH_PARAMS_BEAT";
    case 3:
        return "SPEECH_PARAMS_FORCE";
    case 4:
        return "SPEECH_PARAMS_FORCE_FRONTEND";
    case 5:
        return "SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND";
    case 6:
        return "SPEECH_PARAMS_FORCE_NORMAL";
    case 7:
        return "SPEECH_PARAMS_FORCE_NORMAL_CLEAR";
    case 8:
        return "SPEECH_PARAMS_FORCE_NORMAL_CRITICAL";
    case 9:
        return "SPEECH_PARAMS_FORCE_SHOUTED";
    case 10:
        return "SPEECH_PARAMS_FORCE_SHOUTED_CLEAR";
    case 11:
        return "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL";
    case 12:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY";
    case 13:
        return "SPEECH_PARAMS_MEGAPHONE";
    case 14:
        return "SPEECH_PARAMS_HELI";
    case 15:
        return "SPEECH_PARAMS_FORCE_MEGAPHONE";
    case 16:
        return "SPEECH_PARAMS_FORCE_HELI";
    case 17:
        return "SPEECH_PARAMS_INTERRUPT";
    case 18:
        return "SPEECH_PARAMS_INTERRUPT_SHOUTED";
    case 19:
        return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR";
    case 20:
        return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL";
    case 21:
        return "SPEECH_PARAMS_INTERRUPT_NO_FORCE";
    case 22:
        return "SPEECH_PARAMS_INTERRUPT_FRONTEND";
    case 23:
        return "SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND";
    case 24:
        return "SPEECH_PARAMS_ADD_BLIP";
    case 25:
        return "SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT";
    case 26:
        return "SPEECH_PARAMS_ADD_BLIP_FORCE";
    case 27:
        return "SPEECH_PARAMS_ADD_BLIP_SHOUTED";
    case 28:
        return "SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE";
    case 29:
        return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT";
    case 30:
        return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE";
    case 31:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED";
    case 32:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR";
    case 33:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL";
    case 34:
        return "SPEECH_PARAMS_SHOUTED";
    case 35:
        return "SPEECH_PARAMS_SHOUTED_CLEAR";
    case 36:
        return "SPEECH_PARAMS_SHOUTED_CRITICAL";
    }
    v_3 = 0;
    return v_3;
}

auto sub_b8ee(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    if ((((sub_8e72(PLAYER::PLAYER_PED_ID()) && sub_8e72(a_0._f1C[0/*1*/])) && (!sub_93f0())) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f3C) > a_8)) && (sub_baa2(PLAYER::PLAYER_PED_ID(), a_1, 1) < a_9)) {
        asm .vardef<F> 12, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":16}]}]"
        sub_ba07(&v_C, a_6, a_0._f1C[0/*1*/], a_7, 0, 1);
        sub_b976(&v_C, a_4, a_5, 7, 0, 0);
        a_0._f3C = GAMEPLAY::GET_GAME_TIMER();
        return 1;
    }
    return 0;
}

void sub_b976(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_b9b1(a_0, 145, a_1, a_4, a_5, 0);
    if (a_3 > 7) {
        if (a_3 < 12) {
            a_3 = 7;
        }
    }
    GAMEPLAY::SET_BIT(&g_38F2, 0);
    g_3D63 = a_3;
    g_3D56/*"24"*/ = a_2;
}

void sub_b9b1(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B3E/*{165}*/ = a_0;
    g_63F = a_1;
    g_3DA6/*"24"*/ = a_2;
    g_413D = a_5;
    if (a_3 == 0) {
        g_413B = 1;
        g_4139 = 0;
    } else { 
        g_413B = 0;
        g_4139 = 1;
    }
    if (a_4 == 0) {
        g_413C = 1;
        g_413A = 0;
    } else { 
        g_413C = 0;
        g_413A = 1;
    }
}

void sub_ba07(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!is_in_transition) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

auto sub_baa2(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else { 
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 0);
    }
    return GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_7, a_1, a_4);
}

auto sub_badb(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    if (!(a_A == 3)) {
        if (sub_abc9(2)) {
            if (!sub_93f0()) {
                if (((sub_8e72(PLAYER::PLAYER_PED_ID()) && sub_8e72(a_0._f1C[0/*1*/])) && sub_8e72(a_0._f1C[1/*1*/])) && (sub_baa2(PLAYER::PLAYER_PED_ID(), a_1, 1) < 20.0)) {
                    sub_11f55("start conversation");
                    asm .vardef<F> 13, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":16}]}]"
                    if (a_A == 0) {
                        sub_ba07(&v_D, a_6, a_0._f1C[0/*1*/], a_7, 0, 1);
                        sub_ba07(&v_D, a_8, a_0._f1C[1/*1*/], a_9, 0, 1);
                        sub_b976(&v_D, a_4, a_5, 7, 0, 0);
                        a_A = 2;
                    } else if (a_A == 2) {
                        sub_11f55("conversation ended");
                        a_A = 3;
                        return 1;
                    }
                }
            } else if (((sub_bc33(a_5) && (!(a_A == 1))) && sub_8e72(PLAYER::PLAYER_PED_ID())) && (sub_baa2(PLAYER::PLAYER_PED_ID(), a_1, 1) >= 20.0)) {
                sub_11f55("pause conversation");
                sub_bc26(1);
                a_A = 1;
            }
            if ((sub_baa2(PLAYER::PLAYER_PED_ID(), a_1, 1) < 20.0) && (a_A == 1)) {
                sub_11f55("unpause conversation");
                sub_bc26(0);
                a_A = 2;
            }
        }
    }
    return 0;
}

void sub_bc26(auto a_0) {
    g_4153 = a_0;
}

auto sub_bc33(auto a_0) {
    v_3/*{6}*/ = sub_bc53();
    if (GAMEPLAY::ARE_STRINGS_EQUAL(&v_3, a_0)) {
        return 1;
    }
    return 0;
}

auto<6> sub_bc53() {
    v_2/*"24"*/ = "NULL";
    if (g_3D60 == 4) {
        return g_3BE3;
    } else { 
        return v_2;
    }
}

void sub_bc77(auto a_0, auto a_1, auto a_2) {
    if (sub_8e72(a_0)) {
        switch (a_1._f3) {
        case 1:
            if (sub_c008(a_1)) {
                if (STREAMING::HAS_ANIM_DICT_LOADED(a_1)) {
                    AI::CLEAR_PED_TASKS_IMMEDIATELY(a_0);
                    if (a_2 != 21) {
                        if (sub_5ff3(a_1._f5, 0.0, 0.0, 0.0, 0)) {
                            AI::TASK_PLAY_ANIM(a_0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
                        } else { 
                            AI::OPEN_SEQUENCE_TASK(&v_5);
                            if (sub_bfef(a_1)) {
                                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f2, a_1._f5, a_1._f8, 1000.0, -8.0, -1, 262152, 0, 2, 0);
                            } else { 
                                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f1, a_1._f5, a_1._f8, 1000.0, -8.0, -1, 262152, 0, 2, 0);
                            }
                            AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
                            AI::CLOSE_SEQUENCE_TASK(v_5);
                            AI::TASK_PERFORM_SEQUENCE(a_0, v_5);
                            AI::CLEAR_SEQUENCE_TASK(&v_5);
                        }
                    } else { 
                        AI::TASK_PLAY_ANIM_ADVANCED(a_0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 3);
                    }
                    a_1._f3 = 2;
                } else { 
                    a_1._f3 = 0;
                }
            } else { 
                a_1._f3 = 0;
            }
            break;
        case 2:
            if ((!sub_bfef(a_1)) || (!ENTITY::IS_ENTITY_PLAYING_ANIM(a_0, a_1, a_1._f2, 3))) {
                if (sub_bfcf(a_2) && (!PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 25.0))) {
                    AI::TASK_TURN_PED_TO_FACE_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), 0);
                    a_1._f3 = 5;
                } else if ((sub_bfef(a_1) && (a_1._f4 == 0)) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 20.0)) {
                    a_1._f3 = 3;
                }
            }
            break;
        case 3:
            AI::OPEN_SEQUENCE_TASK(&v_6);
            if (sub_5ff3(a_1._f5, 0.0, 0.0, 0.0, 0)) {
                AI::TASK_PLAY_ANIM(0, a_1, a_1._f2, 4.0, -4.0, -1, 262144, 0, 0, 0, 0);
                AI::TASK_PLAY_ANIM(0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
            } else { 
                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f2, a_1._f5, a_1._f8, 4.0, -4.0, -1, 262152, 0, 2, 0);
                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
            }
            AI::CLOSE_SEQUENCE_TASK(v_6);
            AI::TASK_PERFORM_SEQUENCE(a_0, v_6);
            AI::CLEAR_SEQUENCE_TASK(&v_6);
            a_1._f4 = 1;
            if (sub_bfcf(a_2)) {
                a_1._f3 = 2;
            } else { 
                a_1._f3 = 0;
            }
            break;
        case 5:
            if ((!sub_bfcf(a_2)) || PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 10.0)) {
                if (sub_5ff3(a_1._f5, 0.0, 0.0, 0.0, 0)) {
                    AI::TASK_PLAY_ANIM(a_0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
                } else { 
                    AI::TASK_PLAY_ANIM_ADVANCED(a_0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
                }
                a_1._f3 = 2;
            }
            break;
        }
    }
}

auto sub_bfcf(auto a_0) {
    if ((a_0 == 17) || (a_0 == 20)) {
        return 1;
    }
    return 0;
}

auto sub_bfef(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0._f2)) {
        return 0;
    }
    return 1;
}

auto sub_c008(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0) || GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0._f1)) {
        return 0;
    }
    return 1;
}

auto sub_c02d() {
    return ${u_m_m_aldinapoli};
}

auto sub_c03a() {
    return "Al_DiNapoli";
}

void sub_c046(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_1)) {
            if (g_8B74 == 17) {
                if (a_0 != -1) {
                    sub_c256(a_0);
                }
            } else if (sub_c24a()) {
                if (a_0 != -1) {
                    sub_c256(a_0);
                }
            } else if (a_0 == -1) {
                if (sub_baa2(PLAYER::PLAYER_PED_ID(), a_2, 1) <= 100.0) {
                    sub_c1ac(a_0, 1);
                }
            } else { 
                switch (sub_c173(a_0)) {
                case 1:
                    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_1, "JOSH_1_INT_CONCAT")) {
                        CUTSCENE::_C23DE0E91C30B58C(a_1, 14, 8);
                    } else { 
                        CUTSCENE::REQUEST_CUTSCENE(a_1, 8);
                    }
                    STREAMING::_F8155A7F03DDFC8E(2);
                    sub_c137(a_0, 1);
                    break;
                case 2:
                    CUTSCENE::STOP_CUTSCENE(0);
                    CUTSCENE::REMOVE_CUTSCENE();
                    STREAMING::_F8155A7F03DDFC8E(0);
                    sub_c137(a_0, 0);
                    break;
                }
                if (sub_baa2(PLAYER::PLAYER_PED_ID(), a_2, 1) > 120.0) {
                    sub_c256(a_0);
                }
            }
        }
    }
}

void sub_c137(auto a_0, auto a_1) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1) {
        if (g_10EC1 == a_0) {
            g_10EC2 = a_0;
        } else { }
    } else if (g_10EC2 == a_0) {
        g_10EC2 = -1;
    } else { }
}

auto sub_c173(auto a_0) {
    if (g_10EC1 == a_0) {
        if (g_10EC2 == -1) {
            if (g_10EC0 < GAMEPLAY::GET_FRAME_COUNT()) {
                return 1;
            }
        }
    } else if (g_10EC2 == a_0) {
        return 2;
    }
    return 0;
}

void sub_c1ac(auto a_0, auto a_1) {
    if (g_10EBE < 5) {
        g_10EB3[g_10EBE/*2*/] = 0;
        g_10EB3[g_10EBE/*2*/]._f1 = a_1;
        v_4 = 0;
        while (!v_4) {
            v_4 = 1;
            for (v_5 = 0; v_5 < g_10EBE; v_5 += 1) {
                if (g_10EB3[v_5/*2*/] == g_10EB3[g_10EBE/*2*/]) {
                    g_10EB3[g_10EBE/*2*/] += 1;
                    v_4 = 0;
                }
            }
        }
        a_0 = g_10EB3[g_10EBE/*2*/];
        g_10EBE += 1;
        g_10EBF = 1;
    } else { 
        a_0 = -1;
    }
}

auto sub_c24a() {
    return g_15AAC;
}

void sub_c256(auto a_0) {
    CUTSCENE::STOP_CUTSCENE(0);
    CUTSCENE::REMOVE_CUTSCENE();
    sub_c26d(a_0);
}

void sub_c26d(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (g_10EC2 == a_0) {
        sub_c137(a_0, 0);
    }
    if (g_10EC1 == a_0) {
        g_10EC1 = -1;
    }
    v_3 = 0;
    v_4 = 0;
    while ((!v_3) && (v_4 < g_10EBE)) {
        if (g_10EB3[v_4/*2*/] == a_0) {
            v_3 = 1;
        } else { 
            v_4 += 1;
        }
    }
    if (!v_3) {
        return ;
    }
    for (v_5 = v_4; v_5 <= (g_10EBE - 2); v_5 += 1) {
        g_10EB3[v_5/*2*/] = g_10EB3[v_5 + 1/*2*/];
        g_10EB3[v_5/*2*/]._f1 = g_10EB3[v_5 + 1/*2*/]._f1;
    }
    g_10EB3[g_10EBE - 1/*2*/] = -1;
    g_10EB3[g_10EBE - 1/*2*/]._f1 = 3;
    g_10EBE -= 1;
    g_10EBF = 1;
    g_10EC0 = GAMEPLAY::GET_FRAME_COUNT();
    a_0 = -1;
}

void sub_c355(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_9c0f();
    }
    if (a_0 == -1) {
        return ;
    }
    g_186DF[a_0/*10*/]._f1 = 1;
}

auto sub_c37d(auto a_0, auto a_1) {
    if (is_in_transition) {
        sub_11f55("IS_RC_FINE_AND_IN_RANGE(): The game is running Multiplayer [TERMINATING]");
        return 0;
    }
    sub_741e(a_0, &v_4);
    if ((sub_d95e(a_0) || sub_d8ec(a_0)) || (g_10FBA == 1)) {
        return 1;
    }
    if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
        sub_11f55("IS_RC_FINE_AND_IN_RANGE(): Player out of range [TERMINATING]");
        return 0;
    }
    if (sub_d7d2(a_0)) {
        if (a_0 == 19) {
            sub_d735(a_0._f1C[0/*1*/]);
        }
        sub_11f55("IS_RC_FINE_AND_IN_RANGE(): Script denied by RC Controller [TERMINATING]");
        return 0;
    }
    if (a_0._f19 == 1) {
        if (!sub_cb8c(a_0, 1, 0)) {
            return 0;
        }
    } else if (a_0._f10 == 0) {
        if (!sub_cb8c(a_0, 0, 0)) {
            return 0;
        }
    }
    if ((((((a_0 == 16) || (a_0 == 9)) || (a_0 == 18)) || (a_0 == 22)) || (a_0 == 32)) || (a_0 == 51)) {
        if (!sub_c99f(a_0, 1, 1)) {
            if (a_0 == 16) {
                sub_c91f(a_0);
            } else { 
                sub_c5f0(a_0);
            }
            return 0;
        }
    } else if (a_0 == 24) {
        if (!sub_c99f(a_0, 0, 1)) {
            sub_c5f0(a_0);
            return 0;
        }
    } else if (a_0 == 6) {
        if (!sub_c99f(a_0, 0, 1)) {
            return 0;
        }
    } else if (a_0._f1A == 1) {
        if (!sub_c99f(a_0, 1, 0)) {
            sub_c5f0(a_0);
            return 0;
        }
    } else if ((a_0._f10 == 2) || (a_0._f10 == 1)) {
        if (!sub_c99f(a_0, 0, 0)) {
            sub_c5f0(a_0);
            return 0;
        }
    }
    if ((a_0._f10 == 2) || (a_0._f10 == 1)) {
        if (sub_8e72(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_AT_COORD(a_0._f23[0/*1*/], v_4._f6, 8.0, 8.0, 8.0, 0, 1, 0)) {
                return 0;
            }
        }
    }
    if (a_0 == 10) {
        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, a_0._f11[0/*3*/], 8.0)) {
            sub_11f55("IS_RC_FINE_AND_IN_RANGE(): Explosion near mission trigger [TERMINATING]");
            return 0;
        }
    }
    if (v_4._f4 != 17) {
        if (!GAMEPLAY::IS_BIT_SET(v_4._f1A, sub_6ef2())) {
            sub_11f55("IS_RC_FINE_AND_IN_RANGE(): No longer a valid player character to launch mission");
            return 0;
        }
    }
    if (sub_c008(&a_0._f30) && a_1) {
        sub_bc77(a_0._f1C[0/*1*/], &a_0._f30, a_0);
    }
    return 1;
}

void sub_c5f0(auto a_0) {
    if (a_0 == 52) {
        sub_c8f4(&a_0._f29[1/*1*/]);
        sub_c8f4(&a_0._f29[2/*1*/]);
    }
    if (sub_8e72(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (sub_8e52(a_0._f1C[v_3/*1*/])) {
                if (!PED::IS_PED_IN_ANY_VEHICLE(a_0._f1C[v_3/*1*/], 0)) {
                    ENTITY::SET_ENTITY_COLLISION(a_0._f1C[v_3/*1*/], 1, 0);
                    ENTITY::FREEZE_ENTITY_POSITION(a_0._f1C[0/*1*/], 0);
                }
                PED::SET_PED_KEEP_TASK(a_0._f1C[v_3/*1*/], 1);
                if (a_0 == 34) {
                    if (sub_8e72(a_0._f29[0/*1*/])) {
                        ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 1, 0);
                        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 0);
                    }
                }
                switch (a_0) {
                case 19:
                    sub_d735(a_0._f1C[v_3/*1*/]);
                    break;
                case 8:
                    STREAMING::REQUEST_ANIM_DICT("rcmcollect_paperleadinout@");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmcollect_paperleadinout@")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "rcmcollect_paperleadinout@", "meditate_getup", 8.0, -8.0, -1, 8, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 0:
                case 1:
                    STREAMING::REQUEST_ANIM_DICT("rcmabigail");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmabigail")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "rcmabigail", "breakout_base", 8.0, -8.0, -1, 8, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 32:
                    STREAMING::REQUEST_ANIM_DICT("rcmminute1");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmminute1")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    if (v_3 == 0) {
                        AI::TASK_PLAY_ANIM(0, "rcmminute1", "base_to_idle_joe", 8.0, -8.0, -1, 32776, 0, 0, 0, 0);
                    } else { 
                        AI::TASK_PLAY_ANIM(0, "rcmminute1", "base_to_idle_josef", 8.0, -8.0, -1, 32776, 0, 0, 0, 0);
                    }
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 24:
                    STREAMING::REQUEST_ANIM_DICT("special_ped@hao@base");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("special_ped@hao@base")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "special_ped@hao@base", "hao_exit", 8.0, -8.0, -1, 520, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                default:
                    AI::CLEAR_PED_SECONDARY_TASK(a_0._f1C[v_3/*1*/]);
                    AI::TASK_SMART_FLEE_PED(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    break;
                }
            }
        }
    }
}

void sub_c8f4(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        OBJECT::DELETE_OBJECT(a_0);
    }
}

void sub_c91f(auto a_0) {
    if (sub_8e72(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (sub_8e52(a_0._f1C[v_3/*1*/])) {
                PED::SET_PED_COMBAT_ATTRIBUTES(a_0._f1C[v_3/*1*/], 1, 0);
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[v_3/*1*/], 0);
                PED::SET_PED_KEEP_TASK(a_0._f1C[v_3/*1*/], 1);
                AI::TASK_COMBAT_PED(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 0, 16);
                ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&a_0._f1C[v_3/*1*/]);
            }
        }
    }
}

auto sub_c99f(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        v_6 = a_0._f23 - 1;
    } else { 
        v_6 = 0;
    }
    if (sub_8e52(PLAYER::PLAYER_PED_ID())) {
        for (v_5 = 0; v_5 <= v_6; v_5 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f23[v_5/*1*/])) {
                if (ENTITY::IS_ENTITY_DEAD(a_0._f23[v_5/*1*/])) {
                    sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is dead [TERMINATING]");
                    return 0;
                }
                if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0._f23[v_5/*1*/], 0)) {
                    sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is not driveable [TERMINATING]");
                    return 0;
                }
                if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(a_0._f23[v_5/*1*/], PLAYER::PLAYER_PED_ID(), 0)) {
                    sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has been damaged by player [TERMINATING]");
                    return 0;
                }
                if (ENTITY::GET_ENTITY_HEALTH(a_0._f23[v_5/*1*/]) < 850) {
                    sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle health is less than 850 [TERMINATING]");
                    return 0;
                }
                if (a_2) {
                    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                        if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(a_0._f23[v_5/*1*/], PLAYER::PLAYER_PED_ID()) && (ENTITY::GET_ENTITY_SPEED(PLAYER::PLAYER_PED_ID()) > 5.0)) {
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has collided with the player vehicle at speed [TERMINATING]");
                            return 0;
                        }
                        v_7 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                        if (sub_ab9f(v_7)) {
                            if ((ENTITY::GET_ENTITY_MODEL(v_7) == ${towtruck}) || (ENTITY::GET_ENTITY_MODEL(v_7) == ${towtruck2})) {
                                if (sub_ab9f(a_0._f23[v_5/*1*/])) {
                                    if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(v_7, a_0._f23[v_5/*1*/])) {
                                        sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is being towed by player [TERMINATING]");
                                        return 0;
                                    }
                                }
                            }
                        }
                    } else { 
                        v_8 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                        if (sub_ab9f(v_8)) {
                            if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(a_0._f23[v_5/*1*/], v_8) && (ENTITY::GET_ENTITY_SPEED(v_8) > 6.0)) {
                                sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has collided with the player's last known vehicle at speed (player bailed out?) [TERMINATING]");
                                return 0;
                            }
                        }
                        if (a_0 == 16) {
                            if (sub_cb5c(PLAYER::PLAYER_PED_ID(), a_0._f23[v_5/*1*/])) {
                                sub_11f55("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Player attempting to jack Epsilon vehicle [TERMINATING]");
                                return 0;
                            }
                        }
                    }
                }
            }
        }
    }
    return 1;
}

auto sub_cb5c(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_1, 0)) {
            v_4 = PED::GET_VEHICLE_PED_IS_USING(a_0);
            if (v_4 == a_1) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_cb8c(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        v_6 = a_0._f1C - 1;
    } else { 
        v_6 = 0;
    }
    if (a_0 == 16) {
        a_2 = 1;
    }
    if (a_0 == 30) {
        a_2 = 1;
    }
    if (sub_8e52(PLAYER::PLAYER_PED_ID())) {
        for (v_5 = 0; v_5 <= v_6; v_5 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f1C[v_5/*1*/])) {
                if (!PED::IS_PED_INJURED(a_0._f1C[v_5/*1*/])) {
                    if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) {
                        if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[v_5/*1*/])) {
                            if (a_2 == 0) {
                                sub_c5f0(a_0);
                            } else { 
                                sub_c91f(a_0);
                            }
                            if (sub_93f0()) {
                                sub_9389();
                            }
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - Random character is being pushed by car [TERMINATING]");
                            return 0;
                        }
                    }
                    if ((ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(a_0._f1C[v_5/*1*/]) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(a_0._f1C[v_5/*1*/])) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(a_0._f1C[v_5/*1*/])) {
                        if (a_2 == 0) {
                            sub_c5f0(a_0);
                        } else { 
                            sub_c91f(a_0);
                        }
                        sub_11f55("STEP_5_COMMON_RCfineAndInRange - Random character has been damaged by something [TERMINATING]");
                        return 0;
                    }
                    if (PED::IS_PED_RAGDOLL(a_0._f1C[v_5/*1*/])) {
                        if (ENTITY::IS_ENTITY_AT_ENTITY(a_0._f1C[v_5/*1*/], PLAYER::PLAYER_PED_ID(), 3.0, 3.0, 3.0, 0, 1, 0)) {
                            if (a_2 == 0) {
                                sub_c5f0(a_0);
                            } else { 
                                sub_c91f(a_0);
                            }
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - Random character is in ragdoll [TERMINATING]");
                            return 0;
                        }
                    }
                    if (sub_d6eb(a_0)) {
                        if (!sub_97bd(a_0)) {
                            if (sub_d379(a_0._f1C[v_5/*1*/], 1, 0, 0, 0)) {
                                if (a_2 == 0) {
                                    sub_c5f0(a_0);
                                } else { 
                                    sub_c91f(a_0);
                                }
                                sub_11f55("STEP_5_COMMON_RCfineAndInRange - Player is shooting near the Random Character [TERMINATING]");
                                return 0;
                            }
                        }
                        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_5/*1*/], 1), 15.0)) {
                            if (a_2 == 0) {
                                sub_c5f0(a_0);
                            } else { 
                                sub_c91f(a_0);
                            }
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - There was an explosion near the Random Character [TERMINATING]");
                            return 0;
                        }
                        if (sub_ce7c(a_0._f1C[v_5/*1*/], 0x432a0000)) {
                            if (a_2 == 0) {
                                sub_c5f0(a_0);
                            } else { 
                                sub_c91f(a_0);
                            }
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - Random character is in combat [TERMINATING]");
                            return 0;
                        }
                    }
                    if (!sub_ce48(a_0)) {
                        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_5/*1*/], 1), 5.0)) {
                            if (a_2 == 0) {
                                sub_c5f0(a_0);
                            } else { 
                                sub_c91f(a_0);
                            }
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - There was an explosion near the Random Character [TERMINATING]");
                            return 0;
                        }
                        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) {
                            if (a_2 == 0) {
                                sub_c5f0(a_0);
                            } else { 
                                sub_c91f(a_0);
                            }
                            sub_11f55("STEP_5_COMMON_RCfineAndInRange - Player has a wanted level [TERMINATING]");
                            return 0;
                        }
                    }
                } else { 
                    sub_11f55("STEP_5_COMMON_RCfineAndInRange - Random character injured / dead [TERMINATING]");
                    if (a_0 == 34) {
                        if (sub_8e72(a_0._f29[0/*1*/])) {
                            ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 1, 0);
                            ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 0);
                        }
                    }
                    return 0;
                }
            }
        }
    }
    return 1;
}

auto sub_ce48(auto a_0) {
    if ((((a_0 == 2) || (a_0 == 3)) || (a_0 == 52)) || (a_0 == 53)) {
        return 1;
    }
    return 0;
}

auto sub_ce7c(auto a_0, auto a_1) {
    if (sub_8e72(PLAYER::PLAYER_PED_ID()) && sub_8e72(a_0)) {
        if (sub_d351(a_0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), a_0)) {
            if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
                v_4 = 40.0;
            } else { 
                v_4 = 3.0;
            }
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, v_4, v_4, v_4, 0, 1, 0)) {
                if (sub_cef2(a_0, a_1)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_cef2(auto a_0, auto a_1) {
    return sub_cf0a(a_0, PLAYER::PLAYER_PED_ID(), a_1, 1, 250, 7);
}

auto sub_cf0a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_C = sub_d312(a_0, a_1);
    if ((!sub_8e72(a_0)) || (!sub_8e72(a_1))) {
        if (v_C != -1) {
            sub_d2f7(&l_31[v_C/*4*/]);
        }
        return 0;
    }
    if (!sub_d206(a_0, a_1, a_2, a_3)) {
        return 0;
    }
    if (v_C == -1) {
        v_C = sub_d1bc();
        if (v_C == -1) {
            return 0;
        }
        l_31[v_C/*4*/]._f1 = a_0;
        l_31[v_C/*4*/]._f2 = a_1;
    }
    v_9/*{3}*/ = PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    v_8 = sub_cfcb(&l_31[v_C/*4*/], v_9, a_1, &l_31[v_C/*4*/]._f3, a_0, a_5);
    return v_8 || ((GAMEPLAY::GET_GAME_TIMER() - l_31[v_C/*4*/]._f3) < a_4);
}

auto sub_cfcb(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_11 = 0;
    if (!sub_8e72(a_4)) {
        a_0 = 0;
        return 0;
    }
    if (a_0 == 0) {
        v_B/*{3}*/ = sub_d0f7(a_4, a_7);
        a_0 = WORLDPROBE::_7EE9F5D83DD4F90E(a_1, v_B + ((v_B - a_1) * ((vector)(0.1))), 511, a_6, 7);
        return 0;
    }
    v_12 = WORLDPROBE::_GET_RAYCAST_RESULT(a_0, &v_A, &v_B, &v_E, &v_11);
    if (v_12 == 0) {
        a_0 = 0;
        return 0;
    } else if (v_12 == 1) {
        return 0;
    }
    a_0 = 0;
    if (ENTITY::IS_ENTITY_A_PED(v_11)) {
        sub_8e72(v_11);
        if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(v_11) == a_4) {
            if (l_5A) {
                GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
            }
            a_5 = GAMEPLAY::GET_GAME_TIMER();
            return 1;
        }
        return 0;
    }
    if (ENTITY::IS_ENTITY_A_VEHICLE(v_11)) {
        sub_8e72(v_11);
        if (PED::IS_PED_IN_ANY_VEHICLE(a_4, 0)) {
            if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_11) == PED::GET_VEHICLE_PED_IS_IN(a_4, 0)) {
                if (l_5A) {
                    GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
                }
                a_5 = GAMEPLAY::GET_GAME_TIMER();
                return 1;
            }
        }
        return 0;
    }
    return 0;
}

auto<3> sub_d0f7(auto a_0, auto a_1) {
    if (a_1 == 7) {
        v_4 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 7);
        a_1 = v_4;
    }
    if (a_1 == 0) {
        return ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else if (a_1 == 1) {
        return PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    } else if (a_1 == 2) {
        return PED::GET_PED_BONE_COORDS(a_0, 39317, 0.0, 0.0, 0.0);
    } else if (a_1 == 3) {
        return PED::GET_PED_BONE_COORDS(a_0, 18905, 0.0, 0.0, 0.0);
    } else if (a_1 == 4) {
        return PED::GET_PED_BONE_COORDS(a_0, 57005, 0.0, 0.0, 0.0);
    } else if (a_1 == 5) {
        return PED::GET_PED_BONE_COORDS(a_0, 63931, 0.0, 0.0, 0.0);
    } else if (a_1 == 6) {
        return PED::GET_PED_BONE_COORDS(a_0, 36864, 0.0, 0.0, 0.0);
    }
    return ENTITY::GET_ENTITY_COORDS(a_0, 1);
}

auto sub_d1bc() {
    for (v_2 = 0; v_2 < l_31; v_2 += 1) {
        if (((l_31[v_2/*4*/] == 0) && (l_31[v_2/*4*/]._f1 == 0)) && (l_31[v_2/*4*/]._f2 == 0)) {
            return v_2;
        }
    }
    return -1;
}

auto sub_d206(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = sub_d2b8(ENTITY::GET_ENTITY_COORDS(a_1, 1) - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_2 < 0.1) || (a_2 > 360.0)) {
        return 1;
    }
    if (a_3 == 0) {
        v_9/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_9/*{3}*/ = sub_d2b8(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_C = sub_d297(v_9, v_6);
    if (v_C <= SYSTEM::COS(a_2 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_d297(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return ((a_0 * a_3) + (a_0._f1 * a_3._f1)) + (a_0._f2 * a_3._f2);
}

auto<3> sub_d2b8(auto a_0, auto a_1, auto a_2) {
    v_5 = SYSTEM::VMAG(a_0);
    if (v_5 != 0.0) {
        v_6 = 1.0 / v_5;
        a_0 *= (vector)v_6;
    } else { 
        a_0 = 0.0;
        a_0._f1 = 0.0;
        a_0._f2 = 0.0;
    }
    return a_0;
}

void sub_d2f7(auto a_0) {
    a_0 = 0;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0;
}

auto sub_d312(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < l_31; v_4 += 1) {
        if ((l_31[v_4/*4*/]._f1 == a_0) && (l_31[v_4/*4*/]._f2 == a_1)) {
            return v_4;
        }
    }
    return -1;
}

auto sub_d351(auto a_0) {
    if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), a_0) && WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
        return 1;
    }
    return 0;
}

auto sub_d379(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = 8.0;
    v_8 = 15.0;
    if (a_1 == 0) {
        v_7 = 1.86;
        v_8 = 1.86;
    }
    if (a_2) {
        v_7 = 2.0;
    }
    if (sub_8e72(PLAYER::PLAYER_PED_ID()) && sub_8e72(a_0)) {
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_9, 1);
        if (v_9 == ${weapon_petrolcan}) {
            v_7 = 3.0;
            v_8 = 3.0;
        }
        if (!a_2) {
            if (sub_d6a3(a_0, a_1, v_7, v_8)) {
                return 1;
            }
            if (sub_d474(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        } else { 
            if (WEAPON::IS_PED_CURRENT_WEAPON_SILENCED(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
                    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), v_7, 1)) {
                        return 1;
                    }
                }
            } else { 
                if (a_1) {
                    v_7 = 1.86;
                    v_8 = 1.86;
                }
                if (sub_d6a3(a_0, a_1, v_7, v_8)) {
                    return 1;
                }
            }
            if (sub_d474(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_d474(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    v_9/*{3}*/ = v_6;
    v_6 -= a_1;
    v_6._f1 -= a_1;
    v_6._f2 -= a_1;
    v_9 += a_1;
    v_9._f1 += a_1;
    v_9._f2 += a_1;
    if (a_2) {
        if (((GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_grenade}, a_1, 1) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_molotov}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_smokegrenade}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_stickybomb}, 5.0, 1)) {
            if (a_3) {
                if (sub_d580(a_0, a_1)) {
                    return 1;
                } else { 
                    return 0;
                }
            }
            return 1;
        }
    } else { 
        if (a_3) {
            if (sub_d580(a_0, a_1)) {
                return 1;
            } else { 
                return 0;
            }
        }
        if (GAMEPLAY::IS_PROJECTILE_IN_AREA(v_6, v_9, 1)) {
            return 1;
        }
    }
    return 0;
}

auto sub_d580(auto a_0, auto a_1) {
    if ((((GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_grenade}, a_1, &v_5, &v_4, 0) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_smokegrenade}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_bzgas}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_stickybomb}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_molotov}, a_1, &v_5, &v_4, 0)) {
        if (sub_d615(a_0, v_5, 90.0, 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_d615(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8/*{3}*/ = sub_d2b8(a_1 - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_4 < 0.1) || (a_4 > 360.0)) {
        return 1;
    }
    if (a_5 == 0) {
        v_B/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_B/*{3}*/ = sub_d2b8(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_E = sub_d297(v_B, v_8);
    if (v_E <= SYSTEM::COS(a_4 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_d6a3(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1) {
        if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, a_3, a_3, a_3, 0, 1, 0)) {
                return 1;
            }
        }
    }
    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), a_2, 1)) {
        return 1;
    }
    return 0;
}

auto sub_d6eb(auto a_0) {
    if ((((((a_0 == 2) || (a_0 == 3)) || (a_0 == 34)) || (a_0 == 11)) || (a_0 == 52)) || (a_0 == 53)) {
        return 0;
    }
    return 1;
}

void sub_d735(auto a_0) {
    if (sub_8e72(PLAYER::PLAYER_PED_ID()) && sub_8e72(a_0)) {
        STREAMING::REQUEST_ANIM_DICT("rcmextreme3");
        while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmextreme3")) {
            SYSTEM::WAIT(0);
        }
        AI::OPEN_SEQUENCE_TASK(&v_3);
        AI::TASK_PLAY_ANIM(0, "rcmextreme3", "jump_fall", 1000.0, -8.0, -1, 8, 0, 0, 0, 0);
        AI::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(0, 1);
        AI::TASK_PARACHUTE_TO_TARGET(0, 64.6, 737.8, 44.2);
        AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(v_3);
        AI::TASK_PERFORM_SEQUENCE(a_0, v_3);
        AI::CLEAR_SEQUENCE_TASK(&v_3);
    }
}

auto sub_d7d2(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_9c0f();
    }
    if (a_0 == -1) {
        return 1;
    }
    if (sub_d95e(a_0)) {
        return 0;
    }
    if (!sub_99fb(4)) {
        if (sub_d8ec(a_0)) {
        } else { 
            return 1;
        }
    }
    if (sub_d8c6() && (!sub_d8a9())) {
        return 1;
    }
    if (!sub_d86a(a_0)) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) != 0) {
                return 1;
            }
        }
    }
    if (!GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 2)) {
        return 1;
    }
    return 0;
}

auto sub_d86a(auto a_0) {
    if (((((a_0 == 5) || (a_0 == 6)) || (a_0 == 41)) || (a_0 == 60)) || (a_0 == 61)) {
        return 1;
    }
    return 0;
}

auto sub_d8a9() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        if (GAMEPLAY::_D10282B6E3751BA0() == 1.0) {
            return 1;
        }
    }
    return 0;
}

auto sub_d8c6() {
    if (g_15929 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_14133[g_15929/*34*/]._fF, 20);
    }
    return 0;
}

auto sub_d8ec(auto a_0) {
    if ((sub_d920() && (g_163E2._fB == 6)) && (a_0 == sub_9c20(&g_163E2._f3, 0))) {
        return 1;
    }
    return 0;
}

auto sub_d920() {
    if ((((g_163E2 == 13) || (g_163E2 == 10)) || (g_163E2 == 11)) || (g_163E2 == 12)) {
        return 0;
    }
    return 1;
}

auto sub_d95e(auto a_0) {
    if (sub_6fa6(0)) {
        if (g_10FBB._f1 == 7) {
            if (g_10FBB == a_0) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_d986(auto a_0, auto a_1) {
    switch (a_0) {
    case 37:
        if (!sub_112b5(a_0)) {
            return 0;
        }
        break;
    case 38:
        if (!sub_f69b(a_0)) {
            return 0;
        }
        break;
    case 39:
        if (!sub_f0b8(a_0)) {
            return 0;
        }
        break;
    case 40:
        if (!sub_ed8a(a_0)) {
            return 0;
        }
        break;
    case 41:
        if (!sub_e6b2(a_0, a_1)) {
            return 0;
        }
        break;
    case 42:
        if (!sub_df9a(a_0)) {
            return 0;
        }
        break;
    case 43:
        if (!sub_da42(a_0)) {
            return 0;
        }
        break;
    }
    sub_11f55("Created initial scene");
    return 1;
}

auto sub_da42(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":3}]"
    v_3[0/*1*/] = l_5C;
    v_3[1/*1*/] = l_5E;
    v_3[2/*1*/] = l_5F;
    switch (l_5B) {
    case 0:
        a_0._f10 = 0;
        a_0._f1B = 0;
        a_0._f19 = 1;
        a_0._f1A = 1;
        a_0._f9/*"24"*/ = "NMT_3_RCM";
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_7/*1*/]);
        }
        sub_df5e(&a_0._f30, "rcmnigel3", "base", 0);
        l_5B = 1;
        break;
    case 1:
        if ((!sub_df2d(&v_3)) || (!sub_df03(&a_0._f30))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        v_8 = 1;
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f1C[0/*1*/])) {
            if (!sub_ddd4(&a_0._f1C[0/*1*/], 64, 44.6, -1289.8599853515625, 29.16, 22.9, "RC NIGEL", 1)) {
                v_8 = 0;
            }
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            sub_dcfd(&a_0._f23[0/*1*/], l_5F, -39.96879959106445, -1285.9615478515625, 28.3505, 181.02);
            if (sub_8e72(a_0._f23[0/*1*/])) {
                VEHICLE::SET_VEHICLE_COLOURS(a_0._f23[0/*1*/], 65, 0);
                VEHICLE::_SET_VEHICLE_DOOR_BREAKABLE(a_0._f23[0/*1*/], 5, 0);
                VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(a_0._f23[0/*1*/], "28BNT310");
                VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(a_0._f23[0/*1*/], 0);
                VEHICLE::SET_VEHICLE_DOORS_LOCKED(a_0._f23[0/*1*/], 10);
                VEHICLE::_0CDDA42F9E360CA6(a_0._f23[0/*1*/], 0);
                VEHICLE::_51BB2D88D31A914B(a_0._f23[0/*1*/], 0);
                VEHICLE::_192547247864DFDD(a_0._f23[0/*1*/], 0);
            }
        }
        if (!sub_dc29(&a_0._f1C[1/*1*/], &a_0._f23[0/*1*/])) {
            v_8 = 0;
        }
        if (v_8) {
            l_5B = 3;
        }
        break;
    case 3:
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_7/*1*/]);
        }
        return 1;
        break;
    }
    return 0;
}

auto sub_dc29(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_1) && STREAMING::HAS_MODEL_LOADED(l_5E)) {
        a_0 = PED::CREATE_PED(26, ${u_m_m_aldinapoli}, -59.709400177, -1330.12890625, 32.1963, 0, 1, 1);
        PED::SET_PED_NAME_DEBUG(a_0, "NI3_LNCH_CELEB");
        PED::SET_PED_COMPONENT_VARIATION(a_0, 4, 0, 0, 0);
        PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 1);
        v_4/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_1, -0.2, 1.8, -1.0);
        v_A = -90.0 + ENTITY::GET_ENTITY_HEADING(a_1);
        v_7/*{3}*/ = {0.0, 0.0, v_A };
        ENTITY::SET_ENTITY_COORDS_NO_OFFSET(a_0, v_4, 0, 0, 1);
        ENTITY::SET_ENTITY_ROTATION(a_0, v_7, 2, 1);
        ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0, a_1, 0, 0.2, 1.8, 0.0, 0.0, 0.0, 90.0, 0, 0, 0, 0, 2, 1);
        ENTITY::SET_ENTITY_VISIBLE(a_0, 0, 0);
        return 1;
    }
    return 0;
}

void sub_dcfd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_dd38(a_0);
    a_0 = VEHICLE::CREATE_VEHICLE(a_1, a_2, a_5, 1, 1);
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(a_0);
        ENTITY::SET_ENTITY_HEALTH(a_0, 1000);
    }
}

void sub_dd38(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        if (sub_ab9f(a_0)) {
            if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(a_0, 1)) {
                if (sub_8e72(PLAYER::PLAYER_PED_ID())) {
                    if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                        ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                        return ;
                    }
                }
                VEHICLE::DELETE_VEHICLE(a_0);
            }
        } else { 
            if (sub_8e72(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                    ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                    return ;
                }
            }
            VEHICLE::DELETE_VEHICLE(a_0);
        }
    }
}

auto sub_ddd4(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (sub_de2f(a_0, a_1, a_2, a_5, 1)) {
        if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
            if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 1);
                PED::SET_PED_MONEY(a_0, 0);
                if (a_7 == 1) {
                    PED::SET_PED_CAN_BE_TARGETTED(a_0, 0);
                }
            }
            PED::SET_PED_NAME_DEBUG(a_0, a_6);
        }
        return 1;
    }
    return 0;
}

auto sub_de2f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (!sub_2f30(a_1)) {
        v_9 = sub_11fb4(a_1);
        STREAMING::REQUEST_MODEL(v_9);
        if (STREAMING::HAS_MODEL_LOADED(v_9)) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
                PED::DELETE_PED(a_0);
            }
            a_0 = PED::CREATE_PED(26, v_9, a_2, a_5, 0, 0);
            PED::SET_PED_DEFAULT_COMPONENT_VARIATION(a_0);
            if (v_9 == ${ig_lamardavis}) {
                if (PED::GET_PED_DRAWABLE_VARIATION(a_0, 3) == 0) {
                    PED::SET_PED_COMPONENT_VARIATION(a_0, 5, 2, 0, 0);
                }
            }
            sub_debd(a_0, a_1);
            if (a_6) {
                STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_9);
            }
            return 1;
        }
    }
    return 0;
}

auto sub_debd(auto a_0, auto a_1) {
    v_4 = 7;
    if (a_1 == 19) {
        v_4 = 3;
    } else if (a_1 == 14) {
        v_4 = 4;
    } else if (a_1 == 17) {
        v_4 = 5;
    } else { 
        v_4 = 7;
        return 0;
    }
    g_154E9[v_4 - 3/*1*/] = a_0;
    return 1;
}

auto sub_df03(auto a_0) {
    if (sub_c008(a_0)) {
        STREAMING::REQUEST_ANIM_DICT(a_0);
        if (STREAMING::HAS_ANIM_DICT_LOADED(a_0)) {
            return 1;
        }
    } else { }
    return 0;
}

auto sub_df2d(auto a_0) {
    for (v_3 = 0; v_3 <= (a_0 - 1); v_3 += 1) {
        if (!STREAMING::HAS_MODEL_LOADED(a_0[v_3/*1*/])) {
            return 0;
        }
    }
    return 1;
}

void sub_df5e(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_0 = a_1;
    a_0._f1 = a_2;
    a_0._f2 = a_3;
    STREAMING::REQUEST_ANIM_DICT(a_0);
    a_0._f5/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f8/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f3 = 1;
    a_0._f4 = 0;
}

auto sub_df9a(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":3}]"
    v_3[0/*1*/] = l_5C;
    v_3[1/*1*/] = l_5F;
    v_3[2/*1*/] = ${dubsta};
    switch (l_5B) {
    case 0:
        a_0._f10 = 0;
        a_0._fF = 9.0;
        a_0._f1B = 0;
        a_0._f19 = 1;
        a_0._f1A = 1;
        a_0._f9/*"24"*/ = "NMT_2_RCM";
        sub_e1b5(42, 1);
        sub_df5e(&a_0._f30, "rcmnigel2", "base_nigel", "base_nigel");
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_7/*1*/]);
        }
        l_5B = 1;
        break;
    case 1:
        if ((!sub_df2d(&v_3)) || (!sub_df03(&a_0._f30))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        v_8 = 1;
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f1C[0/*1*/])) {
            if (!sub_ddd4(&a_0._f1C[0/*1*/], 64, -1310.65, -640.1699829101562, 26.52, 153.42999999999998, "RC NIGEL", 1)) {
                v_8 = 0;
            }
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            sub_dcfd(&a_0._f23[0/*1*/], l_5F, -1304.01, -644.58, 25.91, 127.67);
            if (sub_8e72(a_0._f23[0/*1*/])) {
                VEHICLE::SET_VEHICLE_COLOURS(a_0._f23[0/*1*/], 65, 0);
                VEHICLE::_SET_VEHICLE_DOOR_BREAKABLE(a_0._f23[0/*1*/], 5, 0);
                VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(a_0._f23[0/*1*/], "28BNT310");
                VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(a_0._f23[0/*1*/], 0);
                VEHICLE::SET_VEHICLE_DOORS_LOCKED(a_0._f23[0/*1*/], 10);
            }
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f23[1/*1*/])) {
            sub_dcfd(&a_0._f23[1/*1*/], v_3[2/*1*/], -1290.72998046875, -634.60302734375, 26.1004, 126.96099853515625);
            if (sub_8e72(a_0._f23[1/*1*/])) {
                VEHICLE::SET_VEHICLE_COLOURS(a_0._f23[1/*1*/], 0, 0);
                VEHICLE::SET_VEHICLE_DOORS_LOCKED(a_0._f23[1/*1*/], 10);
            }
        }
        if (v_8) {
            l_5B = 3;
        }
        break;
    case 3:
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_7/*1*/]);
        }
        return 1;
        break;
    }
    return 0;
}

void sub_e1b5(auto a_0, auto a_1) {
    switch (a_0) {
    case 37:
        if (a_1) {
            l_6B = sub_e684();
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_HUMAN_GUARD_STAND", 0);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_HUMAN_CLIPBOARD", 0);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_VEHICLE_DRIVE_SOLO", 0);
            sub_e65a();
            GAMEPLAY::CLEAR_AREA_OF_PEDS(-1100.5, 789.8, 164.34, 20.0, 0);
            sub_e5c9(0);
        } else { 
            PED::REMOVE_SCENARIO_BLOCKING_AREA(l_6B, 0);
            PED::CLEAR_PED_NON_CREATION_AREA();
            sub_e5c9(1);
        }
        break;
    case 38:
        if (a_1) {
            l_6B = PED::ADD_SCENARIO_BLOCKING_AREA(-577.2740478515625, 270.6505432128906, 77.0, -543.1792602539062, 315.2972717285156, 94.0, 0, 1, 1, 1);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_HUMAN_GUARD_STAND", 0);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_HUMAN_CLIPBOARD", 0);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_VEHICLE_DRIVE_SOLO", 0);
            PED::SET_PED_NON_CREATION_AREA(-577.2740478515625, 270.6505432128906, 77.0, -543.1792602539062, 315.2972717285156, 94.0);
            PED::SET_PED_MODEL_IS_SUPPRESSED(${s_m_y_doorman_01}, 1);
            PED::SET_PED_MODEL_IS_SUPPRESSED(${s_m_m_bouncer_01}, 1);
            GAMEPLAY::CLEAR_AREA_OF_PEDS(-558.2858276367188, 284.40728759765625, 81.17639923095703, 15.0, 0);
            GAMEPLAY::CLEAR_AREA_OF_PEDS(-573.39404296875, 289.3695983886719, 79.06918334960938, 15.0, 0);
            GAMEPLAY::CLEAR_AREA(-554.1699829101562, 307.68, 82.84, 2.0, 1, 0, 0, 0);
            VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(-577.2740478515625, 270.6505432128906, 77.0, -543.1792602539062, 315.2972717285156, 94.0, 0, 1);
            VEHICLE::REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(-577.2740478515625, 270.6505432128906, 77.0, -543.1792602539062, 315.2972717285156, 94.0, 0);
            VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(${gauntlet}, 1);
        } else { 
            PED::REMOVE_SCENARIO_BLOCKING_AREA(l_6B, 0);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_HUMAN_GUARD_STAND", 1);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_HUMAN_CLIPBOARD", 1);
            AI::SET_SCENARIO_TYPE_ENABLED("WORLD_VEHICLE_DRIVE_SOLO", 1);
            PED::CLEAR_PED_NON_CREATION_AREA();
            PED::SET_PED_MODEL_IS_SUPPRESSED(${s_m_y_doorman_01}, 0);
            PED::SET_PED_MODEL_IS_SUPPRESSED(${s_m_m_bouncer_01}, 0);
            VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(-577.2740478515625, 270.6505432128906, 77.0, -543.1792602539062, 315.2972717285156, 94.0, 1, 1);
            VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(${gauntlet}, 0);
        }
        break;
    case 39:
        if (a_1) {
            l_6B = PED::ADD_SCENARIO_BLOCKING_AREA(-1073.18994140625, 342.04998779296875, 63.32831573486328, 966.24, 411.04998779296875, 84.8204345703125, 0, 1, 1, 1);
            PED::SET_PED_NON_CREATION_AREA(-1073.18994140625, 342.04998779296875, 63.32831573486328, 966.24, 411.04998779296875, 84.8204345703125);
            VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(-1073.18994140625, 342.04998779296875, 63.32831573486328, 966.24, 411.04998779296875, 84.8204345703125, 0, 1);
            VEHICLE::REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(-1073.18994140625, 342.04998779296875, 63.32831573486328, 966.24, 411.04998779296875, 84.8204345703125, 0);
            GAMEPLAY::CLEAR_AREA(-1035.72998046875, 365.44, 68.91, 35.0, 1, 0, 0, 0);
            GAMEPLAY::CLEAR_AREA_OF_VEHICLES(-1035.72998046875, 365.44, 68.91, 27.0, 0, 0, 0, 0, 0);
            GAMEPLAY::CLEAR_AREA_OF_PEDS(-1035.72998046875, 365.44, 68.91, 27.0, 0);
        } else { 
            PED::REMOVE_SCENARIO_BLOCKING_AREA(l_6B, 0);
            PED::CLEAR_PED_NON_CREATION_AREA();
            VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(-1073.18994140625, 342.04998779296875, 63.32831573486328, 966.24, 411.04998779296875, 84.8204345703125, 1, 1);
        }
        break;
    case 40:
        break;
    case 41:
        if (a_1) {
            l_6B = PED::ADD_SCENARIO_BLOCKING_AREA(-1122.2017822265625, 48.5723991394043, 51.4651985168457, -1076.2332763671875, 92.1041030883789, 60.06169891357422, 0, 1, 1, 1);
            PED::SET_PED_NON_CREATION_AREA(-1122.2017822265625, 48.5723991394043, 51.4651985168457, -1076.2332763671875, 92.1041030883789, 60.06169891357422);
            GAMEPLAY::CLEAR_AREA(-1096.85498046875, 67.68579864501953, 52.952, 15.0, 1, 0, 0, 0);
        } else { 
            PED::REMOVE_SCENARIO_BLOCKING_AREA(l_6B, 0);
            PED::CLEAR_PED_NON_CREATION_AREA();
        }
        break;
    case 42:
        if (a_1) {
            l_6B = PED::ADD_SCENARIO_BLOCKING_AREA(-1319.5662841796875, -650.0769653320312, 23.53714942932129, -1301.7891845703125, -634.0720825195312, 38.1812210083, 0, 1, 1, 1);
            PED::SET_PED_NON_CREATION_AREA(-1319.5662841796875, -650.0769653320312, 23.53714942932129, -1301.7891845703125, -634.0720825195312, 38.1812210083);
        } else { 
            PED::REMOVE_SCENARIO_BLOCKING_AREA(l_6B, 0);
            PED::CLEAR_PED_NON_CREATION_AREA();
        }
        break;
    }
}

void sub_e5c9(auto a_0) {
    v_3/*{3}*/ = {-1212.1639404296875, 634.8230590820312, 100.50546264648438 };
    v_6/*{3}*/ = {-1010.0827026367188, 830.94873046875, 250.4705047607422 };
    v_9/*{3}*/ = v_3;
    v_C/*{3}*/ = v_6;
    PATHFIND::SET_ROADS_IN_ANGLED_AREA(v_9, v_C, 25.0, 0, a_0, 1);
    VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(v_3, v_6, a_0, 1);
    if (!a_0) {
        VEHICLE::REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(v_3, v_6, 0);
        GAMEPLAY::CLEAR_AREA(-1100.5, 789.8, 164.34, 40.0, 1, 0, 0, 0);
    }
}

void sub_e65a() {
    PED::SET_PED_NON_CREATION_AREA(1112.99, 774.12, 151.77, 1077.99, 853.65, 187.66);
}

auto sub_e684() {
    return PED::ADD_SCENARIO_BLOCKING_AREA(-1212.16, 634.82, 138.5, -1010.08, 830.94, 180.47, 0, 1, 1, 1);
}

auto sub_e6b2(auto a_0, auto a_1) {
    asm .vardef<F> 4, "[{\"offset\":0,\"value\":7}]"
    v_C = "mini@golf";
    v_4[0/*1*/] = ${s_m_m_highsec_01};
    v_4[1/*1*/] = ${prop_golf_wood_01};
    v_4[2/*1*/] = ${prop_golf_wood_01};
    v_4[3/*1*/] = ${u_m_m_markfost};
    v_4[4/*1*/] = ${a_m_y_golfer_01};
    v_4[5/*1*/] = ${caddy};
    v_4[6/*1*/] = ${prop_golf_bag_01};
    switch (l_5B) {
    case 0:
        a_0._f1B = 1;
        a_0._f30 = "rcmnigel1d";
        sub_ed63(a_1);
        sub_ed32(a_1, -1313.714111328125, -27.220199584960938, 48.03139877319336);
        sub_ed32(a_1, -1294.0657958984375, -27.013599395751953, 47.5723991394043);
        sub_ed32(a_1, -1069.843505859375, -143.7689971923828, 39.749298095703125);
        sub_ed32(a_1, -925.2529296875, -89.90789794921875, 38.345699310302734);
        sub_ed32(a_1, -1010.948486328125, 40.0643, 49.9277);
        sub_ed32(a_1, -1122.8375244140625, 233.70370483398438, 64.75869750976562);
        sub_ed32(a_1, -1282.578125, 188.8798065185547, 59.27690124511719);
        sub_ed32(a_1, -1328.1531982421875, 192.017807, 57.8135986328125);
        sub_ed32(a_1, -1386.75, 167.32, 57.11);
        sub_ed32(a_1, -1411.5, 109.64, 51.49);
        sub_ed32(a_1, -1379.52, 111.05, 54.28);
        sub_ed32(a_1, -1371.77, 24.07, 52.88);
        sub_ed32(a_1, -1342.27, 16.92, 52.16);
        sub_ec92(a_1);
        for (v_D = 0; v_D <= (v_4 - 1); v_D += 1) {
            STREAMING::REQUEST_MODEL(v_4[v_D/*1*/]);
        }
        STREAMING::REQUEST_ANIM_DICT(a_0._f30);
        STREAMING::REQUEST_ANIM_DICT(v_C);
        l_5B = 1;
        break;
    case 1:
        if (((!sub_df2d(&v_4)) || (!STREAMING::HAS_ANIM_DICT_LOADED(a_0._f30))) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_C))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        sub_e1b5(41, 1);
        a_0._f1C[0/*1*/] = PED::CREATE_PED(26, v_4[3/*1*/], -1096.85498046875, 67.68579864501953, 52.952, 112.0, 1, 1);
        PED::SET_PED_PROP_INDEX(a_0._f1C[0/*1*/], 0, 0, 0, 0);
        PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[0/*1*/], 1);
        ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(a_0._f1C[0/*1*/], 1);
        ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0._f1C[0/*1*/], 1);
        PED::SET_PED_CAN_BE_TARGETTED(a_0._f1C[0/*1*/], 1);
        a_0._f29[0/*1*/] = OBJECT::CREATE_OBJECT(v_4[1/*1*/], -1096.85498046875, 67.68579864501953, 52.952, 1, 1, 0);
        ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[0/*1*/], a_0._f1C[0/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[0/*1*/], 28422), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 2, 1);
        AI::OPEN_SEQUENCE_TASK(&v_E);
        AI::TASK_PLAY_ANIM(0, a_0._f30, "swing_a_mark", 8.0, -2.0, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, a_0._f30, "swing_b_mark", 8.0, -2.0, -1, 0, 0, 0, 0, 0);
        AI::SET_SEQUENCE_TO_REPEAT(v_E, 1);
        AI::CLOSE_SEQUENCE_TASK(v_E);
        AI::TASK_PERFORM_SEQUENCE(a_0._f1C[0/*1*/], v_E);
        AI::CLEAR_SEQUENCE_TASK(&v_E);
        a_0._f1C[1/*1*/] = PED::CREATE_PED(26, v_4[4/*1*/], -1096.257568359375, 69.723, 53.01070022583, 163.0, 1, 1);
        AI::TASK_PLAY_ANIM(a_0._f1C[1/*1*/], a_0._f30, "idle_a_friend_watching", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
        PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[1/*1*/], 1);
        a_0._f29[1/*1*/] = OBJECT::CREATE_OBJECT(v_4[2/*1*/], -1096.257568359375, 69.723, 53.01070022583, 1, 1, 0);
        ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[1/*1*/], a_0._f1C[1/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[1/*1*/], 28422), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0, 2, 1);
        a_0._f1C[2/*1*/] = PED::CREATE_PED(26, v_4[0/*1*/], -1105.6224365234375, 66.46089935302734, 53.07, 118.0, 1, 1);
        a_0._f1C[3/*1*/] = PED::CREATE_PED(26, v_4[0/*1*/], -1090.0902099609375, 64.3905029296875, 52.560699462890625, 238.0, 1, 1);
        a_0._f1C[4/*1*/] = PED::CREATE_PED(26, v_4[0/*1*/], -1093.7359619140625, 73.85679626464844, 53.03879928588867, 319.0, 1, 1);
        for (v_D = 2; v_D <= 4; v_D += 1) {
            PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[v_D/*1*/], 1);
            WEAPON::GIVE_WEAPON_TO_PED(a_0._f1C[v_D/*1*/], ${weapon_pistol}, -1, 0, 1);
            ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(a_0._f1C[v_D/*1*/], 1);
            PED::SET_PED_CAN_BE_TARGETTED(a_0._f1C[v_D/*1*/], 1);
            PED::SET_PED_DIES_WHEN_INJURED(a_0._f1C[v_D/*1*/], 1);
            AI::SET_PED_PATH_PREFER_TO_AVOID_WATER(a_0._f1C[v_D/*1*/], 1);
            PED::SET_PED_MODEL_IS_SUPPRESSED(v_4[0/*1*/], 1);
        }
        a_0._f23[0/*1*/] = VEHICLE::CREATE_VEHICLE(v_4[5/*1*/], -1099.91, 61.260799407958984, 52.8124, 243.0, 1, 1);
        VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(a_0._f23[0/*1*/]);
        VEHICLE::SET_VEHICLE_ENGINE_ON(a_0._f23[0/*1*/], 1, 1, 0);
        ENTITY::SET_ENTITY_HEALTH(a_0._f23[0/*1*/], 1200);
        VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(v_4[5/*1*/], 1);
        a_0._f29[2/*1*/] = OBJECT::CREATE_OBJECT(v_4[6/*1*/], -1099.91, 63.260799407958984, 52.8124, 1, 1, 0);
        ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[2/*1*/], a_0._f23[0/*1*/], 0, 0.2, 1.3, 0.5, 0.0, 0.0, 0.0, 0, 0, 0, 0, 2, 1);
        a_0._f23[1/*1*/] = VEHICLE::CREATE_VEHICLE(v_4[5/*1*/], -1102.334716796875, 75.77570343017578, 53.25910186767578, 293.0, 1, 1);
        a_0._f23[2/*1*/] = VEHICLE::CREATE_VEHICLE(v_4[5/*1*/], -1103.023193359375, 65.62670135498047, 53.056, 203.0, 1, 1);
        for (v_D = 1; v_D <= 2; v_D += 1) {
            VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(a_0._f23[v_D/*1*/]);
        }
        for (v_D = 0; v_D <= (v_4 - 1); v_D += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_4[v_D/*1*/]);
        }
        return 1;
        break;
    }
    return 0;
}

void sub_ec92(auto a_0) {
    if (a_0._f33 == 0) {}
    if (a_0._f2E < 3) {}
    for (v_3 = 0; v_3 < a_0._f2E; v_3 += 1) {
        a_0._f2F += a_0[v_3/*3*/];
    }
    a_0._f2F /= (vector)__678_$BBDA792448DB5A89(v_3);
    for (v_3 = 0; v_3 < a_0._f2E; v_3 += 1) {
        v_4 = SYSTEM::VDIST2(a_0._f2F, a_0[v_3/*3*/]);
        if (v_4 > a_0._f32) {
            a_0._f32 = v_4;
        }
    }
    a_0._f32 = SYSTEM::SQRT(a_0._f32);
    a_0._f33 = 0;
}

void sub_ed32(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0._f33 == 0) {}
    if (a_0._f2E >= 15) {}
    a_0[a_0._f2E/*3*/]/*{3}*/ = a_1;
    a_0._f2E += 1;
}

void sub_ed63(auto a_0) {
    if (a_0._f33) {}
    a_0._f2E = 0;
    a_0._f2F/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f32 = 0.0;
    a_0._f33 = 1;
}

auto sub_ed8a(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":2}]"
    v_7 = "rcmnigel1cnmt_1c";
    v_3[0/*1*/] = ${ig_kerrymcintosh};
    v_3[1/*1*/] = ${a_c_rottweiler};
    switch (l_5B) {
    case 0:
        a_0._f10 = 5;
        a_0._f11[0/*3*/]/*{3}*/ = {-650.5558471679688, -217.06265258789062, 35.554351806640625 };
        a_0._f11[1/*3*/]/*{3}*/ = {-601.4098510742188, -300.3887023925781, 64.24574279785156 };
        a_0._f18 = 35.0;
        a_0._f1B = 1;
        for (v_6 = 0; v_6 <= (v_3 - 1); v_6 += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_6/*1*/]);
        }
        STREAMING::REQUEST_ANIM_DICT(v_7);
        l_5B = 1;
        break;
    case 1:
        if ((!sub_df2d(&v_3)) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_7))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        a_0._f1C[0/*1*/] = PED::CREATE_PED(26, v_3[0/*1*/], 626.87, -268.85, 38.0, 121.0, 1, 1);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 0, 1, 1, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 2, 1, 2, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 3, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 4, 0, 0, 0);
        PED::SET_PED_COMBAT_ATTRIBUTES(a_0._f1C[0/*1*/], 17, 1);
        PED::SET_PED_CONFIG_FLAG(a_0._f1C[0/*1*/], 132, 1);
        ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(a_0._f1C[0/*1*/], 1);
        PED::SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(a_0._f1C[0/*1*/], 0);
        AUDIO::STOP_PED_SPEAKING(a_0._f1C[0/*1*/], 1);
        AI::OPEN_SEQUENCE_TASK(&v_8);
        AI::TASK_PLAY_ANIM(0, v_7, "base", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "dexy_stay_there", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "base", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "price_tag", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "base", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "such_a_good", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "base", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "this_looks", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "base", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, v_7, "who_would", 0x41000000, 0xc1000000, -1, 0, 0, 0, 0, 0);
        AI::SET_SEQUENCE_TO_REPEAT(v_8, 1);
        AI::CLOSE_SEQUENCE_TASK(v_8);
        AI::TASK_PERFORM_SEQUENCE(a_0._f1C[0/*1*/], v_8);
        AI::CLEAR_SEQUENCE_TASK(&v_8);
        a_0._f1C[1/*1*/] = PED::CREATE_PED(26, v_3[1/*1*/], -627.4, 267.12, 38.23, -59.95, 1, 1);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 0, 3, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 0, 1, 0);
        PED::SET_PED_CONFIG_FLAG(a_0._f1C[1/*1*/], 132, 1);
        ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(a_0._f1C[1/*1*/], 1);
        for (v_6 = 0; v_6 <= (v_3 - 1); v_6 += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_6/*1*/]);
        }
        return 1;
        break;
    }
    return 0;
}

auto sub_f0b8(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":6}]"
    v_B = "rcmnigel1b";
    v_3[0/*1*/] = ${ig_tylerdix};
    v_3[1/*1*/] = ${a_f_y_beach_01};
    v_3[2/*1*/] = ${s_m_m_gardener_01};
    v_3[3/*1*/] = ${speedo};
    v_3[4/*1*/] = ${comet2};
    v_3[5/*1*/] = ${prop_nigel_bag_pickup};
    switch (l_5B) {
    case 0:
        a_0._f10 = 5;
        a_0._f11[0/*3*/]/*{3}*/ = {-1065.1202392578125, 366.3437805175781, 97.59101104736328 };
        a_0._f11[1/*3*/]/*{3}*/ = {-1020.7745361328125, 364.759552, 65.23877716064453 };
        a_0._f18 = 40.0;
        a_0._f1B = 1;
        a_0._f30 = "rcmnigel1bnmt_1b";
        sub_e1b5(39, 1);
        for (v_A = 0; v_A <= (v_3 - 1); v_A += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_A/*1*/]);
        }
        STREAMING::REQUEST_ANIM_DICT(a_0._f30);
        STREAMING::REQUEST_ANIM_DICT(v_B);
        l_5B = 1;
        break;
    case 1:
        if (((!sub_df2d(&v_3)) || (!STREAMING::HAS_ANIM_DICT_LOADED(a_0._f30))) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_B))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            sub_dcfd(&a_0._f23[0/*1*/], v_3[3/*1*/], -1010.969970703125, 359.91, 70.65, 331.46);
            if (sub_8e72(a_0._f23[0/*1*/])) {
                VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(a_0._f23[0/*1*/]);
                VEHICLE::SET_VEHICLE_COLOURS(a_0._f23[0/*1*/], 97, 97);
                VEHICLE::SET_VEHICLE_DIRT_LEVEL(a_0._f23[0/*1*/], 13.5);
                VEHICLE::_SET_VEHICLE_DOOR_BREAKABLE(a_0._f23[0/*1*/], 2, 0);
                VEHICLE::SET_VEHICLE_DOOR_OPEN(a_0._f23[0/*1*/], 2, 0, 1);
                VEHICLE::SET_VEHICLE_DOOR_CONTROL(a_0._f23[0/*1*/], 2, 0, 1.0);
                ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(a_0._f23[0/*1*/]);
                return 0;
            }
        }
        if (sub_8e72(a_0._f23[0/*1*/])) {
            v_C = VEHICLE::GET_VEHICLE_DOOR_ANGLE_RATIO(a_0._f23[0/*1*/], 2);
            if ((!VEHICLE::IS_VEHICLE_DOOR_FULLY_OPEN(a_0._f23[0/*1*/], 2)) && (v_C < 0.8)) {
                VEHICLE::SET_VEHICLE_DOOR_CONTROL(a_0._f23[0/*1*/], 2, 0, 1.0);
            } else { 
                l_5B = 3;
            }
        }
        break;
    case 3:
        if (sub_8e72(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_PLAYING_ANIM(a_0._f23[0/*1*/], v_B, "idle_speedo", 3)) {
                if (STREAMING::HAS_ANIM_DICT_LOADED(v_B)) {
                    AI::TASK_VEHICLE_PLAY_ANIM(a_0._f23[0/*1*/], v_B, "idle_speedo");
                    return 0;
                } else { 
                    STREAMING::REQUEST_ANIM_DICT(v_B);
                    return 0;
                }
            }
        }
        sub_dcfd(&a_0._f23[1/*1*/], v_3[4/*1*/], -1018.26, 357.76, 70.2, 339.5199890136719);
        if (sub_8e72(a_0._f23[1/*1*/])) {
            VEHICLE::SET_VEHICLE_COLOURS(a_0._f23[1/*1*/], 27, 27);
        }
        sub_f63b(&a_0._f1C[0/*1*/], v_3[0/*1*/], 1054.6999999999998, 355.94, 68.35, 23.67, 26);
        if (sub_8e52(a_0._f1C[0/*1*/])) {
            PED::SET_PED_DIES_IN_WATER(a_0._f1C[0/*1*/], 0);
            ENTITY::SET_ENTITY_COORDS_NO_OFFSET(a_0._f1C[0/*1*/], 1054.6999999999998, 355.94, 68.35, 0, 0, 1);
            ENTITY::SET_ENTITY_HEADING(a_0._f1C[0/*1*/], 23.67);
            AI::TASK_PLAY_ANIM(a_0._f1C[0/*1*/], v_B, "Swimming_Idle", 8.0, -8.0, -1, 0, 0, 0, 0, 0);
        }
        sub_f63b(&a_0._f1C[1/*1*/], v_3[1/*1*/], -1058.43, 362.78, 69.86, 130.45, 26);
        if (sub_8e52(a_0._f1C[1/*1*/])) {
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 0, 0, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 2, 0, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 0, 2, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 0, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 8, 0, 1, 0);
            PED::SET_PED_DIES_IN_WATER(a_0._f1C[1/*1*/], 0);
            a_0._f3B = PED::CREATE_SYNCHRONIZED_SCENE(-1059.0, 360.97601318359375, 69.0, 0.0, 0.0, -1.08, 2);
            PED::SET_SYNCHRONIZED_SCENE_LOOPED(a_0._f3B, 1);
            PED::_394B9CD12435C981(a_0._f3B, 0);
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[1/*1*/], a_0._f3B, a_0._f30, "base_girl", 1000.0, -8.0, 592, 0, 0x447a0000, 0);
        }
        sub_f63b(&a_0._f1C[2/*1*/], v_3[2/*1*/], -1012.57, 357.48, 70.62, 28.55, 26);
        if (sub_8e52(a_0._f1C[2/*1*/])) {
            PED::SET_PED_DEFAULT_COMPONENT_VARIATION(a_0._f1C[2/*1*/]);
            ENTITY::SET_ENTITY_COORDS_NO_OFFSET(a_0._f1C[2/*1*/], -1012.57, 357.48, 70.62, 0, 0, 1);
            ENTITY::SET_ENTITY_HEALTH(a_0._f1C[2/*1*/], 160);
            if (STREAMING::HAS_ANIM_DICT_LOADED(v_B)) {
                AI::TASK_PLAY_ANIM(a_0._f1C[2/*1*/], v_B, "idle_gardener", 1000.0, -8.0, -1, 270337, 0, 0, 0, 0);
            }
        }
        sub_f614(&a_0._f29[0/*1*/], v_3[5/*1*/], -1050.03, 368.95, 69.29, -11.27);
        if (sub_8e72(a_0._f29[0/*1*/])) {
            ENTITY::SET_ENTITY_ROTATION(a_0._f29[0/*1*/], 0.0, 0.0, -11.27, 2, 1);
            ENTITY::SET_ENTITY_CAN_BE_DAMAGED(a_0._f29[0/*1*/], 0);
            ENTITY::SET_ENTITY_INVINCIBLE(a_0._f29[0/*1*/], 1);
            ENTITY::_E12ABE5E3A389A6C(a_0._f29[0/*1*/], 0);
            ENTITY::_A80AE305E0A3044F(a_0._f29[0/*1*/], 0);
        }
        for (v_A = 0; v_A <= (v_3 - 1); v_A += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_A/*1*/]);
        }
        STREAMING::REMOVE_ANIM_DICT(a_0._f30);
        STREAMING::REMOVE_ANIM_DICT(v_B);
        return 1;
        break;
    }
    return 0;
}

void sub_f614(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_c8f4(a_0);
    a_0 = OBJECT::CREATE_OBJECT(a_1, a_2, 1, 1, 0);
    ENTITY::SET_ENTITY_HEADING(a_0, a_5);
}

void sub_f63b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_f65c(a_0);
    a_0 = PED::CREATE_PED(a_6, a_1, a_2, a_5, 0, 0);
}

void sub_f65c(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
        }
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        PED::DELETE_PED(a_0);
    }
}

auto sub_f69b(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":7}]"
    v_3[0/*1*/] = ${u_m_m_willyfist};
    v_3[1/*1*/] = ${a_f_y_bevhills_03};
    v_3[2/*1*/] = ${a_f_y_bevhills_03};
    v_3[3/*1*/] = ${a_f_y_bevhills_03};
    v_3[4/*1*/] = ${a_m_y_vinewood_04};
    v_3[5/*1*/] = ${a_m_y_gay_01};
    v_3[6/*1*/] = ${gauntlet};
    switch (l_5B) {
    case 0:
        a_0._f10 = 5;
        a_0._f11[0/*3*/]/*{3}*/ = {-565.5145874023438, 269.6139221191406, 81.02080535888672 };
        a_0._f11[1/*3*/]/*{3}*/ = {-562.2337036132812, 306.538208, 94.13258361816406 };
        a_0._f18 = 30.0;
        a_0._f1B = 1;
        sub_fbe9(4, 0);
        sub_11f55(" SetupScene_NIGEL_1A - SET_INTERIOR_CAPPED(INTERIOR_V_ROCKCLUB, FALSE)	");
        a_0._f30 = "rcmnigel1aig_1";
        a_0._f3B = -1;
        sub_e1b5(38, 1);
        v_C = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(-555.5933837890625, 285.7738037109375, 81.1763, "v_rockclub");
        if (INTERIOR::IS_VALID_INTERIOR(v_C)) {
            INTERIOR::REFRESH_INTERIOR(v_C);
        }
        for (v_B = 0; v_B <= (v_3 - 1); v_B += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_B/*1*/]);
        }
        STREAMING::REQUEST_ANIM_DICT(a_0._f30);
        l_5B = 1;
        break;
    case 1:
        if ((!sub_df2d(&v_3)) || (!STREAMING::HAS_ANIM_DICT_LOADED(a_0._f30))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        sub_f63b(&a_0._f1C[0/*1*/], v_3[0/*1*/], -552.6599731445312, 287.75, 82.18, 123.75, 26);
        sub_f63b(&a_0._f1C[1/*1*/], v_3[1/*1*/], -553.46, 287.34, 82.18, -65.86, 26);
        if (sub_8e52(a_0._f1C[1/*1*/])) {
            PED::SET_PED_CAN_BE_TARGETTED(a_0._f1C[1/*1*/], 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 0, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 2, 0, 2, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 1, 2, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 0, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 7, 0, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 8, 1, 0, 0);
        }
        a_0._f3B = PED::CREATE_SYNCHRONIZED_SCENE(552.18, 285.47601318359375, 81.97599792480469, 0.0, 0.0, 79.5, 2);
        PED::SET_SYNCHRONIZED_SCENE_LOOPED(a_0._f3B, 1);
        PED::_394B9CD12435C981(a_0._f3B, 0);
        if (sub_8e52(a_0._f1C[0/*1*/])) {
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], a_0._f3B, a_0._f30, "BASE_02_Willie", 1000.0, -8.0, 17, 0, 0x447a0000, 0);
        }
        if (sub_8e52(a_0._f1C[1/*1*/])) {
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[1/*1*/], a_0._f3B, a_0._f30, "BASE_02_GIRL", 1000.0, -8.0, 17, 0, 0x447a0000, 0);
        }
        sub_f63b(&a_0._f1C[2/*1*/], v_3[2/*1*/], -559.94, 285.99, 85.38, -59.06, 26);
        sub_f63b(&a_0._f1C[3/*1*/], v_3[3/*1*/], 558.87, 289.79, 85.38, 162.44, 26);
        sub_f63b(&a_0._f1C[4/*1*/], v_3[4/*1*/], -559.0, 286.09, 85.38, 65.92, 26);
        sub_f63b(&a_0._f1C[5/*1*/], v_3[5/*1*/], -558.84, 288.97, 85.38, 7.72, 26);
        if (sub_8e52(a_0._f1C[2/*1*/])) {
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[2/*1*/], 0, 0, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[2/*1*/], 2, 1, 2, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[2/*1*/], 3, 1, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[2/*1*/], 4, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[2/*1*/], 7, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[2/*1*/], 8, 1, 0, 0);
        }
        if (sub_8e52(a_0._f1C[3/*1*/])) {
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[3/*1*/], 0, 1, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[3/*1*/], 2, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[3/*1*/], 3, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[3/*1*/], 4, 1, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[3/*1*/], 7, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[3/*1*/], 8, 1, 0, 0);
        }
        if (sub_8e52(a_0._f1C[4/*1*/])) {
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[4/*1*/], 0, 0, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[4/*1*/], 2, 0, 2, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[4/*1*/], 3, 0, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[4/*1*/], 4, 0, 1, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[4/*1*/], 8, 0, 0, 0);
        }
        if (sub_8e52(a_0._f1C[5/*1*/])) {
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[5/*1*/], 0, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[5/*1*/], 2, 2, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[5/*1*/], 3, 0, 3, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[5/*1*/], 4, 1, 0, 0);
            PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[5/*1*/], 8, 0, 2, 0);
        }
        sub_dcfd(&a_0._f23[0/*1*/], v_3[6/*1*/], -553.5499877929688, 308.6099853515625, 82.81, 202.78);
        if (sub_8e72(a_0._f23[0/*1*/])) {
            VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(a_0._f23[0/*1*/], 1);
            VEHICLE::SET_VEHICLE_DOORS_LOCKED(a_0._f23[0/*1*/], 1);
            ENTITY::_E12ABE5E3A389A6C(a_0._f23[0/*1*/], 0);
        }
        for (v_B = 0; v_B <= (v_3 - 1); v_B += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_B/*1*/]);
        }
        STREAMING::REMOVE_ANIM_DICT(a_0._f30);
        return 1;
        break;
    }
    return 0;
}

void sub_fbe9(auto a_0, auto a_1) {
    v_4 = "NULL";
    v_5 = 0;
    v_4 = sub_fd42(a_0, &v_5);
    if ((!GAMEPLAY::ARE_STRINGS_EQUAL("NONE", v_4)) && (v_5 != 0)) {
        if (a_1 && (!INTERIOR::IS_INTERIOR_CAPPED(v_5))) {
            if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == v_5) {
                sub_fd0a(a_0, 1);
                return ;
            }
            INTERIOR::CAP_INTERIOR(v_5, 1);
        } else if ((!a_1) && INTERIOR::IS_INTERIOR_CAPPED(v_5)) {
            if (sub_fc8f(a_0)) {
                sub_fd0a(a_0, 0);
            }
            INTERIOR::CAP_INTERIOR(v_5, 0);
        } else if (!a_1) {
            if (sub_fc8f(a_0)) {
                sub_fd0a(a_0, 0);
            }
        }
    } else { }
}

auto sub_fc8f(auto a_0) {
    v_3/*{2}*/ = sub_fcb8(a_0);
    if (GAMEPLAY::IS_BIT_SET(g_7AF6[v_3._f1/*1*/], v_3)) {
        return 1;
    }
    return 0;
}

auto<2> sub_fcb8(auto a_0) {
    v_3 = a_0;
    v_4 = 0;
    v_5 = 0;
    v_6 = -1;
    v_6._f1 = -1;
    for (; v_4 < 3; v_4 += 1) {
        v_5 += 32;
        if (v_3 < v_5) {
            v_6._f1 = v_4;
            v_6 = v_3 - (v_6._f1 * 32);
            return v_6;
        }
    }
    return v_6;
}

void sub_fd0a(auto a_0, auto a_1) {
    v_4/*{2}*/ = sub_fcb8(a_0);
    if (a_1) {
        GAMEPLAY::SET_BIT(&g_7AF6[v_4._f1/*1*/], v_4);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_7AF6[v_4._f1/*1*/], v_4);
    }
}

auto sub_fd42(auto a_0, auto a_1) {
    v_4/*{5}*/ = sub_fd67(a_0);
    a_1 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(v_4, v_4._f3);
    return v_4._f4;
}

auto<5> sub_fd67(auto a_0) {
    switch (a_0) {
    case 0:
        v_3/*{3}*/ = {-447.4833068847656, 280.3197021484375, 77.52149963378906 };
        v_3._f3 = "v_comedy";
        v_3._f4 = v_3._f3;
        break;
    case 1:
        v_3/*{3}*/ = {-1906.7857666015625, -573.7576293945312, 19.077299118041992 };
        v_3._f3 = "v_psycheoffice";
        v_3._f4 = v_3._f3;
        break;
    case 2:
        v_3/*{3}*/ = {1399.9730224609375, 1148.755859375, 113.33360290527344 };
        v_3._f3 = "v_ranch";
        v_3._f4 = v_3._f3;
        break;
    case 3:
        v_3/*{3}*/ = {-598.6378784179688, -1608.3985595703125, 26.010799407958984 };
        v_3._f3 = "v_recycle";
        v_3._f4 = v_3._f3;
        break;
    case 4:
        v_3/*{3}*/ = {-556.5089111328125, 286.318115234375, 81.1763 };
        v_3._f3 = "v_rockclub";
        v_3._f4 = v_3._f3;
        break;
    case 5:
        v_3/*{3}*/ = {-111.71160125732422, 11.911999999999999, 69.5196 };
        v_3._f3 = "v_janitor";
        v_3._f4 = v_3._f3;
        break;
    case 6:
        v_3/*{3}*/ = {1274.933837890625, -1714.7255859375, 53.77149963378906 };
        v_3._f3 = "v_lesters";
        v_3._f4 = v_3._f3;
        break;
    case 7:
        v_3/*{3}*/ = {147.43299865722656, -2201.370361328125, 3.688 };
        v_3._f3 = "v_torture";
        v_3._f4 = v_3._f3;
        break;
    case 8:
        v_3/*{3}*/ = {320.993408203125, 265.2514953613281, 82.12210083 };
        v_3._f3 = "v_cinema";
        v_3._f4 = "v_cinema (Vinewood)";
        break;
    case 9:
        v_3/*{3}*/ = {-1425.564453125, -244.3, 15.805299758911133 };
        v_3._f3 = "v_cinema";
        v_3._f4 = "v_cinema (Morningwood)";
        break;
    case 10:
        v_3/*{3}*/ = {377.15301513671875, -717.5670166015625, 10.0536 };
        v_3._f3 = "v_cinema";
        v_3._f4 = "v_cinema (Downtown)";
        break;
    case 11:
        v_3/*{3}*/ = {245.15640258789062, 370.21099853515625, 104.73819732666016 };
        v_3._f3 = "v_epsilonism";
        v_3._f4 = v_3._f3;
        break;
    case 12:
        v_3/*{3}*/ = {173.1175994873047, -1003.2788696289062, 100 };
        v_3._f3 = "v_garages";
        v_3._f4 = v_3._f3;
        break;
    case 13:
        v_3/*{3}*/ = {199.97149658203125, -999.6677856445312, -100.0 };
        v_3._f3 = "v_garagem";
        v_3._f4 = v_3._f3;
        break;
    case 14:
        v_3/*{3}*/ = {228.60580444335938, -992.0537109375, 100 };
        v_3._f3 = "v_garagel";
        v_3._f3 = "hei_dlc_garage_high_new";
        v_3._f4 = v_3._f3;
        break;
    case 15:
        v_3/*{3}*/ = {1854.2537841796875, 3686.738525390625, 33.2671012878418 };
        v_3._f3 = "v_sheriff";
        v_3._f4 = v_3._f3;
        break;
    case 16:
        v_3/*{3}*/ = {-444.89068603515625, 6013.5869140625, 30.7164 };
        v_3._f3 = "v_sheriff2";
        v_3._f4 = v_3._f3;
        break;
    case 17:
        v_3/*{3}*/ = {3522.84521484375, 3707.96533203125, 19.9918 };
        v_3._f3 = "v_lab";
        v_3._f4 = v_3._f3;
        break;
    case 18:
        v_3/*{3}*/ = {717.2993774414062, -974.4271240234375, 23.914199829101562 };
        v_3._f3 = "v_sweat";
        v_3._f4 = v_3._f3;
        break;
    case 19:
        v_3/*{3}*/ = {717.2990112304688, -974.4271240234375, 23.914199829101562 };
        v_3._f3 = "v_sweatempty";
        v_3._f4 = v_3._f3;
        break;
    case 20:
        v_3/*{3}*/ = {2449.78515625, 4983.82470703125, 45.8106 };
        v_3._f3 = "v_farmhouse";
        v_3._f4 = v_3._f3;
        break;
    case 22:
        v_3/*{3}*/ = {1087.1951904296875, -1988.4449462890625, 28.649 };
        v_3._f3 = "v_foundry";
        v_3._f4 = v_3._f3;
        break;
    case 23:
        v_3/*{3}*/ = {982.2329711914062, -2160.381591796875, 28.4761 };
        v_3._f3 = "v_abattoir";
        v_3._f4 = v_3._f3;
        break;
    case 21:
        v_3/*{3}*/ = {479.0567932128906, -1316.8253173828125, 28.2038 };
        v_3._f3 = "v_chopshop";
        v_3._f4 = v_3._f3;
        break;
    case 24:
        v_3/*{3}*/ = {-1005.663208, -478.3460998535156, 49.0265 };
        v_3._f3 = "v_58_sol_office";
        v_3._f4 = v_3._f3;
        break;
    case 25:
        v_8/*{6}*/ = sub_10c01(1);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (1)";
        break;
    case 26:
        v_8/*{6}*/ = sub_10c01(2);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (2)";
        break;
    case 27:
        v_8/*{6}*/ = sub_10c01(3);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (3)";
        break;
    case 28:
        v_8/*{6}*/ = sub_10c01(4);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (4)";
        break;
    case 29:
        v_8/*{6}*/ = sub_10c01(5);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (5)";
        break;
    case 30:
        v_8/*{6}*/ = sub_10c01(6);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (6)";
        break;
    case 31:
        v_8/*{6}*/ = sub_10c01(7);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (7)";
        break;
    case 32:
        v_3/*{3}*/ = g_100214[34/*1908*/]._f92._f5ED + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (8)";
        break;
    case 33:
        v_8/*{6}*/ = sub_10c01(35);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (9)";
        break;
    case 34:
        v_8/*{6}*/ = sub_10c01(36);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (10)";
        break;
    case 35:
        v_8/*{6}*/ = sub_10c01(37);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (11)";
        break;
    case 36:
        v_8/*{6}*/ = sub_10c01(38);
        v_3/*{3}*/ = {-20.1, 580.8, 91.3 };
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (12)";
        break;
    case 37:
        v_8/*{6}*/ = sub_10c01(39);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (13)";
        break;
    case 38:
        v_8/*{6}*/ = sub_10c01(40);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (14)";
        break;
    case 39:
        v_8/*{6}*/ = sub_10c01(41);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (15)";
        break;
    case 40:
        v_8/*{6}*/ = sub_10c01(42);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (16)";
        break;
    case 41:
        v_8/*{6}*/ = sub_10c01(43);
        v_3/*{3}*/ = v_8 + ({0.0, 0.0, 1.0 });
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (17)";
        break;
    case 42:
        v_3/*{3}*/ = {-470.3753967285156, -698.5206909179688, 51.5275993347168 };
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (18)";
        break;
    case 43:
        v_3/*{3}*/ = {-460.6133117675781, -691.5562133789062, 69.9067 };
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (19)";
        break;
    case 44:
        v_3/*{3}*/ = {300.63299560546875, -997.4287719726562, -99.97270202636719 };
        v_3._f3 = "hei_dlc_apart_high_new";
        v_3._f4 = "hei_dlc_apart_high_new (20)";
        break;
    case 49:
        v_3/*{3}*/ = {-171.3968963623047, 494.26708984375, 134.49349975585938 };
        v_3._f3 = "apa_v_mp_stilts_b";
        v_3._f4 = "apa_v_mp_stilts_b (1)";
        break;
    case 50:
        v_3/*{3}*/ = {339.4981994628906, 434.0887145996094, 146.22059631347656 };
        v_3._f3 = "apa_v_mp_stilts_b";
        v_3._f4 = "apa_v_mp_stilts_b (2)";
        break;
    case 51:
        v_3/*{3}*/ = {-761.388427734375, 615.7332763671875, 140.98049926757812 };
        v_3._f3 = "apa_v_mp_stilts_b";
        v_3._f4 = "apa_v_mp_stilts_b (3)";
        break;
    case 52:
        v_3/*{3}*/ = {-678.1751708984375, 591.0076293945312, 142.2196044921875 };
        v_3._f3 = "apa_v_mp_stilts_b";
        v_3._f4 = "apa_v_mp_stilts_b (4)";
        break;
    case 53:
        v_3/*{3}*/ = {120.0541, 553.7930297851562, 181.09429931640625 };
        v_3._f3 = "apa_v_mp_stilts_a";
        v_3._f4 = "apa_v_mp_stilts_a (5)";
        break;
    case 54:
        v_3/*{3}*/ = {-571.4038696289062, 655.2, 142.62930297851562 };
        v_3._f3 = "apa_v_mp_stilts_a";
        v_3._f4 = "apa_v_mp_stilts_a (7)";
        break;
    case 55:
        v_3/*{3}*/ = {-742.2564697265625, 587.6547241210938, 143.0576934814453 };
        v_3._f3 = "apa_v_mp_stilts_a";
        v_3._f4 = "apa_v_mp_stilts_a (8)";
        break;
    case 56:
        v_3/*{3}*/ = {-857.222229, 685.051025390625, 149.65020751953125 };
        v_3._f3 = "apa_v_mp_stilts_a";
        v_3._f4 = "apa_v_mp_stilts_a (10)";
        break;
    case 57:
        v_3/*{3}*/ = {-1287.6497802734375, 443.27069091796875, 94.69190216064453 };
        v_3._f3 = "apa_v_mp_stilts_a";
        v_3._f4 = "apa_v_mp_stilts_a (12)";
        break;
    case 58:
        v_3/*{3}*/ = {374.2012023925781, 416.96881103515625, 142.59910583496094 };
        v_3._f3 = "apa_v_mp_stilts_a";
        v_3._f4 = "apa_v_mp_stilts_a (13)";
        break;
    case 45:
        v_3/*{3}*/ = {-16.295848846435547, -684.0385131835938, 33.50831604 };
        v_3._f3 = "dt1_03_carpark";
        v_3._f4 = "dt1_03_carpark";
        break;
    case 46:
        v_3/*{3}*/ = {341.1, -1000.0, 99.2 };
        v_3._f3 = "v_apart_midspaz";
        v_3._f4 = "v_apart_midspaz";
        break;
    case 47:
        v_3/*{3}*/ = {199.9715576171875, -1018.9541625976562, -100.0 };
        v_3._f3 = "v_garagem_sp";
        v_3._f4 = v_3._f3;
        break;
    case 48:
        v_3/*{3}*/ = {-1388.0013427734375, -618.419677734375, 30.819599151611328 };
        v_3._f3 = "v_bahama";
        v_3._f4 = v_3._f3;
        break;
    case 59:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_01";
        v_3._f4 = v_3._f3;
        break;
    case 60:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_02";
        v_3._f4 = v_3._f3;
        break;
    case 61:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_03";
        v_3._f4 = v_3._f3;
        break;
    case 62:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_04";
        v_3._f4 = v_3._f3;
        break;
    case 63:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_05";
        v_3._f4 = v_3._f3;
        break;
    case 64:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_06";
        v_3._f4 = v_3._f3;
        break;
    case 65:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_07";
        v_3._f4 = v_3._f3;
        break;
    case 66:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3 = "apa_v_mp_h_08";
        v_3._f4 = v_3._f3;
        break;
    case 67:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_01";
        v_3._f4 = v_3._f3;
        break;
    case 68:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_02";
        v_3._f4 = v_3._f3;
        break;
    case 69:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_03";
        v_3._f4 = v_3._f3;
        break;
    case 70:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_04";
        v_3._f4 = v_3._f3;
        break;
    case 71:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_05";
        v_3._f4 = v_3._f3;
        break;
    case 72:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_06";
        v_3._f4 = v_3._f3;
        break;
    case 73:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_07";
        v_3._f4 = v_3._f3;
        break;
    case 74:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3 = "apa_v_mp_h_08";
        v_3._f4 = v_3._f3;
        break;
    case 75:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_01";
        v_3._f4 = v_3._f3;
        break;
    case 76:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_02";
        v_3._f4 = v_3._f3;
        break;
    case 77:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_03";
        v_3._f4 = v_3._f3;
        break;
    case 78:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_04";
        v_3._f4 = v_3._f3;
        break;
    case 79:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_05";
        v_3._f4 = v_3._f3;
        break;
    case 80:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_06";
        v_3._f4 = v_3._f3;
        break;
    case 81:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_07";
        v_3._f4 = v_3._f3;
        break;
    case 82:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3 = "apa_v_mp_h_08";
        v_3._f4 = v_3._f3;
        break;
    default:
        break;
    }
    return v_3;
}

auto<6> sub_10c01(auto a_0) {
    switch (a_0) {
    case -1:
        v_3/*{3}*/ = {-794.9183959960938, 339.6265869140625, 200.4134979248047 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 180.0 };
        break;
    case 1:
        v_3/*{3}*/ = {-794.9183959960938, 339.6265869140625, 200.4134979248047 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 180.0 };
        break;
    case 2:
        v_3/*{3}*/ = {-761.0982055664062, 317.625885, 169.59628295898438 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 3:
        v_3/*{3}*/ = {-761.1887817382812, 317.6294860839844, 216.05029296875 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 4:
        v_3/*{3}*/ = {-795.3856201171875, 340.018798828125, 152.7940979 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 180 };
        break;
    case 61:
        v_3/*{3}*/ = {-778.505615234375, 332.3778991699219, 212.19679260253906 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 90.0 };
        break;
    case 5:
        v_3/*{3}*/ = {-258.18069458, -950.685302734375, 70.0239028930664 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 70.0 };
        break;
    case 6:
        v_3/*{3}*/ = {-285.0050964355469, -957.6552124023438, 85.30349731445312 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 110 };
        break;
    case 7:
        v_3/*{3}*/ = {-1471.88208, -530.7484130859375, 62.349178314208984 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -145.0 };
        break;
    case 34:
        v_3/*{3}*/ = {-1471.88208, -530.7484130859375, 49.721561431884766 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -145.0 };
        break;
    case 62:
        v_3/*{3}*/ = {-1463.15, -540.2368774414062, 74.243896484375 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -145.0 };
        break;
    case 35:
        v_3/*{3}*/ = {-885.3701782226562, -451.4775085449219, 119.327003479 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 27.556169509887695 };
        break;
    case 36:
        v_3/*{3}*/ = {-913.0385131835938, -438.42840576171875, 114.399658203125 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -153.30931091308594 };
        break;
    case 37:
        v_3/*{3}*/ = {-892.5499267578125, -430.4789123535156, 88.25367736816406 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 116.91929626464844 };
        break;
    case 38:
        v_3/*{3}*/ = {-35.046199798583984, -576.3170166015625, 82.90738677978516 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 160.0 };
        break;
    case 39:
        v_3/*{3}*/ = {-10.3788, -590.7431030273438, 93.02542114257812 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 70.0 };
        break;
    case 65:
        v_3/*{3}*/ = {-22.248699188232422, -589.1461181640625, 80.23049926757812 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 69.88 };
        break;
    case 40:
        v_3/*{3}*/ = {-900.631103515625, -376.7461853027344, 78.27306365966797 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 26.926109313964844 };
        break;
    case 41:
        v_3/*{3}*/ = {-929.4829711914062, -374.5104064941406, 102.23285675048828 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -152.55307 };
        break;
    case 63:
        v_3/*{3}*/ = {-914.4202270507812, -375.81890869140625, 114.47429656982422 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -63.0 };
        break;
    case 42:
        v_3/*{3}*/ = {-617.1646728515625, 64.60420227050781, 100.8196029663086 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 180.0 };
        break;
    case 43:
        v_3/*{3}*/ = {-584.2014770507812, 42.71329879760742, 86.418701171875 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 64:
        v_3/*{3}*/ = {-609.5665283203125, 50.220298767089844, 98.3998031616211 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -90.0 };
        break;
    case 73:
        v_3/*{3}*/ = {-171.3968963623047, 494.26708984375, 134.49349975585938 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 11.0 };
        break;
    case 74:
        v_3/*{3}*/ = {339.4981994628906, 434.0887145996094, 146.22059631347656 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -63.5 };
        break;
    case 75:
        v_3/*{3}*/ = {-761.388427734375, 615.7332763671875, 140.98049926757812 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -71.5 };
        break;
    case 76:
        v_3/*{3}*/ = {-678.1751708984375, 591.0076293945312, 142.2196044921875 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 40.5 };
        break;
    case 77:
        v_3/*{3}*/ = {120.0541, 553.7930297851562, 181.09429931640625 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 6.0 };
        break;
    case 78:
        v_3/*{3}*/ = {-571.4038696289062, 655.2, 142.62930297851562 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -14.5 };
        break;
    case 79:
        v_3/*{3}*/ = {-742.2564697265625, 587.6547241210938, 143.0576934814453 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -29.0 };
        break;
    case 80:
        v_3/*{3}*/ = {-857.222229, 685.051025390625, 149.65020751953125 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 4.5 };
        break;
    case 81:
        v_3/*{3}*/ = {-1287.6497802734375, 443.27069091796875, 94.69190216064453 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 82:
        v_3/*{3}*/ = {374.2012023925781, 416.96881103515625, 142.69769287109375 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -14.0 };
        break;
    case 83:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 186.1134033203125 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 90.0 };
        break;
    case 84:
        v_3/*{3}*/ = {-787.780517578125, 334.9231872558594, 215.83839416503906 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 90.0 };
        break;
    case 85:
        v_3/*{3}*/ = {-773.22583, 322.8251953125, 194.8862 };
        v_3._f3/*{3}*/ = {0.0, 0.0, -90.0 };
        break;
    case 86:
        v_3/*{3}*/ = {-1573.09814453125, -4085.805908203125, 9.7851 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 162.0 };
        break;
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 66:
    case 67:
    case 68:
    case 69:
        v_3/*{3}*/ = {342.8157043457031, -997.4287719726562, -100.0 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 70:
    case 71:
    case 72:
        v_3/*{3}*/ = {260.3297119140625, -997.4287719726562, -100.0 };
        v_3._f3/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    }
    return v_3;
}

auto sub_112b5(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":3}]"
    v_3[0/*1*/] = l_5C;
    v_3[1/*1*/] = l_5D;
    v_3[2/*1*/] = l_5F;
    switch (l_5B) {
    case 0:
        a_0._f10 = 0;
        a_0._f1B = 0;
        a_0._f9/*"24"*/ = "NMT_1_RCM";
        a_0._f19 = 1;
        a_0._f1A = 1;
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::REQUEST_MODEL(v_3[v_7/*1*/]);
        }
        sub_df5e(&a_0._f30, "rcmnigel1", "base_nigel", "base_nigel");
        sub_df5e(&l_60, "rcmnigel1", "base_mrs_thornhill", "base_mrs_thornhill");
        l_5B = 1;
        break;
    case 1:
        if ((!sub_df2d(&v_3)) || (!sub_df03(&a_0._f30))) {
            return 0;
        }
        l_5B = 2;
        break;
    case 2:
        v_9 = 1;
        if (!sub_ddd4(&a_0._f1C[0/*1*/], 64, -1100.5, 789.8, 164.34, 1.82, "RC: NIGEL", 1)) {
            v_9 = 0;
        }
        if (!sub_ddd4(&a_0._f1C[1/*1*/], 63, -1099.3499755859375, 789.15, 164.47, 0.0, "RC: MRS THORNHILL", 1)) {
            v_9 = 0;
        }
        if (!ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            sub_dcfd(&a_0._f23[0/*1*/], l_5F, -1077.958984375, 793.9360961914062, 164.6374053955078, 172.85629272460938);
            if (sub_8e72(a_0._f23[0/*1*/])) {
                VEHICLE::SET_VEHICLE_COLOURS(a_0._f23[0/*1*/], 65, 0);
                VEHICLE::_SET_VEHICLE_DOOR_BREAKABLE(a_0._f23[0/*1*/], 5, 0);
                VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(a_0._f23[0/*1*/], "28BNT310");
                VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(a_0._f23[0/*1*/], 0);
                VEHICLE::SET_VEHICLE_DOORS_LOCKED(a_0._f23[0/*1*/], 10);
                VEHICLE::_0CDDA42F9E360CA6(a_0._f23[0/*1*/], 0);
                VEHICLE::_51BB2D88D31A914B(a_0._f23[0/*1*/], 0);
                VEHICLE::_192547247864DFDD(a_0._f23[0/*1*/], 0);
            }
        }
        if (v_9) {
            l_5B = 3;
        }
        break;
    case 3:
        if (sub_8e72(a_0._f1C[0/*1*/]) && sub_8e72(a_0._f1C[1/*1*/])) {
            PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[0/*1*/], 1);
            PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[1/*1*/], 1);
            v_8 = PED::CREATE_SYNCHRONIZED_SCENE(-1100.557861328125, 789.8861694335938, 163.3284912109375, 0.0, 0.0, 0.0, 2);
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], v_8, "rcmnigel1", "base_nigel", 8.0, -8.0, 0, 0, 0x447a0000, 0);
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[1/*1*/], v_8, "rcmnigel1", "base_mrs_thornhill", 8.0, -8.0, 0, 0, 0x447a0000, 0);
        }
        for (v_7 = 0; v_7 <= (v_3 - 1); v_7 += 1) {
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3[v_7/*1*/]);
        }
        sub_e1b5(37, 1);
        return 1;
        break;
    }
    return 0;
}

auto sub_11556(auto a_0) {
    sub_741e(a_0, &v_3);
    v_23 = sub_6ef2();
    if (v_23 == 145) {
        return 1;
    } else if (((v_23 != 1) && (v_23 != 0)) && (v_23 != 2)) {
        return 1;
    }
    if (!GAMEPLAY::IS_BIT_SET(v_3._f1A, v_23)) {
        return 1;
    }
    return 0;
}

auto sub_115aa(auto a_0) {
    if (is_in_transition) {
        sub_11f55("STEP_3_COMMON_CanRCLaunch - Script denied. Multiplayer is running [TERMINATING]");
        return 0;
    }
    if ((!game_state._f1E27) && (!sub_6fa6(1))) {
        sub_11f55("STEP_3_COMMON_CanRCLaunch - Script denied, game flow is not active");
        return 0;
    }
    if (!sub_11663(a_0)) {
        g_186DF[a_0/*10*/]._f1 = 1;
        sub_11f55("STEP_3_COMMON_CanRCLaunch - Script denied by RC Controller [TERMINATING]");
        return 0;
    }
    if (g_163E2._fB == 6) {
        if (g_163E2 < 9) {
            sub_741e(a_0, &v_3);
            if (GAMEPLAY::ARE_STRINGS_EQUAL(&g_163E2._f3, v_3)) {
                sub_11f55("STEP_3_COMMON_CanRCLaunch - Script denied as a replay for this RC is being configured. [TERMINATING]");
                return 0;
            }
        }
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${candidate_controller}) == 0) {
        g_186DF[a_0/*10*/]._f1 = 1;
        sub_11f55("STEP_3_COMMON_CanRCLaunch - Script denied as candidate_controller is not running. [TERMINATING]");
        return 0;
    }
    return 1;
}

auto sub_11663(auto a_0) {
    sub_741e(a_0, &v_3);
    if (!sub_99fb(4)) {
        if (sub_d8ec(a_0)) {
        } else { 
            return 0;
        }
    }
    if (sub_d8c6() && (!sub_d8a9())) {
        return 0;
    }
    if (sub_11915(a_0)) {
        return 0;
    }
    if (a_0 == -1) {
        a_0 = sub_9c0f();
    }
    if (a_0 == -1) {
        return 0;
    }
    if (!sub_d95e(a_0)) {
        if (!sub_118e7(a_0)) {
            return 0;
        }
        if (!sub_118b9(a_0)) {
            return 0;
        }
        if (sub_1188b(a_0)) {
            return 0;
        }
    }
    if (a_0 == 58) {
        if (sub_11724(5)) {
            g_186DF[a_0/*10*/]._f3 = 0;
        }
    }
    if (g_186DF[a_0/*10*/]._f3 == 1) {
        return 0;
    }
    return 1;
}

auto sub_11724(auto a_0) {
    if (g_16416._f126 == 0) {
        return 0;
    }
    if (a_0 == 10) {
        for (v_3 = 0; v_3 < 10; v_3 += 1) {
            if (sub_11724(v_3)) {
                return 1;
            }
        }
    } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        sub_117a9(a_0, &v_4);
        v_C = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(g_151CD[a_0/*10*/]._f3, &v_4);
        if ((v_C != 0) && (g_16416._f126 == v_C)) {
            return 1;
        }
    }
    return 0;
}

auto sub_117a9(auto a_0, auto a_1) {
    a_1/*"32"*/ = "";
    switch (a_0) {
    case 0:
        a_1/*"32"*/ = "v_michael";
        break;
    case 5:
        a_1/*"32"*/ = "v_franklins";
        break;
    case 6:
        a_1/*"32"*/ = "v_franklinshouse";
        break;
    case 1:
    case 2:
        if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailer")) {
            a_1/*"32"*/ = "v_trailer";
        } else if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailerTidy")) {
            a_1/*"32"*/ = "V_TrailerTIDY";
        } else if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailerTrash")) {
            a_1/*"32"*/ = "V_TrailerTRASH";
        }
        break;
    case 3:
        a_1/*"32"*/ = "v_trevors";
        break;
    case 4:
        a_1/*"32"*/ = "v_strip3";
        break;
    case 7:
    case 8:
    case 9:
        a_1/*"32"*/ = "v_psycheoffice";
        break;
    }
    return !GAMEPLAY::ARE_STRINGS_EQUAL(a_1, "");
}

auto sub_1188b(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 3);
}

auto sub_118b9(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 2);
}

auto sub_118e7(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 0);
}

auto sub_11915(auto a_0) {
    if (sub_d86a(a_0)) {
        return 0;
    } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) != 0) {
            return 1;
        }
    }
    return 0;
}

void sub_1194a() {
    sub_11f55("Running end routines.");
    g_18956 -= 1;
}

auto sub_11964(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0 == 1) {
        if (sub_119c9(a_0[0/*1*/], a_2, a_5, a_1)) {
            return 1;
        }
    } else { 
        for (v_8 = 0; v_8 < a_0; v_8 += 1) {
            if (sub_119c9(a_0[v_8/*1*/], a_2, a_5, a_1)) {
                v_8 = a_0;
                return 1;
            }
        }
    }
    sub_11f55("DETERMINE_RC_TO_LAUNCH - Unable to find mission to launch [TERMINATING]");
    return 0;
}

auto sub_119c9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = 0;
    sub_741e(a_0, &v_9);
    if (sub_11a47(v_9._f6, a_1, a_4, 0)) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 0)) {
            if (!GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 3)) {
                v_8 = 1;
            } else { }
        } else { }
        if (sub_d95e(a_0)) {
            v_8 = 1;
        }
    } else { }
    if (v_8 == 1) {
        a_5 = a_0;
        a_5._f1/*"32"*/ = v_9;
        return 1;
    }
    return 0;
}

auto sub_11a47(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (a_6 < 0.0) {
        a_6 = 0.0;
    }
    if (!a_7) {
        if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
            if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
                if (GAMEPLAY::ABSF(a_0._f2 - a_3._f2) <= a_6) {
                    return 1;
                }
            }
        }
    } else if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
        if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
            return 1;
        }
    }
    return 0;
}

void sub_11ac2(auto a_0, auto a_1, auto a_2) {
    if (a_0 == 43) {
        sub_f65c(&a_0._f1C[1/*1*/]);
    }
    if (UI::DOES_BLIP_EXIST(l_6D)) {
        UI::REMOVE_BLIP(&l_6D);
    }
    if (a_2) {
        sub_11f55("SCRIPT TERMINATING: Cleaning up entities in Launcher");
        if (a_0 == 38) {
            sub_fbe9(4, 1);
            sub_11e89(a_0);
            sub_11f55(" Script_Cleanup - SET_INTERIOR_CAPPED(INTERIOR_V_ROCKCLUB, TRUE)");
        } else if (a_0 == 39) {
            sub_11e05(a_0);
        }
        sub_11c32(a_0, 0, 0, 0);
    }
    sub_e1b5(a_0, 0);
    switch (a_0) {
    case 43:
        if (a_1._f1 != -1) {
            AUDIO::RELEASE_SOUND_ID(a_1._f1);
        }
        break;
    }
    sub_11bfc(&a_0._f30);
    if (l_6C != -1) {
        sub_11f55("SCRIPT TERMINATING: Ending off-mission cutscene request");
        sub_c26d(&l_6C);
    }
    switch (a_0) {
    case 37:
        v_5 = "NIG1A_AMB";
        break;
    }
    sub_11bac(v_5);
    if (a_2) {
        sub_c355(a_0);
    }
    sub_1194a();
    sub_11f55("SCRIPT TERMINATED");
    SCRIPT::TERMINATE_THIS_THREAD();
}

void sub_11bac(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        if (sub_bc33(a_0)) {
            sub_11bcb();
        }
    }
}

void sub_11bcb() {
    g_38F2 = 0;
    sub_11bdb();
}

void sub_11bdb() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
    }
}

auto sub_11bfc(auto a_0) {
    if (sub_c008(a_0)) {
        if (STREAMING::HAS_ANIM_DICT_LOADED(a_0)) {
            STREAMING::REMOVE_ANIM_DICT(a_0);
            a_0 = "";
            a_0._f1 = "";
            return 1;
        }
    }
    return 0;
}

void sub_11c32(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_11d63(a_0, a_1);
    sub_11cdd(a_0, a_2);
    sub_11c52(a_0, a_3);
}

void sub_11c52(auto a_0, auto a_1) {
    sub_11c64(&a_0._f29, a_1);
}

void sub_11c64(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1) {
            sub_c8f4(&a_0[v_4/*1*/]);
        } else { 
            sub_11ca2(&a_0[v_4/*1*/], 0);
        }
    }
}

void sub_11ca2(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        if (!a_1) {
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(a_0);
        } else { 
            OBJECT::_MARK_OBJECT_FOR_DELETION(a_0);
        }
    }
}

void sub_11cdd(auto a_0, auto a_1) {
    sub_11cef(&a_0._f23, a_1);
}

void sub_11cef(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1) {
            sub_dd38(&a_0[v_4/*1*/]);
        } else { 
            sub_11d2c(&a_0[v_4/*1*/]);
        }
    }
}

void sub_11d2c(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        ENTITY::IS_ENTITY_DEAD(a_0);
        if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(a_0, 1)) {
            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
        }
    }
}

void sub_11d63(auto a_0, auto a_1) {
    sub_11d75(&a_0._f1C, a_1);
}

void sub_11d75(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1 == 1) {
            sub_f65c(&a_0[v_4/*1*/]);
        } else { 
            sub_11db6(&a_0[v_4/*1*/], 0, 1, 0);
        }
    }
}

void sub_11db6(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
            if (a_3 == 0) {
                AI::CLEAR_PED_SECONDARY_TASK(a_0);
            }
            PED::SET_PED_KEEP_TASK(a_0, a_1);
            if (a_2 == 1) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
            }
        }
        ENTITY::SET_PED_AS_NO_LONGER_NEEDED(a_0);
    }
}

void sub_11e05(auto a_0) {
    if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(a_0._f3B)) {
        if (sub_8e52(a_0._f1C[1/*1*/])) {
            if (sub_11e56(a_0._f1C[1/*1*/], 0x6a67a5cc)) {
                AI::CLEAR_PED_TASKS(a_0._f1C[1/*1*/]);
            }
            ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(a_0._f1C[1/*1*/], -1000.0, 1);
        }
    }
}

auto sub_11e56(auto a_0, auto a_1) {
    if (sub_8e52(a_0)) {
        if ((AI::GET_SCRIPT_TASK_STATUS(a_0, a_1) == 1) || (AI::GET_SCRIPT_TASK_STATUS(a_0, a_1) == 0)) {
            return 1;
        }
    }
    return 0;
}

void sub_11e89(auto a_0) {
    if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(a_0._f3B)) {
        if (sub_8e52(a_0._f1C[0/*1*/])) {
            if (sub_11e56(a_0._f1C[0/*1*/], 0x6a67a5cc)) {
                AI::CLEAR_PED_TASKS(a_0._f1C[0/*1*/]);
            }
            ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(a_0._f1C[0/*1*/], -1000.0, 1);
        }
        if (sub_8e52(a_0._f1C[1/*1*/])) {
            if (sub_11e56(a_0._f1C[1/*1*/], 0x6a67a5cc)) {
                AI::CLEAR_PED_TASKS(a_0._f1C[1/*1*/]);
            }
            ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(a_0._f1C[1/*1*/], -1000.0, 1);
        }
    }
}

void sub_11f18(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (!(a_0 == g_8B4E)) {
        a_0 = -1;
        return ;
    }
    a_0 = -1;
    g_8B4D = 0;
    g_8B4F = 0;
    g_8B74 = 15;
    g_D968 = 0;
    g_D969 = 0;
}

void sub_11f55(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {}
}

void sub_11f67(auto a_0) {
    a_0 = -1;
    a_0._f1/*"32"*/ = "";
    a_0._fF = 12.0;
    a_0._f10 = 6;
    a_0._f19 = 0;
    a_0._f1A = 0;
    a_0._f1B = 0;
}

void sub_11f9a() {
    sub_11f55("Running start routines.");
    g_18956 += 1;
}

auto sub_11fb4(auto a_0) {
    if (!sub_2f30(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}