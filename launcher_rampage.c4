// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_14 = "NULL";
    l_15 = 0.0;
    l_19 = -0.0375;
    l_1A = 0.17;
    l_1E = 80.0;
    l_1F = 140.0;
    l_20 = 180.0;
    l_23 = 3;
    l_52 = 1;
    l_53 = 65;
    l_54 = 49;
    l_55 = 64;
    l_59 = UI::_4A9923385BDB9DAD();
    l_5A = UI::_GET_BLIP_INFO_ID_ITERATOR();
    l_66 = -0.05;
    l_67 = 0.9200000166893;
    l_68 = 1.94;
    l_69 = 2.99;
    l_6A = 3.7;
    l_6C/*{3}*/ = {1180.968994140625, -402.3810119628906, 67.2 };
    l_6F/*{3}*/ = {5.0, 0.0, 57.33 };
    l_73 = -1;
    l_120 = 77;
    l_121 = -1;
    l_122 = -1;
    l_123 = 1;
    l_124 = 1;
    l_125 = 1;
    GAMEPLAY::_6F2135B6129620C1(1);
    sub_14c39();
    asm .vardef<F> 2, "[{\"type\":\"field\",\"value\":[{\"offset\":17,\"value\":2}]},{\"type\":\"field\",\"value\":[{\"offset\":28,\"value\":6}]},{\"type\":\"field\",\"value\":[{\"offset\":35,\"value\":5}]},{\"type\":\"field\",\"value\":[{\"offset\":41,\"value\":6}]}]"
    v_3F/*{3}*/ = l_12E._f1[0/*3*/];
    g_15A87 = 1;
    sub_14c06(&v_2);
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(83)) {
        sub_14bf4(" Force cleanup [TERMINATING]");
        sub_1484e(&v_2, 1);
    }
    if (!sub_14821(108)) {
        sub_bca1(&v_2, v_3F);
    } else { 
        sub_14e(&v_2, v_3F);
    }
}

void sub_14e(auto a_0, auto a_1, auto a_2, auto a_3) {
    while (1) {
        if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
            sub_14bf4("  Ambient - Player isn't within World Point Range");
            sub_1484e(a_0, 1);
        }
        if (sub_bc88() != 2) {
            sub_14bf4("  Ambient - Player is not Trevor");
            sub_1484e(a_0, 1);
        }
        l_122 = sub_bc0c(5.0);
        if (l_122 != -1) {
            if (!sub_ba70()) {
                a_0 = sub_ba29(l_122);
                a_0._f1/*"32"*/ = sub_b9d5(l_122);
                a_0._f10 = 3;
                a_0._fF = 5.0;
                if (a_0 == -1) {
                    sub_14bf4("  -  Ambient Rampage Mission ID is invalid");
                    sub_1484e(a_0, 1);
                }
                if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_0._f1)) {
                    sub_14bf4("  -  Ambient Rampage Mission ID is invalid");
                    sub_1484e(a_0, 1);
                }
                GAMEPLAY::SET_BIT(&game_state._f4338[a_0/*6*/], 0);
                GAMEPLAY::SET_BIT(&game_state._f4338[a_0/*6*/], 2);
                GAMEPLAY::CLEAR_BIT(&game_state._f4338[a_0/*6*/], 3);
                g_186DF[a_0/*10*/]._f1 = 0;
                if (!sub_b9aa(0)) {
                    g_186DF[a_0/*10*/]._f3 = 0;
                }
                if (!sub_b60a(a_0)) {
                    sub_14bf4(" RC Ambient Can't Launch - Can_RC_Launch Faled");
                    sub_1484e(a_0, 1);
                } else if (!sub_33d(a_0)) {
                    sub_14bf4(" RC Ambient Can't Launch - Launch_RC_Mission Failed");
                    sub_1484e(a_0, 1);
                } else { 
                    sub_30b(500, 1);
                    GAMEPLAY::CLEAR_AREA(a_1, a_0._fF, 1, 0, 0, 0);
                    sub_14bf4(" RC Ambient Launcher Waiting To Terminate");
                    g_186DF[a_0/*10*/]._f1 = 0;
                    if (sub_2ed(a_0)) {
                        sub_14bf4(" Ambient - Ready To Terminate");
                        sub_1484e(a_0, 0);
                    }
                }
            }
        } else { 
            if (sub_2da("RAMP_HELP_TRIG")) {
                UI::CLEAR_HELP(1);
            }
            l_125 = 0;
        }
        SYSTEM::WAIT(0);
    }
}

auto sub_2da(auto a_0) {
    UI::_0A24DA3A41B718F5(a_0);
    return UI::_10BDDBFC529428DD(0);
}

auto sub_2ed(auto a_0) {
    while (!g_186DF[a_0/*10*/]) {
        SYSTEM::WAIT(0);
    }
    return 1;
}

void sub_30b(auto a_0, auto a_1) {
    if (CAM::IS_SCREEN_FADED_IN()) {
        if (!CAM::IS_SCREEN_FADING_OUT()) {
            CAM::DO_SCREEN_FADE_OUT(a_0);
            if (a_1) {
                while (!CAM::IS_SCREEN_FADED_OUT()) {
                    SYSTEM::WAIT(0);
                }
            }
        }
    }
}

auto sub_33d(auto a_0) {
    if (!sub_b5e6()) {
        while (!sub_b3c7(a_0)) {
            if (sub_b386(a_0)) {
                sub_afdb();
            }
            if (!sub_93a7(a_0, a_0 != 2)) {
                sub_14bf4("LAUNCH_RC_MISSION - NOT IS_RC_FINE_AND_IN_RANGE() [TERMINATING]");
                return 0;
            }
            SYSTEM::WAIT(0);
        }
    }
    if (sub_9385()) {
        sub_931e();
    }
    if (!sub_899e(a_0)) {
        sub_14bf4("STEP_7_COMMON_LaunchMission - Trying to launch a null script string name");
        return 0;
    }
    sub_737b(a_0, &v_3);
    v_23/*"16"*/ = sub_6f2e(a_0);
    sub_6eec(&v_23, v_3._f3, 0);
    sub_6e93(a_0);
    if (!sub_b5e6()) {
        if (a_0._f10 == 2) {
            sub_d8f(&a_0._f1, 0);
        } else { 
            sub_d8f(&a_0._f1, 1);
        }
    }
    sub_400(a_0, v_3);
    return 1;
}

void sub_400(auto a_0, auto a_1) {
    sub_d7c(a_1);
    GAMEPLAY::CLEAR_BIT(&game_state._f4338[a_0/*6*/], 5);
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
        while (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
            sub_d10();
            SYSTEM::WAIT(0);
        }
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) < 1) {
        g_D96C = 0;
        SCRIPT::REQUEST_SCRIPT("mission_stat_watcher");
        while (!SCRIPT::HAS_SCRIPT_LOADED("mission_stat_watcher")) {
            SYSTEM::WAIT(0);
        }
        SYSTEM::START_NEW_SCRIPT("mission_stat_watcher", 1828);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED("mission_stat_watcher");
    }
    while (!GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 5)) {
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
            GAMEPLAY::SET_BIT(&game_state._f4338[a_0/*6*/], 5);
        }
    }
    sub_4bf(a_0);
}

void sub_4bf(auto a_0) {
    if (g_D969 == 1) {
        sub_cd7();
        g_D969 = 0;
        if (g_D964) {
            return ;
        }
    }
    if (g_3) {
        g_D96C = 1;
        sub_b6b();
        return ;
    }
    g_D97A/*"16"*/ = sub_b33(a_0);
    g_D96E = 0;
    g_D96D = 0;
    switch (a_0) {
    case 1:
    case 9:
        g_D961 = 1;
        g_D964 = 1;
        g_D967 = 1;
        break;
    case 0:
    case 4:
    case 7:
    case 10:
    case 11:
    case 13:
    case 15:
    case 27:
    case 31:
    case 35:
    case 36:
    case 37:
    case 44:
    case 45:
    case 48:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
        g_D96C = 1;
        g_D96D = 1;
        sub_b6b();
        sub_d10();
        return ;
        break;
    }
    v_3 = g_10940;
    g_10940 = 1;
    v_4 = g_10941;
    g_10941 = a_0;
    if (!g_D961) {
        if (((g_10941 != v_4) || (g_108AA == 0)) || (v_3 != g_10940)) {
            g_6314 = 0;
            sub_b6b();
            sub_6cc(a_0);
        } else { 
            g_D964 = 1;
        }
    }
    g_D987 = GAMEPLAY::GET_GAME_TIMER();
    sub_619();
    g_D96B = 0;
}

void sub_619() {
    if (!g_D968) {
        return ;
    }
    if (g_108AA == 0) {
        return ;
    }
    v_2 = 0;
    for (v_2 = 0; v_2 < g_108AA; v_2 += 1) {
        switch (g_DA4C[g_108AB[v_2/*9*/]/*13*/]) {
        case 1:
        case 9:
            g_108AB[v_2/*9*/]._f3 = 1;
            break;
        case 4:
            if (g_D973) {
                g_108AB[v_2/*9*/]._f3 = 1;
            }
            break;
        case 6:
            if (g_DA4C[g_108AB[v_2/*9*/]/*13*/]._f3) {
                if (g_108AB[v_2/*9*/]._f1 != 0) {
                    g_108AB[v_2/*9*/]._f3 = 1;
                }
            }
            break;
        }
    }
    g_D968 = 0;
}

void sub_6cc(auto a_0) {
    switch (a_0) {
    case 2:
        sub_ab4(741);
        sub_ab4(742);
        return ;
    case 3:
        sub_ab4(743);
        sub_ab4(744);
        return ;
    case 5:
        sub_ab4(745);
        sub_ab4(746);
        return ;
    case 6:
        sub_ab4(747);
        sub_ab4(748);
        return ;
    case 8:
        sub_ab4(749);
        return ;
    case 12:
        sub_ab4(750);
        return ;
    case 14:
        sub_ab4(751);
        sub_ab4(752);
        return ;
    case 16:
        sub_ab4(753);
        sub_ab4(754);
        return ;
    case 17:
        sub_ab4(755);
        sub_ab4(756);
        sub_ab4(757);
        return ;
    case 18:
        sub_ab4(758);
        sub_ab4(759);
        return ;
    case 19:
        sub_ab4(760);
        sub_ab4(761);
        return ;
    case 20:
        sub_ab4(762);
        return ;
    case 21:
        sub_ab4(763);
        return ;
    case 22:
        sub_ab4(764);
        sub_ab4(765);
        return ;
    case 23:
        sub_ab4(766);
        return ;
    case 25:
        sub_ab4(767);
        sub_ab4(768);
        sub_ab4(769);
        return ;
    case 26:
        sub_ab4(770);
        sub_ab4(771);
        return ;
    case 28:
        sub_ab4(772);
        sub_ab4(773);
        return ;
    case 29:
        sub_ab4(774);
        sub_ab4(775);
        return ;
    case 30:
        sub_ab4(776);
        sub_ab4(777);
        return ;
    case 32:
        sub_ab4(778);
        sub_ab4(779);
        return ;
    case 33:
        sub_ab4(780);
        sub_ab4(781);
        sub_ab4(782);
        return ;
    case 34:
        sub_ab4(783);
        sub_ab4(784);
        return ;
    case 38:
        sub_ab4(785);
        sub_ab4(786);
        return ;
    case 39:
        sub_ab4(787);
        sub_ab4(788);
        return ;
    case 40:
        sub_ab4(789);
        return ;
    case 41:
        sub_ab4(790);
        sub_ab4(791);
        sub_ab4(792);
        return ;
    case 42:
        sub_ab4(793);
        sub_ab4(794);
        sub_ab4(795);
        return ;
    case 43:
        sub_ab4(796);
        sub_ab4(797);
        return ;
    case 46:
        sub_ab4(798);
        sub_ab4(799);
        return ;
    }
    switch (a_0) {
    case 47:
        sub_ab4(800);
        sub_ab4(801);
        return ;
    case 49:
        sub_ab4(802);
        sub_ab4(803);
        return ;
    case 50:
        sub_ab4(804);
        sub_ab4(805);
        return ;
    case 51:
        sub_ab4(806);
        return ;
    case 57:
        sub_ab4(807);
        sub_ab4(808);
        sub_ab4(809);
        return ;
    case 58:
        sub_ab4(828);
        sub_ab4(829);
        sub_ab4(830);
        return ;
    case 59:
        sub_ab4(831);
        sub_ab4(832);
        sub_ab4(833);
        return ;
    case 60:
        sub_ab4(834);
        sub_ab4(835);
        sub_ab4(836);
        return ;
    case 61:
        sub_ab4(837);
        sub_ab4(838);
        sub_ab4(839);
        return ;
    case 62:
        sub_ab4(840);
        sub_ab4(841);
        sub_ab4(842);
        return ;
    case 24:
        sub_ab4(843);
        sub_ab4(844);
        sub_ab4(845);
        return ;
    }
}

void sub_ab4(auto a_0) {
    g_D964 = 1;
    g_D967 = 1;
    if (g_108AA > 15) {
        return ;
    }
    sub_aff(g_108AA);
    g_108AB[g_108AA/*9*/] = a_0;
    g_108AA += 1;
    if (g_DA4C[a_0/*13*/] == 16) {
        g_10942 = 1;
    }
}

void sub_aff(auto a_0) {
    g_108AB[a_0/*9*/]._f1 = 0;
    g_108AB[a_0/*9*/]._f2 = 0.0;
    g_108AB[a_0/*9*/]._f3 = 0;
    g_108AB[a_0/*9*/]._f4 = 0;
}

auto<2> sub_b33(auto a_0) {
    v_3/*"8"*/ = "";
    v_5/*{2}*/ = sub_6f2e(a_0);
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_5)) {
    } else { 
        v_3/*"8"*/ = "RC_";
        v_3/*8*/ += v_5;
    }
    return v_3;
}

void sub_b6b() {
    if (g_D96B) {
        return ;
    }
    g_D974 = 0;
    g_108AA = 0;
    g_D976 = 0;
    if (g_D973) {}
    g_D973 = 0;
    sub_cc3(0);
    sub_c99();
    g_10942 = 0;
    g_D96A = 1;
    sub_c31();
    sub_c25();
    sub_bee();
    sub_bc1();
    g_D961 = 0;
    g_D97F = 0;
    g_D987 = -1;
}

void sub_bc1() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 4; v_2 += 1) {
        g_10965[v_2/*2*/]._f1 = -1;
    }
    g_1096E = 0;
}

void sub_bee() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 16; v_2 += 1) {
        g_10943[v_2/*2*/] = 0;
        g_10943[v_2/*2*/]._f1 = -1;
    }
    g_10964 = 0;
}

void sub_c25() {
    g_DA0A = 0;
}

void sub_c31() {
    g_D97E = 0;
    g_D982 = sub_c85(0xd8146ad1);
    g_D981 = sub_c85(0x82feb19d);
    g_D984 = sub_c85(0x8eaf083b);
    g_D983 = sub_c85(0x786bbd76);
    g_D986 = sub_c85(0x9c1a8ca0);
    g_D985 = sub_c85(0x9d82ded);
}

auto sub_c85(auto a_0) {
    STATS::STAT_GET_INT(a_0, &v_3, -1);
    return v_3;
}

void sub_c99() {
    g_D988 = 0;
    v_2 = 0;
    for (v_2 = 0; v_2 < 64; v_2 += 1) {
        g_D989[v_2/*2*/] = 0;
    }
}

void sub_cc3(auto a_0) {
    g_10FC9 = a_0;
    g_10FCA = a_0;
}

void sub_cd7() {
    g_D969 = 1;
    v_2 = 0;
    for (v_2 = 0; v_2 < g_108AA; v_2 += 1) {
        g_108AB[v_2/*9*/]._f3 = 2;
    }
    if (g_D973) {}
    g_D973 = 0;
}

void sub_d10() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) > 0) {
        if (sub_d52()) {
            if (g_D966 && (!g_D965)) {
                g_D966 = 0;
                GAMEPLAY::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
            }
        } else { 
            GAMEPLAY::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME("mission_stat_watcher");
        }
    }
}

auto sub_d52() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${mission_stat_watcher}) < 1) {
        return 0;
    }
    if (!g_D964) {
        return 0;
    } else { }
    return g_D970;
}

void sub_d7c(auto a_0) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, a_0)) {}
}

void sub_d8f(auto a_0, auto a_1) {
    GAMEPLAY::CLEAR_BIT(&g_163E2._f14, 17);
    sub_dac(a_0, a_1, 0);
}

void sub_dac(auto a_0, auto a_1, auto a_2) {
    if ((g_163E2 != 10) && (g_163E2 != 9)) {
        g_16AEE/*"32"*/ = a_0;
        sub_1a85(&g_16AF6, a_0, 0, "Start", a_1, a_2);
        sub_df1();
        g_14E71 = 0;
    } else { }
}

void sub_df1() {
    g_1745B = g_16AF6;
    g_1745B._f1 = g_16AF6._f1;
    g_1745B._f6 = g_16AF6._f6;
    g_1745B._f7 = g_16AF6._f7;
    g_1745B._f8 = g_16AF6._f8;
    g_1745B._f2 = g_16AF6._f2;
    g_1745B._f3 = g_16AF6._f3;
    g_1745B._f4 = g_16AF6._f4;
    g_1745B._f5 = g_16AF6._f5;
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        g_1745B._f9[v_3/*1*/] = g_16AF6._f9[v_3/*1*/];
        g_1745B._fD[v_3/*1*/] = g_16AF6._fD[v_3/*1*/];
        g_1745B._f11[v_3/*1*/] = g_16AF6._f11[v_3/*1*/];
        g_1745B._f15[v_3/*1*/] = g_16AF6._f15[v_3/*1*/];
        g_1745B._f19[0/*295*/][v_3/*98*/]/*{98}*/ = g_16AF6._f19[0/*295*/][v_3/*98*/];
        g_1745B._f19[1/*295*/][v_3/*98*/]/*{98}*/ = g_16AF6._f19[1/*295*/][v_3/*98*/];
        for (v_2 = 0; v_2 < 12; v_2 += 1) {
            g_1745B._f268[v_3/*65*/][v_2/*1*/] = g_16AF6._f268[v_3/*65*/][v_2/*1*/];
            g_1745B._f268[v_3/*65*/]._fD[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._fD[v_2/*1*/];
            g_1745B._f268[v_3/*65*/]._f1A[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._f1A[v_2/*1*/];
        }
        g_1745B._f268[v_3/*65*/]._f3B = g_16AF6._f268[v_3/*65*/]._f3B;
        g_1745B._f268[v_3/*65*/]._f3C = g_16AF6._f268[v_3/*65*/]._f3C;
        g_1745B._f268[v_3/*65*/]._f3D = g_16AF6._f268[v_3/*65*/]._f3D;
        g_1745B._f268[v_3/*65*/]._f3E = g_16AF6._f268[v_3/*65*/]._f3E;
        g_1745B._f268[v_3/*65*/]._f3F = g_16AF6._f268[v_3/*65*/]._f3F;
        g_1745B._f268[v_3/*65*/]._f40 = g_16AF6._f268[v_3/*65*/]._f40;
        for (v_2 = 0; v_2 < 9; v_2 += 1) {
            g_1745B._f268[v_3/*65*/]._f27[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._f27[v_2/*1*/];
            g_1745B._f268[v_3/*65*/]._f31[v_2/*1*/] = g_16AF6._f268[v_3/*65*/]._f31[v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 44; v_2 += 1) {
            g_1745B._f32C[v_3/*284*/][v_2/*3*/]/*{3}*/ = g_16AF6._f32C[v_3/*284*/][v_2/*3*/];
        }
        for (v_2 = 0; v_2 < 50; v_2 += 1) {
            g_1745B._f32C[v_3/*284*/]._f85[v_2/*3*/]/*{3}*/ = g_16AF6._f32C[v_3/*284*/]._f85[v_2/*3*/];
        }
        for (v_2 = 0; v_2 < 4; v_2 += 1) {
            g_1745B._f681[v_3/*32*/][v_2/*1*/] = g_16AF6._f681[v_3/*32*/][v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 10; v_2 += 1) {
            g_1745B._f681[v_3/*32*/]._f5[v_2/*1*/] = g_16AF6._f681[v_3/*32*/]._f5[v_2/*1*/];
        }
        for (v_2 = 0; v_2 < 15; v_2 += 1) {
            g_1745B._f681[v_3/*32*/]._f10[v_2/*1*/] = g_16AF6._f681[v_3/*32*/]._f10[v_2/*1*/];
        }
        g_1745B._f6E2[v_3/*1*/] = g_16AF6._f6E2[v_3/*1*/];
        for (v_2 = 0; v_2 <= 3; v_2 += 1) {
            g_1745B._f8D3[v_3/*15*/][v_2/*1*/] = g_16AF6._f8D3[v_3/*15*/][v_2/*1*/];
            g_1745B._f8D3[v_3/*15*/]._f5[v_2/*1*/] = g_16AF6._f8D3[v_3/*15*/]._f5[v_2/*1*/];
            g_1745B._f8D3[v_3/*15*/]._fA[v_2/*1*/] = g_16AF6._f8D3[v_3/*15*/]._fA[v_2/*1*/];
        }
        for (v_2 = 0; v_2 <= 2; v_2 += 1) {
            g_1745B._f6E6[v_3/*164*/][v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/][v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f4[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f4[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f8[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f8[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._fC[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._fC[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f10[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f10[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f14[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f14[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f18[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f18[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f1C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f1C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f20[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f20[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f24[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f24[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f28[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f28[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f2C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f2C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f30[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f30[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f34[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f34[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f38[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f38[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f3C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f3C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f40[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f40[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f44[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f44[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f48[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f48[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f4C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f4C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f50[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f50[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f54[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f54[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f58[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f58[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f5C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f5C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f60[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f60[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f64[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f64[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f68[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f68[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f6C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f6C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f70[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f70[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f74[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f74[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f78[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f78[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f7C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f7C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f80[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f80[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f84[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f84[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f88[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f88[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f8C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f8C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f90[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f90[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f94[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f94[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f98[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f98[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._f9C[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._f9C[v_2/*1*/];
            g_1745B._f6E6[v_3/*164*/]._fA0[v_2/*1*/] = g_16AF6._f6E6[v_3/*164*/]._fA0[v_2/*1*/];
        }
    }
    g_1745B._f901/*{3}*/ = g_16AF6._f901;
    g_1745B._f901._f3 = g_16AF6._f901._f3;
    g_1745B._f907/*{3}*/ = g_16AF6._f907;
    g_1745B._f907._f3/*{3}*/ = g_16AF6._f907._f3;
    g_1745B._f907._f6 = g_16AF6._f907._f6;
    g_1745B._f907._f8 = g_1745B._f907._f8;
    g_1745B._f907._f7 = g_16AF6._f907._f7;
    g_1745B._f907._f9 = g_16AF6._f907._f9;
    g_1745B._f907._fB = g_16AF6._f907._fB;
    g_1745B._f907._fA = g_16AF6._f907._fA;
    g_1745B._f907._fC = g_16AF6._f907._fC;
    g_1745B._f907._fC._f1/*{4}*/ = g_16AF6._f907._fC._f1;
    g_1745B._f907._fC._f5 = g_16AF6._f907._fC._f5;
    g_1745B._f907._fC._f6 = g_16AF6._f907._fC._f6;
    g_1745B._f907._fC._f7 = g_16AF6._f907._fC._f7;
    g_1745B._f907._fC._f8 = g_16AF6._f907._fC._f8;
    g_1745B._f907._fC._f9/*{50}*/ = g_16AF6._f907._fC._f9;
    g_1745B._f907._fC._f3B/*{3}*/ = g_16AF6._f907._fC._f3B;
    g_1745B._f907._fC._f3E = g_16AF6._f907._fC._f3E;
    g_1745B._f907._fC._f3F = g_16AF6._f907._fC._f3F;
    g_1745B._f907._fC._f40 = g_16AF6._f907._fC._f40;
    g_1745B._f907._fC._f41 = g_16AF6._f907._fC._f41;
    g_1745B._f907._fC._f4D = g_16AF6._f907._fC._f4D;
    g_1745B._f907._fC._f42 = g_16AF6._f907._fC._f42;
    g_1745B._f907._fC._f43 = g_16AF6._f907._fC._f43;
    g_1745B._f907._fC._f44 = g_16AF6._f907._fC._f44;
    g_1745B._f907._fC._f45 = g_16AF6._f907._fC._f45;
    g_1745B._f907._fC._f47 = g_16AF6._f907._fC._f47;
    g_1745B._f907._fC._f48 = g_16AF6._f907._fC._f48;
    g_1745B._f907._fC._f49 = g_16AF6._f907._fC._f49;
    g_1745B._f907._fC._f4A = g_16AF6._f907._fC._f4A;
    g_1745B._f907._fC._f4B = g_16AF6._f907._fC._f4B;
    g_1745B._f907._fC._f4C = g_16AF6._f907._fC._f4C;
    g_1745B._f961 = g_16AF6._f961;
    g_1745B._f961._f1 = g_16AF6._f961._f1;
    g_1745B._f961._f2 = g_16AF6._f961._f2;
    g_1745B._f961._f3 = g_16AF6._f961._f3;
}

void sub_1a85(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_0 = sub_bc88();
    a_0._f1 = sub_6ba7();
    GAMEPLAY::_GET_WEATHER_TYPE_TRANSITION(&a_0._f6, &a_0._f7, &a_0._f8);
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        sub_537a(&a_0._f901, 0);
        sub_533e(PLAYER::PLAYER_PED_ID());
        sub_4198(PLAYER::PLAYER_PED_ID(), 0);
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &a_0._f2, 1);
        if ((a_0._f2 == 0) || (a_0._f2 == ${object})) {
            a_0._f2 = ${weapon_unarmed};
        }
    }
    for (v_9 = 0; v_9 < 3; v_9 += 1) {
        a_0._f11[v_9/*1*/] = game_state._f6EA._f21B._f126[v_9/*1*/];
        if (v_9 == sub_4074()) {
            sub_36a2(PLAYER::PLAYER_PED_ID(), &a_0._f268[v_9/*65*/], 1);
        } else { 
            for (v_8 = 0; v_8 < 12; v_8 += 1) {
                a_0._f268[v_9/*65*/][v_8/*1*/] = g_16310[v_9/*65*/][v_8/*1*/];
                a_0._f268[v_9/*65*/]._fD[v_8/*1*/] = g_16310[v_9/*65*/]._fD[v_8/*1*/];
            }
            a_0._f268[v_9/*65*/]._f3B = g_16310[v_9/*65*/]._f3B;
            a_0._f268[v_9/*65*/]._f3C = g_16310[v_9/*65*/]._f3C;
            a_0._f268[v_9/*65*/]._f3D = g_16310[v_9/*65*/]._f3D;
            a_0._f268[v_9/*65*/]._f3E = g_16310[v_9/*65*/]._f3E;
            a_0._f268[v_9/*65*/]._f3F = g_16310[v_9/*65*/]._f3F;
            a_0._f268[v_9/*65*/]._f40 = g_16310[v_9/*65*/]._f40;
            for (v_8 = 0; v_8 < 9; v_8 += 1) {
                a_0._f268[v_9/*65*/]._f27[v_8/*1*/] = g_16310[v_9/*65*/]._f27[v_8/*1*/];
                a_0._f268[v_9/*65*/]._f31[v_8/*1*/] = g_16310[v_9/*65*/]._f31[v_8/*1*/];
            }
        }
        for (v_8 = 0; v_8 < 44; v_8 += 1) {
            a_0._f32C[v_9/*284*/][v_8/*3*/]/*{3}*/ = game_state._f6EA._f21B._f12A[v_9/*284*/][v_8/*3*/];
        }
        for (v_8 = 0; v_8 < 50; v_8 += 1) {
            a_0._f32C[v_9/*284*/]._f85[v_8/*3*/]/*{3}*/ = game_state._f6EA._f21B._f12A[v_9/*284*/]._f85[v_8/*3*/];
        }
        switch (v_9) {
        case 0:
            STATS::STAT_GET_INT(0xbbe7bea0, &a_0._f681[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xbd0ac0e6, &a_0._f681[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0x407407aa, &a_0._f681[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xae46634d, &a_0._f681[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0xd25eab9d, &a_0._f681[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0xbf938607, &a_0._f681[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0x876d959c, &a_0._f681[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0x87af642a, &a_0._f681[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x4ee77297, &a_0._f681[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x2d4e2f65, &a_0._f681[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0xf079b5bd, &a_0._f681[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0x40b7d638, &a_0._f681[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0x13e87c9a, &a_0._f681[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0xe22a991f, &a_0._f681[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0xa9322733, &a_0._f681[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0xf77e43c6, &a_0._f681[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0xccfeeecc, &a_0._f681[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0xa43cfe56, &a_0._f681[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0x72301a3d, &a_0._f681[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf875dedc, &a_0._f681[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xb5b048e, &a_0._f681[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0xd3eebb4e, &a_0._f681[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xb9588622, &a_0._f681[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0x3d718e5a, &a_0._f681[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0x6b5d6a31, &a_0._f681[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0x9058b423, &a_0._f681[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0xb19a20d6, &a_0._f681[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x84614665, &a_0._f681[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x6f2a1bf7, &a_0._f681[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0xe6fe8b9e, &a_0._f681[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0xf8c12f23, &a_0._f681[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0xc31bc3d9, &a_0._f681[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0xd4596654, &a_0._f681[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0x2d381820, &a_0._f681[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0x40febfad, &a_0._f681[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0x9c7512f, &a_0._f681[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0x5fd50bf0, &a_0._f681[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0x9198ef77, &a_0._f681[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xa967697, &a_0._f681[v_9/*32*/][0/*1*/], -1);
            STATS::STAT_GET_INT(0xe4562a17, &a_0._f681[v_9/*32*/][1/*1*/], -1);
            STATS::STAT_GET_INT(0x6aaef0a, &a_0._f681[v_9/*32*/]._f5[0/*1*/], -1);
            STATS::STAT_GET_INT(0xf4614a77, &a_0._f681[v_9/*32*/]._f5[1/*1*/], -1);
            STATS::STAT_GET_INT(0xe96f3493, &a_0._f681[v_9/*32*/]._f5[2/*1*/], -1);
            STATS::STAT_GET_INT(0xdaac970e, &a_0._f681[v_9/*32*/]._f5[3/*1*/], -1);
            STATS::STAT_GET_INT(0xcd6f7c94, &a_0._f681[v_9/*32*/]._f5[4/*1*/], -1);
            STATS::STAT_GET_INT(0xd87a875, &a_0._f681[v_9/*32*/]._f10[0/*1*/], -1);
            STATS::STAT_GET_INT(0x8d73284e, &a_0._f681[v_9/*32*/]._f10[1/*1*/], -1);
            STATS::STAT_GET_INT(0x734bf3fc, &a_0._f681[v_9/*32*/]._f10[2/*1*/], -1);
            STATS::STAT_GET_INT(0x41ec913e, &a_0._f681[v_9/*32*/]._f10[3/*1*/], -1);
            STATS::STAT_GET_INT(0x581ebda2, &a_0._f681[v_9/*32*/]._f10[4/*1*/], -1);
            STATS::STAT_GET_INT(0xcc81a66a, &a_0._f681[v_9/*32*/]._f10[5/*1*/], -1);
            STATS::STAT_GET_INT(0x9ab3c2cf, &a_0._f681[v_9/*32*/]._f10[6/*1*/], -1);
            STATS::STAT_GET_INT(0xb0deef25, &a_0._f681[v_9/*32*/]._f10[7/*1*/], -1);
            STATS::STAT_GET_INT(0x7f240bb0, &a_0._f681[v_9/*32*/]._f10[8/*1*/], -1);
            STATS::STAT_GET_INT(0xff888c7b, &a_0._f681[v_9/*32*/]._f10[9/*1*/], -1);
            STATS::STAT_GET_INT(0xffba48db, &a_0._f681[v_9/*32*/]._f10[10/*1*/], -1);
            STATS::STAT_GET_INT(0xf293ae8e, &a_0._f681[v_9/*32*/]._f10[11/*1*/], -1);
            break;
        }
        a_0._f9[v_9/*1*/] = game_state._f61C9._fE9[v_9/*69*/]._f1;
        a_0._fD[v_9/*1*/] = g_CE62[v_9/*1*/];
        a_0._f19[0/*295*/][v_9/*98*/]/*{98}*/ = game_state._f6EA._f21B._f663[0/*295*/][v_9/*98*/];
        a_0._f19[1/*295*/][v_9/*98*/]/*{98}*/ = game_state._f6EA._f21B._f663[1/*295*/][v_9/*98*/];
        for (v_8 = 0; v_8 <= 3; v_8 += 1) {
            a_0._f8D3[v_9/*15*/][v_8/*1*/] = game_state._f6EA._f1ED[v_9/*15*/][v_8/*1*/];
            a_0._f8D3[v_9/*15*/]._f5[v_8/*1*/] = game_state._f6EA._f1ED[v_9/*15*/]._f5[v_8/*1*/];
            a_0._f8D3[v_9/*15*/]._fA[v_8/*1*/] = game_state._f6EA._f1ED[v_9/*15*/]._fA[v_8/*1*/];
        }
        for (v_8 = 0; v_8 <= 2; v_8 += 1) {
            a_0._f6E6[v_9/*164*/][v_8/*1*/] = game_state._f6EA[v_9/*164*/][v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f4[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f4[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f8[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f8[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._fC[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._fC[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f10[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f10[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f14[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f14[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f18[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f18[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f1C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f1C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f20[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f20[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f24[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f24[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f28[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f28[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f2C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f2C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f30[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f30[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f34[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f34[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f38[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f38[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f3C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f3C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f40[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f40[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f44[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f44[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f48[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f48[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f4C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f4C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f50[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f50[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f54[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f54[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f58[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f58[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f5C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f5C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f60[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f60[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f64[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f64[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f68[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f68[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f6C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f6C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f70[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f70[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f74[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f74[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f78[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f78[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f7C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f7C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f80[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f80[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f84[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f84[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f88[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f88[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f8C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f8C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f90[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f90[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f94[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f94[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f98[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f98[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._f9C[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._f9C[v_8/*1*/];
            a_0._f6E6[v_9/*164*/]._fA0[v_8/*1*/] = game_state._f6EA[v_9/*164*/]._fA0[v_8/*1*/];
        }
    }
    STATS::STAT_GET_INT(0xdcdd4ca8, &a_0._f6E2[0/*1*/], -1);
    STATS::STAT_GET_INT(0x15151676, &a_0._f6E2[1/*1*/], -1);
    STATS::STAT_GET_INT(0x78fe7a3, &a_0._f6E2[2/*1*/], -1);
    a_0._f5 = 145;
    if (a_4 == 1) {
        sub_292f(&a_0._f907, a_0, a_5, 1, 1, 0);
    }
    sub_290d(&a_0._f961);
    a_3 = a_3;
    a_2 = a_2;
}

auto sub_290d(auto a_0) {
    a_0 = g_154F8;
    a_0._f1 = g_154F9;
    a_0._f2 = 0;
    a_0._f3 = 0;
    return 1;
}

void sub_292f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_2 == 0) {
        a_2 = PLAYER::PLAYER_PED_ID();
    } else { }
    if (ENTITY::DOES_ENTITY_EXIST(a_2)) {
        a_1._f5 = sub_363b(a_2);
    }
    if (sub_33c4(a_2, &v_8, a_3, a_5)) {
        sub_29b6(a_0, a_1, v_8, a_4);
    } else if (ENTITY::DOES_ENTITY_EXIST(v_8)) {
        if (!ENTITY::IS_ENTITY_DEAD(v_8)) {
            if (VEHICLE::IS_VEHICLE_MODEL(v_8, ${skylift}) && PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_8, 0)) {
                sub_29b6(a_0, a_1, v_8, a_4);
            }
        }
    }
}

auto sub_29b6(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_2, 0)) {
        sub_2a24(a_0, a_2, a_3);
        a_1._f4 = a_2;
        if (sub_29f6(a_2)) {
            a_1._f3 = 1;
        } else { 
            a_1._f3 = 0;
        }
        return 1;
    } else { }
    return 0;
}

auto sub_29f6(auto a_0) {
    for (v_3 = 0; v_3 <= 6; v_3 += 1) {
        if (g_163E2._f16[v_3/*1*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

void sub_2a24(auto a_0, auto a_1, auto a_2) {
    sub_2edd(a_1, &a_0._fC);
    a_0._f7 = sub_2ba5(a_1, 145, 0);
    a_0._fB = sub_2b42(a_1);
    if (!a_0._f7) {
        if (!a_0._fA) {
            a_0._fA = sub_2b00(a_1);
        }
    }
    if (a_2 == 1) {
        a_0/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_1, 1);
        a_0._f6 = ENTITY::GET_ENTITY_HEADING(a_1);
        a_0._f3/*{3}*/ = ENTITY::GET_ENTITY_VELOCITY(a_1);
        if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(a_1, -1154.3255615234375, -1523.871337890625, 3.2621889114379883, -1158.4525146484375, -1517.7496337890625, 6.374244213104248, 13.0, 0, 1, 0)) {
            a_0/*{3}*/ = {-1160.0950927734375, -1515.406982421875, 3.1496 };
            a_0._f6 = 305.64239501953125;
        }
        if (g_10DE3 == a_1) {
            a_0._f9 = 1;
        }
    }
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
        a_0._f8 = 1;
    } else { 
        a_0._f8 = 0;
    }
}

auto sub_2b00(auto a_0) {
    for (v_3 = 0; v_3 < 68; v_3 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_10A5A._f1E4[v_3/*1*/])) {
            if (a_0 == g_10A5A._f1E4[v_3/*1*/]) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_2b42(auto a_0) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 145;
    }
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 145;
    }
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_15AC2[v_3/*1*/])) {
            if (g_15AC2[v_3/*1*/] == a_0) {
                return g_15ACC[v_3/*1*/];
            }
        }
    }
    return 145;
}

auto sub_2ba5(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 0;
    }
    for (v_5 = 0; v_5 < 9; v_5 += 1) {
        if (ENTITY::DOES_ENTITY_EXIST(g_15AC2[v_5/*1*/])) {
            if (g_15AC2[v_5/*1*/] == a_0) {
                if ((a_1 == 145) || (a_1 == g_15ACC[v_5/*1*/])) {
                    if ((a_2 == 0) || (ENTITY::GET_ENTITY_MODEL(a_0) == sub_2c33(a_1, a_2))) {
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_2c33(auto a_0, auto a_1) {
    if (sub_2ed1(a_0)) {
        asm .vardef<F> 4, "[{\"type\":\"field\",\"value\":[{\"offset\":11,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":31,\"value\":49}]},{\"type\":\"field\",\"value\":[{\"offset\":81,\"value\":2}]}]"
        sub_2c75(a_0, &v_4, a_1);
        return v_4;
    } else if (a_0 != 145) {}
    return 0;
}

void sub_2c75(auto a_0, auto a_1, auto a_2) {
    a_1._f58 = 1;
    a_1._f54 = 255;
    a_1._f55 = 255;
    a_1._f56 = 255;
    a_1._f61 = 1;
    a_1._f3 = 1000;
    a_1._f1 = 0;
    switch (a_0) {
    case 0:
        v_5 = ${tailgater};
        if (game_state._f1E27._f63._f3A[128/*1*/] && (!game_state._f1E27._f63._f3A[131/*1*/])) {
            v_5 = ${premier};
        }
        switch (v_5) {
        case ${tailgater}:
            a_1 = v_5;
            a_1._f2 = 3.0;
            a_1._f4 = 0;
            a_1._f9 = 1;
            a_1._fB[0/*1*/] = 1;
            a_1._f1B/*"16"*/ = "5MDS003";
            break;
        case ${premier}:
            a_1 = v_5;
            a_1._f2 = 14.899999999999999;
            a_1._f5 = 43;
            a_1._f6 = 43;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._f9 = 0;
            a_1._f1B/*"16"*/ = "880HS955";
            break;
        }
        break;
    case 2:
        v_5 = ${bodhi2};
        switch (v_5) {
        case ${bodhi2}:
            a_1 = v_5;
            a_1._f2 = 14.0;
            a_1._f5 = 32;
            a_1._f6 = 0;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._f1B/*"16"*/ = "BETTY 32";
            if (game_state._f1E27._f63._f3A[119/*1*/]) {
                a_1._fB[1/*1*/] = 1;
            }
            break;
        }
        break;
    case 1:
        if (a_2 == 1) {
            v_5 = ${buffalo2};
        } else if (a_2 == 2) {
            v_5 = ${bagger};
        } else if (game_state._f1E27._f63._f3A[118/*1*/]) {
            v_5 = ${bagger};
        } else { 
            v_5 = ${buffalo2};
        }
        switch (v_5) {
        case ${bagger}:
            a_1 = v_5;
            a_1._f2 = 6.0;
            a_1._f5 = 53;
            a_1._f6 = 0;
            a_1._f7 = 59;
            a_1._f8 = 156;
            a_1._f1B/*"16"*/ = "FC88";
            break;
        case ${buffalo2}:
            a_1 = v_5;
            a_1._f2 = 0.0;
            a_1._f5 = 111;
            a_1._f6 = 111;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._fA = 1;
            a_1._f1B/*"16"*/ = "FC1988";
            a_1._fB[0/*1*/] = 1;
            a_1._fB[1/*1*/] = 1;
            a_1._fB[2/*1*/] = 1;
            a_1._fB[3/*1*/] = 1;
            a_1._fB[4/*1*/] = 1;
            a_1._fB[5/*1*/] = 1;
            a_1._fB[6/*1*/] = 1;
            a_1._fB[7/*1*/] = 1;
            a_1._fB[8/*1*/] = 1;
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_2ed1(auto a_0) {
    return a_0 < 3;
}

void sub_2edd(auto a_0, auto a_1) {
    if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        sub_3313(a_1);
        a_1._f42 = ENTITY::GET_ENTITY_MODEL(a_0);
        a_1._f1/*"16"*/ = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(a_0);
        a_1 = VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(a_0);
        VEHICLE::GET_VEHICLE_COLOURS(a_0, &a_1._f5, &a_1._f6);
        VEHICLE::GET_VEHICLE_EXTRA_COLOURS(a_0, &a_1._f7, &a_1._f8);
        VEHICLE::GET_VEHICLE_TYRE_SMOKE_COLOR(a_0, &a_1._f3E, &a_1._f3F, &a_1._f40);
        a_1._f41 = VEHICLE::GET_VEHICLE_WINDOW_TINT(a_0);
        a_1._f43 = VEHICLE::GET_VEHICLE_LIVERY(a_0);
        a_1._f45 = VEHICLE::GET_VEHICLE_WHEEL_TYPE(a_0);
        a_1._f46 = VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(a_0);
        VEHICLE::GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(a_0, &a_1._f47, &a_1._f48, &a_1._f49);
        VEHICLE::_GET_VEHICLE_NEON_LIGHTS_COLOUR(a_0, &a_1._f4A, &a_1._f4B, &a_1._f4C);
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 2)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 28);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 3)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 29);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 30);
        }
        if (VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(a_0, 1)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 31);
        }
        if ((a_1._f41 == -1) && (a_1._f42 != ${granger})) {
            a_1._f41 = 0;
        }
        if (VEHICLE::IS_VEHICLE_A_CONVERTIBLE(a_0, 0)) {
            a_1._f44 = VEHICLE::GET_CONVERTIBLE_ROOF_STATE(a_0);
        }
        if (VEHICLE::IS_THIS_MODEL_A_PLANE(a_1._f42)) {
            if (VEHICLE::_4198AB0022B15F87(a_0)) {
                switch (VEHICLE::_GET_VEHICLE_LANDING_GEAR(a_0)) {
                case 0:
                case 2:
                    GAMEPLAY::CLEAR_BIT(&a_1._f4D, 23);
                    GAMEPLAY::SET_BIT(&a_1._f4D, 22);
                    break;
                case 1:
                case 3:
                    GAMEPLAY::CLEAR_BIT(&a_1._f4D, 23);
                    GAMEPLAY::CLEAR_BIT(&a_1._f4D, 22);
                    break;
                case 4:
                    GAMEPLAY::SET_BIT(&a_1._f4D, 23);
                    break;
                }
            } else { 
                GAMEPLAY::SET_BIT(&a_1._f4D, 23);
            }
        }
        if (!VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 9);
        }
        if (VEHICLE::IS_VEHICLE_STOLEN(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 10);
        }
        if (VEHICLE::GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 13);
            VEHICLE::GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(a_0, &a_1._f47, &a_1._f48, &a_1._f49);
        } else { }
        if (VEHICLE::GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(a_0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 12);
        }
        sub_3239(&a_0, &a_1._f9, &a_1._f3B);
        for (v_4 = 0; v_4 <= 11; v_4 += 1) {
            if (VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(a_0, v_4 + 1)) {
                GAMEPLAY::SET_BIT(&a_1._f4D, sub_3189(v_4 + 1));
            }
        }
        if (GRAPHICS::_HAS_VEHICLE_GOT_DECAL(a_0, 0)) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 11);
        } else { 
            GAMEPLAY::CLEAR_BIT(&a_1._f4D, 11);
        }
        if (DECORATOR::DECOR_EXIST_ON(a_0, "IgnoredByQuickSave") && DECORATOR::DECOR_GET_BOOL(a_0, "IgnoredByQuickSave")) {
            GAMEPLAY::SET_BIT(&a_1._f4D, 27);
        } else { 
            GAMEPLAY::CLEAR_BIT(&a_1._f4D, 27);
        }
    }
}

auto sub_3189(auto a_0) {
    switch (a_0) {
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 4;
        break;
    case 6:
        return 5;
        break;
    case 7:
        return 6;
        break;
    case 8:
        return 7;
        break;
    case 9:
        return 8;
        break;
    case 10:
        return 24;
        break;
    case 11:
        return 25;
        break;
    case 12:
        return 26;
        break;
    }
    return 0;
}

auto sub_3239(auto a_0, auto a_1, auto a_2) {
    if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
        return 0;
    }
    if (VEHICLE::GET_NUM_MOD_KITS(a_0) == 0) {
        return 0;
    }
    for (v_5 = 0; v_5 < a_1; v_5 += 1) {
        v_6 = v_5;
        if ((((((v_6 == 17) || (v_6 == 18)) || (v_6 == 19)) || (v_6 == 20)) || (v_6 == 21)) || (v_6 == 22)) {
            a_1[v_5/*1*/] = 0;
            if (VEHICLE::IS_TOGGLE_MOD_ON(a_0, v_6)) {
                a_1[v_5/*1*/] = 1;
            }
        } else { 
            a_1[v_5/*1*/] = VEHICLE::GET_VEHICLE_MOD(a_0, v_5) + 1;
            if (v_5 == 23) {
                a_2[0/*1*/] = VEHICLE::GET_VEHICLE_MOD_VARIATION(a_0, v_5);
            } else if (v_5 == 24) {
                a_2[1/*1*/] = VEHICLE::GET_VEHICLE_MOD_VARIATION(a_0, v_5);
            }
        }
    }
    return 1;
}

void sub_3313(auto a_0) {
    a_0._f42 = 0;
    a_0._f4D = 0;
    a_0._f41 = 0;
    a_0._f3E = 0;
    a_0._f3F = 0;
    a_0._f40 = 0;
    a_0._f4A = 0;
    a_0._f4B = 0;
    a_0._f4C = 0;
    a_0 = 0;
    a_0._f1/*"16"*/ = "";
    a_0._f5 = 0;
    a_0._f6 = 0;
    a_0._f7 = 0;
    a_0._f8 = 0;
    for (v_3 = 0; v_3 < 49; v_3 += 1) {
        a_0._f9[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 2; v_3 += 1) {
        a_0._f3B[v_3/*1*/] = 0;
    }
    a_0._f43 = 0;
    a_0._f44 = 0;
    a_0._f45 = 0;
    a_0._f46 = 1;
    a_0._f47 = 0;
    a_0._f48 = 0;
    a_0._f49 = 0;
}

auto sub_33c4(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            if (a_0 == PLAYER::PLAYER_PED_ID()) {
                a_1 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
            } else { 
                a_1 = PED::GET_VEHICLE_PED_IS_IN(a_0, 1);
            }
            if (ENTITY::DOES_ENTITY_EXIST(a_1)) {
                if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_1, 0)) {
                    if ((a_2 == 0) || (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(a_1, 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 100.0)) {
                        if (VEHICLE::IS_VEHICLE_MODEL(a_1, ${taxi})) {
                            if ((VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_1, -1) != a_0) && (VEHICLE::GET_PED_IN_VEHICLE_SEAT(a_1, -1) != 0)) {
                                return 0;
                            }
                        }
                        if (sub_34f1(a_1, sub_bc88(), 1)) {
                            v_6 = SCRIPT::GET_THIS_SCRIPT_NAME();
                            if (!GAMEPLAY::ARE_STRINGS_EQUAL(v_6, "save_anywhere")) {
                                return 0;
                            } else if (!PED::IS_PED_IN_ANY_VEHICLE(a_0, 1)) {
                                return 0;
                            } else { }
                        } else { }
                        if (a_3 == 1) {
                            if (DECORATOR::DECOR_EXIST_ON(a_1, "IgnoredByQuickSave")) {
                                if (DECORATOR::DECOR_GET_BOOL(a_1, "IgnoredByQuickSave")) {
                                    return 0;
                                }
                            }
                        } else if (VEHICLE::IS_VEHICLE_MODEL(a_1, ${blimp})) {
                            return 0;
                        }
                        return 1;
                    }
                }
            } else { }
        } else { }
    } else { }
    return 0;
}

auto sub_34f1(auto a_0, auto a_1, auto a_2) {
    if ((!ENTITY::DOES_ENTITY_EXIST(a_0)) || (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0))) {
        return 0;
    }
    v_5 = 0;
    while (sub_3562(a_1, v_5, &v_6, &v_E)) {
        if ((!a_2) || GAMEPLAY::IS_BIT_SET(game_state._f16E7[v_E/*1*/], 0)) {
            if (VEHICLE::IS_VEHICLE_IN_GARAGE_AREA(&v_6, a_0)) {
                return 1;
            } else { }
        } else { }
        v_5 += 1;
    }
    return 0;
}

auto sub_3562(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_2/*"32"*/ = "";
    switch (a_0) {
    case 0:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Michael - Beverly Hills";
            a_3 = 0;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Trevor - Countryside";
            a_3 = 1;
            return 1;
        }
        break;
    case 1:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Franklin - Aunt";
            a_3 = 5;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Franklin - Hills";
            a_3 = 6;
            return 1;
        }
        break;
    case 2:
        if (a_1 == 0) {
            a_2/*"32"*/ = "Trevor - Countryside";
            a_3 = 2;
            return 1;
        } else if (a_1 == 1) {
            a_2/*"32"*/ = "Trevor - City";
            a_3 = 3;
            return 1;
        } else if (a_1 == 2) {
            a_2/*"32"*/ = "Trevor - Stripclub";
            a_3 = 4;
            return 1;
        }
        break;
    }
    return 0;
}

auto sub_363b(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_3678(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_3678(auto a_0) {
    if (sub_2ed1(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

void sub_36a2(auto a_0, auto a_1, auto a_2) {
    if (!PED::IS_PED_INJURED(a_0)) {
        v_5 = sub_363b(a_0);
        for (v_6 = 0; v_6 < 12; v_6 += 1) {
            sub_3e32(a_0, v_6, &a_1._fD[v_6/*1*/], &a_1[v_6/*1*/], &a_1._f1A[v_6/*1*/], a_2, 145);
        }
        for (v_6 = 0; v_6 < 9; v_6 += 1) {
            sub_38ea(a_0, v_6, &a_1._f27[v_6/*1*/], &a_1._f31[v_6/*1*/], a_2, 145);
        }
        if (sub_2ed1(v_5)) {
            a_1._f3B = game_state._f6EA._f21B[v_5/*65*/]._f3B;
            a_1._f3C = game_state._f6EA._f21B[v_5/*65*/]._f3C;
            a_1._f3D = game_state._f6EA._f21B[v_5/*65*/]._f3D;
            a_1._f3E = game_state._f6EA._f21B[v_5/*65*/]._f3E;
            a_1._f3F = game_state._f6EA._f21B[v_5/*65*/]._f3F;
            a_1._f40 = game_state._f6EA._f21B[v_5/*65*/]._f40;
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (ENTITY::GET_ENTITY_MODEL(a_0) == ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()))) {
            if (sub_38be(161, -1)) {
                a_1._f3B = sub_384c(2040, g_10E38, 0);
            } else { 
                a_1._f3B = sub_384c(742, g_10E38, 0);
            }
            a_1._f3C = sub_384c(743, g_10E38, 0);
            a_1._f3D = sub_384c(744, g_10E38, 0);
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (a_0 == PLAYER::PLAYER_PED_ID())) {
            if (sub_38be(161, -1)) {
                a_1._f3B = sub_384c(2040, g_10E38, 0);
            } else { 
                a_1._f3B = sub_384c(742, g_10E38, 0);
            }
        }
    }
}

auto sub_384c(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    v_5 = g_25A3D6[a_0/*5*/][sub_387e(a_1)/*1*/];
    if (STATS::STAT_GET_INT(v_5, &v_6, -1)) {
        return v_6;
    }
    return 0;
}

auto sub_387e(auto a_0) {
    v_3 = a_0;
    if (v_3 == -1) {
        v_4 = sub_38b2();
        if (v_4 > -1) {
            g_25A2B7 = 0;
            v_3 = v_4;
        } else { 
            v_3 = 0;
            g_25A2B7 = 1;
        }
    }
    return v_3;
}

auto sub_38b2() {
    return g_1407EA;
}

auto sub_38be(auto a_0, auto a_1) {
    v_4 = g_25F257[a_0/*5*/][sub_387e(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

void sub_38ea(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = sub_363b(a_0);
    if (a_0 != 0) {
        a_2 = PED::GET_PED_PROP_INDEX(a_0, a_1);
        a_3 = PED::GET_PED_PROP_TEXTURE_INDEX(a_0, a_1);
    } else { 
        v_8 = a_5;
    }
    if (a_4 == 0) {
        return ;
    }
    if (a_1 == 0) {
        if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
            if (a_0 != 0) {
                if (PED::IS_PED_WEARING_HELMET(a_0) && (PED::_451294E859ECC018(a_0) != -1)) {
                    a_2 = PED::_451294E859ECC018(a_0);
                    a_3 = PED::_9D728C1E12BF5518(a_0);
                }
            }
        }
    }
    switch (v_8) {
    case 0:
        if (a_1 == 0) {
            if (a_2 == 7) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 11) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 16) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 23) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 27) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 28) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if ((a_2 >= 14) && (a_2 <= 20)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        } else if (a_1 == 1) {
            if (a_2 == 1) {
                if (((a_4 & 2) != 0) || ((a_4 & 64) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    case 1:
        if (a_1 == 0) {
            if (a_2 == 2) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 4) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 16) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 6) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 17) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 20) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if ((a_2 >= 8) && (a_2 <= 14)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    case 2:
        if (a_1 == 0) {
            if (a_2 == 9) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 11) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 12) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 21) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 23) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (a_2 == 27) {
                if ((((a_4 & 1) != 0) || ((a_4 & 2) != 0)) || ((a_4 & 8) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            } else if (((a_2 >= 14) && (a_2 <= 20)) || (a_2 == 2)) {
                if (((a_4 & 2) != 0) || ((a_4 & 4) != 0)) {
                    a_2 = -1;
                    a_3 = -1;
                }
            }
        }
        break;
    }
}

void sub_3e32(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = sub_363b(a_0);
    if (a_0 != 0) {
        a_2 = PED::GET_PED_DRAWABLE_VARIATION(a_0, a_1);
        a_3 = PED::GET_PED_TEXTURE_VARIATION(a_0, a_1);
        a_4 = PED::GET_PED_PALETTE_VARIATION(a_0, a_1);
    } else { 
        v_9 = a_6;
    }
    if (a_5 == 0) {
        return ;
    }
    switch (v_9) {
    case 0:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 15) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 64) != 0)) {
                if ((a_2 == 3) || (a_2 == 22)) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 5) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                if (a_2 == 8) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    case 1:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if ((a_2 == 1) || (a_2 == 10)) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
            if (((a_5 & 2) != 0) || ((a_5 & 64) != 0)) {
                if (a_2 == 19) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                if (a_2 == 5) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    case 2:
        if (a_1 == 8) {
            if ((((a_5 & 1) != 0) || ((a_5 & 2) != 0)) || ((a_5 & 32) != 0)) {
                if (a_2 == 3) {
                    a_2 = 14;
                    a_3 = 0;
                }
            }
        } else if (a_1 == 9) {
            if ((a_2 >= 5) && (a_2 <= 7)) {
                if (((a_5 & 2) != 0) || ((a_5 & 4) != 0)) {
                    a_2 = 0;
                    a_3 = 0;
                }
            }
        }
        break;
    }
}

auto sub_4074() {
    sub_408d();
    return game_state._f6EA._f21B._fDDD;
}

void sub_408d() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_3678(game_state._f6EA._f21B._fDDD) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_363b(PLAYER::PLAYER_PED_ID());
            if (sub_2ed1(v_2) && ((!sub_418a(14)) || g_18658)) {
                if ((game_state._f6EA._f21B._fDDD != v_2) && sub_2ed1(game_state._f6EA._f21B._fDDD)) {
                    game_state._f6EA._f21B._fDDE = game_state._f6EA._f21B._fDDD;
                }
                game_state._f6EA._f21B._fDDF = v_2;
                game_state._f6EA._f21B._fDDD = v_2;
                return ;
            }
        } else { 
            if (game_state._f6EA._f21B._fDDD != 145) {
                game_state._f6EA._f21B._fDDF = game_state._f6EA._f21B._fDDD;
            }
            return ;
        }
    }
    game_state._f6EA._f21B._fDDD = 145;
}

auto sub_418a(auto a_0) {
    return g_8B74 == a_0;
}

void sub_4198(auto a_0, auto a_1) {
    v_4 = sub_363b(a_0);
    if (sub_2ed1(v_4) && (!PED::IS_PED_INJURED(a_0))) {
        if (a_0 == PLAYER::PLAYER_PED_ID()) {
            sub_428b(a_0, &game_state._f6EA._f21B._f12A[v_4/*284*/]);
            for (v_6 = 0; v_6 <= (8 - 1); v_6 += 1) {
                game_state._f6EA._f21B._f47F[v_6/*4*/][v_4/*1*/] = UI::_A13E93403F26C812(v_6);
                if (a_1) {
                    v_5 = UI::_A48931185F0536FE();
                    if (game_state._f6EA._f21B._f47F[v_6/*4*/][v_4/*1*/] == v_5) {
                        game_state._f6EA._f21B._f4A0 = v_6;
                    }
                }
            }
            PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &v_7);
            if (v_4 == 0) {
                STATS::STAT_SET_INT(0xc8fd0844, v_7, 1);
            } else if (v_4 == 1) {
                STATS::STAT_SET_INT(0xd3161861, v_7, 1);
            } else if (v_4 == 2) {
                STATS::STAT_SET_INT(0xe205ca9b, v_7, 1);
            }
        }
    }
}

void sub_428b(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            a_1[v_4/*3*/]._f1 = 0;
        }
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            v_7 = sub_50ca(v_4);
            if (v_7 != 0) {
                v_8 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(a_0, sub_50ca(v_4));
                v_8._f1 = 0;
                v_8._f2 = 0;
                if ((v_8 != 0) && (v_8 != ${weapon_unarmed})) {
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (v_8 == ${gadget_parachute}) {
                        v_8._f1 = 1;
                    }
                    GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1[v_4/*3*/]._f1 = v_8._f1;
                    v_5 = 0;
                    v_6 = sub_4633(v_8, v_5);
                    while (v_6 != 0) {
                        if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_6)) {
                            GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                        }
                        v_5 += 1;
                        v_6 = sub_4633(v_8, v_5);
                    }
                }
                a_1[v_4/*3*/]/*{3}*/ = v_8;
            }
        }
        for (v_4 = 0; v_4 <= (50 - 1); v_4 += 1) {
            a_1._f85[v_4/*3*/]._f1 = 0;
        }
        v_C = DLC1::GET_NUM_DLC_WEAPONS();
        for (v_B = 0; v_B < v_C; v_B += 1) {
            if ((DLC1::GET_DLC_WEAPON_DATA(v_B, &v_D) && (!sub_44ef(v_D._f1))) && (v_4A < 50)) {
                if (!DLC1::_IS_OUTFIT_EMPTY(v_D)) {
                    v_8 = v_D._f1;
                    v_8._f1 = 0;
                    v_8._f2 = 0;
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    } else { 
                        GAMEPLAY::SET_BIT(&v_8._f2, 20);
                    }
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1._f85[v_4A/*3*/]._f1 = v_8._f1;
                    for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_B); v_5 += 1) {
                        if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_B, v_5, &v_34)) {
                            if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_34._f3)) {
                                GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                            }
                        }
                    }
                }
                if (v_8 != 0) {
                    if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        v_8 = 0;
                        v_8._f1 = 0;
                    }
                }
                a_1._f85[v_4A/*3*/]/*{3}*/ = v_8;
                v_4A += 1;
            }
        }
    }
}

auto sub_44ef(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
    } else { 
        switch (a_0) {
        case 0x99aeeb3b:
        case ${weapon_bullpupshotgun}:
        case ${weapon_assaultsmg}:
            return 0;
            break;
        case ${weapon_snspistol}:
        case ${weapon_bottle}:
        case 0x61012683:
            return 0;
            break;
        case ${weapon_specialcarbine}:
        case ${weapon_heavypistol}:
            return 0;
            break;
        case ${weapon_bullpuprifle}:
            return 0;
            break;
        case 0x92a27487:
        case 0x83839c4:
            return 0;
            break;
        case 0xa89cb99e:
        case 0x7f7497e5:
            return 0;
            break;
        case 0xc734385a:
        case 0x3aabbbaa:
            return 0;
            break;
        case 0xab564b93:
        case 0x63ab0442:
            return 0;
            break;
        case 0xd8df3c3c:
        case 0xdc4db296:
        case 0xa3d4d34:
            return 0;
            break;
        case 0x8210d4d5:
        case 0x8bb05fd7:
        case ${weapon_programmablear}:
        case 0xa52e2957:
        case 0xc1b3c3d1:
        case ${weapon_heavyrifle}:
        case ${weapon_rubbergun}:
        case 0xd04c944d:
        case 0xd866acd1:
        case ${weapon_assaultmg}:
        case 0xdfe37640:
        case 0xe232c28c:
        case ${weapon_loudhailer}:
        case 0xef951fbb:
        case 0x787f0bb:
        case ${weapon_assaultsniper}:
        case 0x47757124:
        case 0x624fe830:
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_4633(auto a_0, auto a_1) {
    v_4 = 0;
    switch (a_0) {
    case ${weapon_pistol}:
        switch (a_1) {
        case 0:
            v_4 = 0xfed0fd71;
            break;
        case 1:
            v_4 = 0xed265a1c;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = 0x65ea7ebb;
            break;
        case 4:
            v_4 = 0xd7391086;
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x721b079;
            break;
        case 1:
            v_4 = 0xd67b4f2d;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0xc6654d72;
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x31c4b22a;
            break;
        case 1:
            v_4 = 0x249a17d5;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x9b76c72c;
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xcb48aef0;
            break;
        case 1:
            v_4 = 0x10e6ba2b;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x487aae09;
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_1) {
        case 0:
            v_4 = 0x26574997;
            break;
        case 1:
            v_4 = 0x350966fb;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x3cc6ba57;
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x27872c90;
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xbe5eea16;
            break;
        case 1:
            v_4 = 0xb1214f9b;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_scope_macro};
            break;
        case 5:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 6:
            v_4 = 0x4ead7533;
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9fbe33ec;
            break;
        case 1:
            v_4 = 0x91109691;
            break;
        case 2:
            v_4 = 0x75414f30;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = ${component_at_ar_flsh};
            break;
        case 5:
            v_4 = ${component_at_scope_medium};
            break;
        case 6:
            v_4 = ${component_at_ar_supp};
            break;
        case 7:
            v_4 = 0xd89b9658;
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xfa8fa10f;
            break;
        case 1:
            v_4 = 0x8ec1c979;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = 0x377cd377;
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_1) {
        case 0:
            v_4 = 0xf434ef84;
            break;
        case 1:
            v_4 = 0x82158b47;
            break;
        case 2:
            v_4 = 0x3c00afed;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = 0xd6dababe;
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xe1ffb34a;
            break;
        case 1:
            v_4 = 0xd6c59cd6;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        case 4:
            v_4 = 0x92feccdd;
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_sr_supp};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = 0xa2d79ddb;
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x94e81bc7;
            break;
        case 1:
            v_4 = 0x86bd7f72;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9bc64089;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x4032b5e7;
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_1) {
        case 0:
            v_4 = 0x476f52f4;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_scope_small};
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_1) {
        case 0:
            v_4 = 0xc8de6f06;
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0x8d1307b0;
            break;
        case 1:
            v_4 = 0xbb46e417;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x278c78af;
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_ar_supp_02};
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_1) {
        case 0:
            v_4 = 0x2297be19;
            break;
        case 1:
            v_4 = 0xd9d3ac92;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x77b8ab2f;
            break;
        }
        break;
    case 0xa3d4d34:
        switch (a_1) {
        case 0:
            v_4 = 0x4317f19e;
            break;
        case 1:
            v_4 = 0x334a5203;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_afgrip};
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x85a64df9;
            break;
        }
        break;
    case ${weapon_bullpuprifle}:
        switch (a_1) {
        case 0:
            v_4 = ${component_bullpuprifle_clip_01};
            break;
        case 1:
            v_4 = ${component_bullpuprifle_clip_02};
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0xa857bc78;
            break;
        }
        break;
    case ${weapon_snspistol}:
        switch (a_1) {
        case 0:
            v_4 = ${component_snspistol_clip_01};
            break;
        case 1:
            v_4 = ${component_snspistol_clip_02};
            break;
        case 2:
            v_4 = 0x8033ecaf;
            break;
        }
        break;
    case ${weapon_specialcarbine}:
        switch (a_1) {
        case 0:
            v_4 = ${component_specialcarbine_clip_01};
            break;
        case 1:
            v_4 = ${component_specialcarbine_clip_02};
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x730154f2;
            break;
        }
        break;
    case 0xd8df3c3c:
        switch (a_1) {
        case 0:
            v_4 = 0xc613f685;
            break;
        case 1:
            v_4 = 0xeed9fd63;
            break;
        case 2:
            v_4 = 0x50910c31;
            break;
        case 3:
            v_4 = 0x9761d9dc;
            break;
        case 4:
            v_4 = 0x7decfe30;
            break;
        case 5:
            v_4 = 0x3f4e8aa6;
            break;
        case 6:
            v_4 = 0x8b808bb;
            break;
        case 7:
            v_4 = 0xe28babef;
            break;
        case 8:
            v_4 = 0x7af3f785;
            break;
        }
        break;
    case 0xdb1aa450:
        switch (a_1) {
        case 0:
            v_4 = 0x476e85ff;
            break;
        case 1:
            v_4 = 0xb92c6979;
            break;
        case 2:
            v_4 = ${component_at_pi_supp};
            break;
        }
        break;
    case 0xdfe37640:
        switch (a_1) {
        case 0:
            v_4 = 0x5b3e7db6;
            break;
        case 1:
            v_4 = 0xe7939662;
            break;
        }
        break;
    case 0xc1b3c3d1:
        switch (a_1) {
        case 0:
            v_4 = 0xe9867ce3;
            break;
        case 1:
            v_4 = 0x16ee3040;
            break;
        case 2:
            v_4 = 0x9493b80d;
            break;
        }
        break;
    default:
        if (a_0 != 0) {
            v_5 = sub_508f(a_0, &v_6);
            if (v_5 != -1) {
                if (a_1 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_5)) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_5, a_1, &v_2D)) {
                        return v_2D._f3;
                    }
                }
            }
        }
        break;
    }
    return v_4;
}

auto sub_508f(auto a_0, auto a_1) {
    v_5 = DLC1::GET_NUM_DLC_WEAPONS();
    for (v_4 = 0; v_4 < v_5; v_4 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_4, a_1)) {
            if (a_1._f1 == a_0) {
                return v_4;
            }
        }
    }
    return -1;
}

auto sub_50ca(auto a_0) {
    v_3 = 0;
    switch (a_0) {
    case 0:
        v_3 = ${slot_unarmed};
        break;
    case 1:
        v_3 = ${slot_knife};
        break;
    case 2:
        v_3 = ${slot_nightstick};
        break;
    case 3:
        v_3 = ${slot_hammer};
        break;
    case 4:
        v_3 = ${slot_bat};
        break;
    case 5:
        v_3 = ${slot_crowbar};
        break;
    case 6:
        v_3 = ${slot_golfclub};
        break;
    case 7:
        v_3 = ${slot_stungun};
        break;
    case 8:
        v_3 = ${slot_pistol};
        break;
    case 9:
        v_3 = ${slot_combatpistol};
        break;
    case 10:
        v_3 = ${slot_appistol};
        break;
    case 11:
        v_3 = ${slot_microsmg};
        break;
    case 12:
        v_3 = ${slot_smg};
        break;
    case 13:
        v_3 = ${slot_assaultrifle};
        break;
    case 14:
        v_3 = ${slot_carbinerifle};
        break;
    case 15:
        v_3 = ${slot_advancedrifle};
        break;
    case 16:
        v_3 = ${slot_mg};
        break;
    case 17:
        v_3 = ${slot_combatmg};
        break;
    case 18:
        v_3 = ${slot_pumpshotgun};
        break;
    case 19:
        v_3 = ${slot_sawnoffshotgun};
        break;
    case 20:
        v_3 = ${slot_assaultshotgun};
        break;
    case 21:
        v_3 = ${slot_sniperrifle};
        break;
    case 22:
        v_3 = ${slot_heavysniper};
        break;
    case 23:
        v_3 = ${slot_grenadelauncher};
        break;
    case 24:
        v_3 = ${slot_rpg};
        break;
    case 25:
        v_3 = ${slot_minigun};
        break;
    case 26:
        v_3 = ${slot_grenade};
        break;
    case 27:
        v_3 = ${slot_stickybomb};
        break;
    case 28:
        v_3 = ${slot_smokegrenade};
        break;
    case 29:
        v_3 = ${slot_molotov};
        break;
    case 30:
        v_3 = ${slot_fireextinguisher};
        break;
    case 31:
        v_3 = ${slot_petrolcan};
        break;
    case 33:
        v_3 = ${slot_parachute};
        break;
    case 34:
        v_3 = ${slot_digiscanner};
        break;
    case 35:
        v_3 = ${slot_object};
        break;
    case 36:
        v_3 = ${slot_assaultsmg};
        break;
    case 37:
        v_3 = ${slot_bullpupshotgun};
        break;
    case 38:
        v_3 = 0x22541ebe;
        break;
    }
    return v_3;
}

void sub_533e(auto a_0) {
    v_3 = sub_363b(a_0);
    if (sub_2ed1(v_3) && (!PED::IS_PED_INJURED(a_0))) {
        game_state._f6EA._f21B._f126[v_3/*1*/] = PED::GET_PED_ARMOUR(a_0);
    }
}

void sub_537a(auto a_0, auto a_1) {
    a_0/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
    a_0._f3 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
    a_0._f5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        a_0._f4 = PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
    }
    if (SYSTEM::VDIST(a_0, 320.993408203125, 265.2514953613281, 82.12210083) < 10.0) {
        a_0/*{3}*/ = {301.2161865234375, 202.1356964111328, 103.37969970703125 };
        a_0._f3 = 156.514404296875;
    } else if (SYSTEM::VDIST(a_0, 377.15301513671875, -717.5670166015625, 10.0536) < 10.0) {
        a_0/*{3}*/ = {394.2567138671875, -713.5438842773438, 28.28529930114746 };
        a_0._f3 = 276.6272888183594;
    } else if (SYSTEM::VDIST(a_0, -1425.564453125, -244.3, 15.805299758911133) < 10.0) {
        a_0/*{3}*/ = {-1423.472412109375, -214.25390625, 45.5004 };
        a_0._f3 = 353.8757019042969;
    } else if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${finale_choice}) > 0) {
        a_0/*{3}*/ = {4.258699893951416, 525.0214233398438, 173.6280975341797 };
        a_0._f3 = 203.6746063232422;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 4)) {
        a_0/*{3}*/ = {452.0255126953125, 5571.85, 780.1859130859375 };
        a_0._f3 = 78.98580169677734;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 5)) {
        a_0/*{3}*/ = {-745.4462280273438, 5595.146484375, 40.6594 };
        a_0._f3 = 261.747;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 6)) {
        a_0/*{3}*/ = {-1675.521484375, -1125.59, 12.091 };
        a_0._f3 = 271.8208;
    } else if (GAMEPLAY::IS_BIT_SET(g_10FBD, 7)) {
        a_0/*{3}*/ = {-1631.21923828125, -1112.80517578125, 12.02120018 };
        a_0._f3 = 316.8879089355469;
    } else if (INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(1272.6588134765625, -1715.4669189453125, 53.77149963378906, "v_lesters")) {
        a_0/*{3}*/ = {1276.9564208984375, -1725.189208984375, 53.65510177612305 };
        a_0._f3 = 204.17030334472656;
    } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -415.43646240234375, 2068.28857421875, 113.3, -564.9515991210938, 1884.7025146484375, 134.04034423828125, 258.75, 0, 1, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -596.4705810546875, 2089.9208984375, 125.41275024414062, -581.2134399414062, 2036.256103515625, 136.28363037109375, 9.5, 0, 1, 0)) {
        a_0/*{3}*/ = {-601.59, 2099.197265625, 128.892807 };
        a_0._f3 = 204.7498016357422;
    } else if (SYSTEM::VDIST(a_0, -1007.3926391601562, -477.95843505859375, 52.535701751708984) < 8.0) {
        a_0/*{3}*/ = {-1018.3756103515625, -483.943603515625, 36.09640121459961 };
        a_0._f3 = 114.76640319824219;
    } else if (SYSTEM::VDIST(a_0, 480.66619873046875, -1317.8084716796875, 28.20302963256836) < 15.0) {
        a_0/*{3}*/ = {497.7237854, -1310.9322509765625, 28.237199783325195 };
        a_0._f3 = 289.3663024902344;
    } else if (SYSTEM::VDIST(a_0, 2329.526611328125, 2571.311279296875, 45.67789840698242) < 5.0) {
        a_0/*{3}*/ = {2316.930419921875, 2594.15283203125, 45.71989822387695 };
        a_0._f3 = 348.13250732421875;
    }
    if (a_1 == 1) {
        if (sub_5fdb(&v_4)) {
            if (sub_5919(v_4, &v_5, &v_8)) {
                v_5._f2 += 1.0;
                a_0/*{3}*/ = v_5;
                a_0._f3 = v_8;
            }
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 207.43357849121094, -1019.79541015625, -100.47276306152344, 189.93377685546875, -1019.6234741210938, -95.56883239746094, 17.1875, 0, 1, 0)) {
            v_9 = sub_bc88();
            if (v_9 == 0) {
                a_0/*{3}*/ = {-65.12339782714844, 81.25170135498047, 70.56439971923828 };
                a_0._f3 = 71.623703;
            } else if (v_9 == 1) {
                a_0/*{3}*/ = {-68.5531, -1824.37744140625, 25.9424 };
                a_0._f3 = 215.82949829101562;
            } else if (v_9 == 2) {
                a_0/*{3}*/ = {-220.8188934326172, -1162.3016357421875, 22.0242 };
                a_0._f3 = 70.27110290527344;
            }
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 483.71746826171875, -1326.6298828125, 28.213499069213867, 474.96435546875, -1307.998291015625, 34.49497604370117, 12.0, 0, 1, 0)) {
            a_0/*{3}*/ = {495.4107971191406, -1306.08, 29.288299560546875 };
            a_0._f3 = 213.62730407714844;
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1146.77, -1534.219970703125, 3.37, -1158.4525146484375, -1517.7496337890625, 6.374244213104248, 13.0, 0, 1, 0)) {
            a_0/*{3}*/ = {-1160.0950927734375, -1515.406982421875, 3.1496 };
            a_0._f3 = 305.64239501953125;
        } else if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 439.54315185546875, -996.9768676757812, 24.88307, 428.2935485839844, -997.0192260742188, 28.574581146240234, 8.5, 0, 1, 0)) {
            a_0/*{3}*/ = {431.88531494140625, -1013.1329956054688, 28.7907 };
            a_0._f3 = 186.681396484375;
        } else if (sub_58d5(a_0, "v_hospital", 307.3064880371094, -589.95947265625, 43.301998138427734)) {
            a_0/*{3}*/ = {279.4136962890625, -585.8814697265625, 43.25019836425781 };
            a_0._f3 = 48.802799224853516;
        }
    }
}

auto sub_58d5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (!INTERIOR::_ARE_COORDS_COLLIDING_WITH_EXTERIOR(a_0)) {
        v_9 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(a_4, a_3);
        if (!INTERIOR::IS_VALID_INTERIOR(v_9)) {
            return 0;
        }
        v_A = INTERIOR::GET_INTERIOR_FROM_COLLISION(a_0);
        if (v_A == v_9) {
            return 1;
        }
    }
    return 0;
}

auto sub_5919(auto a_0, auto a_1, auto a_2) {
    a_1/*{3}*/ = {0.0, 0.0, 0.0 };
    a_2 = 0.0;
    switch (a_0) {
    case 0:
        a_1/*{3}*/ = {-829.8419799804688, -191.7454071044922, 36.4385986328125 };
        a_2 = 29.5060997;
        break;
    case 1:
        a_1/*{3}*/ = {129.84840393066406, -1716.52783203125, 28.0702 };
        a_2 = 50.3483;
        break;
    case 2:
        a_1/*{3}*/ = {-1296.912841796875, -1120.99853515625, 5.3951 };
        a_2 = 0.9933;
        break;
    case 3:
        a_1/*{3}*/ = {1938.028076171875, 3718.73583984375, 31.315399169921875 };
        a_2 = 118.23049926757812;
        break;
    case 4:
        a_1/*{3}*/ = {1197.8656, -469.3808898925781, 65.0885 };
        a_2 = 346.44769287109375;
        break;
    case 5:
        a_1/*{3}*/ = {-32.2160987854, -135.82119750976562, 56.053199768066406 };
        a_2 = 186.0052032470703;
        break;
    case 6:
        a_1/*{3}*/ = {-287.76959228515625, 6238.08056640625, 30.290199279785156 };
        a_2 = 316.1348876953125;
        break;
    case 7:
        a_1/*{3}*/ = {99.28759765625, -1395.159912109375, 28.27589988708496 };
        a_2 = 320.2738952636719;
        break;
    case 8:
        a_1/*{3}*/ = {1679.445068359375, 4819.05615234375, 41.003501892089844 };
        a_2 = 4.6192;
        break;
    case 9:
        a_1/*{3}*/ = {411.3063049316406, -809.186279296875, 28.155399322509766 };
        a_2 = 1.8972;
        break;
    case 10:
        a_1/*{3}*/ = {-1088.0535888671875, 2699.1669921875, 19.274799346923828 };
        a_2 = 129.7382049560547;
        break;
    case 11:
        a_1/*{3}*/ = {1194.1629638671875, 2695.6435546875, 36.9225 };
        a_2 = 1.1454;
        break;
    case 12:
        a_1/*{3}*/ = {-821.2828979492188, -1088.027099609375, 10.0499 };
        a_2 = 120.58830261230469;
        break;
    case 13:
        a_1/*{3}*/ = {3.3416, 6521.302734375, 30.2961 };
        a_2 = 316.4450988769531;
        break;
    case 14:
        a_1/*{3}*/ = {-1208.417236328125, -785.9635, 16.0139 };
        a_2 = 36.3181;
        break;
    case 15:
        a_1/*{3}*/ = {623.1845092773438, 2739.19091796875, 40.95880126953125 };
        a_2 = 3.541100025177;
        break;
    case 16:
        a_1/*{3}*/ = {130.95550537109375, -198.20840454101562, 53.41 };
        a_2 = 251.35060119628906;
        break;
    case 17:
        a_1/*{3}*/ = {-3164.06494140625, 1067.3170166015625, 19.677799224853516 };
        a_2 = 101.2229;
        break;
    case 18:
        a_1/*{3}*/ = {-713.2797241210938, -174.27670288085938, 35.89619827270508 };
        a_2 = 29.8138;
        break;
    case 19:
        a_1/*{3}*/ = {-147.0615997314453, -306.43218994140625, 37.79119873046875 };
        a_2 = 160.45260620117188;
        break;
    case 20:
        a_1/*{3}*/ = {-1461.355224609375, -230.6092071533203, 48.3064 };
        a_2 = 318.78509521484375;
        break;
    case 21:
        a_1/*{3}*/ = {-1347.7391357421875, -1278.5733642578125, 3.8952 };
        a_2 = 17.9365;
        break;
    case 22:
        a_1/*{3}*/ = {325.68328857421875, 164.3262939453125, 102.44249725341797 };
        a_2 = 68.64070129394531;
        break;
    case 23:
        a_1/*{3}*/ = {1858.7740478515625, 3742.392822265625, 32.0779 };
        a_2 = 301.23291015625;
        break;
    case 24:
        a_1/*{3}*/ = {-286.32720947265625, 6202.80224609375, 30.3323 };
        a_2 = 225.13340759277344;
        break;
    case 25:
        a_1/*{3}*/ = {-1161.5958251953125, -1417.69970703125, 3.7119999999999997 };
        a_2 = 246.91610717773438;
        break;
    case 26:
        a_1/*{3}*/ = {1308.9522705078125, -1660.611083984375, 50.23619842529297 };
        a_2 = 163.54559326171875;
        break;
    case 27:
        a_1/*{3}*/ = {-3161.5849609375, 1074.213623046875, 19.6847 };
        a_2 = 98.60919952392578;
        break;
    case 28:
        a_1/*{3}*/ = {28.423, -1110.8135986328125, 28.284799575805664 };
        a_2 = 85.24949645996094;
        break;
    case 29:
        a_1/*{3}*/ = {1704.966064453125, 3749.709228515625, 33.018798828125 };
        a_2 = 45.677799224853516;
        break;
    case 30:
        a_1/*{3}*/ = {223.949, -38.789398193359375, 68.6483 };
        a_2 = 159.42649841308594;
        break;
    case 31:
        a_1/*{3}*/ = {837.7854, -1017.9628295898438, 26.3045 };
        a_2 = 181.04449462890625;
        break;
    case 32:
        a_1/*{3}*/ = {-313.19140625, 6093.35107421875, 30.462499618530273 };
        a_2 = 315.84051513671875;
        break;
    case 33:
        a_1/*{3}*/ = {-663.4630737304688, -952.806884765625, 20.3143 };
        a_2 = 92.67960357666016;
        break;
    case 34:
        a_1/*{3}*/ = {-1323.0596923828125, -392.8576965332031, 35.459598541259766 };
        a_2 = 210.73980712890625;
        break;
    case 35:
        a_1/*{3}*/ = {-1106.101806640625, 2684.35, 18.0953 };
        a_2 = 127.03829956054688;
        break;
    case 36:
        a_1/*{3}*/ = {-3157.93212890625, 1081.3089599609375, 19.69529914855957 };
        a_2 = 100.29419708251953;
        break;
    case 37:
        a_1/*{3}*/ = {2562.8818359375, 312.8641052246094, 107.46119689941406 };
        a_2 = 179.205;
        break;
    case 38:
        a_1/*{3}*/ = {822.47998046875, -2142.87451171875, 27.849599838256836 };
        a_2 = 355.059814453125;
        break;
    case 39:
        a_1/*{3}*/ = {-1137.0531, -1993.9161376953125, 12.167699813842773 };
        a_2 = 43.121299743652344;
        break;
    case 40:
        a_1/*{3}*/ = {717.8107299804688, -1084.0814208984375, 21.3094 };
        a_2 = 93.2649;
        break;
    case 41:
        a_1/*{3}*/ = {-387.67889404296875, -128.25680541992188, 37.67959976196289 };
        a_2 = 119.1084976196289;
        break;
    case 42:
        a_1/*{3}*/ = {117.88349914550781, 6599.4150390625, 31.013399124145508 };
        a_2 = 90.72250366210938;
        break;
    case 43:
        a_1/*{3}*/ = {1201.7088623046875, 2664.8134765625, 36.81019973754883 };
        a_2 = 133.9;
        break;
    case 44:
        a_1/*{3}*/ = {-200.152099609375, -1297.50244140625, 30.296 };
        a_2 = 269.0686950683594;
        break;
    }
    return !sub_5f94(a_1, 0.0, 0.0, 0.0, 0);
}

auto sub_5f94(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_6) {
        return (a_0 == a_3) && (a_0._f1 == a_3._f1);
    } else { 
        return ((a_0 == a_3) && (a_0._f1 == a_3._f1)) && (a_0._f2 == a_3._f2);
    }
}

auto sub_5fdb(auto a_0) {
    if ((!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) && (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))) {
        if (sub_6b96()) {
            a_0 = sub_6378(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), 5, -1, 0, 1, -1);
            if (sub_6368(a_0) && (!sub_6035(a_0))) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_6035(auto a_0) {
    return sub_6045(a_0, 0, 1);
}

auto sub_6045(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        return GAMEPLAY::IS_BIT_SET(g_16416._f514[a_0/*1*/], a_1);
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_635d() == 0) {
            return GAMEPLAY::IS_BIT_SET(sub_384c(sub_60a5(a_0), -1, 0), a_1);
        }
    } else { 
        return GAMEPLAY::IS_BIT_SET(game_state._f29C[a_0/*1*/], a_1);
    }
    return 0;
}

auto sub_60a5(auto a_0) {
    switch (a_0) {
    case 0:
        return 817;
        break;
    case 1:
        return 818;
        break;
    case 2:
        return 819;
        break;
    case 3:
        return 820;
        break;
    case 4:
        return 821;
        break;
    case 5:
        return 822;
        break;
    case 6:
        return 823;
        break;
    case 7:
        return 824;
        break;
    case 8:
        return 825;
        break;
    case 9:
        return 826;
        break;
    case 10:
        return 827;
        break;
    case 11:
        return 828;
        break;
    case 12:
        return 829;
        break;
    case 13:
        return 830;
        break;
    case 14:
        return 831;
        break;
    case 15:
        return 833;
        break;
    case 16:
        return 834;
        break;
    case 17:
        return 835;
        break;
    case 18:
        return 836;
        break;
    case 19:
        return 837;
        break;
    case 20:
        return 838;
        break;
    case 21:
        return 839;
        break;
    case 22:
        return 840;
        break;
    case 23:
        return 841;
        break;
    case 24:
        return 842;
        break;
    case 25:
        return 843;
        break;
    case 26:
        return 844;
        break;
    case 27:
        return 845;
        break;
    case 28:
        return 846;
        break;
    case 29:
        return 847;
        break;
    case 30:
        return 848;
        break;
    case 31:
        return 849;
        break;
    case 32:
        return 850;
        break;
    case 33:
        return 851;
        break;
    case 34:
        return 852;
        break;
    case 35:
        return 853;
        break;
    case 36:
        return 854;
        break;
    case 37:
        return 855;
        break;
    case 38:
        return 856;
        break;
    case 39:
        return 857;
        break;
    case 40:
        return 861;
        break;
    case 41:
        return 862;
        break;
    case 42:
        return 863;
        break;
    case 43:
        return 864;
        break;
    case 44:
        return 3693;
        break;
    default:
        break;
    }
    return 3790;
}

auto sub_635d() {
    return g_621B;
}

auto sub_6368(auto a_0) {
    return sub_6045(a_0, 5, 1);
}

auto sub_6378(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_C = 1000000.0;
    v_D = -1;
    for (v_A = 0; v_A <= 44; v_A += 1) {
        if ((a_3 == 5) || (a_3 == sub_6930(v_A))) {
            if ((!a_5) || sub_6920(v_A)) {
                v_B = GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(a_0, sub_641a(v_A, 0), 1);
                if ((((v_B < v_C) && ((v_B <= ((float)a_4)) || (a_4 == -1))) && (a_6 || (v_A != 21))) && (v_A != a_7)) {
                    v_C = v_B;
                    v_D = v_A;
                }
            }
        }
    }
    return v_D;
}

auto<3> sub_641a(auto a_0, auto a_1) {
    switch (a_0) {
    case -1:
        return {0.0, 0.0, 0.0 };
        break;
    case 0:
        return {-821.99462890625, -187.17759704589844, 36.56890106201172 };
        break;
    case 1:
        return {133.57020568847656, -1710.91796875, 28.29159927368164 };
        break;
    case 2:
        return {-1287.0821533203125, -1116.5576171875, 5.9901 };
        break;
    case 3:
        return {1933.119140625, 3726.0791015625, 31.8444 };
        break;
    case 4:
        return {1208.33349609375, -470.9169921875, 65.208 };
        break;
    case 5:
        return {-30.7448, -148.49209594726562, 56.0765 };
        break;
    case 6:
        return {-280.8164978027344, 6231.7705078125, 30.695499420166016 };
        break;
    case 7:
        return {80.665, -1391.66943359375, 28.3761 };
        break;
    case 8:
        return {1687.8812255859375, 4820.5498046875, 41.00960159301758 };
        break;
    case 9:
        return {419.531, -807.5786743164062, 28.489599227905273 };
        break;
    case 10:
        return {-1094.0487060546875, 2704.170654296875, 18.087299346923828 };
        break;
    case 11:
        return {1197.97216796875, 2704.220458984375, 37.15719985961914 };
        break;
    case 12:
        return {-818.621826171875, -1077.532958984375, 10.3282 };
        break;
    case 13:
        return {-0.2361, 6516.04541015625, 30.8684 };
        break;
    case 14:
        return {-1199.8092041015625, -776.6885986328125, 16.3237 };
        break;
    case 15:
        return {618.1857299804688, 2752.566650390625, 41.0881 };
        break;
    case 16:
        return {126.685302734375, -212.5027, 53.5578 };
        break;
    case 17:
        return {-3168.96630859375, 1055.286865234375, 19.863199234 };
        break;
    case 18:
        return {-715.3598022460938, -155.7742, 36.410499572753906 };
        break;
    case 19:
        return {-158.2198944091797, -304.96630859375, 38.735 };
        break;
    case 20:
        return {-1455.0045166015625, -233.186203, 48.79359817504883 };
        break;
    case 21:
        return {-1335.9730224609375, -1278.554931640625, 3.8598001 };
        break;
    case 22:
        return {321.60980224609375, 179.41650390625, 102.58650207519531 };
        break;
    case 23:
        return {1861.685302734375, 3750.079833984375, 32.03179931640625 };
        break;
    case 24:
        return {-290.1603088378906, 6199.0947265625, 30.4871 };
        break;
    case 25:
        return {-1153.9481201171875, -1425.0185546875, 3.9544 };
        break;
    case 26:
        return {1322.4547119140625, -1651.125244140625, 51.188499450683594 };
        break;
    case 27:
        return {-3169.42041015625, 1074.7271728515625, 19.834299087524414 };
        break;
    case 28:
        return {17.6804, -1114.2879638671875, 28.797000885 };
        break;
    case 29:
        return {1697.978759765625, 3753.2, 33.705299377441406 };
        break;
    case 30:
        return {245.27110290527344, -45.812599182128906, 68.941 };
        break;
    case 31:
        return {844.1248168945312, -1025.5706787109375, 27.194799423217773 };
        break;
    case 32:
        return {-325.8904113769531, 6077.0263671875, 30.45479965209961 };
        break;
    case 33:
        return {-664.2177734375, -943.3646240234375, 20.8292 };
        break;
    case 34:
        return {-1313.948486328125, -390.9637145996094, 35.592 };
        break;
    case 35:
        return {-1111.237548828125, 2688.462646484375, 17.6131 };
        break;
    case 36:
        return {-3165.230712890625, 1082.8551025390625, 19.843799591064453 };
        break;
    case 37:
        return {2569.611572265625, 302.57598876953125, 107.73490142822266 };
        break;
    case 38:
        return {811.869873046875, -2149.1015625, 28.6362991333 };
        break;
    case 39:
        return {-1147.3138427734375, -1992.4344482421875, 12.180299758911133 };
        break;
    case 40:
        return {724.5239868164062, -1089.0810546875, 21.1692 };
        break;
    case 41:
        return {-354.5271911621094, -135.40109252929688, 38.185 };
        break;
    case 42:
        return {113.2614974975586, 6624.2802734375, 30.787099838256836 };
        break;
    case 43:
        return {1174.7073974609375, 2644.44970703125, 36.75519943237305 };
        break;
    case 44:
        if (a_1) {
            return {-211.5, 1324.1999999999998, 30.296 };
        } else { 
            return {-205.6654052734375, -1311.1126708984375, 30.296 };
        }
        break;
    }
    return {1000000.0, 1000000.0, 1000000.0 };
}

auto sub_6920(auto a_0) {
    return sub_6045(a_0, 0, 0);
}

auto sub_6930(auto a_0) {
    switch (a_0) {
    case -1:
        return 5;
        break;
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 0;
        break;
    case 3:
        return 0;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 0;
        break;
    case 6:
        return 0;
        break;
    case 7:
        return 1;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 1;
        break;
    case 10:
        return 1;
        break;
    case 11:
        return 1;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 1;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 1;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 2;
        break;
    case 23:
        return 2;
        break;
    case 24:
        return 2;
        break;
    case 25:
        return 2;
        break;
    case 26:
        return 2;
        break;
    case 27:
        return 2;
        break;
    case 28:
        return 3;
        break;
    case 29:
        return 3;
        break;
    case 30:
        return 3;
        break;
    case 31:
        return 3;
        break;
    case 32:
        return 3;
        break;
    case 33:
        return 3;
        break;
    case 34:
        return 3;
        break;
    case 35:
        return 3;
        break;
    case 36:
        return 3;
        break;
    case 37:
        return 3;
        break;
    case 38:
        return 3;
        break;
    case 39:
        return 4;
        break;
    case 40:
        return 4;
        break;
    case 41:
        return 4;
        break;
    case 42:
        return 4;
        break;
    case 43:
        return 4;
        break;
    case 44:
        return 4;
        break;
    }
    return 5;
}

auto sub_6b96() {
    return g_16416._f128 > 0;
}

auto sub_6ba7() {
    sub_6e57(&v_2, TIME::GET_CLOCK_SECONDS());
    sub_6e1c(&v_2, TIME::GET_CLOCK_MINUTES());
    sub_6de2(&v_2, TIME::GET_CLOCK_HOURS());
    sub_6ca6(&v_2, TIME::GET_CLOCK_DAY_OF_MONTH());
    sub_6c73(&v_2, TIME::GET_CLOCK_MONTH());
    sub_6bed(&v_2, TIME::GET_CLOCK_YEAR());
    return v_2;
}

void sub_6bed(auto a_0, auto a_1) {
    if (a_1 <= 0) {
        return ;
    }
    if ((a_1 > 2043) || (a_1 < 1979)) {
        return ;
    }
    a_0 -= a_0 & 0x7c000000;
    if (a_1 < 2011) {
        a_0 |= SYSTEM::SHIFT_LEFT(2011 - a_1, 26);
        a_0 |= 0x80000000;
    } else { 
        a_0 |= SYSTEM::SHIFT_LEFT(a_1 - 2011, 26);
        a_0 -= a_0 & 0x80000000;
    }
}

void sub_6c73(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return ;
    }
    a_0 -= a_0 & 15;
    a_0 |= a_1;
}

void sub_6ca6(auto a_0, auto a_1) {
    v_4 = sub_6dd5(a_0);
    v_5 = sub_6d99(a_0);
    if ((a_1 < 1) || (a_1 > sub_6cf7(v_4, v_5))) {
        return ;
    }
    a_0 -= a_0 & 496;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 4);
}

auto sub_6cf7(auto a_0, auto a_1) {
    if (a_1 < 0) {
        a_1 = 0;
    }
    switch (a_0) {
    case 0:
    case 2:
    case 4:
    case 6:
    case 7:
    case 9:
    case 11:
        return 31;
        break;
    case 3:
    case 5:
    case 8:
    case 10:
        return 30;
        break;
    case 1:
        if ((a_1 % 4) == 0) {
            if ((a_1 % 100) != 0) {
                return 29;
            } else if ((a_1 % 400) == 0) {
                return 29;
            }
        }
        return 28;
        break;
    }
    return 30;
}

auto sub_6d99(auto a_0) {
    return ((SYSTEM::SHIFT_RIGHT(a_0, 26) & 31) * sub_6dbe(GAMEPLAY::IS_BIT_SET(a_0, 31), -1, 1)) + 2011;
}

auto sub_6dbe(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

auto sub_6dd5(auto a_0) {
    return a_0 & 15;
}

void sub_6de2(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 24)) {
        return ;
    }
    a_0 -= a_0 & 15872;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 9);
}

void sub_6e1c(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0xfc000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 14);
}

void sub_6e57(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0x3f00000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 20);
}

void sub_6e93(auto a_0) {
    if (GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) {
        v_3 = a_0;
        NETWORK::NETWORK_SET_RICH_PRESENCE(9, &v_3, 1, 1);
    } else if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
        v_4/*"24"*/ = "SPRC_";
        v_4/*24*/ += a_0;
        v_4/*24*/ += "_STR";
        NETWORK::_3E200C2BCF4164EB(9, &v_4);
    }
}

void sub_6eec(auto a_0, auto a_1, auto a_2) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_159BD)) {
        STATS::PLAYSTATS_MISSION_OVER(&g_159BD, 0, 0, 0, 1, 0);
        g_159BD/*"64"*/ = "";
    }
    g_159BD/*"64"*/ = a_0;
    STATS::PLAYSTATS_MISSION_STARTED(a_0, a_1, a_2, sub_b9aa(0));
}

auto<2> sub_6f2e(auto a_0) {
    v_3/*"8"*/ = "";
    switch (a_0) {
    case 0:
        v_3/*"8"*/ = "ABI1";
        break;
    case 1:
        v_3/*"8"*/ = "ABI2";
        break;
    case 2:
        v_3/*"8"*/ = "BA1";
        break;
    case 3:
        v_3/*"8"*/ = "BA2";
        break;
    case 4:
        v_3/*"8"*/ = "BA3";
        break;
    case 5:
        v_3/*"8"*/ = "BA3A";
        break;
    case 6:
        v_3/*"8"*/ = "BA3C";
        break;
    case 7:
        v_3/*"8"*/ = "BA4";
        break;
    case 8:
        v_3/*"8"*/ = "DRE1";
        break;
    case 9:
        v_3/*"8"*/ = "EPS1";
        break;
    case 10:
        v_3/*"8"*/ = "EPS2";
        break;
    case 11:
        v_3/*"8"*/ = "EPS3";
        break;
    case 12:
        v_3/*"8"*/ = "EPS4";
        break;
    case 13:
        v_3/*"8"*/ = "EPS5";
        break;
    case 14:
        v_3/*"8"*/ = "EPS6";
        break;
    case 15:
        v_3/*"8"*/ = "EPS7";
        break;
    case 16:
        v_3/*"8"*/ = "EPS8";
        break;
    case 17:
        v_3/*"8"*/ = "EXT1";
        break;
    case 18:
        v_3/*"8"*/ = "EXT2";
        break;
    case 19:
        v_3/*"8"*/ = "EXT3";
        break;
    case 20:
        v_3/*"8"*/ = "EXT4";
        break;
    case 21:
        v_3/*"8"*/ = "FAN1";
        break;
    case 22:
        v_3/*"8"*/ = "FAN2";
        break;
    case 23:
        v_3/*"8"*/ = "FAN3";
        break;
    case 24:
        v_3/*"8"*/ = "HAO1";
        break;
    case 25:
        v_3/*"8"*/ = "HUN1";
        break;
    case 26:
        v_3/*"8"*/ = "HUN2";
        break;
    case 27:
        v_3/*"8"*/ = "JOS1";
        break;
    case 28:
        v_3/*"8"*/ = "JOS2";
        break;
    case 29:
        v_3/*"8"*/ = "JOS3";
        break;
    case 30:
        v_3/*"8"*/ = "JOS4";
        break;
    case 31:
        v_3/*"8"*/ = "MAU1";
        break;
    case 32:
        v_3/*"8"*/ = "MIN1";
        break;
    case 33:
        v_3/*"8"*/ = "MIN2";
        break;
    case 34:
        v_3/*"8"*/ = "MIN3";
        break;
    case 35:
        v_3/*"8"*/ = "MRS1";
        break;
    case 36:
        v_3/*"8"*/ = "MRS2";
        break;
    case 37:
        v_3/*"8"*/ = "NI1";
        break;
    case 38:
        v_3/*"8"*/ = "NI1A";
        break;
    case 39:
        v_3/*"8"*/ = "NI1B";
        break;
    case 40:
        v_3/*"8"*/ = "NI1C";
        break;
    case 41:
        v_3/*"8"*/ = "NI1D";
        break;
    case 42:
        v_3/*"8"*/ = "NI2";
        break;
    case 43:
        v_3/*"8"*/ = "NI3";
        break;
    case 44:
        v_3/*"8"*/ = "OME1";
        break;
    case 45:
        v_3/*"8"*/ = "OME2";
        break;
    case 46:
        v_3/*"8"*/ = "PA1";
        break;
    case 47:
        v_3/*"8"*/ = "PA2";
        break;
    case 48:
        v_3/*"8"*/ = "PA3";
        break;
    case 49:
        v_3/*"8"*/ = "PA3A";
        break;
    case 50:
        v_3/*"8"*/ = "PA3B";
        break;
    case 51:
        v_3/*"8"*/ = "PA4";
        break;
    case 52:
        v_3/*"8"*/ = "RAM1";
        break;
    case 53:
        v_3/*"8"*/ = "RAM2";
        break;
    case 54:
        v_3/*"8"*/ = "RAM3";
        break;
    case 55:
        v_3/*"8"*/ = "RAM4";
        break;
    case 56:
        v_3/*"8"*/ = "RAM5";
        break;
    case 57:
        v_3/*"8"*/ = "SAS1";
        break;
    case 58:
        v_3/*"8"*/ = "TON1";
        break;
    case 59:
        v_3/*"8"*/ = "TON2";
        break;
    case 60:
        v_3/*"8"*/ = "TON3";
        break;
    case 61:
        v_3/*"8"*/ = "TON4";
        break;
    case 62:
        v_3/*"8"*/ = "TON5";
        break;
    default:
        break;
    }
    return v_3;
}

void sub_737b(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        sub_85c7(a_1, "Abigail1", sub_b33(a_0), 0, 0, 4, -1604.66796875, 5239.1, 3.01, 66, "", 109, 0, "ambient_Diving", 0, 0, 1, 4, 1, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 1:
        sub_85c7(a_1, "Abigail2", sub_b33(a_0), 0, 0, 4, -1592.8399658203125, 5214.04, 3.01, 400, "", 110, 0, "", 0, 0, -1, 4, 1, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 2:
        sub_85c7(a_1, "Barry1", sub_b33(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", 74, 0, "", 0, 1, -1, 4, 1, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 3:
        sub_85c7(a_1, "Barry2", sub_b33(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_8658(a_0), 1, 1);
        break;
    case 4:
        sub_85c7(a_1, "Barry3", sub_b33(a_0), 0, 1, 4, 414.0, -761.0, 29.0, 381, "", -1, 0, "", 164, 1, -1, 0, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 5:
        sub_85c7(a_1, "Barry3A", sub_b33(a_0), 1, 1, 0, 1199.27, -1255.63, 34.23, 381, "BARSTASH", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 6:
        sub_85c7(a_1, "Barry3C", sub_b33(a_0), 3, 1, 0, 468.9, -1713.06, 18.21, 381, "", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 7:
        sub_85c7(a_1, "Barry4", sub_b33(a_0), 0, 1, 4, 237.64999999999998, -385.41, 44.4, 381, "", 85, 0, "postRC_Barry4", 0, 0, -1, 4, 2, 800, 2000, sub_8658(a_0), 0, 0);
        break;
    case 8:
        sub_85c7(a_1, "Dreyfuss1", sub_b33(a_0), 0, 2, 4, -1458.969970703125, 485.99, 115.38, 66, "LETTERS_HINT", 106, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 9:
        sub_85c7(a_1, "Epsilon1", sub_b33(a_0), 0, 3, 4, -1622.89, 4204.8701171875, 83.3, 66, "", 86, 0, "", 0, 1, 10, 4, 1, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 10:
        sub_85c7(a_1, "Epsilon2", sub_b33(a_0), 0, 3, 4, 242.7, 362.7, 104.74, 206, "", 87, 16, "", 0, 0, 11, 4, 1, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 11:
        sub_85c7(a_1, "Epsilon3", sub_b33(a_0), 0, 3, 4, 1835.53, 4705.85986328125, 38.1, 206, "", 88, 16, "epsCars", 0, 0, 12, 4, 1, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 12:
        sub_85c7(a_1, "Epsilon4", sub_b33(a_0), 0, 3, 4, 1826.13, 4698.8798828125, 38.919999999999995, 206, "", 90, 16, "postRC_Epsilon4", 0, 0, 13, 4, 1, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 13:
        sub_85c7(a_1, "Epsilon5", sub_b33(a_0), 0, 3, 4, 637.02, 119.70929718017578, 89.5, 206, "", 89, 16, "epsRobes", 0, 0, 14, 4, 1, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 14:
        sub_85c7(a_1, "Epsilon6", sub_b33(a_0), 0, 3, 4, -2892.929931640625, 3192.3701171875, 11.66, 206, "", 93, 0, "", 0, 0, 15, 4, 1, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 15:
        sub_85c7(a_1, "Epsilon7", sub_b33(a_0), 0, 3, 4, 524.43, 3079.82, 39.48, 206, "", -1, 16, "epsDesert", 0, 0, 16, 4, 1, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 16:
        sub_85c7(a_1, "Epsilon8", sub_b33(a_0), 0, 3, 4, -697.75, 45.38, 43.03, 206, "", 94, 16, "epsilonTract", 0, 0, -1, 4, 1, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 17:
        sub_85c7(a_1, "Extreme1", sub_b33(a_0), 0, 4, 4, -188.22, 1296.1, 302.8599853515625, 66, "", -1, 0, "", 4, 1, 18, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 18:
        sub_85c7(a_1, "Extreme2", sub_b33(a_0), 0, 4, 4, -954.19, -2760.05, 14.64, 382, "", 96, 0, "", 171, 0, 19, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 19:
        sub_85c7(a_1, "Extreme3", sub_b33(a_0), 0, 4, 4, 63.8, -809.5, 321.8, 382, "", 97, 0, "", 0, 0, 20, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 20:
        sub_85c7(a_1, "Extreme4", sub_b33(a_0), 0, 4, 4, 1731.41, 96.96, 170.39, 382, "", 98, 16, "", 0, 0, -1, 4, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 21:
        sub_85c7(a_1, "Fanatic1", sub_b33(a_0), 0, 5, 4, -1877.8199462890625, -440.64898681640625, 45.05, 405, "", 74, 0, "", 0, 1, -1, 4, 1, 700, 2000, sub_8658(a_0), 1, 0);
        break;
    case 22:
        sub_85c7(a_1, "Fanatic2", sub_b33(a_0), 0, 5, 4, 809.6599731445312, 1279.76, 360.49, 405, "", -1, 0, "", 0, 1, -1, 4, 4, 700, 2000, sub_8658(a_0), 1, 0);
        break;
    case 23:
        sub_85c7(a_1, "Fanatic3", sub_b33(a_0), 0, 5, 4, 915.6, 6139.2, 5.5, 405, "", -1, 0, "", 0, 1, -1, 4, 2, 700, 2000, sub_8658(a_0), 0, 1);
        break;
    case 24:
        sub_85c7(a_1, "Hao1", sub_b33(a_0), 0, 6, 4, -72.29, -1260.63, 28.14, 66, "", -1, 0, "controller_Races", 13, 1, -1, 4, 2, 2000, 500, sub_8658(a_0), 0, 1);
        break;
    case 25:
        sub_85c7(a_1, "Hunting1", sub_b33(a_0), 0, 7, 4, 1804.3199462890625, 3931.33, 32.82, 66, "", -1, 0, "", 174, 1, 26, 4, 4, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 26:
        sub_85c7(a_1, "Hunting2", sub_b33(a_0), 0, 7, 4, -684.1699829101562, 5839.16015625, 16.09, 384, "", 99, 0, "", 7, 0, -1, 4, 4, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 27:
        sub_85c7(a_1, "Josh1", sub_b33(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 66, "", -1, 0, "forSaleSigns", 0, 1, 28, 4, 4, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 28:
        sub_85c7(a_1, "Josh2", sub_b33(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", 105, 0, "", 0, 0, 29, 4, 4, 0, 2359, sub_8658(a_0), 1, 1);
        break;
    case 29:
        sub_85c7(a_1, "Josh3", sub_b33(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", -1, 16, "", 0, 0, 30, 4, 4, 0, 2359, sub_8658(a_0), 1, 1);
        break;
    case 30:
        sub_85c7(a_1, "Josh4", sub_b33(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 385, "", -1, 36, "", 0, 0, -1, 4, 4, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 31:
        sub_85c7(a_1, "Maude1", sub_b33(a_0), 0, 9, 4, 2726.1, 4145.0, 44.3, 66, "", -1, 0, "BailBond_Launcher", 0, 1, -1, 4, 4, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 32:
        sub_85c7(a_1, "Minute1", sub_b33(a_0), 0, 10, 4, 327.85, 3405.7, 35.73, 66, "", -1, 0, "", 0, 1, 33, 4, 4, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 33:
        sub_85c7(a_1, "Minute2", sub_b33(a_0), 0, 10, 4, 18.0, 4527.0, 105.0, 386, "", -1, 10, "", 0, 0, 34, 4, 4, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 34:
        sub_85c7(a_1, "Minute3", sub_b33(a_0), 0, 10, 4, -303.82, 6211.29, 31.05, 386, "", -1, 10, "", 0, 0, -1, 4, 4, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 35:
        sub_85c7(a_1, "MrsPhilips1", sub_b33(a_0), 0, 11, 4, 1972.5899658203125, 3816.429931640625, 32.419999999999995, 66, "", -1, 0, "ambient_MrsPhilips", 0, 1, -1, 4, 4, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 36:
        sub_85c7(a_1, "MrsPhilips2", sub_b33(a_0), 0, 11, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 37:
        sub_85c7(a_1, "Nigel1", sub_b33(a_0), 0, 12, 4, -1097.16, 790.01, 164.52, 66, "", -1, 0, "", 177, 1, -1, 1, 4, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 38:
        sub_85c7(a_1, "Nigel1A", sub_b33(a_0), 0, 12, 1, -558.65, 284.49, 90.86, 149, "NIGITEMS", 100, 0, "", 0, 0, 42, 4, 4, 0, 2359, sub_8658(a_0), 1, 1);
        break;
    case 39:
        sub_85c7(a_1, "Nigel1B", sub_b33(a_0), 0, 12, 1, -1034.15, 366.0799865722656, 80.11, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_8658(a_0), 1, 1);
        break;
    case 40:
        sub_85c7(a_1, "Nigel1C", sub_b33(a_0), 0, 12, 1, -623.9099731445312, -266.17, 37.76, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_8658(a_0), 1, 1);
        break;
    case 41:
        sub_85c7(a_1, "Nigel1D", sub_b33(a_0), 0, 12, 1, -1096.8499755859375, 67.68, 52.95, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_8658(a_0), 1, 1);
        break;
    case 42:
        sub_85c7(a_1, "Nigel2", sub_b33(a_0), 0, 12, 4, 1310.6999999999998, -640.219970703125, 26.54, 149, "", -1, 8, "", 0, 0, 43, 4, 4, 0, 2359, sub_8658(a_0), 1, 1);
        break;
    case 43:
        sub_85c7(a_1, "Nigel3", sub_b33(a_0), 0, 12, 4, -44.75, -1288.67, 28.21, 149, "", -1, 16, "postRC_Nigel3", 0, 0, -1, 4, 4, 0, 2359, sub_8658(a_0), 1, 1);
        break;
    case 44:
        sub_85c7(a_1, "Omega1", sub_b33(a_0), 0, 13, 4, 2468.51, 3437.389892578125, 49.9, 66, "", -1, 0, "spaceshipParts", 0, 1, 45, 4, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 45:
        sub_85c7(a_1, "Omega2", sub_b33(a_0), 0, 13, 4, 2319.43994140625, 2583.58, 46.76, 387, "", 107, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 46:
        sub_85c7(a_1, "Paparazzo1", sub_b33(a_0), 0, 14, 4, -149.75, 285.81, 93.67, 66, "", -1, 0, "", 0, 1, 47, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 47:
        sub_85c7(a_1, "Paparazzo2", sub_b33(a_0), 0, 14, 4, 70.71, 301.43, 106.79, 389, "", -1, 8, "", 0, 0, 48, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 48:
        sub_85c7(a_1, "Paparazzo3", sub_b33(a_0), 0, 14, 4, -257.22, 292.85, 90.63, 389, "", -1, 8, "", 183, 1, -1, 2, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 49:
        sub_85c7(a_1, "Paparazzo3A", sub_b33(a_0), 0, 14, 2, 305.5199890136719, 157.19, 102.94, 389, "PAPPHOTO", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 50:
        sub_85c7(a_1, "Paparazzo3B", sub_b33(a_0), 0, 14, 2, 1040.9599609375, -534.4199829101562, 60.169999999999995, 389, "", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 51:
        sub_85c7(a_1, "Paparazzo4", sub_b33(a_0), 0, 14, 4, -484.2, 229.67999999999998, 82.21, 389, "", -1, 8, "", 0, 1, -1, 4, 2, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 52:
        sub_85c7(a_1, "Rampage1", sub_b33(a_0), 0, 15, 4, 908.0, 3643.7, 32.2, 66, "", -1, 0, "", 0, 1, 54, 4, 4, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 54:
        sub_85c7(a_1, "Rampage3", sub_b33(a_0), 0, 15, 4, 465.1, -1849.3, 27.8, 84, "", -1, 0, "", 0, 1, 55, 4, 4, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 55:
        sub_85c7(a_1, "Rampage4", sub_b33(a_0), 0, 15, 4, -161.0, 1669.6999999999998, 33.0, 84, "", -1, 0, "", 0, 0, 56, 4, 4, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 56:
        sub_85c7(a_1, "Rampage5", sub_b33(a_0), 0, 15, 4, 1298.1999999999998, 2504.139892578125, 21.09, 84, "", -1, 0, "", 0, 0, 53, 4, 4, 0, 2359, sub_8658(a_0), 0, 0);
        break;
    case 53:
        sub_85c7(a_1, "Rampage2", sub_b33(a_0), 0, 15, 4, 1181.5, -400.1, 67.5, 84, "", -1, 0, "rampage_controller", 0, 0, -1, 4, 4, 0, 2359, sub_8658(a_0), 1, 0);
        break;
    case 57:
        sub_85c7(a_1, "TheLastOne", sub_b33(a_0), 0, 16, 4, -1298.97998046875, 4640.16015625, 105.67, 66, "", 133, 1, "", 0, 1, -1, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 58:
        sub_85c7(a_1, "Tonya1", sub_b33(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 66, "AM_H_RCFS", -1, 0, "ambient_TonyaCall", 24, 1, 59, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 59:
        sub_85c7(a_1, "Tonya2", sub_b33(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "ambient_Tonya", 185, 0, 60, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 60:
        sub_85c7(a_1, "Tonya3", sub_b33(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 187, 0, 61, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 61:
        sub_85c7(a_1, "Tonya4", sub_b33(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 0, 62, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    case 62:
        sub_85c7(a_1, "Tonya5", sub_b33(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "", 0, 0, -1, 4, 2, 0, 2359, sub_8658(a_0), 0, 1);
        break;
    default:
        break;
    }
}

void sub_85c7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17, auto a_18, auto a_19, auto a_20, auto a_21, auto a_22, auto a_23, auto a_24) {
    a_0._f4 = a_5;
    a_0 = a_1;
    a_0._f1/*{2}*/ = a_2;
    a_0._f3 = a_4;
    a_0._f5 = a_6;
    a_0._f6/*{3}*/ = a_7;
    a_0._f9 = a_A;
    a_0._fA/*"16"*/ = a_B;
    a_0._fE = a_C;
    a_0._fF = a_D;
    a_0._f10/*"24"*/ = a_E;
    a_0._f16 = a_F;
    a_0._f17 = a_10;
    a_0._f18 = a_11;
    a_0._f19 = a_12;
    a_0._f1A = a_13;
    a_0._f1B = a_14;
    a_0._f1C = a_15;
    a_0._f1D = a_16;
    a_0._f1E = a_17;
    a_0._f1F = a_18;
}

auto sub_8658(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 1;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 1;
        break;
    case 6:
        return 1;
        break;
    case 7:
        return 0;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 0;
        break;
    case 10:
        return 0;
        break;
    case 11:
        return 0;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 0;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 0;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 1;
        break;
    case 23:
        return 1;
        break;
    case 24:
        return 1;
        break;
    case 25:
        return 1;
        break;
    case 26:
        return 1;
        break;
    case 27:
        return 0;
        break;
    case 28:
        return 1;
        break;
    case 29:
        return 1;
        break;
    case 30:
        return 1;
        break;
    case 31:
        return 0;
        break;
    case 32:
        return 1;
        break;
    case 33:
        return 1;
        break;
    case 34:
        return 1;
        break;
    case 35:
        return 0;
        break;
    case 36:
        return 0;
        break;
    case 37:
        return 0;
        break;
    case 38:
        return 1;
        break;
    case 39:
        return 1;
        break;
    case 40:
        return 1;
        break;
    case 41:
        return 1;
        break;
    case 42:
        return 1;
        break;
    case 43:
        return 1;
        break;
    case 44:
        return 0;
        break;
    case 45:
        return 0;
        break;
    case 46:
        return 1;
        break;
    case 47:
        return 1;
        break;
    case 48:
        return 0;
        break;
    case 49:
        return 1;
        break;
    case 50:
        return 1;
        break;
    case 51:
        return 1;
        break;
    case 52:
        return 1;
        break;
    case 54:
        return 1;
        break;
    case 55:
        return 1;
        break;
    case 56:
        return 1;
        break;
    case 53:
        return 1;
        break;
    case 57:
        return 1;
        break;
    case 58:
        return 1;
        break;
    case 59:
        return 1;
        break;
    case 60:
        return 1;
        break;
    case 61:
        return 1;
        break;
    case 62:
        return 1;
        break;
    default:
        break;
    }
    return 0;
}

auto sub_899e(auto a_0) {
    if (sub_92e1(&a_0._f1)) {
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_0._f9)) {
            sub_9076(1);
            sub_8f17(a_0, 1, sub_900b(a_0));
        }
        if (a_0._f1B) {
            if (sub_8ec4(a_0)) {
                while (!PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) {
                    sub_afdb();
                    SYSTEM::WAIT(0);
                }
            }
        }
        sub_8a42(a_0);
        v_3 = SYSTEM::START_NEW_SCRIPT_WITH_ARGS(&a_0._f1, a_0, 61, 18000);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(&a_0._f1);
        if (CUTSCENE::HAS_CUTSCENE_LOADED()) {
            sub_14bf4("Initial cutscene loaded and passing to RC mission.");
            CUTSCENE::_8D9DF6ECA8768583(v_3);
        } else { 
            sub_14bf4("Initial cutscene wasn't loaded in time to pass to RC mission.");
            CUTSCENE::REMOVE_CUTSCENE();
        }
        return 1;
    }
    return 0;
}

void sub_8a42(auto a_0) {
    sub_8e47();
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 32, 0);
        PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 250, 0);
    }
    if (sub_8df4(a_0)) {
        PED::REMOVE_PED_HELMET(PLAYER::PLAYER_PED_ID(), 0);
    }
    PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
    UI::CLEAR_ADDITIONAL_TEXT(0, 1);
    UI::CLEAR_ADDITIONAL_TEXT(3, 1);
    UI::CLEAR_ADDITIONAL_TEXT(2, 1);
    if (g_8F8E == 1) {
        if (sub_8db4(PLAYER::PLAYER_PED_ID())) {
            sub_8b3b(PLAYER::PLAYER_PED_ID());
        }
    }
    if (!sub_b5e6()) {
        if (a_0 < 63) {
            sub_8add(a_0);
            v_3/*{2}*/ = sub_b33(a_0);
            UI::SET_MISSION_NAME(1, &v_3);
        }
    }
}

void sub_8add(auto a_0) {
    if (a_0 < 63) {
        sub_8b03();
        g_10FC4 = a_0;
        g_10FC3 = 0;
        g_10FC6 = 7;
    } else { }
}

void sub_8b03() {
    if (g_10FC3 != 6) {}
    if (g_10FC8) {
        UI::RESET_HUD_COMPONENT_VALUES(15);
        g_10FC8 = 0;
        g_4369._f1EB1 = 0;
    }
    g_10FC3 = 6;
    g_10FC5 = -1;
    g_10FC4 = -1;
}

void sub_8b3b(auto a_0) {
    if (a_0 == 0) {
        return ;
    }
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return ;
    }
    v_3 = sub_8d6b(a_0);
    if (!(v_3 == -1)) {
        v_4 = g_8EC9[v_3/*5*/];
        sub_8c48(1, v_4, 1);
        return ;
    }
    v_5 = sub_8c17(a_0);
    if (v_5 == -1) {
        return ;
    }
    sub_8b94(v_5);
}

void sub_8b94(auto a_0) {
    if ((a_0 < 0) || (a_0 >= 5)) {
        return ;
    }
    if (!(g_8EAF[a_0/*5*/]._f1 == 0)) {
        if (g_8EAF[a_0/*5*/]._f1 == PLAYER::PLAYER_PED_ID()) {
            g_8F8C = 0;
        }
    }
    g_8EAF[a_0/*5*/] = 13;
    g_8EAF[a_0/*5*/]._f1 = 0;
    g_8EAF[a_0/*5*/]._f2 = 0;
    g_8EAF[a_0/*5*/]._f3 = 0;
    g_8EAF[a_0/*5*/]._f4 = 0;
    g_8EAE -= 1;
    if (g_8EAE < 0) {
        g_8EAE = 0;
    }
}

auto sub_8c17(auto a_0) {
    v_3 = 0;
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        if (g_8EAF[v_3/*5*/]._f1 == a_0) {
            return v_3;
        }
    }
    return -1;
}

void sub_8c48(auto a_0, auto a_1, auto a_2) {
    sub_8c5c(a_0, a_1, a_2, 0, 0);
}

void sub_8c5c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1 == -1) {
        return ;
    }
    if (a_2 == 6) {
        return ;
    }
    if (sub_8d04(a_0, a_1, a_2)) {
        return ;
    }
    v_7 = sub_8cd3();
    if (v_7 == -1) {
        return ;
    }
    g_8F1A[v_7/*5*/] = a_0;
    g_8F1A[v_7/*5*/]._f1 = a_1;
    g_8F1A[v_7/*5*/]._f2 = a_2;
    g_8F1A[v_7/*5*/]._f3 = a_3;
    g_8F1A[v_7/*5*/]._f4 = a_4;
}

auto sub_8cd3() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 16; v_2 += 1) {
        if (g_8F1A[v_2/*5*/]._f2 == 6) {
            return v_2;
        }
    }
    return -1;
}

auto sub_8d04(auto a_0, auto a_1, auto a_2) {
    if (sub_8d1f(a_0, a_1, a_2) == -1) {
        return 0;
    }
    return 1;
}

auto sub_8d1f(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    for (v_5 = 0; v_5 < 16; v_5 += 1) {
        if (a_2 == g_8F1A[v_5/*5*/]._f2) {
            if (a_0 == g_8F1A[v_5/*5*/]) {
                if (a_1 == g_8F1A[v_5/*5*/]._f1) {
                    return v_5;
                }
            }
        }
    }
    return -1;
}

auto sub_8d6b(auto a_0) {
    if (a_0 == 0) {
        return -1;
    }
    v_3 = 0;
    for (v_3 = 0; v_3 < 16; v_3 += 1) {
        if (!(g_8EC9[v_3/*5*/] == -1)) {
            if (a_0 == g_8EC9[v_3/*5*/]._f1) {
                return v_3;
            }
        }
    }
    return -1;
}

auto sub_8db4(auto a_0) {
    if (sub_8dd4(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_8dd4(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_8df4(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
    case 60:
    case 61:
        return 0;
        break;
    }
    return 1;
}

void sub_8e47() {
    if (g_C10[0/*2811*/][0/*281*/]._f103 == 2) {
        g_C10[0/*2811*/][0/*281*/]._f103 = 0;
    }
    if (g_C10[1/*2811*/][0/*281*/]._f103 == 2) {
        g_C10[1/*2811*/][0/*281*/]._f103 = 0;
    }
    if (g_C10[2/*2811*/][0/*281*/]._f103 == 2) {
        g_C10[2/*2811*/][0/*281*/]._f103 = 0;
    }
    GAMEPLAY::CLEAR_BIT(&g_8EB, 25);
    GAMEPLAY::SET_BIT(&g_8EC, 11);
}

auto sub_8ec4(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 14:
    case 16:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
        return 0;
        break;
    }
    return 1;
}

void sub_8f17(auto a_0, auto a_1, auto a_2) {
    for (v_5 = 0; v_5 < 6; v_5 += 1) {
        if (sub_8dd4(a_0._f1C[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f1C[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    for (v_5 = 0; v_5 < 5; v_5 += 1) {
        if (sub_8dd4(a_0._f23[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f23[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    for (v_5 = 0; v_5 < 6; v_5 += 1) {
        if (sub_8dd4(a_0._f29[v_5/*1*/])) {
            ENTITY::SET_ENTITY_PROOFS(a_0._f29[v_5/*1*/], a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        }
    }
    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
        ENTITY::SET_ENTITY_PROOFS(PLAYER::PLAYER_PED_ID(), a_1, a_1, a_1, a_1, a_1, 0, 0, 0);
        ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), a_1);
        if (a_2) {
            WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
        }
    }
}

auto sub_900b(auto a_0) {
    switch (a_0) {
    case 5:
    case 6:
    case 14:
    case 38:
    case 39:
    case 40:
    case 41:
    case 49:
    case 50:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
        return 0;
        break;
    }
    return 1;
}

void sub_9076(auto a_0) {
    v_3 = PLAYER::GET_PLAYER_INDEX();
    if (!PLAYER::IS_PLAYER_DEAD(v_3)) {
        if (a_0) {
        } else { }
        PLAYER::SET_PLAYER_CONTROL(v_3, a_0, 16);
        PLAYER::SET_PLAYER_CONTROL(v_3, a_0, 32);
    }
    sub_90b2(1, 1, 0, 0);
}

void sub_90b2(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0) {
        PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID());
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 1);
        sub_92be(1);
        UI::_A8FDB297A8D25FBA();
        UI::_FDB423997FA30340();
        if (current_character._f1 > 3) {
            if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
                AUDIO::STOP_SCRIPTED_CONVERSATION(0);
            }
            if (!sub_9297()) {
                current_character._f1 = 3;
            }
            g_3D60 = 5;
        }
        sub_9264(1, a_3, a_2, 0);
        g_D971 = 1;
        g_10983 = 1;
        g_10EC3 = 1;
    } else { 
        sub_92be(0);
        UI::_E1CD1E48E025E661();
        g_D971 = 0;
        if (a_1) {
            GRAPHICS::_03FC694AE06C5A20();
        }
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 0);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 0);
        sub_9264(0, a_3, a_2, 0);
        if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (!sub_9185(PLAYER::PLAYER_ID()))) {
            ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), 0);
        }
        g_10EC3 = 0;
    }
}

auto sub_9185(auto a_0) {
    if (sub_91d8(a_0, 0)) {
        return 1;
    }
    if (sub_91c7()) {
        if (a_0 == PLAYER::PLAYER_ID()) {
            return 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_24E1AF[a_0/*306*/]._fC2, 2)) {
        return 1;
    }
    return 0;
}

auto sub_91c7() {
    return GAMEPLAY::IS_BIT_SET(g_240005, 3);
}

auto sub_91d8(auto a_0, auto a_1) {
    if (a_0 == PLAYER::PLAYER_ID()) {
        v_4 = sub_9223(-1, 0) == 8;
    } else { 
        v_4 = g_1837E7[a_0/*410*/]._fC0 == 8;
    }
    if (a_1 == 1) {
        if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
            v_4 = PLAYER::GET_PLAYER_TEAM(a_0) == 8;
        }
    }
    return v_4;
}

auto sub_9223(auto a_0, auto a_1) {
    v_5 = a_0;
    if (v_5 == -1) {
        v_5 = sub_38b2();
    }
    if (g_141431[v_5/*1*/] == 1) {
        if (a_1) {}
        v_4 = 8;
    } else { 
        v_4 = g_1407E4[v_5/*1*/];
        if (a_1) {}
    }
    return v_4;
}

auto sub_9264(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0;
    if (GAMEPLAY::IS_PC_VERSION()) {
        if ((CUTSCENE::_A0FE76168A189DDB() != a_0) && a_2) {
            CUTSCENE::_20746F7B1032A3C7(a_0, a_1, 1, a_3);
            v_6 = 1;
        }
    }
    return v_6;
}

auto sub_9297() {
    if ((current_character._f1 == 1) || (current_character._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_92be(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 13);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 13);
    }
}

auto sub_92e1(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        SCRIPT::REQUEST_SCRIPT(a_0);
        while (!SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
            SCRIPT::REQUEST_SCRIPT(a_0);
            SYSTEM::WAIT(0);
        }
        return 1;
    }
    sub_14bf4("Attempting to launch invalid script file [TERMINATING]");
    return 0;
}

void sub_931e() {
    g_38F2 = 0;
    sub_932e();
}

void sub_932e() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (current_character._f1 == 9)) || (g_384C == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
        current_character._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

auto sub_9385() {
    if ((g_3D60 != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_93a7(auto a_0, auto a_1) {
    if (is_in_transition) {
        sub_14bf4("IS_RC_FINE_AND_IN_RANGE(): The game is running Multiplayer [TERMINATING]");
        return 0;
    }
    sub_737b(a_0, &v_4);
    if ((sub_afb3(a_0) || sub_af41(a_0)) || (g_10FBA == 1)) {
        return 1;
    }
    if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
        sub_14bf4("IS_RC_FINE_AND_IN_RANGE(): Player out of range [TERMINATING]");
        return 0;
    }
    if (sub_abdb(a_0)) {
        if (a_0 == 19) {
            sub_ab3e(a_0._f1C[0/*1*/]);
        }
        sub_14bf4("IS_RC_FINE_AND_IN_RANGE(): Script denied by RC Controller [TERMINATING]");
        return 0;
    }
    if (a_0._f19 == 1) {
        if (!sub_9f95(a_0, 1, 0)) {
            return 0;
        }
    } else if (a_0._f10 == 0) {
        if (!sub_9f95(a_0, 0, 0)) {
            return 0;
        }
    }
    if ((((((a_0 == 16) || (a_0 == 9)) || (a_0 == 18)) || (a_0 == 22)) || (a_0 == 32)) || (a_0 == 51)) {
        if (!sub_9d7e(a_0, 1, 1)) {
            if (a_0 == 16) {
                sub_9cfe(a_0);
            } else { 
                sub_99cf(a_0);
            }
            return 0;
        }
    } else if (a_0 == 24) {
        if (!sub_9d7e(a_0, 0, 1)) {
            sub_99cf(a_0);
            return 0;
        }
    } else if (a_0 == 6) {
        if (!sub_9d7e(a_0, 0, 1)) {
            return 0;
        }
    } else if (a_0._f1A == 1) {
        if (!sub_9d7e(a_0, 1, 0)) {
            sub_99cf(a_0);
            return 0;
        }
    } else if ((a_0._f10 == 2) || (a_0._f10 == 1)) {
        if (!sub_9d7e(a_0, 0, 0)) {
            sub_99cf(a_0);
            return 0;
        }
    }
    if ((a_0._f10 == 2) || (a_0._f10 == 1)) {
        if (sub_8dd4(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_AT_COORD(a_0._f23[0/*1*/], v_4._f6, 8.0, 8.0, 8.0, 0, 1, 0)) {
                return 0;
            }
        }
    }
    if (a_0 == 10) {
        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, a_0._f11[0/*3*/], 8.0)) {
            sub_14bf4("IS_RC_FINE_AND_IN_RANGE(): Explosion near mission trigger [TERMINATING]");
            return 0;
        }
    }
    if (v_4._f4 != 17) {
        if (!GAMEPLAY::IS_BIT_SET(v_4._f1A, sub_bc88())) {
            sub_14bf4("IS_RC_FINE_AND_IN_RANGE(): No longer a valid player character to launch mission");
            return 0;
        }
    }
    if (sub_99aa(&a_0._f30) && a_1) {
        sub_961a(a_0._f1C[0/*1*/], &a_0._f30, a_0);
    }
    return 1;
}

void sub_961a(auto a_0, auto a_1, auto a_2) {
    if (sub_8dd4(a_0)) {
        switch (a_1._f3) {
        case 1:
            if (sub_99aa(a_1)) {
                if (STREAMING::HAS_ANIM_DICT_LOADED(a_1)) {
                    AI::CLEAR_PED_TASKS_IMMEDIATELY(a_0);
                    if (a_2 != 21) {
                        if (sub_5f94(a_1._f5, 0.0, 0.0, 0.0, 0)) {
                            AI::TASK_PLAY_ANIM(a_0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
                        } else { 
                            AI::OPEN_SEQUENCE_TASK(&v_5);
                            if (sub_9992(a_1)) {
                                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f2, a_1._f5, a_1._f8, 1000.0, -8.0, -1, 262152, 0, 2, 0);
                            } else { 
                                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f1, a_1._f5, a_1._f8, 1000.0, -8.0, -1, 262152, 0, 2, 0);
                            }
                            AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
                            AI::CLOSE_SEQUENCE_TASK(v_5);
                            AI::TASK_PERFORM_SEQUENCE(a_0, v_5);
                            AI::CLEAR_SEQUENCE_TASK(&v_5);
                        }
                    } else { 
                        AI::TASK_PLAY_ANIM_ADVANCED(a_0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 3);
                    }
                    a_1._f3 = 2;
                } else { 
                    a_1._f3 = 0;
                }
            } else { 
                a_1._f3 = 0;
            }
            break;
        case 2:
            if ((!sub_9992(a_1)) || (!ENTITY::IS_ENTITY_PLAYING_ANIM(a_0, a_1, a_1._f2, 3))) {
                if (sub_9972(a_2) && (!PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 25.0))) {
                    AI::TASK_TURN_PED_TO_FACE_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), 0);
                    a_1._f3 = 5;
                } else if ((sub_9992(a_1) && (a_1._f4 == 0)) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 20.0)) {
                    a_1._f3 = 3;
                }
            }
            break;
        case 3:
            AI::OPEN_SEQUENCE_TASK(&v_6);
            if (sub_5f94(a_1._f5, 0.0, 0.0, 0.0, 0)) {
                AI::TASK_PLAY_ANIM(0, a_1, a_1._f2, 4.0, -4.0, -1, 262144, 0, 0, 0, 0);
                AI::TASK_PLAY_ANIM(0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
            } else { 
                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f2, a_1._f5, a_1._f8, 4.0, -4.0, -1, 262152, 0, 2, 0);
                AI::TASK_PLAY_ANIM_ADVANCED(0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
            }
            AI::CLOSE_SEQUENCE_TASK(v_6);
            AI::TASK_PERFORM_SEQUENCE(a_0, v_6);
            AI::CLEAR_SEQUENCE_TASK(&v_6);
            a_1._f4 = 1;
            if (sub_9972(a_2)) {
                a_1._f3 = 2;
            } else { 
                a_1._f3 = 0;
            }
            break;
        case 5:
            if ((!sub_9972(a_2)) || PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 10.0)) {
                if (sub_5f94(a_1._f5, 0.0, 0.0, 0.0, 0)) {
                    AI::TASK_PLAY_ANIM(a_0, a_1, a_1._f1, 8.0, -8.0, -1, 262153, 0, 0, 0, 0);
                } else { 
                    AI::TASK_PLAY_ANIM_ADVANCED(a_0, a_1, a_1._f1, a_1._f5, a_1._f8, 8.0, -8.0, -1, 262153, 0, 2, 0);
                }
                a_1._f3 = 2;
            }
            break;
        }
    }
}

auto sub_9972(auto a_0) {
    if ((a_0 == 17) || (a_0 == 20)) {
        return 1;
    }
    return 0;
}

auto sub_9992(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0._f2)) {
        return 0;
    }
    return 1;
}

auto sub_99aa(auto a_0) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0) || GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0._f1)) {
        return 0;
    }
    return 1;
}

void sub_99cf(auto a_0) {
    if (a_0 == 52) {
        sub_9cd3(&a_0._f29[1/*1*/]);
        sub_9cd3(&a_0._f29[2/*1*/]);
    }
    if (sub_8dd4(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (sub_8db4(a_0._f1C[v_3/*1*/])) {
                if (!PED::IS_PED_IN_ANY_VEHICLE(a_0._f1C[v_3/*1*/], 0)) {
                    ENTITY::SET_ENTITY_COLLISION(a_0._f1C[v_3/*1*/], 1, 0);
                    ENTITY::FREEZE_ENTITY_POSITION(a_0._f1C[0/*1*/], 0);
                }
                PED::SET_PED_KEEP_TASK(a_0._f1C[v_3/*1*/], 1);
                if (a_0 == 34) {
                    if (sub_8dd4(a_0._f29[0/*1*/])) {
                        ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 1, 0);
                        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 0);
                    }
                }
                switch (a_0) {
                case 19:
                    sub_ab3e(a_0._f1C[v_3/*1*/]);
                    break;
                case 8:
                    STREAMING::REQUEST_ANIM_DICT("rcmcollect_paperleadinout@");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmcollect_paperleadinout@")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "rcmcollect_paperleadinout@", "meditate_getup", 8.0, -8.0, -1, 8, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 0:
                case 1:
                    STREAMING::REQUEST_ANIM_DICT("rcmabigail");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmabigail")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "rcmabigail", "breakout_base", 8.0, -8.0, -1, 8, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 32:
                    STREAMING::REQUEST_ANIM_DICT("rcmminute1");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmminute1")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    if (v_3 == 0) {
                        AI::TASK_PLAY_ANIM(0, "rcmminute1", "base_to_idle_joe", 8.0, -8.0, -1, 32776, 0, 0, 0, 0);
                    } else { 
                        AI::TASK_PLAY_ANIM(0, "rcmminute1", "base_to_idle_josef", 8.0, -8.0, -1, 32776, 0, 0, 0, 0);
                    }
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                case 24:
                    STREAMING::REQUEST_ANIM_DICT("special_ped@hao@base");
                    while (!STREAMING::HAS_ANIM_DICT_LOADED("special_ped@hao@base")) {
                        SYSTEM::WAIT(0);
                    }
                    AI::OPEN_SEQUENCE_TASK(&v_4);
                    AI::TASK_PLAY_ANIM(0, "special_ped@hao@base", "hao_exit", 8.0, -8.0, -1, 520, 0, 0, 0, 0);
                    AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    AI::CLOSE_SEQUENCE_TASK(v_4);
                    AI::TASK_PERFORM_SEQUENCE(a_0._f1C[v_3/*1*/], v_4);
                    AI::CLEAR_SEQUENCE_TASK(&v_4);
                    break;
                default:
                    AI::CLEAR_PED_SECONDARY_TASK(a_0._f1C[v_3/*1*/]);
                    AI::TASK_SMART_FLEE_PED(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
                    break;
                }
            }
        }
    }
}

void sub_9cd3(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        OBJECT::DELETE_OBJECT(a_0);
    }
}

void sub_9cfe(auto a_0) {
    if (sub_8dd4(PLAYER::PLAYER_PED_ID())) {
        for (v_3 = 0; v_3 <= (a_0._f1C - 1); v_3 += 1) {
            if (sub_8db4(a_0._f1C[v_3/*1*/])) {
                PED::SET_PED_COMBAT_ATTRIBUTES(a_0._f1C[v_3/*1*/], 1, 0);
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0._f1C[v_3/*1*/], 0);
                PED::SET_PED_KEEP_TASK(a_0._f1C[v_3/*1*/], 1);
                AI::TASK_COMBAT_PED(a_0._f1C[v_3/*1*/], PLAYER::PLAYER_PED_ID(), 0, 16);
                ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&a_0._f1C[v_3/*1*/]);
            }
        }
    }
}

auto sub_9d7e(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        v_6 = a_0._f23 - 1;
    } else { 
        v_6 = 0;
    }
    if (sub_8db4(PLAYER::PLAYER_PED_ID())) {
        for (v_5 = 0; v_5 <= v_6; v_5 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f23[v_5/*1*/])) {
                if (ENTITY::IS_ENTITY_DEAD(a_0._f23[v_5/*1*/])) {
                    sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is dead [TERMINATING]");
                    return 0;
                }
                if (!VEHICLE::IS_VEHICLE_DRIVEABLE(a_0._f23[v_5/*1*/], 0)) {
                    sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is not driveable [TERMINATING]");
                    return 0;
                }
                if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(a_0._f23[v_5/*1*/], PLAYER::PLAYER_PED_ID(), 0)) {
                    sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has been damaged by player [TERMINATING]");
                    return 0;
                }
                if (ENTITY::GET_ENTITY_HEALTH(a_0._f23[v_5/*1*/]) < 850) {
                    sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle health is less than 850 [TERMINATING]");
                    return 0;
                }
                if (a_2) {
                    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                        if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(a_0._f23[v_5/*1*/], PLAYER::PLAYER_PED_ID()) && (ENTITY::GET_ENTITY_SPEED(PLAYER::PLAYER_PED_ID()) > 5.0)) {
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has collided with the player vehicle at speed [TERMINATING]");
                            return 0;
                        }
                        v_7 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                        if (sub_9f6b(v_7)) {
                            if ((ENTITY::GET_ENTITY_MODEL(v_7) == ${towtruck}) || (ENTITY::GET_ENTITY_MODEL(v_7) == ${towtruck2})) {
                                if (sub_9f6b(a_0._f23[v_5/*1*/])) {
                                    if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(v_7, a_0._f23[v_5/*1*/])) {
                                        sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle is being towed by player [TERMINATING]");
                                        return 0;
                                    }
                                }
                            }
                        }
                    } else { 
                        v_8 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                        if (sub_9f6b(v_8)) {
                            if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(a_0._f23[v_5/*1*/], v_8) && (ENTITY::GET_ENTITY_SPEED(v_8) > 6.0)) {
                                sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Random character vehicle has collided with the player's last known vehicle at speed (player bailed out?) [TERMINATING]");
                                return 0;
                            }
                        }
                        if (a_0 == 16) {
                            if (sub_9f3b(PLAYER::PLAYER_PED_ID(), a_0._f23[v_5/*1*/])) {
                                sub_14bf4("STEP_5_COMMON_RCfineAndInRange - CHECK_VEHICLES_OK() - Player attempting to jack Epsilon vehicle [TERMINATING]");
                                return 0;
                            }
                        }
                    }
                }
            }
        }
    }
    return 1;
}

auto sub_9f3b(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_1, 0)) {
            v_4 = PED::GET_VEHICLE_PED_IS_USING(a_0);
            if (v_4 == a_1) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_9f6b(auto a_0) {
    if (sub_8dd4(a_0)) {
        if (VEHICLE::IS_VEHICLE_DRIVEABLE(a_0, 0)) {
            if (!FIRE::IS_ENTITY_ON_FIRE(a_0)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_9f95(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        v_6 = a_0._f1C - 1;
    } else { 
        v_6 = 0;
    }
    if (a_0 == 16) {
        a_2 = 1;
    }
    if (a_0 == 30) {
        a_2 = 1;
    }
    if (sub_8db4(PLAYER::PLAYER_PED_ID())) {
        for (v_5 = 0; v_5 <= v_6; v_5 += 1) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._f1C[v_5/*1*/])) {
                if (!PED::IS_PED_INJURED(a_0._f1C[v_5/*1*/])) {
                    if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) {
                        if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[v_5/*1*/])) {
                            if (a_2 == 0) {
                                sub_99cf(a_0);
                            } else { 
                                sub_9cfe(a_0);
                            }
                            if (sub_9385()) {
                                sub_931e();
                            }
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Random character is being pushed by car [TERMINATING]");
                            return 0;
                        }
                    }
                    if ((ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(a_0._f1C[v_5/*1*/]) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(a_0._f1C[v_5/*1*/])) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(a_0._f1C[v_5/*1*/])) {
                        if (a_2 == 0) {
                            sub_99cf(a_0);
                        } else { 
                            sub_9cfe(a_0);
                        }
                        sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Random character has been damaged by something [TERMINATING]");
                        return 0;
                    }
                    if (PED::IS_PED_RAGDOLL(a_0._f1C[v_5/*1*/])) {
                        if (ENTITY::IS_ENTITY_AT_ENTITY(a_0._f1C[v_5/*1*/], PLAYER::PLAYER_PED_ID(), 3.0, 3.0, 3.0, 0, 1, 0)) {
                            if (a_2 == 0) {
                                sub_99cf(a_0);
                            } else { 
                                sub_9cfe(a_0);
                            }
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Random character is in ragdoll [TERMINATING]");
                            return 0;
                        }
                    }
                    if (sub_aaf4(a_0)) {
                        if (!sub_b386(a_0)) {
                            if (sub_a782(a_0._f1C[v_5/*1*/], 1, 0, 0, 0)) {
                                if (a_2 == 0) {
                                    sub_99cf(a_0);
                                } else { 
                                    sub_9cfe(a_0);
                                }
                                sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Player is shooting near the Random Character [TERMINATING]");
                                return 0;
                            }
                        }
                        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_5/*1*/], 1), 15.0)) {
                            if (a_2 == 0) {
                                sub_99cf(a_0);
                            } else { 
                                sub_9cfe(a_0);
                            }
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - There was an explosion near the Random Character [TERMINATING]");
                            return 0;
                        }
                        if (sub_a285(a_0._f1C[v_5/*1*/], 0x432a0000)) {
                            if (a_2 == 0) {
                                sub_99cf(a_0);
                            } else { 
                                sub_9cfe(a_0);
                            }
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Random character is in combat [TERMINATING]");
                            return 0;
                        }
                    }
                    if (!sub_a251(a_0)) {
                        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[v_5/*1*/], 1), 5.0)) {
                            if (a_2 == 0) {
                                sub_99cf(a_0);
                            } else { 
                                sub_9cfe(a_0);
                            }
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - There was an explosion near the Random Character [TERMINATING]");
                            return 0;
                        }
                        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) {
                            if (a_2 == 0) {
                                sub_99cf(a_0);
                            } else { 
                                sub_9cfe(a_0);
                            }
                            sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Player has a wanted level [TERMINATING]");
                            return 0;
                        }
                    }
                } else { 
                    sub_14bf4("STEP_5_COMMON_RCfineAndInRange - Random character injured / dead [TERMINATING]");
                    if (a_0 == 34) {
                        if (sub_8dd4(a_0._f29[0/*1*/])) {
                            ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 1, 0);
                            ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 0);
                        }
                    }
                    return 0;
                }
            }
        }
    }
    return 1;
}

auto sub_a251(auto a_0) {
    if ((((a_0 == 2) || (a_0 == 3)) || (a_0 == 52)) || (a_0 == 53)) {
        return 1;
    }
    return 0;
}

auto sub_a285(auto a_0, auto a_1) {
    if (sub_8dd4(PLAYER::PLAYER_PED_ID()) && sub_8dd4(a_0)) {
        if (sub_a75a(a_0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), a_0)) {
            if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
                v_4 = 40.0;
            } else { 
                v_4 = 3.0;
            }
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, v_4, v_4, v_4, 0, 1, 0)) {
                if (sub_a2fb(a_0, a_1)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_a2fb(auto a_0, auto a_1) {
    return sub_a313(a_0, PLAYER::PLAYER_PED_ID(), a_1, 1, 250, 7);
}

auto sub_a313(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_C = sub_a71b(a_0, a_1);
    if ((!sub_8dd4(a_0)) || (!sub_8dd4(a_1))) {
        if (v_C != -1) {
            sub_a700(&l_25[v_C/*4*/]);
        }
        return 0;
    }
    if (!sub_a60f(a_0, a_1, a_2, a_3)) {
        return 0;
    }
    if (v_C == -1) {
        v_C = sub_a5c5();
        if (v_C == -1) {
            return 0;
        }
        l_25[v_C/*4*/]._f1 = a_0;
        l_25[v_C/*4*/]._f2 = a_1;
    }
    v_9/*{3}*/ = PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    v_8 = sub_a3d4(&l_25[v_C/*4*/], v_9, a_1, &l_25[v_C/*4*/]._f3, a_0, a_5);
    return v_8 || ((GAMEPLAY::GET_GAME_TIMER() - l_25[v_C/*4*/]._f3) < a_4);
}

auto sub_a3d4(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_11 = 0;
    if (!sub_8dd4(a_4)) {
        a_0 = 0;
        return 0;
    }
    if (a_0 == 0) {
        v_B/*{3}*/ = sub_a500(a_4, a_7);
        a_0 = WORLDPROBE::_7EE9F5D83DD4F90E(a_1, v_B + ((v_B - a_1) * ((vector)(0.1))), 511, a_6, 7);
        return 0;
    }
    v_12 = WORLDPROBE::_GET_RAYCAST_RESULT(a_0, &v_A, &v_B, &v_E, &v_11);
    if (v_12 == 0) {
        a_0 = 0;
        return 0;
    } else if (v_12 == 1) {
        return 0;
    }
    a_0 = 0;
    if (ENTITY::IS_ENTITY_A_PED(v_11)) {
        sub_8dd4(v_11);
        if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(v_11) == a_4) {
            if (l_4E) {
                GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
            }
            a_5 = GAMEPLAY::GET_GAME_TIMER();
            return 1;
        }
        return 0;
    }
    if (ENTITY::IS_ENTITY_A_VEHICLE(v_11)) {
        sub_8dd4(v_11);
        if (PED::IS_PED_IN_ANY_VEHICLE(a_4, 0)) {
            if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_11) == PED::GET_VEHICLE_PED_IS_IN(a_4, 0)) {
                if (l_4E) {
                    GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
                }
                a_5 = GAMEPLAY::GET_GAME_TIMER();
                return 1;
            }
        }
        return 0;
    }
    return 0;
}

auto<3> sub_a500(auto a_0, auto a_1) {
    if (a_1 == 7) {
        v_4 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 7);
        a_1 = v_4;
    }
    if (a_1 == 0) {
        return ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else if (a_1 == 1) {
        return PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    } else if (a_1 == 2) {
        return PED::GET_PED_BONE_COORDS(a_0, 39317, 0.0, 0.0, 0.0);
    } else if (a_1 == 3) {
        return PED::GET_PED_BONE_COORDS(a_0, 18905, 0.0, 0.0, 0.0);
    } else if (a_1 == 4) {
        return PED::GET_PED_BONE_COORDS(a_0, 57005, 0.0, 0.0, 0.0);
    } else if (a_1 == 5) {
        return PED::GET_PED_BONE_COORDS(a_0, 63931, 0.0, 0.0, 0.0);
    } else if (a_1 == 6) {
        return PED::GET_PED_BONE_COORDS(a_0, 36864, 0.0, 0.0, 0.0);
    }
    return ENTITY::GET_ENTITY_COORDS(a_0, 1);
}

auto sub_a5c5() {
    for (v_2 = 0; v_2 < l_25; v_2 += 1) {
        if (((l_25[v_2/*4*/] == 0) && (l_25[v_2/*4*/]._f1 == 0)) && (l_25[v_2/*4*/]._f2 == 0)) {
            return v_2;
        }
    }
    return -1;
}

auto sub_a60f(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = sub_a6c1(ENTITY::GET_ENTITY_COORDS(a_1, 1) - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_2 < 0.1) || (a_2 > 360.0)) {
        return 1;
    }
    if (a_3 == 0) {
        v_9/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_9/*{3}*/ = sub_a6c1(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_C = sub_a6a0(v_9, v_6);
    if (v_C <= SYSTEM::COS(a_2 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_a6a0(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return ((a_0 * a_3) + (a_0._f1 * a_3._f1)) + (a_0._f2 * a_3._f2);
}

auto<3> sub_a6c1(auto a_0, auto a_1, auto a_2) {
    v_5 = SYSTEM::VMAG(a_0);
    if (v_5 != 0.0) {
        v_6 = 1.0 / v_5;
        a_0 *= (vector)v_6;
    } else { 
        a_0 = 0.0;
        a_0._f1 = 0.0;
        a_0._f2 = 0.0;
    }
    return a_0;
}

void sub_a700(auto a_0) {
    a_0 = 0;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0;
}

auto sub_a71b(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < l_25; v_4 += 1) {
        if ((l_25[v_4/*4*/]._f1 == a_0) && (l_25[v_4/*4*/]._f2 == a_1)) {
            return v_4;
        }
    }
    return -1;
}

auto sub_a75a(auto a_0) {
    if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), a_0) && WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
        return 1;
    }
    return 0;
}

auto sub_a782(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = 8.0;
    v_8 = 15.0;
    if (a_1 == 0) {
        v_7 = 1.86;
        v_8 = 1.86;
    }
    if (a_2) {
        v_7 = 2.0;
    }
    if (sub_8dd4(PLAYER::PLAYER_PED_ID()) && sub_8dd4(a_0)) {
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_9, 1);
        if (v_9 == ${weapon_petrolcan}) {
            v_7 = 3.0;
            v_8 = 3.0;
        }
        if (!a_2) {
            if (sub_aaac(a_0, a_1, v_7, v_8)) {
                return 1;
            }
            if (sub_a87d(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        } else { 
            if (WEAPON::IS_PED_CURRENT_WEAPON_SILENCED(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
                    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), v_7, 1)) {
                        return 1;
                    }
                }
            } else { 
                if (a_1) {
                    v_7 = 1.86;
                    v_8 = 1.86;
                }
                if (sub_aaac(a_0, a_1, v_7, v_8)) {
                    return 1;
                }
            }
            if (sub_a87d(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_a87d(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    v_9/*{3}*/ = v_6;
    v_6 -= a_1;
    v_6._f1 -= a_1;
    v_6._f2 -= a_1;
    v_9 += a_1;
    v_9._f1 += a_1;
    v_9._f2 += a_1;
    if (a_2) {
        if (((GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_grenade}, a_1, 1) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_molotov}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_smokegrenade}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_stickybomb}, 5.0, 1)) {
            if (a_3) {
                if (sub_a989(a_0, a_1)) {
                    return 1;
                } else { 
                    return 0;
                }
            }
            return 1;
        }
    } else { 
        if (a_3) {
            if (sub_a989(a_0, a_1)) {
                return 1;
            } else { 
                return 0;
            }
        }
        if (GAMEPLAY::IS_PROJECTILE_IN_AREA(v_6, v_9, 1)) {
            return 1;
        }
    }
    return 0;
}

auto sub_a989(auto a_0, auto a_1) {
    if ((((GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_grenade}, a_1, &v_5, &v_4, 0) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_smokegrenade}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_bzgas}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_stickybomb}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_molotov}, a_1, &v_5, &v_4, 0)) {
        if (sub_aa1e(a_0, v_5, 90.0, 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_aa1e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8/*{3}*/ = sub_a6c1(a_1 - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_4 < 0.1) || (a_4 > 360.0)) {
        return 1;
    }
    if (a_5 == 0) {
        v_B/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_B/*{3}*/ = sub_a6c1(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_E = sub_a6a0(v_B, v_8);
    if (v_E <= SYSTEM::COS(a_4 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_aaac(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1) {
        if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, a_3, a_3, a_3, 0, 1, 0)) {
                return 1;
            }
        }
    }
    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), a_2, 1)) {
        return 1;
    }
    return 0;
}

auto sub_aaf4(auto a_0) {
    if ((((((a_0 == 2) || (a_0 == 3)) || (a_0 == 34)) || (a_0 == 11)) || (a_0 == 52)) || (a_0 == 53)) {
        return 0;
    }
    return 1;
}

void sub_ab3e(auto a_0) {
    if (sub_8dd4(PLAYER::PLAYER_PED_ID()) && sub_8dd4(a_0)) {
        STREAMING::REQUEST_ANIM_DICT("rcmextreme3");
        while (!STREAMING::HAS_ANIM_DICT_LOADED("rcmextreme3")) {
            SYSTEM::WAIT(0);
        }
        AI::OPEN_SEQUENCE_TASK(&v_3);
        AI::TASK_PLAY_ANIM(0, "rcmextreme3", "jump_fall", 1000.0, -8.0, -1, 8, 0, 0, 0, 0);
        AI::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(0, 1);
        AI::TASK_PARACHUTE_TO_TARGET(0, 64.6, 737.8, 44.2);
        AI::TASK_SMART_FLEE_PED(0, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(v_3);
        AI::TASK_PERFORM_SEQUENCE(a_0, v_3);
        AI::CLEAR_SEQUENCE_TASK(&v_3);
    }
}

auto sub_abdb(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_aee7();
    }
    if (a_0 == -1) {
        return 1;
    }
    if (sub_afb3(a_0)) {
        return 0;
    }
    if (!sub_acf5(4)) {
        if (sub_af41(a_0)) {
        } else { 
            return 1;
        }
    }
    if (sub_accf() && (!sub_acb2())) {
        return 1;
    }
    if (!sub_ac73(a_0)) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) != 0) {
                return 1;
            }
        }
    }
    if (!GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 2)) {
        return 1;
    }
    return 0;
}

auto sub_ac73(auto a_0) {
    if (((((a_0 == 5) || (a_0 == 6)) || (a_0 == 41)) || (a_0 == 60)) || (a_0 == 61)) {
        return 1;
    }
    return 0;
}

auto sub_acb2() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        if (GAMEPLAY::_D10282B6E3751BA0() == 1.0) {
            return 1;
        }
    }
    return 0;
}

auto sub_accf() {
    if (g_15929 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_14133[g_15929/*34*/]._fF, 20);
    }
    return 0;
}

auto sub_acf5(auto a_0) {
    return sub_ad06(a_0, g_8B74);
}

auto sub_ad06(auto a_0, auto a_1) {
    if (a_1 == 15) {
        return 1;
    }
    if (a_0 == 15) {
        return 0;
    }
    switch (a_0) {
    case 16:
        switch (a_1) {
        case 7:
        case 9:
        case 10:
        case 13:
        case 14:
            return 0;
            break;
        }
        return 1;
        break;
    case 0:
        switch (a_1) {
        case 5:
        case 17:
            return 1;
            break;
        }
        break;
    case 2:
    case 3:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
        case 17:
            return 1;
            break;
        }
        break;
    case 4:
        if (a_1 == 17) {
            return 1;
        }
        break;
    case 5:
        break;
    case 6:
    case 8:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 7:
        if (a_1 == 6) {
            return 1;
        }
        break;
    case 9:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 10:
        switch (a_1) {
        case 5:
        case 6:
        case 17:
            return 1;
            break;
        }
        break;
    case 11:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 17:
        switch (a_1) {
        case 5:
        case 12:
        case 17:
            return 1;
            break;
        }
        break;
    case 12:
    case 18:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
            return 1;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    }
    return 0;
}

auto sub_aee7() {
    return sub_aef8(SCRIPT::GET_THIS_SCRIPT_NAME(), 0);
}

auto sub_aef8(auto a_0, auto a_1) {
    v_25 = GAMEPLAY::GET_HASH_KEY(a_0);
    v_26 = 0;
    for (v_26 = 0; v_26 < 63; v_26 += 1) {
        v_4 = v_26;
        sub_737b(v_4, &v_5);
        if (GAMEPLAY::GET_HASH_KEY(v_5) == v_25) {
            return v_4;
        }
    }
    if (a_1 == 0) {}
    return -1;
}

auto sub_af41(auto a_0) {
    if ((sub_af75() && (g_163E2._fB == 6)) && (a_0 == sub_aef8(&g_163E2._f3, 0))) {
        return 1;
    }
    return 0;
}

auto sub_af75() {
    if ((((g_163E2 == 13) || (g_163E2 == 10)) || (g_163E2 == 11)) || (g_163E2 == 12)) {
        return 0;
    }
    return 1;
}

auto sub_afb3(auto a_0) {
    if (sub_b9aa(0)) {
        if (g_10FBB._f1 == 7) {
            if (g_10FBB == a_0) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_afdb() {
    sub_b220();
    sub_b1cf();
    sub_afef();
}

void sub_afef() {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            if (sub_b047(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), 10.5, 1, 0x3f000000, 0, 1, 0)) {
                if (AI::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0xce98fbb3) != 1) {
                    AI::TASK_LEAVE_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0, 0);
                }
            }
        }
    }
}

auto sub_b047(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    CONTROLS::DISABLE_CONTROL_ACTION(0, 71, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 72, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 76, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 73, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 59, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 60, 1);
    if (a_5) {
        CONTROLS::DISABLE_CONTROL_ACTION(0, 75, 1);
    }
    CONTROLS::DISABLE_CONTROL_ACTION(0, 80, 1);
    if (!a_6) {
        CONTROLS::DISABLE_CONTROL_ACTION(0, 69, 1);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 70, 1);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 68, 1);
    }
    CONTROLS::DISABLE_CONTROL_ACTION(0, 74, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 86, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 81, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 82, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 138, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 136, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 114, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 107, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 110, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 89, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 89, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 87, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 88, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 113, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 115, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 116, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 117, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 118, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 119, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 131, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 132, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 123, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 126, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 129, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 130, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 133, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 134, 1);
    CAM::_17FCA7199A530203();
    if ((GAMEPLAY::GET_GAME_TIMER() - g_1D) > 500) {
        VEHICLE::_TASK_BRING_VEHICLE_TO_HALT(a_0, a_1, a_2, a_4);
    }
    g_1D = GAMEPLAY::GET_GAME_TIMER();
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        if (GAMEPLAY::ABSF(ENTITY::GET_ENTITY_SPEED(a_0)) <= a_3) {
            return 1;
        }
    }
    return 0;
}

void sub_b1cf() {
    CONTROLS::DISABLE_CONTROL_ACTION(0, 21, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 37, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 25, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 141, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 140, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 24, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 257, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 22, 1);
    CONTROLS::DISABLE_CONTROL_ACTION(0, 23, 1);
}

void sub_b220() {
    if (!(current_character._f1 == 1)) {
        if (sub_b32c(0)) {
            sub_b248(0);
        }
        GAMEPLAY::SET_BIT(&g_8EC, 2);
    }
}

void sub_b248(auto a_0) {
    if (g_38EB) {
        sub_b2b8(0, 0);
    }
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8EC, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D60 = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 30);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 30);
    }
    if (!sub_9297()) {
        current_character._f1 = 3;
    }
}

void sub_b2b8(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_b32c(0)) {
            g_38EB = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_380E);
            }
            g_3805/*{3}*/ = g_3817[g_3816/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    } else if (g_38EB == 1) {
        g_38EB = 0;
        g_3805/*{3}*/ = g_381E[g_3816/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_380E);
        } else { 
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    }
}

auto sub_b32c(auto a_0) {
    if (a_0 == 1) {
        if (current_character._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (current_character._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

auto sub_b386(auto a_0) {
    if (((((a_0 == 52) || (a_0 == 53)) || (a_0 == 54)) || (a_0 == 55)) || (a_0 == 56)) {
        return 1;
    }
    return 0;
}

auto sub_b3c7(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_aee7();
    }
    if (a_0 == -1) {
        return 0;
    }
    v_3 = sub_b43e(&g_186DF[a_0/*10*/]._f9, 1, 4, 0, 0);
    if (!(v_3 == 1)) {
        return 0;
    }
    sub_b40c(a_0);
    return 1;
}

void sub_b40c(auto a_0) {
    g_186DF[a_0/*10*/]._f4 = 1;
    g_186DF[a_0/*10*/]._f5 = 0;
    g_186DF[a_0/*10*/]._f6 = 0;
    g_186DF[a_0/*10*/] = 0;
}

auto sub_b43e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_1 == 7) {
        return 0;
    }
    if (!a_3) {
        if (g_15B55._f2C == 1) {
            return 2;
        }
    }
    if (a_1 == 0) {
        if (sub_b5c4(0)) {
            return 0;
        }
        g_8B50 += 1;
        a_0 = g_8B50;
        PLAYER::SET_PLAYER_INVINCIBLE(PLAYER::GET_PLAYER_INDEX(), 0);
        g_42DE._f5 = 0;
        if (a_2 != 5) {
            PLAYER::FORCE_CLEANUP(8);
        }
        g_8B74 = a_2;
        g_8B4E = a_0;
        g_8B4F = a_4;
        g_8B4D = 0;
        return 1;
    }
    if (a_0 != -1) {
        if (g_8B4D > 0) {
            v_7 = 0;
            for (v_7 = 0; v_7 < g_8B4D; v_7 += 1) {
                if (g_8B53[v_7/*4*/] == a_0) {
                    return 2;
                }
            }
        } else if (g_8B4E == a_0) {
            return 1;
        }
        a_0 = -1;
    }
    if (a_0 == -1) {
        if (!sub_acf5(a_2)) {
            return 0;
        }
        if (g_8B4D == 8) {
            return 0;
        }
        g_8B50 += 1;
        a_0 = g_8B50;
        g_8B53[g_8B4D/*4*/] = g_8B50;
        g_8B53[g_8B4D/*4*/]._f1 = a_1;
        g_8B53[g_8B4D/*4*/]._f2 = a_2;
        g_8B53[g_8B4D/*4*/]._f3 = 0;
        g_8B4D += 1;
        if (a_4 != 0) {
            sub_b575(a_0, a_4);
        }
    }
    return 2;
}

void sub_b575(auto a_0, auto a_1) {
    if (g_8B4D == 0) {
        return ;
    }
    if (a_0 == -1) {
        return ;
    }
    v_4 = 0;
    for (v_4 = 0; v_4 < g_8B4D; v_4 += 1) {
        if (g_8B53[v_4/*4*/] == a_0) {
            g_8B53[v_4/*4*/]._f3 = a_1;
        }
    }
    a_0 = -1;
}

auto sub_b5c4(auto a_0) {
    if (g_8B74 == 15) {
        return 0;
    }
    if (sub_acf5(a_0)) {
        return 0;
    }
    return 1;
}

auto sub_b5e6() {
    if ((g_163E2 == 10) || (g_163E2 == 9)) {
        return 1;
    }
    return 0;
}

auto sub_b60a(auto a_0) {
    if (is_in_transition) {
        sub_14bf4("STEP_3_COMMON_CanRCLaunch - Script denied. Multiplayer is running [TERMINATING]");
        return 0;
    }
    if ((!game_state._f1E27) && (!sub_b9aa(1))) {
        sub_14bf4("STEP_3_COMMON_CanRCLaunch - Script denied, game flow is not active");
        return 0;
    }
    if (!sub_b6c3(a_0)) {
        g_186DF[a_0/*10*/]._f1 = 1;
        sub_14bf4("STEP_3_COMMON_CanRCLaunch - Script denied by RC Controller [TERMINATING]");
        return 0;
    }
    if (g_163E2._fB == 6) {
        if (g_163E2 < 9) {
            sub_737b(a_0, &v_3);
            if (GAMEPLAY::ARE_STRINGS_EQUAL(&g_163E2._f3, v_3)) {
                sub_14bf4("STEP_3_COMMON_CanRCLaunch - Script denied as a replay for this RC is being configured. [TERMINATING]");
                return 0;
            }
        }
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${candidate_controller}) == 0) {
        g_186DF[a_0/*10*/]._f1 = 1;
        sub_14bf4("STEP_3_COMMON_CanRCLaunch - Script denied as candidate_controller is not running. [TERMINATING]");
        return 0;
    }
    return 1;
}

auto sub_b6c3(auto a_0) {
    sub_737b(a_0, &v_3);
    if (!sub_acf5(4)) {
        if (sub_af41(a_0)) {
        } else { 
            return 0;
        }
    }
    if (sub_accf() && (!sub_acb2())) {
        return 0;
    }
    if (sub_b975(a_0)) {
        return 0;
    }
    if (a_0 == -1) {
        a_0 = sub_aee7();
    }
    if (a_0 == -1) {
        return 0;
    }
    if (!sub_afb3(a_0)) {
        if (!sub_b947(a_0)) {
            return 0;
        }
        if (!sub_b919(a_0)) {
            return 0;
        }
        if (sub_b8eb(a_0)) {
            return 0;
        }
    }
    if (a_0 == 58) {
        if (sub_b784(5)) {
            g_186DF[a_0/*10*/]._f3 = 0;
        }
    }
    if (g_186DF[a_0/*10*/]._f3 == 1) {
        return 0;
    }
    return 1;
}

auto sub_b784(auto a_0) {
    if (g_16416._f126 == 0) {
        return 0;
    }
    if (a_0 == 10) {
        for (v_3 = 0; v_3 < 10; v_3 += 1) {
            if (sub_b784(v_3)) {
                return 1;
            }
        }
    } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        sub_b809(a_0, &v_4);
        v_C = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(g_151CD[a_0/*10*/]._f3, &v_4);
        if ((v_C != 0) && (g_16416._f126 == v_C)) {
            return 1;
        }
    }
    return 0;
}

auto sub_b809(auto a_0, auto a_1) {
    a_1/*"32"*/ = "";
    switch (a_0) {
    case 0:
        a_1/*"32"*/ = "v_michael";
        break;
    case 5:
        a_1/*"32"*/ = "v_franklins";
        break;
    case 6:
        a_1/*"32"*/ = "v_franklinshouse";
        break;
    case 1:
    case 2:
        if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailer")) {
            a_1/*"32"*/ = "v_trailer";
        } else if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailerTidy")) {
            a_1/*"32"*/ = "V_TrailerTIDY";
        } else if (STREAMING::IS_IPL_ACTIVE("TrevorsTrailerTrash")) {
            a_1/*"32"*/ = "V_TrailerTRASH";
        }
        break;
    case 3:
        a_1/*"32"*/ = "v_trevors";
        break;
    case 4:
        a_1/*"32"*/ = "v_strip3";
        break;
    case 7:
    case 8:
    case 9:
        a_1/*"32"*/ = "v_psycheoffice";
        break;
    }
    return !GAMEPLAY::ARE_STRINGS_EQUAL(a_1, "");
}

auto sub_b8eb(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 3);
}

auto sub_b919(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 2);
}

auto sub_b947(auto a_0) {
    if ((a_0 == 63) || (a_0 == -1)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 0);
}

auto sub_b975(auto a_0) {
    if (sub_ac73(a_0)) {
        return 0;
    } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) != 0) {
            return 1;
        }
    }
    return 0;
}

auto sub_b9aa(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10FBD, 0);
}

auto sub_b9d5(auto a_0) {
    switch (a_0) {
    case 0:
        return "Rampage1";
    case 1:
        return "Rampage3";
    case 2:
        return "Rampage4";
    case 3:
        return "Rampage5";
    case 4:
        return "Rampage2";
    }
    return "";
}

auto sub_ba29(auto a_0) {
    switch (a_0) {
    case 0:
        return 52;
    case 1:
        return 54;
    case 2:
        return 55;
    case 3:
        return 56;
    case 4:
        return 53;
    }
    return -1;
}

auto sub_ba70() {
    v_2 = 0;
    if (!sub_bbef(PLAYER::PLAYER_PED_ID())) {
        return v_2;
    }
    if (g_186DF[56/*10*/]._f3) {
        return v_2;
    }
    if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) {
        if (l_124) {
            UI::CLEAR_HELP(1);
            sub_bbd8("RAMP_HELP_CRIM", -1);
            l_124 = 0;
        }
        v_2 = 1;
    } else if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
        if (l_123) {
            UI::CLEAR_HELP(1);
            sub_bbd8("RAMP_HELP_FOOT", -1);
            l_123 = 0;
        }
        v_2 = 1;
    } else if ((sub_bbaf(0) || STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) || sub_bb93()) {
        if (sub_2da("RAMP_HELP_TRIG")) {
            if (sub_bbaf(0)) {
            } else if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) {
            } else if (sub_bb93()) {}
            UI::CLEAR_HELP(1);
            l_125 = 0;
        }
        v_2 = 1;
    } else if (sub_14821(108)) {
        if (!l_125) {
            if (!sub_2da("RAMP_HELP_TRIG")) {
                UI::CLEAR_HELP(1);
                sub_bb7d("RAMP_HELP_TRIG");
            }
            l_125 = 1;
        }
        v_2 = !CONTROLS::IS_CONTROL_PRESSED(2, 51);
    }
    return v_2;
}

void sub_bb7d(auto a_0) {
    UI::_SET_TEXT_COMPONENT_FORMAT(a_0);
    UI::_DISPLAY_HELP_TEXT_FROM_STRING_LABEL(0, 1, 1, -1);
}

auto sub_bb93() {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return g_15B55._f2C == 1;
    }
    return 0;
}

auto sub_bbaf(auto a_0) {
    if (a_0) {
        return g_42DE._f4 && (g_42DE._f68 == 4);
    } else { 
        return g_42DE._f4;
    }
}

void sub_bbd8(auto a_0, auto a_1) {
    UI::_SET_TEXT_COMPONENT_FORMAT(a_0);
    UI::_DISPLAY_HELP_TEXT_FROM_STRING_LABEL(0, 0, 1, a_1);
}

auto sub_bbef(auto a_0) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    return !ENTITY::IS_ENTITY_DEAD(a_0);
}

auto sub_bc0c(auto a_0) {
    if (!sub_bbef(PLAYER::PLAYER_PED_ID())) {
        return -1;
    }
    v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        v_4/*{3}*/ = g_6350[l_120 + v_3/*23*/][0/*3*/];
        if ((GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_7, v_4, 1) <= a_0) && (GAMEPLAY::ABSF(v_7._f2 - v_4._f2) < 1.5)) {
            return v_3;
        }
    }
    return -1;
}

auto sub_bc88() {
    sub_408d();
    return game_state._f6EA._f21B._fDDD;
}

void sub_bca1(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0;
    asm .vardef<F> 7, "[{\"offset\":0,\"value\":5}]"
    v_7[0/*1*/] = 52;
    v_7[1/*1*/] = 53;
    v_7[2/*1*/] = 54;
    v_7[3/*1*/] = 55;
    v_7[4/*1*/] = 56;
    if (!sub_146c3(&v_7, a_0, a_1, 5.0)) {
        sub_14bf4(" Didn't know which RC To Launch");
        sub_1484e(a_0, 1);
    }
    if (!sub_b60a(a_0)) {
        sub_14bf4(" RC Can't Launch");
        sub_1484e(a_0, 1);
    }
    if (sub_1466f(a_0)) {
        while (1) {
            SYSTEM::WAIT(0);
            if (sub_14642(a_0)) {
                sub_1484e(a_0, 1);
            }
        }
    }
    sub_e594(a_0);
    GAMEPLAY::CLEAR_AREA(a_1, a_0._fF, 1, 0, 0, 0);
    while (1) {
        SYSTEM::WAIT(0);
        if ((a_0 == 52) || (a_0 == 53)) {
            if (sub_8dd4(a_0._f1C[0/*1*/])) {
                if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 5.1)) {
                    if (a_0 == 52) {
                        for (v_D = 0; v_D < a_0._f29; v_D += 1) {
                            if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[v_D/*1*/])) {
                                if ((sub_8dd4(a_0._f1C[0/*1*/]) && ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(a_0._f29[v_D/*1*/], a_0._f1C[0/*1*/])) || (sub_8dd4(a_0._f1C[1/*1*/]) && ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(a_0._f29[v_D/*1*/], a_0._f1C[1/*1*/]))) {
                                    OBJECT::DELETE_OBJECT(&a_0._f29[v_D/*1*/]);
                                }
                            }
                        }
                    }
                    PED::SET_PED_TO_RAGDOLL(a_0._f1C[0/*1*/], 100, 500, 0, 1, 1, 0);
                    PED::APPLY_DAMAGE_TO_PED(a_0._f1C[0/*1*/], 1000, 1);
                    if (sub_8dd4(a_0._f1C[1/*1*/])) {
                        PED::SET_PED_TO_RAGDOLL(a_0._f1C[1/*1*/], 100, 500, 0, 1, 1, 0);
                        PED::APPLY_DAMAGE_TO_PED(a_0._f1C[1/*1*/], 1000, 1);
                    }
                    sub_14bf4("Sitting Rampage attacked with explosives, cleaning up");
                    sub_1484e(a_0, 1);
                }
            }
            if (sub_8dd4(a_0._f1C[1/*1*/])) {
                if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0._f1C[1/*1*/], 1), 5.1)) {
                    if (a_0 == 52) {
                        for (v_D = 0; v_D < a_0._f29; v_D += 1) {
                            if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[v_D/*1*/])) {
                                if ((sub_8dd4(a_0._f1C[0/*1*/]) && ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(a_0._f29[v_D/*1*/], a_0._f1C[0/*1*/])) || (sub_8dd4(a_0._f1C[1/*1*/]) && ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(a_0._f29[v_D/*1*/], a_0._f1C[1/*1*/]))) {
                                    OBJECT::DELETE_OBJECT(&a_0._f29[v_D/*1*/]);
                                }
                            }
                        }
                    }
                    PED::SET_PED_TO_RAGDOLL(a_0._f1C[1/*1*/], 100, 500, 0, 1, 1, 0);
                    PED::APPLY_DAMAGE_TO_PED(a_0._f1C[1/*1*/], 1000, 1);
                    if (sub_8dd4(a_0._f1C[0/*1*/])) {
                        PED::SET_PED_TO_RAGDOLL(a_0._f1C[0/*1*/], 100, 500, 0, 1, 1, 0);
                        PED::APPLY_DAMAGE_TO_PED(a_0._f1C[0/*1*/], 1000, 1);
                    }
                    sub_14bf4("Sitting Rampage attacked with explosives, cleaning up");
                    sub_1484e(a_0, 1);
                }
            }
        }
        if (sub_e55a(a_0)) {
            sub_e4e8(a_0);
            sub_14bf4(" RC combat happening in area, tell peds to flee");
            sub_99cf(a_0);
            sub_1484e(a_0, 1);
        }
        if (!sub_93a7(a_0, 1)) {
            sub_14bf4(" RC Is Not Fine And In Range");
            sub_1484e(a_0, 1);
        }
        if (sub_e4d6(52)) {
            if (AI::IS_SCENARIO_GROUP_ENABLED("Rampage1")) {
                sub_14bf4(" Turning Off Scenario Group For Rampage 1");
                AI::SET_SCENARIO_GROUP_ENABLED("Rampage1", 0);
            }
        }
        sub_e4ae(a_0);
        sub_e166(&l_121, &a_0._f9, a_1);
        if ((v_6 == 0) && (l_121 != -1)) {
            sub_df71(a_0, &l_126);
            if (CUTSCENE::HAS_CUTSCENE_LOADED()) {
                sub_14bf4(" Cutscene Loaded");
                v_6 = 1;
            }
        }
        l_12A/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
        if (((!((a_0 == 52) && (l_12A._f2 > 34.0))) && (!((a_0 == 53) && (l_12A._f2 > 71.0)))) && (!((a_0 == 54) && (l_12A._f2 > 30.0)))) {
            if (sub_ce39(a_0, 0)) {
                if (a_0 == 53) {
                    if (sub_cccb(a_0)) {
                        sub_14bf4(" Trigger Conditions Met");
                        sub_afdb();
                        if (!sub_33d(a_0)) {
                            sub_14bf4(" RC Can't Launch");
                            sub_1484e(a_0, 1);
                        }
                        sub_14bf4(" RC Launcher Waiting To Terminate");
                        if (sub_2ed(a_0)) {
                            sub_14bf4(" Ready To Terminate");
                            sub_1484e(a_0, 0);
                        }
                    }
                } else if (sub_cad6(a_0)) {
                    sub_14bf4(" Trigger Conditions Met");
                    sub_afdb();
                    if (!sub_33d(a_0)) {
                        sub_14bf4(" RC Can't Launch");
                        sub_1484e(a_0, 1);
                    }
                    sub_14bf4(" RC Launcher Waiting To Terminate");
                    if (sub_2ed(a_0)) {
                        sub_14bf4(" Ready To Terminate");
                        sub_1484e(a_0, 0);
                    }
                }
            } else { 
                if (a_0 == 53) {
                    sub_c172(a_0);
                }
                if (CAM::IS_GAMEPLAY_HINT_ACTIVE()) {
                    l_73 = -1;
                    CAM::STOP_GAMEPLAY_HINT(0);
                    AI::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
                }
            }
        }
    }
}

void sub_c172(auto a_0) {
    v_3 = "misstrvram_2";
    switch (l_74) {
    case 0:
        STREAMING::REQUEST_ANIM_DICT(v_3);
        if (STREAMING::HAS_ANIM_DICT_LOADED(v_3)) {
            l_74 += 1;
        }
        break;
    case 1:
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            if ((sub_ca7a(a_0._f1C[0/*1*/], PLAYER::PLAYER_PED_ID(), 1) < 30.0) && ENTITY::IS_ENTITY_ON_SCREEN(a_0._f1C[0/*1*/])) {
                sub_c9df(&l_79, 0, a_0._f1C[0/*1*/], "RAMPAGEHIPSTER", 0, 1);
                l_74 += 1;
            }
        }
        break;
    case 2:
        l_75[0/*1*/] = PED::CREATE_SYNCHRONIZED_SCENE(l_6C, l_6F, 2);
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            sub_c3d5(&l_79, "RAMP2AU", "RAMP2_LEADIN", "RAMP2_LEADIN_1", 7, 0, 0);
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], l_75[0/*1*/], v_3, "hipster_post_post_irony", 8.0, -8.0, 513, 0, 0x447a0000, 0);
        }
        PED::SET_SYNCHRONIZED_SCENE_LOOPED(l_75[0/*1*/], 0);
        PED::_394B9CD12435C981(l_75[0/*1*/], 1);
        l_74 += 1;
        break;
    case 3:
        if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_75[0/*1*/])) {
            if (PED::GET_SYNCHRONIZED_SCENE_PHASE(l_75[0/*1*/]) >= 0.95) {
                l_74 += 1;
            }
        }
        break;
    case 4:
        l_75[1/*1*/] = PED::CREATE_SYNCHRONIZED_SCENE(l_6C, l_6F, 2);
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            sub_c3d5(&l_79, "RAMP2AU", "RAMP2_LEADIN", "RAMP2_LEADIN_2", 7, 0, 0);
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], l_75[1/*1*/], v_3, "hipster_self_hating_hipster", 8.0, -8.0, 513, 0, 0x447a0000, 0);
        }
        PED::SET_SYNCHRONIZED_SCENE_LOOPED(l_75[1/*1*/], 0);
        PED::_394B9CD12435C981(l_75[1/*1*/], 1);
        l_74 += 1;
        break;
    case 5:
        if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_75[1/*1*/])) {
            if (PED::GET_SYNCHRONIZED_SCENE_PHASE(l_75[1/*1*/]) >= 0.95) {
                l_74 += 1;
            }
        }
        break;
    case 6:
        l_75[2/*1*/] = PED::CREATE_SYNCHRONIZED_SCENE(l_6C, l_6F, 2);
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], l_75[2/*1*/], v_3, "hipster_idle", 8.0, -8.0, 513, 0, 0x447a0000, 0);
        }
        PED::SET_SYNCHRONIZED_SCENE_LOOPED(l_75[2/*1*/], 1);
        PED::_394B9CD12435C981(l_75[2/*1*/], 0);
        l_74 += 1;
        break;
    case 7:
        break;
    }
}

auto sub_c3d5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_c989(a_0, 145, a_1, a_5, a_6, 0);
    if (a_4 > 7) {
        if (a_4 < 12) {
            a_4 = 7;
        }
    }
    g_3D67 = 0;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 1;
    g_4141 = 0;
    g_4145 = 0;
    g_414C/*"24"*/ = a_3;
    g_280001 = 0;
    return sub_c429(a_2, a_4, 0);
}

auto sub_c429(auto a_0, auto a_1, auto a_2) {
    g_3D61 = 0;
    if ((g_3D60 == 0) || (g_3D62 == 2)) {
        if (g_3D60 != 0) {
            if (a_1 > g_3D62) {
                if (g_3D67 == 0) {
                    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
                    current_character._f1 = 3;
                    g_3D60 = 0;
                    g_3D61 = 1;
                    g_3D95 = 0;
                    g_3D5C = 0;
                    g_3D5D = 0;
                    g_3D6B = 0;
                    g_3D6A = 0;
                    g_384C = 0;
                } else { 
                    sub_932e();
                    return 0;
                }
            } else { 
                return 0;
            }
        }
        if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
            return 0;
        }
        if (sub_c94e(8, -1)) {
            return 0;
        }
        g_3DAC/*{6}*/ = g_3DA6;
        sub_c8f6();
        g_3A99/*{165}*/ = g_3B3E;
        g_3D66 = g_3D67;
        g_3D6D = g_3D6E;
        g_280002 = g_280001;
        g_3D6F/*{16}*/ = g_3D7F;
        g_3D68 = g_3D69;
        g_413E = g_413F;
        g_4146/*{6}*/ = g_414C;
        g_4140 = g_4141;
        g_4142 = g_4143;
        g_4144 = g_4145;
        g_3BE3._f172 = g_413D;
        g_3BE3._f170 = g_413B;
        g_3BE3._f171 = g_413C;
        g_3D5C = g_3D5D;
        if (g_3D66) {
            GAMEPLAY::CLEAR_BIT(&g_8EB, 20);
            GAMEPLAY::CLEAR_BIT(&g_8EC, 17);
            GAMEPLAY::CLEAR_BIT(&g_8ED, 0);
            if (a_2) {
                sub_c855();
                if (g_C10[current_character/*2811*/][0/*281*/]._f103 == 2) {
                    if (a_1 == 13) {
                    } else { 
                        return 0;
                    }
                }
                if (current_character._f1 > 3) {
                    return 0;
                }
            }
            if (g_382B == 1) {
                return 0;
            }
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (sub_c7bc()) {
                    return 0;
                }
                if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), ${gadget_parachute})) {
                    return 0;
                }
                if (!is_in_transition) {
                    if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                    if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                }
            }
            if (sub_9297()) {
                return 0;
            } else { 
                switch (current_character._f1) {
                case 7:
                    return 0;
                    break;
                case 8:
                    return 0;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                default:
                    break;
                }
                if (GAMEPLAY::IS_BIT_SET(g_8EB, 9)) {
                    return 0;
                }
            }
            sub_c727();
            g_3D6A = a_2;
        }
        g_3D62 = a_1;
        g_3BE3/*"24"*/ = a_0;
        g_38F2 = 0;
        sub_c6f5();
        return 1;
    } else { 
        if (g_3D60 == 5) {
            return 0;
        }
        if ((a_1 < g_3D62) || (a_1 == g_3D62)) {
            return 0;
        } else { 
            if (a_1 == 2) {
            } else { 
                sub_932e();
            }
            return 0;
        }
    }
}

void sub_c6f5() {
    for (v_2 = 0; v_2 <= 69; v_2 += 1) {
        g_38F4[v_2/*6*/]/*"24"*/ = "";
    }
    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    g_3D60 = 1;
}

void sub_c727() {
    g_3D95 = g_3D94;
    g_3D8F = g_3D90;
    g_3DBE/*{6}*/ = g_3DB2;
    g_3DC4/*{6}*/ = g_3DB8;
    g_3D97 = g_3D96;
    g_3DDC/*{6}*/ = g_3DCA;
    g_3DE2/*{6}*/ = g_3DD0;
    g_3DE8/*{6}*/ = g_3DD6;
    g_3DEE/*{6}*/ = g_3DF4;
    g_63E = g_63F;
    g_640 = g_641;
    g_3D6B = g_3D6C;
    g_3D6D = g_3D6E;
    g_3D6F/*{16}*/ = g_3D7F;
    g_3D64 = g_3D65;
    g_4158 = 0;
    g_3D91 = 0;
    g_3D92 = 0;
    GAMEPLAY::CLEAR_BIT(&g_8EC, 16);
}

auto sub_c7bc() {
    if (is_in_transition) {
        v_2 = 0;
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_3, 1);
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (((v_3 == ${weapon_sniperrifle}) || (v_3 == ${weapon_heavysniper})) || (v_3 == ${weapon_remotesniper})) {
                v_2 = 1;
            }
        }
        if (CAM::IS_AIM_CAM_ACTIVE() && (v_2 == 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::GET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 78, 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else { 
        return 1;
    }
}

void sub_c855() {
    if (sub_418a(14)) {
        if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[0/*29*/]) {
                current_character = 0;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[1/*29*/]) {
                current_character = 1;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[2/*29*/]) {
                current_character = 2;
            } else { 
                current_character = 0;
            }
        }
    } else { 
        current_character = sub_bc88();
        if (current_character == 145) {
            current_character = 3;
        }
        if (is_in_transition) {
            current_character = 3;
        }
        if (current_character > 3) {
            current_character = 3;
        }
    }
}

void sub_c8f6() {
    for (v_2 = 0; v_2 <= 15; v_2 += 1) {
        g_3A99[v_2/*10*/] = 0;
        g_3A99[v_2/*10*/]._f1/*"24"*/ = "";
        g_3A99[v_2/*10*/]._f7 = 0;
        g_3A99[v_2/*10*/]._f8 = 0;
    }
    g_3A99._fA1 = -99;
    g_3A99._fA2/*{3}*/ = {0.0, 0.0, 0.0 };
}

auto sub_c94e(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_146CF3._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_146CF3._f3B5, a_0);
}

void sub_c989(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B3E/*{165}*/ = a_0;
    g_63F = a_1;
    g_3DA6/*"24"*/ = a_2;
    g_413D = a_5;
    if (a_3 == 0) {
        g_413B = 1;
        g_4139 = 0;
    } else { 
        g_413B = 0;
        g_4139 = 1;
    }
    if (a_4 == 0) {
        g_413C = 1;
        g_413A = 0;
    } else { 
        g_413C = 0;
        g_413A = 1;
    }
}

void sub_c9df(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!is_in_transition) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

auto sub_ca7a(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        v_5/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else { 
        v_5/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 0);
    }
    if (!ENTITY::IS_ENTITY_DEAD(a_1)) {
        v_8/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_1, 1);
    } else { 
        v_8/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_1, 0);
    }
    return GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_5, v_8, a_2);
}

auto sub_cad6(auto a_0) {
    sub_afdb();
    if (l_73 < 0) {
        if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[1/*1*/], 1)) < 25.0) {
            return 1;
        }
        switch (a_0) {
        case 52:
            CAM::SET_GAMEPLAY_ENTITY_HINT(a_0._f1C[0/*1*/], 0.1, 0.0, 0.9, 1, -1, 2500, 2000, 0);
            AI::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[0/*1*/], -1, 0, 2);
            CAM::GET_IS_MULTIPLAYER_BRIEF(1);
            CAM::_D1F8363DFAD03848(-5.0);
            CAM::_5D7B620DAE436138(0.1);
            CAM::_C92717EF615B6704(0.0);
            CAM::_F8BDBF3D573049A1(0.3);
            CAM::SET_GAMEPLAY_HINT_FOV(40.0);
            break;
        case 54:
            CAM::SET_GAMEPLAY_ENTITY_HINT(a_0._f1C[0/*1*/], 0.0, -0.1, 0.9, 1, -1, 2500, 2000, 0);
            AI::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[0/*1*/], -1, 0, 2);
            CAM::GET_IS_MULTIPLAYER_BRIEF(1);
            CAM::_D1F8363DFAD03848(-10.0);
            CAM::_5D7B620DAE436138(0.9);
            CAM::_C92717EF615B6704(0.0);
            CAM::_F8BDBF3D573049A1(0.35);
            CAM::SET_GAMEPLAY_HINT_FOV(40.0);
            break;
        case 55:
            CAM::SET_GAMEPLAY_ENTITY_HINT(a_0._f1C[1/*1*/], 0.0, 0.0, 0.9, 1, -1, 2500, 2000, 0);
            AI::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[1/*1*/], -1, 0, 2);
            CAM::GET_IS_MULTIPLAYER_BRIEF(1);
            CAM::_D1F8363DFAD03848(-8.0);
            CAM::_5D7B620DAE436138(0.9);
            CAM::_C92717EF615B6704(0.1);
            CAM::_F8BDBF3D573049A1(0.35);
            CAM::SET_GAMEPLAY_HINT_FOV(40.0);
            break;
        case 56:
            CAM::SET_GAMEPLAY_ENTITY_HINT(a_0._f1C[1/*1*/], 0.0, 0.0, 0.0, 1, -1, 2500, 2000, 0);
            AI::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[1/*1*/], -1, 0, 2);
            CAM::GET_IS_MULTIPLAYER_BRIEF(1);
            CAM::_D1F8363DFAD03848(-5.0);
            CAM::_5D7B620DAE436138(0.15);
            CAM::_C92717EF615B6704(0.0);
            CAM::_F8BDBF3D573049A1(0.3);
            CAM::SET_GAMEPLAY_HINT_FOV(40.0);
            break;
        }
        l_73 = GAMEPLAY::GET_GAME_TIMER() + 2500;
    } else if (GAMEPLAY::GET_GAME_TIMER() > l_73) {
        l_73 = -1;
        return 1;
    }
    return 0;
}

auto sub_cccb(auto a_0) {
    sub_afdb();
    switch (l_11E) {
    case 0:
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            sub_ce08();
            l_11E += 1;
        }
        break;
    case 1:
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            if (!sub_9385()) {
                if (sub_c3d5(&l_79, "RAMP2AU", "RAMP2_LEADIN", "RAMP2_LEADIN_3", 8, 0, 0)) {
                    l_11F = PED::CREATE_SYNCHRONIZED_SCENE(l_6C, l_6F, 2);
                    AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], l_11F, "misstrvram_2", "hipster_cunts_in_america", 8.0, -8.0, 513, 0, 0x447a0000, 0);
                    CAM::SET_GAMEPLAY_ENTITY_HINT(a_0._f1C[0/*1*/], 0.0, 0.0, 0.5, 1, -1, 2500, 2000, 0);
                    AI::TASK_LOOK_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0._f1C[0/*1*/], -1, 0, 2);
                    CAM::GET_IS_MULTIPLAYER_BRIEF(1);
                    CAM::_D1F8363DFAD03848(0.0);
                    CAM::_5D7B620DAE436138(0.1);
                    CAM::_C92717EF615B6704(0.0);
                    CAM::_F8BDBF3D573049A1(0.35);
                    CAM::SET_GAMEPLAY_HINT_FOV(40.0);
                    l_11E += 1;
                }
            }
        }
        break;
    case 2:
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            if (!sub_9385()) {
                l_11E += 1;
            }
        }
        break;
    case 3:
        return 1;
        break;
    }
    return 0;
}

void sub_ce08() {
    g_38F2 = 0;
    sub_ce18();
}

void sub_ce18() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
    }
}

auto sub_ce39(auto a_0, auto a_1) {
    switch (a_0._f10) {
    case 0:
        if (a_0 == 12) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 1826.630615234375, 4699.115234375, 35.380889892578125, 1812.8775634765625, 4710.45703125, 42.05353546142578, 23.75, 0, 1, 0)) {
                if (sub_8dd4(a_0._f1C[0/*1*/])) {
                    if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < 3.0) {
                        if (sub_d7bf(2)) {
                            if (sub_d728(a_0._f1B)) {
                                sub_d6c4(a_0._f1B, a_0);
                                sub_14bf4("ARE_RC_TRIGGER_CONDITIONS_MET: RC_TRIG_CHAR - Used special case Eps 4 trigger.");
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else if (sub_8dd4(a_0._f1C[0/*1*/])) {
                if (sub_d636(a_0)) {
                    if (sub_d7bf(2)) {
                        if (sub_d728(a_0._f1B)) {
                            sub_d6c4(a_0._f1B, a_0);
                            return 1;
                        }
                    }
                }
            } else { 
                return 0;
            }
        } else if (a_0 == 21) {
            if (((((!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1895.7879638671875, -434.01922607421875, 40.3012580871582, -1883.03759765625, -444.08111572265625, 50.24509048461914, 8.5, 0, 1, 0)) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1883.576416015625, -443.64337158203125, 36.40580749511719, -1874.8258056640625, -448.0797119140625, 49.15161895751953, 8.5, 0, 1, 0))) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1876.3426513671875, -446.2214050292969, 35.64636993408203, -1866.951904296875, -456.56, 49.04419708251953, 8.5, 0, 1, 0))) && (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1882.997314453125, -438.9921569824219, 44.172462463378906, -1874.079345703125, -443.342041015625, 48.69178771972656, 0.75, 0, 1, 0))) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -1878.822265625, -441.7655029296875, 44.917503356933594, -1877.94091796875, -439.95220947265625, 47.28981781, 1.25, 0, 1, 0)) {
                if (sub_8dd4(a_0._f1C[0/*1*/])) {
                    if (sub_d636(a_0)) {
                        if (sub_d7bf(2)) {
                            if (sub_d728(a_0._f1B)) {
                                sub_d6c4(a_0._f1B, a_0);
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
        } else if (a_0 == 22) {
            if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 837.0730590820312, 1261.086181640625, 366.1591796875, 780.8382568359375, 1260.82861328125, 351.4049987792969, 17.75, 0, 1, 0)) {
                if (sub_8dd4(a_0._f1C[0/*1*/])) {
                    if (sub_d636(a_0)) {
                        if (sub_d7bf(2)) {
                            if (sub_d728(a_0._f1B)) {
                                sub_d6c4(a_0._f1B, a_0);
                                return 1;
                            }
                        }
                    }
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
        } else if (sub_8dd4(a_0._f1C[0/*1*/])) {
            if (sub_d636(a_0)) {
                if (sub_d7bf(2)) {
                    if (sub_d728(a_0._f1B)) {
                        sub_d6c4(a_0._f1B, a_0);
                        return 1;
                    }
                }
            }
        } else { 
            return 0;
        }
        break;
    case 2:
        if (sub_8dd4(a_0._f23[0/*1*/])) {
            if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0._f23[0/*1*/], 0)) {
                if (sub_d7bf(3)) {
                    sub_d6c4(a_0._f1B, a_0);
                    return 1;
                }
            } else if (a_1 == 1) {
                sub_d61b();
            }
        } else { 
            return 0;
        }
        break;
    case 1:
        if (ENTITY::DOES_ENTITY_EXIST(a_0._f23[0/*1*/])) {
            if (!ENTITY::IS_ENTITY_DEAD(a_0._f23[0/*1*/])) {
                if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f23[0/*1*/], 1), 1) < a_0._fF) {
                    if (sub_d7bf(2)) {
                        if (sub_d728(a_0._f1B)) {
                            sub_d6c4(a_0._f1B, a_0);
                            return 1;
                        }
                    }
                }
            }
        } else { 
            return 0;
        }
        break;
    case 3:
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), a_0._f11[0/*3*/], 1) < a_0._fF) {
            if (sub_d7bf(2)) {
                if (sub_d728(a_0._f1B)) {
                    sub_d6c4(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 4:
        if (ENTITY::IS_ENTITY_AT_COORD(PLAYER::PLAYER_PED_ID(), a_0._f11[0/*3*/], a_0._f11[1/*3*/], 0, 1, 0)) {
            if (sub_d7bf(2)) {
                if (sub_d728(a_0._f1B)) {
                    sub_d6c4(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 5:
        if (a_0 == 6) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                if (sub_8dd4(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0))) {
                    if (VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${towtruck}) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${towtruck2})) {
                        if (VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), a_0._f23[0/*1*/])) {
                            if (sub_d7bf(3)) {
                                return 1;
                            }
                        }
                    } else if ((VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob}) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob2})) || VEHICLE::IS_VEHICLE_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), ${cargobob3})) {
                        if (VEHICLE::_IS_CARGOBOB_HOOK_ACTIVE(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0)) && VEHICLE::IS_VEHICLE_ATTACHED_TO_CARGOBOB(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), a_0._f23[0/*1*/])) {
                            if (sub_d7bf(3)) {
                                return 1;
                            }
                        }
                    }
                }
            }
        } else if (a_0 == 10) {
            if (AI::GET_PED_DESIRED_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID()) >= 2.0) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 245.88848876953125, 371.9034118652344, 103.9884262084961, 241.58984375, 359.645751953125, 107.34612274169922, 1.25, 0, 1, 0)) {
                    if (sub_d7bf(2)) {
                        if (sub_d728(a_0._f1B)) {
                            sub_d6c4(a_0._f1B, a_0);
                            sub_14bf4("RC5_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - Eps 2 special case trigger used");
                            return 1;
                        }
                    }
                }
            }
        } else if (a_0 == 46) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -164.20455932617188, 277.4866333, 91.55321502685547, 153.6, 277.40606689453125, 97.338134765625, 10.0, 0, 1, 0)) {
                return 0;
            }
        } else if (a_0 == 31) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2728.9482421875, 4143.43994140625, 42.292945861816406, 2722.21337890625, 4144.521484375, 45.43182373046875, 10.0, 0, 1, 0)) {
                if (sub_d7bf(2)) {
                    if (sub_d728(1)) {
                        sub_d6c4(1, a_0);
                        sub_14bf4("RC_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - RC_MAUDE_1 special case vehicle launch area");
                        return 1;
                    }
                }
            }
        } else if (a_0 == 39) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -992.4994506835938, 358.7454528808594, 96.37350463867188, -1021.9401245117188, 361.8887634277344, 65.36148071289062, 30.0, 0, 1, 0)) {
                if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -983.5426025390625, 369.1103515625, 68.46017456054688, -1028.5662841796875, 395.4613342285156, 94.57244873046875, 15.0, 0, 1, 0)) {
                    if (!ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), -983.875, 346.7556457519531, 68.02095794677734, -1021.451416015625, 336.3458251953125, 93.18714141845703, 14.5, 0, 1, 0)) {
                        if (sub_d7bf(2)) {
                            if (sub_d728(a_0._f1B)) {
                                sub_d6c4(a_0._f1B, a_0);
                                sub_14bf4("RC_IN_ACTIVATION_RANGE: RC_TRIG_LOCATE_NONAXIS - RC_NIGEL_1B special case vehicle launch area");
                                return 1;
                            }
                        }
                    }
                }
            }
        }
        if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), a_0._f11[0/*3*/], a_0._f11[1/*3*/], a_0._f18, 0, 1, 0)) {
            if (a_0 == 45) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 2338.696533203125, 2597.037353515625, 45.39051818847656, 2324.00341796875, 2597.18505859375, 47.74960708618164, 8.5, 0, 1, 0)) {
                    return 0;
                }
            }
            if (sub_d7bf(2)) {
                if (sub_d728(a_0._f1B)) {
                    sub_d6c4(a_0._f1B, a_0);
                    return 1;
                }
            }
        } else { 
            return 0;
        }
        break;
    case 6:
        break;
    }
    return 0;
}

void sub_d61b() {
    sub_292f(&g_16AF6._f907, &g_16AF6, 0, 1, 1, 0);
}

auto sub_d636(auto a_0) {
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0) && a_0._f1B) {
        if ((a_0 == 27) || (a_0 == 30)) {
            v_3 = 1.0;
        } else { 
            v_3 = 5.0;
        }
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < (a_0._fF + v_3)) {
            return 1;
        }
    } else if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0._f1C[0/*1*/], 1), 1) < a_0._fF) {
        return 1;
    }
    return 0;
}

void sub_d6c4(auto a_0, auto a_1) {
    if (a_0 == 1) {
        if (!sub_8ec4(a_1)) {
            return ;
        }
        if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
            sub_14bf4("RC_STOP_PLAYER_VEHICLE_CHECK: Stopping player's vehicle.");
            if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID())) {
                sub_14bf4("RC_STOP_PLAYER_VEHICLE_CHECK: Turning off engine for plane or helicopter.");
                VEHICLE::SET_VEHICLE_ENGINE_ON(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0), 0, 1, 0);
            }
            sub_afdb();
        }
    }
}

auto sub_d728(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::GET_PLAYER_INDEX())) {
        if (PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) {
            return 1;
        } else if (a_0) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                v_3 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
                if (sub_9f6b(v_3)) {
                    if (PED::IS_PED_IN_ANY_HELI(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_IN_ANY_PLANE(PLAYER::PLAYER_PED_ID())) {
                        if (((!ENTITY::HAS_ENTITY_COLLIDED_WITH_ANYTHING(v_3)) && (!ENTITY::IS_ENTITY_IN_AIR(v_3))) && (ENTITY::GET_ENTITY_SPEED(v_3) < 1.0)) {
                            return 1;
                        }
                    } else if (!ENTITY::IS_ENTITY_IN_AIR(v_3)) {
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_d7bf(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
            if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
                v_3 = sub_bc88();
                if (!sub_2ed1(v_3)) {
                    return 0;
                }
                switch (a_0) {
                case 0:
                case 9:
                    if ((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_bb93()) || g_186B7) || g_621D) || sub_df65()) || sub_c94e(8, -1)) || sub_6b96()) || sub_df54()) || sub_df2a()) || sub_df10()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 1:
                    if (((((((((PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1) || sub_bb93()) || g_621D) || sub_df65()) || sub_c94e(8, -1)) || sub_df2a()) || sub_6b96()) || sub_df54()) || sub_df10()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 2:
                    if (((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_bb93()) || g_186B7) || g_621D) || sub_df65()) || sub_c94e(8, -1)) || sub_df2a()) || sub_6b96()) || sub_df54()) || sub_df10()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) || (g_8D97 != -1)) {
                        return 0;
                    }
                    break;
                case 3:
                    if ((((((((((((PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID()) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0)) || sub_bb93()) || g_186B7) || g_621D) || sub_df65()) || sub_c94e(8, -1)) || sub_6b96()) || sub_df54()) || sub_df10()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 4:
                    if (((((sub_bb93() || (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) || sub_c94e(8, -1)) || sub_df10()) || sub_deea()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 5:
                    if ((((sub_c94e(8, -1) || sub_6b96()) || sub_df54()) || sub_deea()) || sub_dedc()) {
                        return 0;
                    }
                    if ((STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && (STREAMING::GET_PLAYER_SWITCH_TYPE() != 3)) && (STREAMING::GET_PLAYER_SWITCH_STATE() < 8)) {
                        return 0;
                    }
                    break;
                case 6:
                    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
                        if ((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || sub_bb93()) || g_621D) || sub_df65()) || sub_c94e(8, -1)) || sub_df54()) || sub_df2a()) || sub_df10()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                            return 0;
                        }
                    }
                    break;
                case 7:
                    if ((((((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || (!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()))) || (!CAM::IS_SCREEN_FADED_IN())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || sub_bb93()) || sub_df54()) || g_186B7) || g_621D) || sub_df65()) || g_8F8E) || sub_c94e(8, -1)) || sub_df2a()) || sub_deea()) || sub_df10()) || (game_state._f18B2._f397[v_3/*1*/] == 5)) {
                        return 0;
                    }
                    break;
                case 8:
                    if (((((((((((((((((((((PED::IS_PED_IN_COMBAT(PLAYER::PLAYER_PED_ID(), 0) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || (!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID()))) || (!CAM::IS_SCREEN_FADED_IN())) || PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_FALLING(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_SWIMMING(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || sub_bb93()) || g_186B7) || g_621D) || sub_df65()) || sub_c94e(8, -1)) || sub_df2a()) || sub_deea()) || sub_6b96()) || sub_df54()) || sub_df10()) {
                        return 0;
                    }
                    break;
                }
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        return 0;
    }
    return 1;
}

auto sub_dedc() {
    return g_16409._f1;
}

auto sub_deea() {
    if (g_15929 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_14133[g_15929/*34*/]._fF, 13);
    }
    return 0;
}

auto sub_df10() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${player_timetable_scene}) > 0) {
        return 1;
    }
    return 0;
}

auto sub_df2a() {
    if (g_10FC9) {
        return 1;
    } else if (g_D965 && (!g_D96B)) {
        return 1;
    }
    return 0;
}

auto sub_df54() {
    return g_16416._f129 > 0;
}

auto sub_df65() {
    return g_141447;
}

void sub_df71(auto a_0, auto a_1) {
    if (CUTSCENE::_B56BBBCC2955D9CB()) {
        if (sub_8dd4(PLAYER::PLAYER_PED_ID())) {
            CUTSCENE::_2A56C06EBEF2B0D9("Trevor", PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()));
        }
        switch (a_0) {
        case 52:
            if (sub_8dd4(a_0._f1C[0/*1*/])) {
                a_1[0/*1*/] = "TriggerHappy_WhiteTrash";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[0/*1*/], a_0._f1C[0/*1*/], 0);
            }
            if (sub_8dd4(a_0._f1C[1/*1*/])) {
                a_1[1/*1*/] = "Nervous_WhiteTrash";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[1/*1*/], a_0._f1C[1/*1*/], 0);
            }
            break;
        case 53:
            if (sub_8dd4(a_0._f1C[0/*1*/])) {
                a_1[0/*1*/] = "Rampage_Hipster";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[0/*1*/], a_0._f1C[0/*1*/], 0);
            }
            break;
        case 54:
            if (sub_8dd4(a_0._f1C[0/*1*/])) {
                a_1[0/*1*/] = "Armed_Mexican_Goon";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[0/*1*/], a_0._f1C[0/*1*/], 0);
                CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(a_1[0/*1*/], 8, 1, 0, 0);
            }
            if (sub_8dd4(a_0._f1C[1/*1*/])) {
                a_1[1/*1*/] = "Mexican_Goon";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[1/*1*/], a_0._f1C[1/*1*/], 0);
            }
            break;
        case 55:
            if (sub_8dd4(a_0._f1C[0/*1*/])) {
                a_1[0/*1*/] = "Thug";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[0/*1*/], a_0._f1C[0/*1*/], 0);
                CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(a_1[0/*1*/], 10, 0, 1, 0);
            }
            if (sub_8dd4(a_0._f1C[1/*1*/])) {
                a_1[1/*1*/] = "Armed_Thug";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[1/*1*/], a_0._f1C[1/*1*/], 0);
                CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(a_1[1/*1*/], 10, 1, 0, 0);
            }
            break;
        case 56:
            if (sub_8dd4(a_0._f1C[0/*1*/])) {
                a_1[0/*1*/] = "Army_Guy_Right";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[0/*1*/], a_0._f1C[0/*1*/], 0);
            }
            if (sub_8dd4(a_0._f1C[1/*1*/])) {
                a_1[1/*1*/] = "Army_Guy_Left";
                CUTSCENE::_2A56C06EBEF2B0D9(a_1[1/*1*/], a_0._f1C[1/*1*/], 0);
            }
            break;
        }
    }
}

void sub_e166(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_1)) {
            if (g_8B74 == 17) {
                if (a_0 != -1) {
                    sub_e3af(a_0);
                }
            } else if (sub_e3a3()) {
                if (a_0 != -1) {
                    sub_e3af(a_0);
                }
            } else if (a_0 == -1) {
                if (sub_e36a(PLAYER::PLAYER_PED_ID(), a_2, 1) <= 100.0) {
                    sub_e2cc(a_0, 1);
                }
            } else { 
                switch (sub_e293(a_0)) {
                case 1:
                    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_1, "JOSH_1_INT_CONCAT")) {
                        CUTSCENE::_C23DE0E91C30B58C(a_1, 14, 8);
                    } else { 
                        CUTSCENE::REQUEST_CUTSCENE(a_1, 8);
                    }
                    STREAMING::_F8155A7F03DDFC8E(2);
                    sub_e257(a_0, 1);
                    break;
                case 2:
                    CUTSCENE::STOP_CUTSCENE(0);
                    CUTSCENE::REMOVE_CUTSCENE();
                    STREAMING::_F8155A7F03DDFC8E(0);
                    sub_e257(a_0, 0);
                    break;
                }
                if (sub_e36a(PLAYER::PLAYER_PED_ID(), a_2, 1) > 120.0) {
                    sub_e3af(a_0);
                }
            }
        }
    }
}

void sub_e257(auto a_0, auto a_1) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1) {
        if (g_10EC1 == a_0) {
            g_10EC2 = a_0;
        } else { }
    } else if (g_10EC2 == a_0) {
        g_10EC2 = -1;
    } else { }
}

auto sub_e293(auto a_0) {
    if (g_10EC1 == a_0) {
        if (g_10EC2 == -1) {
            if (g_10EC0 < GAMEPLAY::GET_FRAME_COUNT()) {
                return 1;
            }
        }
    } else if (g_10EC2 == a_0) {
        return 2;
    }
    return 0;
}

void sub_e2cc(auto a_0, auto a_1) {
    if (g_10EBE < 5) {
        g_10EB3[g_10EBE/*2*/] = 0;
        g_10EB3[g_10EBE/*2*/]._f1 = a_1;
        v_4 = 0;
        while (!v_4) {
            v_4 = 1;
            for (v_5 = 0; v_5 < g_10EBE; v_5 += 1) {
                if (g_10EB3[v_5/*2*/] == g_10EB3[g_10EBE/*2*/]) {
                    g_10EB3[g_10EBE/*2*/] += 1;
                    v_4 = 0;
                }
            }
        }
        a_0 = g_10EB3[g_10EBE/*2*/];
        g_10EBE += 1;
        g_10EBF = 1;
    } else { 
        a_0 = -1;
    }
}

auto sub_e36a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else { 
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 0);
    }
    return GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_7, a_1, a_4);
}

auto sub_e3a3() {
    return g_15AAC;
}

void sub_e3af(auto a_0) {
    CUTSCENE::STOP_CUTSCENE(0);
    CUTSCENE::REMOVE_CUTSCENE();
    sub_e3c6(a_0);
}

void sub_e3c6(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (g_10EC2 == a_0) {
        sub_e257(a_0, 0);
    }
    if (g_10EC1 == a_0) {
        g_10EC1 = -1;
    }
    v_3 = 0;
    v_4 = 0;
    while ((!v_3) && (v_4 < g_10EBE)) {
        if (g_10EB3[v_4/*2*/] == a_0) {
            v_3 = 1;
        } else { 
            v_4 += 1;
        }
    }
    if (!v_3) {
        return ;
    }
    for (v_5 = v_4; v_5 <= (g_10EBE - 2); v_5 += 1) {
        g_10EB3[v_5/*2*/] = g_10EB3[v_5 + 1/*2*/];
        g_10EB3[v_5/*2*/]._f1 = g_10EB3[v_5 + 1/*2*/]._f1;
    }
    g_10EB3[g_10EBE - 1/*2*/] = -1;
    g_10EB3[g_10EBE - 1/*2*/]._f1 = 3;
    g_10EBE -= 1;
    g_10EBF = 1;
    g_10EC0 = GAMEPLAY::GET_FRAME_COUNT();
    a_0 = -1;
}

void sub_e4ae(auto a_0) {
    if (a_0 == -1) {
        a_0 = sub_aee7();
    }
    if (a_0 == -1) {
        return ;
    }
    g_186DF[a_0/*10*/]._f1 = 1;
}

auto sub_e4d6(auto a_0) {
    return g_186DF[a_0/*10*/]._f1;
}

void sub_e4e8(auto a_0) {
    if (a_0 == 52) {
        sub_14bf4(" RAMPAGE 1 - FORCE FREEZE CHAIRS AND PRE-RELEASE FOR B*2124538");
        if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[3/*1*/])) {
            ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[3/*1*/], 1);
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&a_0._f29[3/*1*/]);
            a_0._f29[3/*1*/] = 0;
        }
        if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[4/*1*/])) {
            ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[4/*1*/], 1);
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(&a_0._f29[4/*1*/]);
            a_0._f29[4/*1*/] = 0;
        }
    }
}

auto sub_e55a(auto a_0) {
    if (((a_0 == 54) || (a_0 == 55)) || (a_0 == 56)) {
        if (PED::_5407B7288D0478B7(PLAYER::PLAYER_PED_ID()) > 0) {
            return 1;
        }
    }
    return 0;
}

void sub_e594(auto a_0) {
    switch (a_0) {
    case 52:
        sub_1411d(a_0);
        l_12D = sub_140fd();
        break;
    case 53:
        sub_13d55(a_0);
        l_12D = sub_13d03();
        break;
    case 54:
        sub_13a03(a_0);
        break;
    case 55:
        sub_1372c(a_0);
        l_12D = sub_136fe();
        break;
    case 56:
        sub_e635(a_0);
        break;
    default:
        break;
    }
    if (l_12D != 0) {}
    a_0._f10 = 0;
    if (a_0 == 53) {
        a_0._fF = 15.0;
    } else { 
        a_0._fF = 12.0;
    }
    a_0._f19 = 1;
}

void sub_e635(auto a_0) {
    v_3 = "misstvrram_5";
    v_4 = ${s_m_y_marine_03};
    v_5 = ${crusader};
    STREAMING::REQUEST_MODEL(v_4);
    STREAMING::REQUEST_MODEL(v_5);
    STREAMING::REQUEST_ANIM_DICT(v_3);
    WEAPON::REQUEST_WEAPON_ASSET(${weapon_grenadelauncher}, 31, 0);
    while (((!STREAMING::HAS_MODEL_LOADED(v_4)) || (!STREAMING::HAS_MODEL_LOADED(v_5))) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_3))) {
        SYSTEM::WAIT(0);
    }
    while (!sub_1363b(&a_0._f1C[0/*1*/], v_4, -1299.4, 2506.24, 21.07, -122.79, 0)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[0/*1*/]);
    PED::SET_PED_NAME_DEBUG(a_0._f1C[0/*1*/], "RAMP:PED 0");
    AI::TASK_PLAY_ANIM(a_0._f1C[0/*1*/], v_3, "marines_idle_a", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 0, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 1, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 2, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 3, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 4, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 5, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 6, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 7, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 8, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 9, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 10, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 11, 0, 0, 0);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 0);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 1);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 2);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 3);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 4);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 5);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 6);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 7);
    PED::CLEAR_PED_PROP(a_0._f1C[0/*1*/], 8);
    while (!sub_1363b(&a_0._f1C[1/*1*/], v_4, 1299.49, 2505.53, 21.05, -101.94, 0)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[1/*1*/]);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 0, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 1, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 2, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 5, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 6, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 7, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 8, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 9, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 10, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 11, 0, 0, 0);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 0);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 1);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 2);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 3);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 4);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 5);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 6);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 7);
    PED::CLEAR_PED_PROP(a_0._f1C[1/*1*/], 8);
    PED::SET_PED_NAME_DEBUG(a_0._f1C[1/*1*/], "RAMP:PED 1");
    AI::TASK_PLAY_ANIM(a_0._f1C[1/*1*/], v_3, "marines_idle_b", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
    while (!sub_135c3(&a_0._f23[0/*1*/], v_5, -1298.15966796875, 2504.1533203125, 21.062, 165.48)) {
        SYSTEM::WAIT(0);
    }
    VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(a_0._f23[0/*1*/]);
    sub_135a3(&a_0._f23[0/*1*/]);
    VEHICLE::SET_VEHICLE_EXTRA(a_0._f23[0/*1*/], 1, 0);
    VEHICLE::SET_VEHICLE_EXTRA(a_0._f23[0/*1*/], 1, 1);
    ENTITY::FREEZE_ENTITY_POSITION(a_0._f23[0/*1*/], 1);
    if (!sub_eab9(&a_0._f29[0/*1*/], ${weapon_grenadelauncher}, -1297.8399658203125, 2505.909912109375, 19.34, sub_13593(-0.5))) {
    } else { 
        ENTITY::SET_ENTITY_COLLISION(a_0._f29[0/*1*/], 0, 0);
        ENTITY::SET_ENTITY_COORDS(a_0._f29[0/*1*/], -1297.8399658203125, 2505.909912109375, 19.34, 1, 0, 0, 1);
        ENTITY::SET_ENTITY_HEADING(a_0._f29[0/*1*/], sub_13593(-0.5));
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[0/*1*/], 1);
    }
    a_0._f9/*"24"*/ = "TRVRAM_5_CON";
    a_0._f1B = 0;
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_4);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_5);
}

auto sub_eab9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        OBJECT::DELETE_OBJECT(a_0);
        a_0 = 0;
    }
    v_8 = WEAPON::GET_WEAPONTYPE_MODEL(a_1);
    STREAMING::REQUEST_MODEL(v_8);
    v_F = GAMEPLAY::GET_GAME_TIMER() + 10000;
    while (GAMEPLAY::GET_GAME_TIMER() < v_F) {
        if (STREAMING::HAS_MODEL_LOADED(v_8)) {
            a_0 = WEAPON::CREATE_WEAPON_OBJECT(a_1, -1, a_2, 1, 0x3f800000, 0);
            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_8);
            if (sub_13551(&v_9, a_1, 0x395e9926)) {
                if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, sub_ebbb(&v_9, a_1, 0x395e9926, 0))) {
                    WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, sub_ebbb(&v_9, a_1, 0x395e9926, 0));
                } else if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, sub_ebbb(&v_9, a_1, 0x395e9926, 1))) {
                    WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, sub_ebbb(&v_9, a_1, 0x395e9926, 1));
                }
            }
            if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
                ENTITY::SET_ENTITY_COORDS(a_0, a_2, 1, 0, 0, 1);
                ENTITY::SET_ENTITY_HEADING(a_0, a_5);
                return 1;
            }
        }
        SYSTEM::WAIT(0);
    }
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_8);
    return 0;
}

auto sub_ebbb(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_13532(&v_6, a_0, a_0._f4, a_0._f5, a_0._f1);
    v_D = 0;
    while (sub_ec0e(&v_6, a_1, v_C, 0)) {
        if (v_6._f4 == a_2) {
            if (a_3 == v_D) {
                return v_6;
            }
            v_D += 1;
        }
        v_C += 1;
    }
    return 0;
}

auto sub_ec0e(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_13532(a_0, 0, 0x3af5bac2, 0, 0);
    switch (a_1) {
    case ${weapon_pistol}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xfed0fd71, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0xed265a1c, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, 0x65ea7ebb, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, 0xd7391086, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x721b079, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0xd67b4f2d, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_pi_supp}, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, 0xc6654d72, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x31c4b22a, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x249a17d5, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_pi_supp}, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, 0x9b76c72c, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xcb48aef0, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x10e6ba2b, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_scope_macro}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_13532(a_0, 0x487aae09, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x26574997, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x350966fb, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, 0x3cc6ba57, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_pi_supp}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_13532(a_0, 0x27872c90, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xbe5eea16, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0xb1214f9b, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_scope_macro}, ${wapscop}, 1, 0);
            break;
        case 5:
            sub_13532(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 6:
            sub_13532(a_0, 0x4ead7533, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x9fbe33ec, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x91109691, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, 0x75414f30, 0x9221a98d, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 5:
            sub_13532(a_0, ${component_at_scope_medium}, ${wapscop}, 1, 0);
            break;
        case 6:
            sub_13532(a_0, ${component_at_ar_supp}, ${wapsupp}, 1, 0);
            break;
        case 7:
            sub_13532(a_0, 0xd89b9658, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xfa8fa10f, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x8ec1c979, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_scope_small}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_ar_supp}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_13532(a_0, 0x377cd377, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xf434ef84, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x82158b47, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, 0x3c00afed, ${wapscop}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, 0xd6dababe, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xe1ffb34a, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0xd6c59cd6, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_scope_medium}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, 0x92feccdd, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 1:
            sub_13532(a_0, ${component_at_sr_supp}, ${wapsupp}, 1, 0);
            break;
        case 2:
            sub_13532(a_0, 0xa2d79ddb, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x94e81bc7, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0x86bd7f72, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_ar_supp}, ${wapsupp}, 1, 0);
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x9bc64089, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_scope_large}, ${wapscop}, 1, 1);
            break;
        case 3:
            sub_13532(a_0, ${component_at_scope_max}, ${wapscop}, 2, 0);
            break;
        case 4:
            sub_13532(a_0, 0x4032b5e7, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x476f52f4, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, ${component_at_scope_large}, ${wapscop}, 1, 1);
            break;
        case 2:
            sub_13532(a_0, ${component_at_scope_max}, ${wapscop}, 2, 0);
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 1:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_scope_small}, ${wapscop}, 1, 0);
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0xc8de6f06, ${wapclip}, 1, 1);
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x8d1307b0, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0xbb46e417, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_scope_macro}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_13532(a_0, 0x278c78af, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 1:
            sub_13532(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x2297be19, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_13532(a_0, 0xd9d3ac92, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_13532(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_13532(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_13532(a_0, 0x77b8ab2f, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_2) {
        case 0:
            sub_13532(a_0, 0x85a64df9, 0x395e9926, 1, 0);
            break;
        }
        break;
    default:
        v_10 = sub_508f(a_1, &v_12);
        if (v_10 != -1) {
            for (v_11 = 0; v_11 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_10); v_11 += 1) {
                if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_10, v_11, &v_39)) {
                    if ((v_39 == ${wapclip}) || (v_39 == 0x11621646)) {
                        v_7 += 1;
                    } else if ((v_39 == ${wapflshlasr}) || (v_39 == ${wapflshlasr_2})) {
                        v_8 += 1;
                    } else if ((v_39 == ${wapscop}) || (v_39 == ${wapscop_2})) {
                        v_9 += 1;
                    } else if ((v_39 == 0x9221a98d) || (v_39 == 0x1da14ce5)) {
                        v_A += 1;
                    } else if ((v_39 == ${wapgrip}) || (v_39 == 0xdf693abd)) {
                        v_B += 1;
                    } else if ((v_39 == ${wapsupp}) || (v_39 == ${wapsupp_2})) {
                        v_C += 1;
                    } else if (v_39 == 0x67386f9b) {
                        v_D += 1;
                    } else if (v_39 == 0x395e9926) {
                        v_E += 1;
                    } else { 
                        v_F += 1;
                    }
                    if (v_11 == a_2) {
                        if ((v_39 == ${wapclip}) || (v_39 == 0x11621646)) {
                            v_6 = v_7;
                        } else if ((v_39 == ${wapflshlasr}) || (v_39 == ${wapflshlasr_2})) {
                            v_6 = v_8;
                        } else if ((v_39 == ${wapscop}) || (v_39 == ${wapscop_2})) {
                            v_6 = v_9;
                        } else if ((v_39 == 0x9221a98d) || (v_39 == 0x1da14ce5)) {
                            v_6 = v_A;
                        } else if ((v_39 == ${wapgrip}) || (v_39 == 0xdf693abd)) {
                            v_6 = v_B;
                        } else if ((v_39 == ${wapsupp}) || (v_39 == ${wapsupp_2})) {
                            v_6 = v_C;
                        } else if (v_39 == 0x67386f9b) {
                            v_6 = v_D;
                        } else if (v_39 == 0x395e9926) {
                            v_6 = v_E;
                        } else { 
                            v_6 = v_F;
                        }
                        sub_13532(a_0, v_39._f3, v_39, v_6, v_39._f1);
                    }
                }
            }
        }
        break;
    }
    if (a_3) {
        a_0._f2 = sub_f969(a_1, a_0);
    }
    return a_0._f4 != 0x3af5bac2;
}

auto sub_f969(auto a_0, auto a_1) {
    v_4 = 0;
    v_5 = 2.5;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_5 = 2.5;
        switch (a_0) {
        case ${weapon_pistol}:
            switch (a_1) {
            case 0xfed0fd71:
                v_4 = 120;
                break;
            case 0xed265a1c:
                v_4 = 155;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 189;
                break;
            case 0x65ea7ebb:
                v_4 = 729;
                break;
            case 0xd7391086:
                v_4 = 18600;
                break;
            }
            break;
        case ${weapon_combatpistol}:
            switch (a_1) {
            case 0x721b079:
                v_4 = 136;
                break;
            case 0xd67b4f2d:
                v_4 = 159;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 189;
                break;
            case ${component_at_pi_supp}:
                v_4 = 735;
                break;
            case 0xc6654d72:
                v_4 = 14500;
                break;
            }
            break;
        case ${weapon_appistol}:
            switch (a_1) {
            case 0x31c4b22a:
                v_4 = 145;
                break;
            case 0x249a17d5:
                v_4 = 165;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 185;
                break;
            case ${component_at_pi_supp}:
                v_4 = 730;
                break;
            case 0x9b76c72c:
                v_4 = 15800;
                break;
            }
            break;
        case ${weapon_microsmg}:
            switch (a_1) {
            case 0xcb48aef0:
                v_4 = 120;
                break;
            case 0x10e6ba2b:
                v_4 = 137;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 190;
                break;
            case ${component_at_scope_macro}:
                v_4 = 549;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 775;
                break;
            case 0x487aae09:
                v_4 = 15100;
                break;
            }
            break;
        case ${weapon_smg}:
            switch (a_1) {
            case 0x26574997:
                v_4 = 119;
                break;
            case 0x350966fb:
                v_4 = 134;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 210;
                break;
            case 0x3cc6ba57:
                v_4 = 549;
                break;
            case ${component_at_pi_supp}:
                v_4 = 815;
                break;
            case 0x27872c90:
                v_4 = 19300;
                break;
            }
            break;
        case ${weapon_assaultrifle}:
            switch (a_1) {
            case 0xbe5eea16:
                v_4 = 120;
                break;
            case 0xb1214f9b:
                v_4 = 129;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 159;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 189;
                break;
            case ${component_at_scope_macro}:
                v_4 = 565;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 810;
                break;
            case 0x4ead7533:
                v_4 = 14400;
                break;
            }
            break;
        case ${weapon_carbinerifle}:
            switch (a_1) {
            case 0x9fbe33ec:
                v_4 = 99;
                break;
            case 0x91109691:
                v_4 = 105;
                break;
            case 0x75414f30:
                v_4 = -1;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 132;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 150;
                break;
            case ${component_at_scope_medium}:
                v_4 = 450;
                break;
            case ${component_at_ar_supp}:
                v_4 = 815;
                break;
            case 0xd89b9658:
                v_4 = 17900;
                break;
            }
            break;
        case ${weapon_advancedrifle}:
            switch (a_1) {
            case 0xfa8fa10f:
                v_4 = 110;
                break;
            case 0x8ec1c979:
                v_4 = 124;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 159;
                break;
            case ${component_at_scope_small}:
                v_4 = 450;
                break;
            case ${component_at_ar_supp}:
                v_4 = 812;
                break;
            case 0x377cd377:
                v_4 = 16500;
                break;
            }
            break;
        case ${weapon_mg}:
            switch (a_1) {
            case 0xf434ef84:
                v_4 = 135;
                break;
            case 0x82158b47:
                v_4 = 145;
                break;
            case 0x3c00afed:
                v_4 = 450;
                break;
            case 0xd6dababe:
                v_4 = 15600;
                break;
            }
            break;
        case ${weapon_combatmg}:
            switch (a_1) {
            case 0xe1ffb34a:
                v_4 = 119;
                break;
            case 0xd6c59cd6:
                v_4 = 126;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 129;
                break;
            case ${component_at_scope_medium}:
                v_4 = 559;
                break;
            case 0x92feccdd:
                v_4 = 14000;
                break;
            }
            break;
        case ${weapon_pumpshotgun}:
            switch (a_1) {
            case ${component_at_ar_flsh}:
                v_4 = 189;
                break;
            case ${component_at_sr_supp}:
                v_4 = 975;
                break;
            case 0xa2d79ddb:
                v_4 = 16900;
                break;
            }
            break;
        case ${weapon_assaultshotgun}:
            switch (a_1) {
            case 0x94e81bc7:
                v_4 = 129;
                break;
            case 0x86bd7f72:
                v_4 = 139;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 150;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 225;
                break;
            case ${component_at_ar_supp}:
                v_4 = 899;
                break;
            }
            break;
        case ${weapon_sniperrifle}:
            switch (a_1) {
            case 0x9bc64089:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 559;
                break;
            case ${component_at_scope_max}:
                v_4 = 975;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 920;
                break;
            case 0x4032b5e7:
                v_4 = 13000;
                break;
            }
            break;
        case ${weapon_heavysniper}:
            switch (a_1) {
            case 0x476f52f4:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 575;
                break;
            case ${component_at_scope_max}:
                v_4 = 999;
                break;
            }
            break;
        case ${weapon_grenadelauncher}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 128;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 185;
                break;
            case ${component_at_scope_small}:
                v_4 = 525;
                break;
            }
            break;
        case ${weapon_minigun}:
            switch (a_1) {
            case 0xc8de6f06:
                v_4 = -1;
                break;
            }
            break;
        case ${weapon_assaultsmg}:
            switch (a_1) {
            case 0x8d1307b0:
                v_4 = 110;
                break;
            case 0xbb46e417:
                v_4 = 9700;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2275;
                break;
            case ${component_at_scope_macro}:
                v_4 = 10875;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12400;
                break;
            case 0x278c78af:
                v_4 = 17600;
                break;
            }
            if (sub_13477() && (sub_13323() || sub_13252())) {
                v_4 = 0;
            }
            break;
        case ${weapon_bullpupshotgun}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 4100;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2300;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12450;
                break;
            }
            if (sub_13477() && (sub_13323() || sub_13252())) {
                v_4 = 0;
            }
            break;
        case 0x99aeeb3b:
            switch (a_1) {
            case 0x2297be19:
                v_4 = 0;
                break;
            case 0xd9d3ac92:
                v_4 = 9500;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 2000;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12250;
                break;
            case 0x77b8ab2f:
                v_4 = 20000;
                break;
            }
            if (sub_13477() && (sub_13323() || sub_13252())) {
                v_4 = 0;
            }
            break;
        case ${weapon_sawnoffshotgun}:
            switch (a_1) {
            case 0x85a64df9:
                v_4 = 13700;
                break;
            }
            break;
        case 0xc734385a:
            switch (a_1) {
            case 0xd83b4141:
                v_4 = 0;
                break;
            case 0xccfd2ac5:
                v_4 = 3612;
                break;
            case 0x1c221b1a:
                v_4 = 0;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 1020;
                break;
            case ${component_at_ar_supp}:
                v_4 = 5000;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 1760;
                break;
            case 0x161e9241:
                v_4 = 17200;
                break;
            }
            break;
        case ${weapon_heavypistol}:
            switch (a_1) {
            case ${component_heavypistol_clip_01}:
                v_4 = 0;
                break;
            case ${component_heavypistol_clip_02}:
                v_4 = 3680;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 710;
                break;
            case ${component_at_pi_supp}:
                v_4 = 4800;
                break;
            case 0x7a6a7b7b:
                v_4 = 12000;
                break;
            }
            break;
        case 0xd8df3c3c:
            switch (a_1) {
            case 0xc613f685:
                v_4 = 4900;
                break;
            case 0xeed9fd63:
                v_4 = 5600;
                break;
            case 0x50910c31:
                v_4 = 5500;
                break;
            case 0x9761d9dc:
                v_4 = 5200;
                break;
            case 0x7decfe30:
                v_4 = 4600;
                break;
            case 0x3f4e8aa6:
                v_4 = 4700;
                break;
            case 0x8b808bb:
                v_4 = 4800;
                break;
            case 0xe28babef:
                v_4 = 4300;
                break;
            case 0x7af3f785:
                v_4 = 4000;
                break;
            }
            break;
        case ${weapon_bullpuprifle}:
            switch (a_1) {
            case ${component_bullpuprifle_clip_01}:
                v_4 = 108;
                break;
            case ${component_bullpuprifle_clip_02}:
                v_4 = 9950;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2575;
                break;
            case ${component_at_scope_macro}:
                v_4 = 11350;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12500;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4275;
                break;
            case 0xa857bc78:
                v_4 = 16600;
                break;
            }
            break;
        case ${weapon_snspistol}:
            switch (a_1) {
            case ${component_snspistol_clip_01}:
                v_4 = 29;
                break;
            case ${component_snspistol_clip_02}:
                v_4 = 9150;
                break;
            case 0x8033ecaf:
                v_4 = 13900;
                break;
            }
            break;
        case ${weapon_specialcarbine}:
            switch (a_1) {
            case ${component_specialcarbine_clip_01}:
                v_4 = 108;
                break;
            case ${component_specialcarbine_clip_02}:
                v_4 = 9975;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2525;
                break;
            case ${component_at_scope_medium}:
                v_4 = 11550;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12500;
                break;
            case 0x730154f2:
                v_4 = 18000;
                break;
            }
            break;
        case 0xdb1aa450:
            switch (a_1) {
            case 0x476e85ff:
                v_4 = 0;
                break;
            case 0xb92c6979:
                v_4 = 3680;
                break;
            case ${component_at_pi_supp}:
                v_4 = 4840;
                break;
            }
            break;
        default:
            v_6 = sub_508f(a_0, &v_8);
            if (v_6 != -1) {
                for (v_7 = 0; v_7 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_6); v_7 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_6, v_7, &v_2F)) {
                        if (v_2F._f3 == a_1) {
                            v_5 = 1.0;
                            if (v_2F._f5 == -1) {
                                v_4 = -1;
                            } else { 
                                v_4 = v_2F._f5;
                            }
                            if (a_0 == ${weapon_hammer}) {
                                if (sub_13477() && (sub_13323() || sub_13252())) {
                                    v_4 = 0;
                                }
                            }
                        }
                    }
                }
            }
            break;
        }
    } else { 
        v_5 = 2.5;
        switch (a_0) {
        case ${weapon_pistol}:
            switch (a_1) {
            case 0xfed0fd71:
                v_4 = 120;
                break;
            case 0xed265a1c:
                v_4 = 9175;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB3E);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1675;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10E8);
                break;
            case 0x65ea7ebb:
                v_4 = 12050;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10E9);
                break;
            case 0xd7391086:
                v_4 = g_40001._f2127;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1136);
                break;
            }
            break;
        case ${weapon_combatpistol}:
            switch (a_1) {
            case 0x721b079:
                v_4 = 136;
                break;
            case 0xd67b4f2d:
                v_4 = 9250;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB3F);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1825;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EA);
                break;
            case ${component_at_pi_supp}:
                v_4 = 12100;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EB);
                break;
            case 0xc6654d72:
                v_4 = g_40001._f267E;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1131);
                break;
            }
            break;
        case ${weapon_appistol}:
            switch (a_1) {
            case 0x31c4b22a:
                v_4 = 145;
                break;
            case 0x249a17d5:
                v_4 = 9400;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB41);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1975;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EC);
                break;
            case ${component_at_pi_supp}:
                v_4 = 12200;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10ED);
                break;
            case 0x9b76c72c:
                v_4 = g_40001._f2126;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112B);
                break;
            }
            break;
        case ${weapon_microsmg}:
            switch (a_1) {
            case 0xcb48aef0:
                v_4 = 120;
                break;
            case 0x10e6ba2b:
                v_4 = 9325;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB42);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1900;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F0);
                break;
            case ${component_at_scope_macro}:
                v_4 = 10800;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F2);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12150;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F1);
                break;
            case 0x487aae09:
                v_4 = g_40001._f212A;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1135);
                break;
            }
            break;
        case ${weapon_smg}:
            switch (a_1) {
            case 0x26574997:
                v_4 = 119;
                break;
            case 0x350966fb:
                v_4 = 9475;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB43);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2050;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F3);
                break;
            case 0x3cc6ba57:
                v_4 = 10825;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F5);
                break;
            case ${component_at_pi_supp}:
                v_4 = 12250;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F4);
                break;
            case 0x27872c90:
                v_4 = g_40001._f2129;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113A);
                break;
            }
            break;
        case ${weapon_assaultrifle}:
            switch (a_1) {
            case 0xbe5eea16:
                v_4 = 120;
                break;
            case 0xb1214f9b:
                v_4 = 9550;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB45);
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4200;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FD);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2125;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FA);
                break;
            case ${component_at_scope_macro}:
                v_4 = 10850;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FC);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12300;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FB);
                break;
            case 0x4ead7533:
                v_4 = g_40001._f2123;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112C);
                break;
            }
            break;
        case ${weapon_carbinerifle}:
            switch (a_1) {
            case 0x9fbe33ec:
                v_4 = 99;
                break;
            case 0x91109691:
                v_4 = 9775;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB46);
                break;
            case 0x75414f30:
                v_4 = -1;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1105);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1102);
                break;
            case ${component_at_scope_medium}:
                v_4 = 10900;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1104);
                break;
            case ${component_at_ar_supp}:
                v_4 = 12450;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1103);
                break;
            case 0xd89b9658:
                v_4 = g_40001._f2125;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112F);
                break;
            }
            break;
        case ${weapon_advancedrifle}:
            switch (a_1) {
            case 0xfa8fa10f:
                v_4 = 110;
                break;
            case 0x8ec1c979:
                v_4 = 9925;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB48);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2425;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1107);
                break;
            case ${component_at_scope_small}:
                v_4 = 10950;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1109);
                break;
            case ${component_at_ar_supp}:
                v_4 = 12500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1108);
                break;
            case 0x377cd377:
                v_4 = g_40001._f2124;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112A);
                break;
            }
            break;
        case ${weapon_mg}:
            switch (a_1) {
            case 0xf434ef84:
                v_4 = 135;
                break;
            case 0x82158b47:
                v_4 = 9850;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB49);
                break;
            case 0x3c00afed:
                v_4 = 10925;
                break;
            case 0xd6dababe:
                v_4 = g_40001._f267F;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1134);
                break;
            }
            break;
        case ${weapon_combatmg}:
            switch (a_1) {
            case 0xe1ffb34a:
                v_4 = 119;
                break;
            case 0xd6c59cd6:
                v_4 = 10000;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB4A);
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4425;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1120);
                break;
            case ${component_at_scope_medium}:
                v_4 = 10975;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1121);
                break;
            case 0x92feccdd:
                v_4 = g_40001._f2680;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1130);
                break;
            }
            break;
        case ${weapon_pumpshotgun}:
            switch (a_1) {
            case ${component_at_ar_flsh}:
                v_4 = 1750;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f110E);
                break;
            case ${component_at_sr_supp}:
                v_4 = 12350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f110F);
                break;
            case 0xa2d79ddb:
                v_4 = g_40001._f267B;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1138);
                break;
            }
            break;
        case ${weapon_assaultshotgun}:
            switch (a_1) {
            case 0x94e81bc7:
                v_4 = 129;
                break;
            case 0x86bd7f72:
                v_4 = 9625;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB4C);
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4275;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1112);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2200;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1113);
                break;
            case ${component_at_ar_supp}:
                v_4 = 12350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1114);
                break;
            }
            break;
        case ${weapon_sniperrifle}:
            switch (a_1) {
            case 0x9bc64089:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 12400;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1115);
                break;
            case ${component_at_scope_max}:
                v_4 = 12500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1116);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12050;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1117);
                break;
            case 0x4032b5e7:
                v_4 = g_40001._f212C;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113B);
                break;
            }
            break;
        case ${weapon_heavysniper}:
            switch (a_1) {
            case 0x476f52f4:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 99;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1118);
                break;
            case ${component_at_scope_max}:
                v_4 = 12500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1119);
                break;
            }
            break;
        case ${weapon_grenadelauncher}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 4500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1122);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f111E);
                break;
            case ${component_at_scope_small}:
                v_4 = 11000;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f111F);
                break;
            }
            break;
        case ${weapon_minigun}:
            switch (a_1) {
            case 0xc8de6f06:
                v_4 = -1;
                break;
            }
            break;
        case ${weapon_assaultsmg}:
            switch (a_1) {
            case 0x8d1307b0:
                v_4 = 110;
                break;
            case 0xbb46e417:
                v_4 = 9700;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB44);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2275;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F6);
                break;
            case ${component_at_scope_macro}:
                v_4 = 10875;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F9);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12400;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F7);
                break;
            case 0x278c78af:
                v_4 = g_40001._f267C;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F8);
                break;
            }
            break;
        case 0x61012683:
            switch (a_1) {
            case 0x1ce5a6a5:
                v_4 = 0;
                break;
            case 0xeac8c270:
                v_4 = g_40001._f1388;
                break;
            }
            break;
        case ${weapon_snspistol}:
            switch (a_1) {
            case ${component_snspistol_clip_01}:
                v_4 = 0;
                break;
            case ${component_snspistol_clip_02}:
                v_4 = g_40001._f15C9;
                break;
            case 0x8033ecaf:
                v_4 = g_40001._f267D;
                break;
            }
            break;
        case ${weapon_specialcarbine}:
            switch (a_1) {
            case ${component_specialcarbine_clip_01}:
                v_4 = 0;
                break;
            case ${component_specialcarbine_clip_02}:
                v_4 = g_40001._f15CE;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f15D1;
                break;
            case ${component_at_scope_medium}:
                v_4 = g_40001._f15CD;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = g_40001._f15CB;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f15D0;
                break;
            case 0x730154f2:
                v_4 = g_40001._f2681;
                break;
            }
            break;
        case ${weapon_heavypistol}:
            switch (a_1) {
            case ${component_heavypistol_clip_01}:
                v_4 = 0;
                break;
            case ${component_heavypistol_clip_02}:
                v_4 = g_40001._f15CF;
                break;
            case ${component_at_pi_flsh}:
                v_4 = g_40001._f15D3;
                break;
            case ${component_at_pi_supp}:
                v_4 = g_40001._f15CC;
                break;
            case 0x7a6a7b7b:
                v_4 = g_40001._f15E7;
                break;
            }
            break;
        case ${weapon_bullpuprifle}:
            switch (a_1) {
            case ${component_bullpuprifle_clip_01}:
                v_4 = 0;
                break;
            case ${component_bullpuprifle_clip_02}:
                v_4 = g_40001._f15D6;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f15D9;
                break;
            case ${component_at_ar_supp}:
                v_4 = g_40001._f15D4;
                break;
            case ${component_at_scope_small}:
                v_4 = g_40001._f15D5;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f15D7;
                break;
            case 0xa857bc78:
                v_4 = g_40001._f2682;
                break;
            }
            break;
        case 0x83839c4:
            switch (a_1) {
            case 0x45a3b6bb:
                v_4 = 0;
                break;
            case 0x33ba12e8:
                v_4 = g_40001._f17AF;
                break;
            case ${component_at_pi_supp}:
                v_4 = g_40001._f17B0;
                break;
            }
            break;
        case 0x3aabbbaa:
            switch (a_1) {
            case 0x324f2d5f:
                v_4 = 0;
                break;
            case 0x971cf6fd:
                v_4 = g_40001._f1A3D;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f1A3E;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = g_40001._f1A3F;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f1A40;
                break;
            }
            break;
        case 0xc734385a:
            switch (a_1) {
            case 0xd83b4141:
                v_4 = 0;
                break;
            case 0xccfd2ac5:
                v_4 = g_40001._f1A43;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f1A44;
                break;
            case ${component_at_ar_supp}:
                v_4 = g_40001._f1A46;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f1A47;
                break;
            case 0x161e9241:
                v_4 = g_40001._f1A48;
                break;
            }
            break;
        case ${weapon_bullpupshotgun}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 4100;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2300;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1110);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12450;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1111);
                break;
            }
            if (sub_13477() && (sub_13323() || sub_13252())) {
                v_4 = 0;
            }
            break;
        case 0x99aeeb3b:
            switch (a_1) {
            case 0x2297be19:
                v_4 = 0;
                break;
            case 0xd9d3ac92:
                v_4 = 9500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB40);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 2000;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EE);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12250;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EF);
                break;
            case 0x77b8ab2f:
                v_4 = g_40001._f2128;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1137);
                break;
            }
            if (sub_13477() && (sub_13323() || sub_13252())) {
                v_4 = 0;
            }
            break;
        case ${weapon_sawnoffshotgun}:
            switch (a_1) {
            case 0x85a64df9:
                v_4 = g_40001._f212B;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1139);
                break;
            }
            break;
        case 0xd8df3c3c:
            switch (a_1) {
            case 0xc613f685:
                v_4 = g_40001._f2263;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113E);
                break;
            case 0xeed9fd63:
                v_4 = g_40001._f2264;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113F);
                break;
            case 0x50910c31:
                v_4 = g_40001._f2265;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1140);
                break;
            case 0x9761d9dc:
                v_4 = g_40001._f2266;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1141);
                break;
            case 0x7decfe30:
                v_4 = g_40001._f2267;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1142);
                break;
            case 0x3f4e8aa6:
                v_4 = g_40001._f2268;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1143);
                break;
            case 0x8b808bb:
                v_4 = g_40001._f2269;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1144);
                break;
            case 0xe28babef:
                v_4 = g_40001._f226A;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1145);
                break;
            case 0x7af3f785:
                v_4 = g_40001._f226B;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1146);
                break;
            }
            break;
        case 0xdb1aa450:
            switch (a_1) {
            case 0x476e85ff:
                v_4 = 0;
                break;
            case 0xb92c6979:
                v_4 = g_40001._f227C;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1148);
                break;
            case ${component_at_pi_supp}:
                v_4 = g_40001._f227D;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1149);
                break;
            }
            break;
        case 0xdfe37640:
            switch (a_1) {
            case 0x9137a500:
                v_4 = 0;
                break;
            case 0x5b3e7db6:
                v_4 = g_40001._f29CB;
                break;
            case 0xe7939662:
                v_4 = g_40001._f29CC;
                break;
            }
            break;
        case 0xc1b3c3d1:
            switch (a_1) {
            case 0xe9867ce3:
                v_4 = 0;
                break;
            case 0x16ee3040:
                v_4 = g_40001._f2A05;
                break;
            case 0x9493b80d:
                v_4 = g_40001._f29CA;
                break;
            }
            break;
        case 0x624fe830:
            switch (a_1) {
            case 0x513f0a63:
                v_4 = 0;
                break;
            case 0x59ff9bf8:
                v_4 = g_40001._f2DA4;
                break;
            }
            break;
        case 0xef951fbb:
            switch (a_1) {
            case 0x29ea741e:
                v_4 = 0;
                break;
            }
            break;
        default:
            v_45 = sub_508f(a_0, &v_47);
            if (v_45 != -1) {
                for (v_46 = 0; v_46 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_45); v_46 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_45, v_46, &v_6E)) {
                        if (v_6E._f3 == a_1) {
                            v_5 = 1.0;
                            if (v_6E._f5 == -1) {
                                v_4 = -1;
                            } else { 
                                v_4 = v_6E._f5;
                            }
                        }
                    }
                }
            }
            break;
        }
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_13221()) {
        v_94/*"16"*/ = sub_12b32(a_1, a_0);
        sub_12261(&v_84, v_94, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 1, sub_1272c(a_0), -1, -1);
        if (MOBILE::_BD4D7EAF8A30F637(&v_84)) {
            v_4 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_84), 0x63a336e1, 1);
        }
    }
    if (v_4 > 0) {
        v_98 = sub_115d8(a_0, &v_4, v_5);
        if (v_98 != 1.0) {}
    }
    return v_4;
}

auto sub_115d8(auto a_0, auto a_1, auto a_2) {
    v_5 = 0.0;
    v_6 = 0.0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_13221()) {
        return 1.0;
    }
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * a_2);
    }
    if (!is_in_transition) {
        if (a_1 != 0) {
            v_7 = sub_11ee5(a_0);
            if (v_7 == 3) {
                v_6 = 0.1;
            } else if (v_7 == 2) {
                v_6 = 0.15;
            } else if (v_7 == 1) {
                v_6 = 0.25;
            }
        }
    }
    if (l_65 == 1) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._f4C);
            v_6 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
        }
    }
    if (l_65 == 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._f4C);
            if (sub_116ee()) {
                v_6 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
                l_65 = 1;
            } else { 
                l_65 = -1;
            }
        }
    }
    v_5 = 1.0 - v_6;
    a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * v_5);
    return v_5;
}

auto sub_116ee() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        return 0;
    }
    if (sub_11ea5()) {
        if (sub_11844()) {
            v_2 = sub_11768();
            v_3 = sub_1174c();
            v_4 = (__678_$BBDA792448DB5A89(v_3) / __678_$BBDA792448DB5A89(v_2)) * 100.0;
            if ((v_4 > ((float)g_40001._f75)) && (v_2 >= 8)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_1174c() {
    v_2 += g_148FB0;
    v_2 += g_148FB3;
    return v_2;
}

auto sub_11768() {
    v_2 += g_148FB1;
    v_2 += g_148FB2;
    v_2 += g_148FB0;
    v_2 += g_148FB3;
    v_2 += g_148FB5;
    v_2 += g_148FB4;
    v_2 += sub_11826(0x9f79ba0b);
    v_2 += sub_11826(0x62eb8c5a);
    v_2 += sub_11826(0xe7072cd);
    v_2 += sub_11826(0xaa238ff0);
    v_2 += sub_11826(0x3511a79);
    v_2 += sub_11826(0x3b566d5c);
    v_2 += sub_11826(0x368f6fd9);
    v_2 += sub_11826(0xc2a0aad8);
    v_2 += sub_11826(0x738d415f);
    return v_2;
}

auto sub_11826(auto a_0) {
    v_3 = a_0;
    if (STATS::STAT_GET_INT(v_3, &v_4, -1)) {
        return v_4;
    }
    return 0;
}

auto sub_11844() {
    TIME::GET_POSIX_TIME(&v_2, &v_2._f1, &v_2._f2, &v_2._f3, &v_2._f4, &v_2._f5);
    v_9/*{7}*/ = sub_11e81(0xfb63ebdd);
    if (sub_11888(v_9, v_2, 7)) {
        return 1;
    }
    return 0;
}

auto sub_11888(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14) {
    v_11 = sub_11d46(a_7);
    v_12 = sub_11af6(a_0, a_E);
    if (v_12 == -15) {
        return 0;
    }
    if (sub_118c3(v_11, v_12) == 1) {
        return 1;
    }
    return 0;
}

auto sub_118c3(auto a_0, auto a_1) {
    if ((!sub_11a1a(a_1)) || (!sub_11a1a(a_0))) {
        return 1;
    }
    v_4 = sub_6d99(a_0);
    v_5 = sub_6d99(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_6dd5(a_0);
    v_5 = sub_6dd5(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_11a08(a_0);
    v_5 = sub_11a08(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_119f5(a_0);
    v_5 = sub_119f5(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_119e2(a_0);
    v_5 = sub_119e2(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_119cf(a_0);
    v_5 = sub_119cf(a_1);
    if (v_4 > v_5) {
        return 1;
    }
    return 0;
}

auto sub_119cf(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 20) & 63;
}

auto sub_119e2(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 14) & 63;
}

auto sub_119f5(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 9) & 31;
}

auto sub_11a08(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 4) & 31;
}

auto sub_11a1a(auto a_0) {
    if (a_0 == -15) {
        return 0;
    }
    v_3 = sub_119cf(a_0);
    if ((v_3 < 0) || (v_3 >= 60)) {
        return 0;
    }
    v_4 = sub_119e2(a_0);
    if ((v_4 < 0) || (v_4 >= 60)) {
        return 0;
    }
    v_5 = sub_119f5(a_0);
    if ((v_5 < 0) || (v_5 > 23)) {
        return 0;
    }
    v_6 = sub_6d99(a_0);
    if (((v_6 <= 0) || (v_6 > 2043)) || (v_6 < 1979)) {
        return 0;
    }
    v_7 = sub_6dd5(a_0);
    if ((v_7 < 0) || (v_7 > 11)) {
        return 0;
    }
    v_8 = sub_11a08(a_0);
    if ((v_8 < 1) || (v_8 > sub_6cf7(v_7, v_6))) {
        return 0;
    }
    return 1;
}

auto sub_11af6(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (sub_11cf0(a_0) == 0) {
        v_A = sub_11d46(a_0);
        v_B = v_A;
        sub_11b36(&v_B, 0, 0, 0, a_7, 0, 0);
        if (a_7 == 0) {
            v_B = v_A;
        }
        return v_B;
    }
    return v_C;
}

void sub_11b36(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = sub_6d99(a_0);
    v_A = sub_6dd5(a_0);
    v_B = sub_11a08(a_0);
    v_C = sub_119f5(a_0);
    v_D = sub_119e2(a_0);
    v_E = sub_119cf(a_0);
    if ((((((a_6 == 0) && (a_5 == 0)) && (a_4 == 0)) && (a_3 == 0)) && (a_2 == 0)) && (a_1 == 0)) {
        return ;
    }
    if (a_1 < 0) {
        return ;
    }
    if (a_2 < 0) {
        return ;
    }
    if (a_3 < 0) {
        return ;
    }
    if (a_4 < 0) {
        return ;
    }
    if (a_5 < 0) {
        return ;
    }
    if (a_6 < 0) {
        return ;
    }
    v_E += a_1;
    for (; v_E >= 60; v_E -= 60) {
        a_2 += 1;
    }
    v_D += a_2;
    for (; v_D >= 60; v_D -= 60) {
        a_3 += 1;
    }
    v_C += a_3;
    for (; v_C >= 24; v_C -= 24) {
        a_4 += 1;
    }
    v_B += a_4;
    v_F = sub_6cf7(v_A, v_9);
    while (v_B > v_F) {
        v_A += 1;
        v_B -= v_F;
        if (v_A > 11) {
            v_9 += 1;
            v_A -= 12;
        }
        v_F = sub_6cf7(v_A, v_9);
    }
    v_A += a_5;
    for (; v_A > 11; v_A -= 12) {
        a_6 += 1;
    }
    v_9 += a_6;
    sub_11cb8(a_0, v_E, v_D, v_C, v_B, v_A, v_9);
}

void sub_11cb8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_6e57(a_0, a_1);
    sub_6e1c(a_0, a_2);
    sub_6de2(a_0, a_3);
    sub_6c73(a_0, a_5);
    sub_6ca6(a_0, a_4);
    sub_6bed(a_0, a_6);
}

auto sub_11cf0(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (((((((a_0 == 0) && (a_0._f1 == 0)) && (a_0._f2 == 0)) && (a_0._f3 == 0)) && (a_0._f4 == 0)) && (a_0._f5 == 0)) && (a_0._f6 == 0)) {
        return 1;
    }
    return 0;
}

auto sub_11d46(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_0 > 0) {
        sub_6bed(&v_9, a_0);
    }
    if (a_0._f1 > 0) {
        sub_6c73(&v_9, sub_11dbc(a_0._f1));
    }
    if (a_0._f2 > 0) {
        sub_6ca6(&v_9, a_0._f2);
    }
    if (a_0._f3 > 0) {
        sub_6de2(&v_9, a_0._f3);
    }
    if (a_0._f4 > 0) {
        sub_6e1c(&v_9, a_0._f4);
    }
    if (a_0._f5 > 0) {
        sub_6e57(&v_9, a_0._f5);
    }
    return v_9;
}

auto sub_11dbc(auto a_0) {
    if (a_0 < 1) {
        return 0;
    }
    if (a_0 > 12) {
        return 0;
    }
    switch (a_0) {
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 4;
        break;
    case 6:
        return 5;
        break;
    case 7:
        return 6;
        break;
    case 8:
        return 7;
        break;
    case 9:
        return 8;
        break;
    case 10:
        return 9;
        break;
    case 11:
        return 10;
        break;
    case 12:
        return 11;
        break;
    }
    return 0;
}

auto<7> sub_11e81(auto a_0) {
    v_3 = a_0;
    if (STATS::STAT_GET_DATE(v_3, &v_B, 7, -1)) {
        return v_B;
    }
    return v_4;
}

auto sub_11ea5() {
    if (sub_11ed3() && sub_11ec3(0)) {
        return 1;
    }
    return 0;
}

auto sub_11ec3(auto a_0) {
    return g_140671[a_0/*1*/];
}

auto sub_11ed3() {
    return sub_11ec3(sub_38b2() + 1);
}

auto sub_11ee5(auto a_0) {
    v_3 = sub_bc88();
    if ((a_0 == 0) || (!sub_2ed1(v_3))) {
        return -1;
    }
    v_4 = 7;
    switch (a_0) {
    case ${weapon_unarmed}:
        break;
    case ${gadget_parachute}:
        break;
    case ${weapon_microsmg}:
        v_4 = 1;
        break;
    case ${weapon_smg}:
        v_4 = 1;
        break;
    case ${weapon_sawnoffshotgun}:
        v_4 = 3;
        break;
    case ${weapon_pumpshotgun}:
        v_4 = 3;
        break;
    case ${weapon_assaultshotgun}:
        v_4 = 3;
        break;
    case ${weapon_assaultrifle}:
        v_4 = 2;
        break;
    case ${weapon_carbinerifle}:
        v_4 = 2;
        break;
    case ${weapon_advancedrifle}:
        v_4 = 2;
        break;
    case ${weapon_sniperrifle}:
        break;
    case ${weapon_heavysniper}:
        break;
    case ${weapon_mg}:
        v_4 = 4;
        break;
    case ${weapon_combatmg}:
        v_4 = 4;
        break;
    case ${weapon_rpg}:
        break;
    case ${weapon_grenadelauncher}:
        break;
    case ${weapon_minigun}:
        v_4 = 5;
        break;
    case ${weapon_knife}:
        break;
    case ${weapon_nightstick}:
        break;
    case ${weapon_petrolcan}:
        break;
    case ${weapon_stungun}:
        break;
    case ${weapon_appistol}:
        v_4 = 0;
        break;
    case ${weapon_combatpistol}:
        v_4 = 0;
        break;
    case ${weapon_pistol}:
        v_4 = 0;
        break;
    case ${weapon_smokegrenade}:
        break;
    case ${weapon_grenade}:
        break;
    case ${weapon_stickybomb}:
        break;
    }
    if (v_4 != 7) {
        switch (sub_12141(v_4, v_3)) {
        case 1:
            return 3;
            break;
        case 2:
            return 2;
            break;
        case 3:
            return 1;
            break;
        }
    } else { 
        asm .vardef<F> 6, "[{\"offset\":0,\"value\":6}]"
        v_6[0/*1*/] = sub_12141(1, v_3);
        v_6[1/*1*/] = sub_12141(3, v_3);
        v_6[2/*1*/] = sub_12141(2, v_3);
        v_6[3/*1*/] = sub_12141(4, v_3);
        v_6[4/*1*/] = sub_12141(5, v_3);
        v_6[5/*1*/] = sub_12141(0, v_3);
        v_D = 0;
        for (v_5 = 0; v_5 < 6; v_5 += 1) {
            if (v_6[v_5/*1*/] < 3) {
                v_D = 1;
            }
        }
        if (!v_D) {
            return 1;
        }
        v_D = 0;
        for (v_5 = 0; v_5 < 6; v_5 += 1) {
            if (v_6[v_5/*1*/] < 2) {
                v_D = 1;
            }
        }
        if (!v_D) {
            return 2;
        }
        v_D = 0;
        for (v_5 = 0; v_5 < 6; v_5 += 1) {
            if (v_6[v_5/*1*/] < 1) {
                v_D = 1;
            }
        }
        if (!v_D) {
            return 3;
        }
    }
    return -1;
}

auto sub_12141(auto a_0, auto a_1) {
    if (a_0 == 0) {
        v_4 = 0;
        v_5 = 1;
        v_6 = 2;
        v_7 = -1;
    } else if (a_0 == 1) {
        v_4 = 3;
        v_5 = 4;
        v_6 = 5;
        v_7 = -1;
    } else if (a_0 == 2) {
        v_4 = 9;
        v_5 = 10;
        v_6 = 11;
        v_7 = -1;
    } else if (a_0 == 3) {
        v_4 = 6;
        v_5 = 7;
        v_6 = 8;
        v_7 = -1;
    } else if (a_0 == 4) {
        v_4 = 12;
        v_5 = 13;
        v_6 = 14;
        v_7 = -1;
    } else if (a_0 == 5) {
        v_4 = 15;
        v_5 = 16;
        v_6 = 17;
        v_7 = -1;
    } else if (a_0 == 6) {
        v_4 = 18;
        v_5 = 19;
        v_6 = 20;
        v_7 = 21;
    } else { 
        return 0;
    }
    v_8 = sub_12245(v_4, a_1);
    if (sub_12245(v_5, a_1) < v_8) {
        v_8 = sub_12245(v_5, a_1);
    }
    if (sub_12245(v_6, a_1) < v_8) {
        v_8 = sub_12245(v_6, a_1);
    }
    if (v_7 != -1) {
        if (sub_12245(v_7, a_1) < v_8) {
            v_8 = sub_12245(v_7, a_1);
        }
    }
    return v_8;
}

auto sub_12245(auto a_0, auto a_1) {
    return game_state._f4575[a_1/*271*/]._f3[a_0/*12*/]._f3;
}

void sub_12261(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    switch (GAMEPLAY::GET_HASH_KEY(&a_1)) {
    case 0x87d34dd3:
    case 0x3db7a89:
        a_1/*"16"*/ = "GSA_TYPE_R";
        break;
    case 0xb550a881:
    case 0xe74ac9c9:
        a_1/*"16"*/ = "GSA_TYPE_C";
        break;
    case 0xbd4a6d50:
    case 0x140afe8f:
        a_1/*"16"*/ = "GSA_TYPE_RO";
        break;
    case 0xd7eeab1d:
    case 0x1fac7333:
        a_1/*"16"*/ = "GSA_TYPE_CH";
        break;
    case 0x23d285cf:
    case 0x3da36410:
        a_1/*"16"*/ = "GSA_TYPE_G";
        break;
    case 0xcccbd777:
    case 0xf2f4da8d:
        a_1/*"16"*/ = "GSA_TYPE_B";
        break;
    case 0x4e402cb:
    case 0x6a117e27:
        a_1/*"16"*/ = "GSA_TYPE_FW";
        break;
    }
    a_0/*"64"*/ = "";
    switch (a_6) {
    case 0:
        if (a_5 == ${mp_m_freemode_01}) {
            a_0/*"64"*/ = "M";
        } else if (a_5 == ${mp_f_freemode_01}) {
            a_0/*"64"*/ = "F";
        }
        a_0/*64*/ += "_HA_";
        a_0/*64*/ += a_1;
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 1:
        if (a_5 == ${mp_m_freemode_01}) {
            a_0/*"64"*/ = "M";
        } else if (a_5 == ${mp_f_freemode_01}) {
            a_0/*"64"*/ = "F";
        }
        a_0/*64*/ += "_CL_";
        if (a_7 == 12) {
            a_0/*64*/ += "OUTFIT_";
        }
        a_0/*64*/ += a_1;
        if (a_9 != -1) {
            a_0/*64*/ += "_n";
            a_0/*64*/ += a_9;
        }
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 2:
        if (a_5 == ${mp_m_freemode_01}) {
            a_0/*"64"*/ = "M";
        } else if (a_5 == ${mp_f_freemode_01}) {
            a_0/*"64"*/ = "F";
        }
        a_0/*64*/ += "_TA_";
        a_0/*64*/ += a_1;
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 3:
        a_0/*64*/ += "WP_";
        a_0/*64*/ += a_1;
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 4:
        if (a_5 == g_1096F) {
            a_0/*"64"*/ = "VE_BIG_YACHT_t0_v0";
        } else if (a_5 == 0) {
            a_0/*64*/ += "VEM_";
            if ((a_7 == 24) || (a_7 == 25)) {
                if (a_9 == 1) {
                    a_0/*64*/ += "COLOUR_1_";
                } else if (a_9 == 2) {
                    a_0/*64*/ += "COLOUR_2_";
                } else if (a_9 == 3) {
                    a_0/*64*/ += "COLOUR_EXTRA_1_";
                }
                if (a_A == 5) {
                    a_0/*64*/ += "MCT_CHROME_";
                } else if (a_A == 1) {
                    a_0/*64*/ += "MCT_CLASSIC_";
                } else if (a_A == 0) {
                    a_0/*64*/ += "MCT_METALLIC_";
                } else if (a_A == 4) {
                    a_0/*64*/ += "MCT_METALS_";
                } else if (a_A == 3) {
                    a_0/*64*/ += "MCT_MATTE_";
                } else if (a_A == 2) {
                    a_0/*64*/ += "MCT_PEARLESCENT_";
                } else if (a_A == 6) {
                    a_0/*64*/ += "MCT_NONE_";
                }
                a_9 = -1;
            } else if (a_7 == 38) {
                a_0/*64*/ += "COLOUR_5_";
            } else if (a_7 == 65) {
                a_0/*64*/ += "COLOUR_6_";
            }
            a_0/*64*/ += a_1;
            if (a_9 != -1) {
                a_0/*64*/ += "_n";
                a_0/*64*/ += a_9;
            }
            a_0/*64*/ += "_t";
            a_0/*64*/ += a_7;
            a_0/*64*/ += "_v";
            a_0/*64*/ += a_8;
        } else if (a_7 == 22) {
            a_1/*"16"*/ = VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(a_5);
            if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_1) || (GAMEPLAY::GET_HASH_KEY(&a_1) == 0xe149b5e8)) {
                return ;
            }
            a_0/*64*/ += "VEM_INSURANCE_";
            a_0/*64*/ += a_1;
            switch (a_5) {
            case ${emperor2}:
            case ${cavalcade2}:
            case ${mesa2}:
            case ${dubsta2}:
            case ${rapidgt2}:
                a_0/*64*/ += "2";
                break;
            case ${mesa3}:
            case ${burrito3}:
            case ${emperor3}:
                a_0/*64*/ += "3";
                break;
            case ${tornado4}:
                a_0/*64*/ += "4";
                break;
            }
        } else if (a_7 == 40) {
            a_1/*"16"*/ = VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(a_5);
            if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_1)) {
                return ;
            }
            a_0/*64*/ += "VEU_";
            a_0/*64*/ += a_1;
            a_0/*64*/ += "_t0_v";
            a_0/*64*/ += a_8;
        } else { 
            a_0/*64*/ += "VE_";
            a_0/*64*/ += a_1;
            switch (a_5) {
            case ${emperor2}:
            case ${cavalcade2}:
            case ${mesa2}:
            case ${dubsta2}:
            case ${rapidgt2}:
                a_0/*64*/ += "2";
                break;
            case ${mesa3}:
            case ${burrito3}:
            case ${emperor3}:
                a_0/*64*/ += "3";
                break;
            case ${tornado4}:
                a_0/*64*/ += "4";
                break;
            }
            a_0/*64*/ += "_t";
            a_0/*64*/ += a_7;
            a_0/*64*/ += "_v";
            a_0/*64*/ += a_8;
        }
        break;
    }
}

auto sub_1272c(auto a_0) {
    return sub_1273a(a_0);
}

auto sub_1273a(auto a_0) {
    switch (a_0) {
    case ${weapon_unarmed}:
        return 0;
        break;
    case ${weapon_pistol}:
        return 1;
        break;
    case ${weapon_combatpistol}:
        return 2;
        break;
    case ${weapon_appistol}:
        return 3;
        break;
    case 0x99aeeb3b:
        return 4;
        break;
    case ${weapon_smg}:
        return 5;
        break;
    case ${weapon_assaultsmg}:
        return 6;
        break;
    case ${weapon_microsmg}:
        return 7;
        break;
    case ${weapon_assaultrifle}:
        return 8;
        break;
    case ${weapon_carbinerifle}:
        return 9;
        break;
    case ${weapon_heavyrifle}:
        return 10;
        break;
    case ${weapon_advancedrifle}:
        return 11;
        break;
    case ${weapon_mg}:
        return 12;
        break;
    case ${weapon_combatmg}:
        return 13;
        break;
    case ${weapon_assaultmg}:
        return 14;
        break;
    case ${weapon_stickybomb}:
        return 15;
        break;
    case ${weapon_grenade}:
        return 16;
        break;
    case ${weapon_smokegrenade}:
        return 17;
        break;
    case ${weapon_remotesniper}:
        return 18;
        break;
    case ${weapon_assaultsniper}:
        return 19;
        break;
    case ${weapon_sniperrifle}:
        return 20;
        break;
    case ${weapon_heavysniper}:
        return 21;
        break;
    case ${weapon_pumpshotgun}:
        return 22;
        break;
    case ${weapon_bullpupshotgun}:
        return 23;
        break;
    case ${weapon_assaultshotgun}:
        return 24;
        break;
    case ${weapon_sawnoffshotgun}:
        return 25;
        break;
    case ${weapon_grenadelauncher}:
        return 26;
        break;
    case ${weapon_rpg}:
        return 27;
        break;
    case ${weapon_minigun}:
        return 28;
        break;
    case ${weapon_loudhailer}:
        return 29;
        break;
    case ${weapon_programmablear}:
        return 30;
        break;
    case ${weapon_stungun}:
        return 31;
        break;
    case ${weapon_rubbergun}:
        return 32;
        break;
    case ${gadget_parachute}:
        return 33;
        break;
    case ${weapon_knife}:
        return 34;
        break;
    case ${weapon_nightstick}:
        return 35;
        break;
    case ${weapon_hammer}:
        return 36;
        break;
    case ${weapon_bat}:
        return 37;
        break;
    case ${weapon_crowbar}:
        return 38;
        break;
    case ${weapon_golfclub}:
        return 39;
        break;
    case ${weapon_grenadelauncher_smoke}:
        return 40;
        break;
    case ${weapon_molotov}:
        return 41;
        break;
    case ${weapon_fireextinguisher}:
        return 42;
        break;
    case ${weapon_petrolcan}:
        return 43;
        break;
    case ${weapon_digiscanner}:
        return 44;
        break;
    case ${weapon_bottle}:
        return 45;
        break;
    case ${weapon_specialcarbine}:
        return 46;
        break;
    case ${weapon_snspistol}:
        return 47;
        break;
    case ${weapon_heavypistol}:
        return 49;
        break;
    case ${weapon_bullpuprifle}:
        return 48;
        break;
    case 0x61012683:
        return 50;
        break;
    case 0x92a27487:
        return 51;
        break;
    case 0x83839c4:
        return 52;
        break;
    case 0x47757124:
        return 57;
        break;
    case 0xa89cb99e:
        return 53;
        break;
    case 0x7f7497e5:
        return 54;
        break;
    case 0xc734385a:
        return 56;
        break;
    case 0x3aabbbaa:
        return 55;
        break;
    case 0xab564b93:
        return 60;
        break;
    case 0x63ab0442:
        return 61;
        break;
    case 0xf9dcbf2d:
        return 58;
        break;
    case 0x6d544c99:
        return 59;
        break;
    case 0xa3d4d34:
        return 64;
        break;
    case 0xd8df3c3c:
        return 62;
        break;
    case 0xdc4db296:
        return 63;
        break;
    case 0xdd5df8d9:
        return 65;
        break;
    case 0xdb1aa450:
        return 68;
        break;
    case 0xef951fbb:
        return 66;
        break;
    case 0x624fe830:
        return 67;
        break;
    case 0x8bb05fd7:
        return 69;
        break;
    case 0xc1b3c3d1:
        return 70;
        break;
    case 0xdfe37640:
        return 71;
        break;
    }
    return 0;
}

auto sub_12b32(auto a_0, auto a_1) {
    if (a_1 == 0xd8df3c3c) {
        switch (a_0) {
        case 0xf3462f33:
            return "WT_KNUCKLE";
            break;
        case 0xc613f685:
            return "WCT_KNUCK_02";
            break;
        case 0xeed9fd63:
            return "WCT_KNUCK_BG";
            break;
        case 0x50910c31:
            return "WCT_KNUCK_DLR";
            break;
        case 0x9761d9dc:
            return "WCT_KNUCK_DMD";
            break;
        case 0x7decfe30:
            return "WCT_KNUCK_HT";
            break;
        case 0x3f4e8aa6:
            return "WCT_KNUCK_LV";
            break;
        case 0x8b808bb:
            return "WCT_KNUCK_PC";
            break;
        case 0xe28babef:
            return "WCT_KNUCK_SLG";
            break;
        case 0x7af3f785:
            return "WCT_KNUCK_VG";
            break;
        }
    }
    switch (a_0) {
    case 0:
        return "WCT_INVALID";
        break;
    case 0x75414f30:
        return "WCT_RAIL";
        break;
    case ${component_at_ar_afgrip}:
        return "WCT_GRIP";
        break;
    case ${component_at_pi_flsh}:
        return "WCT_FLASH";
        break;
    case ${component_at_ar_flsh}:
        return "WCT_FLASH";
        break;
    case ${component_at_scope_macro}:
        return "WCT_SCOPE_MAC";
        break;
    case 0x3cc6ba57:
        return "WCT_SCOPE_MAC";
        break;
    case ${component_at_scope_small}:
        return "WCT_SCOPE_SML";
        break;
    case 0x3c00afed:
        return "WCT_SCOPE_SML";
        break;
    case ${component_at_scope_medium}:
        return "WCT_SCOPE_MED";
        break;
    case ${component_at_scope_large}:
        return "WCT_SCOPE_LRG";
        break;
    case ${component_at_scope_max}:
        return "WCT_SCOPE_MAX";
        break;
    case ${component_at_pi_supp}:
        return "WCT_SUPP";
        break;
    case ${component_at_ar_supp}:
        return "WCT_SUPP";
        break;
    case ${component_at_ar_supp_02}:
        return "WCT_SUPP";
        break;
    case ${component_at_sr_supp}:
        return "WCT_SUPP";
        break;
    case 0xfed0fd71:
        return "WCT_CLIP1";
        break;
    case 0xed265a1c:
        return "WCT_CLIP2";
        break;
    case 0x721b079:
        return "WCT_CLIP1";
        break;
    case 0xd67b4f2d:
        return "WCT_CLIP2";
        break;
    case 0x31c4b22a:
        return "WCT_CLIP1";
        break;
    case 0x249a17d5:
        return "WCT_CLIP2";
        break;
    case 0xcb48aef0:
        return "WCT_CLIP1";
        break;
    case 0x10e6ba2b:
        return "WCT_CLIP2";
        break;
    case 0x26574997:
        return "WCT_CLIP1";
        break;
    case 0x350966fb:
        return "WCT_CLIP2";
        break;
    case 0xbe5eea16:
        return "WCT_CLIP1";
        break;
    case 0xb1214f9b:
        return "WCT_CLIP2";
        break;
    case 0x9fbe33ec:
        return "WCT_CLIP1";
        break;
    case 0x91109691:
        return "WCT_CLIP2";
        break;
    case 0xfa8fa10f:
        return "WCT_CLIP1";
        break;
    case 0x8ec1c979:
        return "WCT_CLIP2";
        break;
    case 0xf434ef84:
        return "WCT_CLIP1";
        break;
    case 0x82158b47:
        return "WCT_CLIP2";
        break;
    case 0xe1ffb34a:
        return "WCT_CLIP1";
        break;
    case 0xd6c59cd6:
        return "WCT_CLIP2";
        break;
    case 0x94e81bc7:
        return "WCT_CLIP1";
        break;
    case 0x86bd7f72:
        return "WCT_CLIP2";
        break;
    case 0x9bc64089:
        return "WCT_CLIP1";
        break;
    case 0x476f52f4:
        return "WCT_CLIP1";
        break;
    case 0xc8de6f06:
        return "WCT_CLIP2";
        break;
    case 0x8d1307b0:
        return "WCT_CLIP1";
        break;
    case 0xbb46e417:
        return "WCT_CLIP2";
        break;
    case 0x2297be19:
        return "WCT_CLIP1";
        break;
    case 0xd9d3ac92:
        return "WCT_CLIP2";
        break;
    case 0xbaab157:
        return "WCT_CLIP1";
        break;
    case 0x5af49386:
        return "WCT_CLIP1";
        break;
    case 0x6cbf371b:
        return "WCT_CLIP2";
        break;
    case 0xcaebd246:
        return "WCT_CLIP1";
        break;
    case 0xe1c5fffa:
        return "WCT_CLIP2";
        break;
    case 0xf8955d89:
        return "WCT_CLIP1";
        break;
    case 0x3e7e6956:
        return "WCT_CLIP2";
        break;
    case ${component_snspistol_clip_01}:
        return "WCT_CLIP1";
        break;
    case ${component_snspistol_clip_02}:
        return "WCT_CLIP2";
        break;
    case 0x45a3b6bb:
        return "WCT_CLIP1";
        break;
    case 0x33ba12e8:
        return "WCT_CLIP2";
        break;
    case 0x324f2d5f:
        return "WCT_CLIP1";
        break;
    case 0xd83b4141:
        return "WCT_CLIP1";
        break;
    case 0x971cf6fd:
        return "WCT_CLIP2";
        break;
    case 0xccfd2ac5:
        return "WCT_CLIP2";
        break;
    case 0x1c221b1a:
        return "WCT_SCOPE_LRG";
        break;
    case 0x65ea7ebb:
        return "WCT_SUPP";
        break;
    case 0x4317f19e:
        return "WCT_CLIP1";
        break;
    case 0x334a5203:
        return "WCT_CLIP2";
        break;
    case 0xcb9e41ed:
        return "WCT_CLIP1";
        break;
    case 0x476e85ff:
        return "WCT_CLIP1";
        break;
    case 0xb92c6979:
        return "WCT_CLIP2";
        break;
    case 0x4ead7533:
        return "WCT_VAR_GOLD";
        break;
    case 0x377cd377:
        return "WCT_VAR_METAL";
        break;
    case 0xd89b9658:
        return "WCT_VAR_GOLD";
        break;
    case 0x9b76c72c:
        return "WCT_VAR_METAL";
        break;
    case 0xd7391086:
        return "WCT_VAR_GOLD";
        break;
    case 0x77b8ab2f:
        return "WCT_VAR_SIL";
        break;
    case 0x7a6a7b7b:
        return "WCT_VAR_WOOD";
        break;
    case 0x27872c90:
        return "WCT_VAR_GOLD";
        break;
    case 0x487aae09:
        return "WCT_VAR_GOLD";
        break;
    case 0x85a64df9:
        return "WCT_VAR_METAL";
        break;
    case 0x4032b5e7:
        return "WCT_VAR_WOOD";
        break;
    case 0x161e9241:
        return "WCT_VAR_GOLD";
        break;
    case 0x278c78af:
        return "WCT_VAR_GOLD";
        break;
    case 0xa857bc78:
        return "WCT_VAR_METAL";
        break;
    case 0x92feccdd:
        return "WCT_VAR_ETCHM";
        break;
    case 0xc6654d72:
        return "WCT_VAR_GOLD";
        break;
    case 0xd6dababe:
        return "WCT_VAR_GOLD";
        break;
    case 0xa2d79ddb:
        return "WCT_VAR_GOLD";
        break;
    case 0x8033ecaf:
        return "WCT_VAR_WOOD";
        break;
    case 0x730154f2:
        return "WCT_VAR_ETCHM";
        break;
    case 0x9137a500:
        return "WCT_SB_BASE";
        break;
    case 0x5b3e7db6:
        return "WCT_SB_VAR1";
        break;
    case 0xe7939662:
        return "WCT_SB_VAR2";
        break;
    case 0xe9867ce3:
        return "WCT_CLIP1";
        break;
    case 0x16ee3040:
        return "WCT_REV_VARB";
        break;
    case 0x9493b80d:
        return "WCT_REV_VARG";
        break;
    default:
        if (a_1 != 0) {
            v_4 = sub_508f(a_1, &v_6);
            if (v_4 != -1) {
                for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_4); v_5 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_4, v_5, &v_2D)) {
                        if (v_2D._f3 == a_0) {
                            return sub_13217(&v_2D._f6);
                        }
                    }
                }
            }
        }
        break;
    }
    return "WCT_INVALID";
}

auto sub_13217(auto a_0) {
    return a_0;
}

auto sub_13221() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_1323e()) {
        return 1;
    }
    return 0;
}

auto sub_1323e() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        return 1;
    }
    return 0;
}

auto sub_13252() {
    if (GAMEPLAY::IS_BIT_SET(g_19, 6)) {
        if (GAMEPLAY::IS_BIT_SET(g_19, 2) || GAMEPLAY::IS_BIT_SET(g_19, 4)) {
            return 1;
        } else { 
            return 0;
        }
    }
    if (STATS::STAT_GET_INT(0x5da524f8, &v_2, -1)) {
        if (GAMEPLAY::IS_BIT_SET(v_2, 6)) {
            if (GAMEPLAY::IS_BIT_SET(v_2, 2) || GAMEPLAY::IS_BIT_SET(v_2, 4)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    if (STATS::STAT_SLOT_IS_LOADED(0)) {
        if (g_21B39._f3) {
            v_4 = 0x3db2bf9e;
            if (STATS::STAT_GET_INT(v_4, &v_3, -1)) {
                if (GAMEPLAY::IS_BIT_SET(v_3, 8)) {
                    return 1;
                }
            }
        }
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        v_5 = GAMEPLAY::GET_PROFILE_SETTING(866);
        if (GAMEPLAY::IS_BIT_SET(v_5, 2) || GAMEPLAY::IS_BIT_SET(v_5, 4)) {
            return 1;
        }
    }
    return 0;
}

auto sub_13323() {
    if (GAMEPLAY::IS_BIT_SET(g_19, 5)) {
        if (GAMEPLAY::IS_BIT_SET(g_19, 1) || GAMEPLAY::IS_BIT_SET(g_19, 3)) {
            return 1;
        } else { 
            return 0;
        }
    }
    if (STATS::STAT_GET_INT(0x5da524f8, &v_2, -1)) {
        if (GAMEPLAY::IS_BIT_SET(v_2, 5)) {
            if (GAMEPLAY::IS_BIT_SET(v_2, 1) || GAMEPLAY::IS_BIT_SET(v_2, 3)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    if (STATS::STAT_SLOT_IS_LOADED(0)) {
        if (g_21B39._f3) {
            v_4 = 0x3db2bf9e;
            if (STATS::STAT_GET_INT(v_4, &v_3, -1)) {
                if (GAMEPLAY::IS_BIT_SET(v_3, 5)) {
                    return 1;
                }
            }
        }
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        v_5 = GAMEPLAY::GET_PROFILE_SETTING(866);
        if (GAMEPLAY::IS_BIT_SET(v_5, 1) || GAMEPLAY::IS_BIT_SET(v_5, 3)) {
            return 1;
        }
    }
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        if (NETWORK::_85443FF4C328F53B()) {
            if (NETWORK::_91B87C55093DE351()) {
                STATS::STAT_GET_INT(0x5da524f8, &v_6, -1);
                GAMEPLAY::SET_BIT(&v_6, 1);
                GAMEPLAY::SET_BIT(&v_6, 3);
                GAMEPLAY::SET_BIT(&v_6, 5);
                GAMEPLAY::SET_BIT(&g_19, 1);
                GAMEPLAY::SET_BIT(&g_19, 3);
                GAMEPLAY::SET_BIT(&g_19, 5);
                STATS::STAT_SET_INT(0x5da524f8, v_6, 1);
                if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
                    v_6 = GAMEPLAY::GET_PROFILE_SETTING(866);
                    GAMEPLAY::SET_BIT(&v_6, 1);
                    GAMEPLAY::SET_BIT(&v_6, 3);
                    STATS::_DAC073C7901F9E15(v_6);
                }
                return 1;
            }
        }
    }
    return 0;
}

auto sub_13477() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        if (NETWORK::_85443FF4C328F53B()) {
            if (NETWORK::_593570C289A77688()) {
                STATS::STAT_GET_INT(0x5da524f8, &v_2, -1);
                GAMEPLAY::SET_BIT(&v_2, 2);
                GAMEPLAY::SET_BIT(&v_2, 4);
                GAMEPLAY::SET_BIT(&v_2, 6);
                GAMEPLAY::SET_BIT(&g_19, 2);
                GAMEPLAY::SET_BIT(&g_19, 4);
                GAMEPLAY::SET_BIT(&g_19, 6);
                STATS::STAT_SET_INT(0x5da524f8, v_2, 1);
                if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
                    v_2 = GAMEPLAY::GET_PROFILE_SETTING(866);
                    GAMEPLAY::SET_BIT(&v_2, 0);
                    STATS::_DAC073C7901F9E15(v_2);
                }
                return 1;
            }
        }
    }
    if (g_21B38 == 2) {
        return 1;
    } else if (g_21B38 == 3) {
        return 0;
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        if (GAMEPLAY::IS_BIT_SET(GAMEPLAY::GET_PROFILE_SETTING(866), 0)) {
            return 1;
        }
    }
    return 0;
}

void sub_13532(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_0 = a_1;
    a_0._f4 = a_2;
    a_0._f5 = a_3;
    a_0._f1 = a_4;
}

auto sub_13551(auto a_0, auto a_1, auto a_2) {
    sub_13532(&v_5, a_0, a_0._f4, a_0._f5, a_0._f1);
    while (sub_ec0e(&v_5, a_1, v_B, 0)) {
        if (v_5._f4 == a_2) {
            return 1;
        }
        v_B += 1;
    }
    return 0;
}

auto sub_13593(auto a_0) {
    return a_0 * 57.295780181884766;
}

auto sub_135a3(auto a_0) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(a_0, 1);
    return 1;
}

auto sub_135c3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        VEHICLE::DELETE_VEHICLE(a_0);
        a_0 = 0;
    }
    a_0 = VEHICLE::CREATE_VEHICLE(a_1, a_2, a_5, 1, 1);
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    return 1;
}

auto sub_13600(auto a_0) {
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    PED::SET_PED_MONEY(a_0, 0);
    PED::SET_PED_NAME_DEBUG(a_0, "RAMP:SCENE PED");
    PED::SET_PED_CAN_BE_TARGETTED(a_0, 0);
    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 1);
    return 1;
}

auto sub_1363b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        PED::DELETE_PED(a_0);
        a_0 = 0;
    }
    a_0 = PED::CREATE_PED(26, a_1, a_2, a_5, 1, 1);
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    if (a_6) {
        sub_136b9(a_0, a_2);
        ENTITY::SET_ENTITY_HEADING(a_0, a_5);
    }
    PED::SET_PED_MONEY(a_0, 0);
    PED::SET_PED_NAME_DEBUG(a_0, "RAMP:SCENE PED");
    PED::SET_PED_CAN_BE_TARGETTED(a_0, 0);
    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 1);
    return 1;
}

auto<3> sub_136b9(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_1._f2 += 0.15;
    if (GAMEPLAY::GET_GROUND_Z_FOR_3D_COORD(a_1, &v_6, 0)) {
        a_1._f2 = v_6;
    }
    if (sub_bbef(a_0)) {
        ENTITY::SET_ENTITY_COORDS(a_0, a_1, 1, 0, 0, 1);
    }
    return a_1;
}

auto sub_136fe() {
    return PED::ADD_SCENARIO_BLOCKING_AREA(-177.06280517578125, -1679.7154541015625, 33.162628173828125, -157.06280517578125, -1659.7154541015625, 37.162628173828125, 0, 1, 1, 1);
}

void sub_1372c(auto a_0) {
    v_3 = ${ig_ramp_gang};
    v_4 = "misstrvram_4";
    STREAMING::REQUEST_MODEL(v_3);
    STREAMING::REQUEST_ANIM_DICT(v_4);
    WEAPON::REQUEST_WEAPON_ASSET(${weapon_assaultrifle}, 31, 0);
    while ((!STREAMING::HAS_MODEL_LOADED(v_3)) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_4))) {
        SYSTEM::WAIT(0);
    }
    while (!sub_1363b(&a_0._f1C[0/*1*/], v_3, 161.37, -1669.63, 33.1, sub_13593(1.03), 1)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[0/*1*/]);
    PED::SET_PED_NAME_DEBUG(a_0._f1C[0/*1*/], "RP0_NOGUN");
    PED::SET_PED_DEFAULT_COMPONENT_VARIATION(a_0._f1C[0/*1*/]);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 0, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 1, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 2, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 3, 0, 1, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 4, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 5, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 6, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 7, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 8, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 9, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 10, 0, 1, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 11, 0, 0, 0);
    AI::TASK_PLAY_ANIM(a_0._f1C[0/*1*/], v_4, "thugs_idle_b", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
    while (!sub_1363b(&a_0._f1C[1/*1*/], v_3, 161.92999999999998, -1670.39, 33.14, sub_13593(0.2), 1)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[1/*1*/]);
    PED::SET_PED_NAME_DEBUG(a_0._f1C[1/*1*/], "RP1_GUN");
    PED::SET_PED_DEFAULT_COMPONENT_VARIATION(a_0._f1C[1/*1*/]);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 0, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 1, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 2, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 1, 1, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 5, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 6, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 7, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 8, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 9, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 10, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 11, 0, 0, 0);
    WEAPON::GIVE_WEAPON_TO_PED(a_0._f1C[1/*1*/], ${weapon_assaultrifle}, 100, 1, 1);
    AI::TASK_PLAY_ANIM(a_0._f1C[1/*1*/], v_4, "thugs_idle_a", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
    a_0._f9/*"24"*/ = "TRVRAM_4";
    a_0._f1B = 0;
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3);
}

void sub_13a03(auto a_0) {
    v_3 = ${ig_ramp_mex};
    v_4 = "misstrvram_3";
    STREAMING::REQUEST_MODEL(v_3);
    STREAMING::REQUEST_ANIM_DICT(v_4);
    WEAPON::REQUEST_WEAPON_ASSET(${weapon_microsmg}, 31, 10);
    while (((!STREAMING::HAS_MODEL_LOADED(v_3)) || (!WEAPON::HAS_WEAPON_ASSET_LOADED(${weapon_microsmg}))) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_4))) {
        SYSTEM::WAIT(0);
    }
    while (!sub_1363b(&a_0._f1C[0/*1*/], v_3, 464.61248779296875, -1848.767333984375, 27.816, 177.39, 1)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[0/*1*/]);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 0, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 1, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 2, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 3, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 4, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 5, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 6, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 7, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 8, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 9, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 10, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 11, 0, 0, 0);
    PED::SET_PED_NAME_DEBUG(a_0._f1C[0/*1*/], "RAMP:PED 0");
    AI::TASK_PLAY_ANIM(a_0._f1C[0/*1*/], v_4, "mexicans_idle_a", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
    while (!sub_1363b(&a_0._f1C[1/*1*/], v_3, 465.7820129394531, -1849.072998046875, 27.817, 129.92, 1)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[1/*1*/]);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 0, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 1, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 2, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 0, 1, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 5, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 6, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 7, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 8, 1, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 9, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 10, 0, 0, 0);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 11, 0, 0, 0);
    PED::SET_PED_NAME_DEBUG(a_0._f1C[1/*1*/], "RAMP:PED 1");
    AI::TASK_PLAY_ANIM(a_0._f1C[1/*1*/], v_4, "mexicans_idle_b", 8.0, -8.0, -1, 1, 0, 0, 0, 0);
    if (sub_eab9(&a_0._f29[0/*1*/], ${weapon_microsmg}, 467.0, -1855.4, 32.0, sub_13593(-0.85))) {
        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0._f29[0/*1*/], ${component_at_scope_macro});
        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0._f29[0/*1*/], 0x10e6ba2b);
    }
    a_0._f9/*"24"*/ = "TRVRAM_3";
    a_0._f1B = 0;
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3);
}

auto sub_13d03() {
    return sub_13d23(1182.137451171875, -400.47869873046875, 66.92414093017578, 8.0);
}

auto sub_13d23(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = {a_3 / 2.0, a_3 / 2.0, a_3 / 2.0 };
    return PED::ADD_SCENARIO_BLOCKING_AREA(a_0 - v_6, a_0 + v_6, 0, 1, 1, 1);
}

void sub_13d55(auto a_0) {
    v_3 = ${ig_ramp_hipster};
    v_4 = ${prop_chair_01a};
    v_5 = ${prop_npc_phone};
    v_6 = "misstrvram_2";
    v_7 = 60309;
    v_8/*{3}*/ = {0.0, 0.0, 0.0 };
    v_B/*{3}*/ = {0.0, 0.0, 0.0 };
    WEAPON::REQUEST_WEAPON_ASSET(${weapon_sawnoffshotgun}, 31, 0);
    STREAMING::REQUEST_MODEL(v_3);
    STREAMING::REQUEST_MODEL(v_4);
    STREAMING::REQUEST_MODEL(v_5);
    STREAMING::REQUEST_ANIM_DICT(v_6);
    sub_140de(&l_72);
    while (((((!STREAMING::HAS_MODEL_LOADED(v_3)) || (!STREAMING::HAS_MODEL_LOADED(v_4))) || (!STREAMING::HAS_MODEL_LOADED(v_5))) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_6))) || (!sub_140c7(&l_72))) {
        SYSTEM::WAIT(0);
    }
    GAMEPLAY::CLEAR_AREA_OF_OBJECTS(1180.0205078125, -401.7373962402344, 66.87670135498047, 0.75, 0);
    a_0._f29[2/*1*/] = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(1179.7779541015625, -401.7373962402344, 66.8696975708, 1.0, ${prop_chair_01a}, 1, 0, 1);
    if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[2/*1*/])) {
        ENTITY::SET_ENTITY_COORDS(a_0._f29[2/*1*/], 1180.05, -401.8299865722656, 66.88, 1, 0, 0, 1);
        ENTITY::SET_ENTITY_ROTATION(a_0._f29[2/*1*/], 0.0, 0.0, 50.0, 2, 1);
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[2/*1*/], 1);
    }
    a_0._f29[3/*1*/] = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(1181.2431640625, -402.5309143066406, 67.25640106201172, 1.0, ${prop_table_01}, 1, 0, 1);
    if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[3/*1*/])) {
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[3/*1*/], 1);
    }
    while (!sub_1363b(&a_0._f1C[0/*1*/], v_3, 1181.54736328125, -400.09539794921875, 67.57569885253906, -124.29278564453125, 0)) {
        SYSTEM::WAIT(0);
    }
    sub_13600(&a_0._f1C[0/*1*/]);
    ENTITY::FREEZE_ENTITY_POSITION(a_0._f1C[0/*1*/], 1);
    PED::SET_PED_DEFAULT_COMPONENT_VARIATION(a_0._f1C[0/*1*/]);
    PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 2, 0, 0, 0);
    sub_140a0(&a_0._f29[1/*1*/], v_5, 1181.54736328125, -400.09539794921875, 65.57569885253906, 0.0);
    ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[1/*1*/], a_0._f1C[0/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[0/*1*/], v_7), v_B, v_8, 1, 0, 0, 0, 2, 1);
    sub_14021(&l_72, 0, 3);
    if (!PED::IS_SYNCHRONIZED_SCENE_RUNNING(a_0._f3B)) {
        a_0._f3B = PED::CREATE_SYNCHRONIZED_SCENE(l_6C, l_6F, 2);
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], a_0._f3B, v_6, "hipster_idle", 8.0, -8.0, 513, 0, 0x447a0000, 0);
        }
        PED::SET_SYNCHRONIZED_SCENE_LOOPED(a_0._f3B, 1);
    }
    if (!sub_eab9(&a_0._f29[0/*1*/], ${weapon_sawnoffshotgun}, 1162.1999999999998, 395.4, 72.9, sub_13593(0.71))) {
    } else { }
    a_0._f9/*"24"*/ = "TRVRAM_2_CONCAT";
    a_0._f1B = 0;
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_3);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_4);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_5);
}

void sub_14021(auto a_0, auto a_1, auto a_2) {
    if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
        if (a_1) {
            MOBILE::GET_MOBILE_PHONE_RENDER_ID(&v_5);
        } else { 
            if (!UI::IS_NAMED_RENDERTARGET_REGISTERED("npcphone")) {
                UI::REGISTER_NAMED_RENDERTARGET("npcphone", 0);
                UI::LINK_NAMED_RENDERTARGET(${prop_npc_phone});
            }
            v_5 = UI::GET_NAMED_RENDERTARGET_RENDER_ID("npcphone");
        }
        UI::SET_TEXT_RENDER_ID(v_5);
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, "DISPLAY_VIEW");
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(a_2);
        GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
        GRAPHICS::DRAW_SCALEFORM_MOVIE(a_0, g_37FD, g_37FE, g_37FF, g_3800, 255, 255, 255, 255, 0);
    }
}

void sub_140a0(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_9cd3(a_0);
    a_0 = OBJECT::CREATE_OBJECT(a_1, a_2, 1, 1, 0);
    ENTITY::SET_ENTITY_HEADING(a_0, a_5);
}

auto sub_140c7(auto a_0) {
    if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
        return 1;
    }
    return 0;
}

void sub_140de(auto a_0) {
    a_0 = __678_$2F14983962462691(sub_140f1());
}

auto sub_140f1() {
    return "CELLPHONE_CUTSCENE";
}

auto sub_140fd() {
    return sub_13d23(911.534912109375, 3642.11083984375, 31.64737892150879, 8.0);
}

void sub_1411d(auto a_0) {
    v_6 = "misstrvram_1";
    v_7 = 28422;
    v_8/*{3}*/ = {0.0, 0.0, 0.0 };
    v_B/*{3}*/ = {0.0, 0.0, -0.1 };
    v_E = ${ig_ramp_hic};
    v_F = ${prop_table_03b_chr};
    v_10 = ${prop_beer_bottle};
    STREAMING::REQUEST_MODEL(v_E);
    STREAMING::REQUEST_MODEL(v_F);
    STREAMING::REQUEST_MODEL(v_10);
    STREAMING::REQUEST_ANIM_DICT(v_6);
    WEAPON::REQUEST_WEAPON_ASSET(${weapon_assaultrifle}, 31, 0);
    while (((((!STREAMING::HAS_MODEL_LOADED(v_E)) || (!STREAMING::HAS_MODEL_LOADED(v_F))) || (!STREAMING::HAS_MODEL_LOADED(v_10))) || (!STREAMING::HAS_ANIM_DICT_LOADED(v_6))) || (!WEAPON::HAS_WEAPON_ASSET_LOADED(${weapon_assaultrifle}))) {
        SYSTEM::WAIT(0);
    }
    while (!sub_1363b(&a_0._f1C[0/*1*/], v_E, 907.9979858398438, 3643.826416015625, 32.29242706298828, -173.04525756835938, 0)) {
        SYSTEM::WAIT(0);
    }
    if (sub_8dd4(a_0._f1C[0/*1*/])) {
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 0, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 1, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 2, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 3, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 4, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 5, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 6, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 7, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 8, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 9, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 10, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[0/*1*/], 11, 0, 0, 0);
        v_3/*{3}*/ = PED::GET_PED_BONE_COORDS(a_0._f1C[0/*1*/], v_7, 0.0, 0.0, 0.0);
        PED::SET_PED_NAME_DEBUG(a_0._f1C[0/*1*/], "RAMP:PED 0");
        sub_140a0(&a_0._f29[1/*1*/], v_10, v_3, 0.0);
        ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[1/*1*/], a_0._f1C[0/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[0/*1*/], v_7), v_B, v_8, 1, 1, 0, 0, 2, 1);
        OBJECT::SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(a_0._f29[1/*1*/], 1);
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f1C[0/*1*/], 1);
        PED::SET_PED_CONFIG_FLAG(a_0._f1C[0/*1*/], 208, 1);
        PED::SET_PED_RELATIONSHIP_GROUP_HASH(a_0._f1C[0/*1*/], ${player});
    }
    while (!sub_1363b(&a_0._f1C[1/*1*/], v_E, 909.3126220703125, 3643.506591796875, 32.2952003479, 153.0126953125, 0)) {
        SYSTEM::WAIT(0);
    }
    if (sub_8dd4(a_0._f1C[1/*1*/])) {
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 0, 1, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 1, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 2, 1, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 3, 1, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 4, 1, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 5, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 6, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 7, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 8, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 9, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 10, 0, 0, 0);
        PED::SET_PED_COMPONENT_VARIATION(a_0._f1C[1/*1*/], 11, 0, 0, 0);
        v_3/*{3}*/ = PED::GET_PED_BONE_COORDS(a_0._f1C[1/*1*/], v_7, 0.0, 0.0, 0.0);
        PED::SET_PED_NAME_DEBUG(a_0._f1C[1/*1*/], "RAMP:PED 1");
        sub_140a0(&a_0._f29[2/*1*/], v_10, v_3, 0.0);
        ENTITY::ATTACH_ENTITY_TO_ENTITY(a_0._f29[2/*1*/], a_0._f1C[1/*1*/], PED::GET_PED_BONE_INDEX(a_0._f1C[1/*1*/], v_7), v_B, v_8, 1, 1, 0, 0, 2, 1);
        OBJECT::SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(a_0._f29[2/*1*/], 1);
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f1C[1/*1*/], 1);
        PED::SET_PED_CONFIG_FLAG(a_0._f1C[1/*1*/], 208, 1);
        PED::SET_PED_RELATIONSHIP_GROUP_HASH(a_0._f1C[1/*1*/], ${player});
    }
    a_0._f29[3/*1*/] = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(909.388427734375, 3643.65234375, 31.699, 1.0, ${prop_table_03b_chr}, 1, 0, 1);
    if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[3/*1*/])) {
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[3/*1*/], 1);
    }
    a_0._f29[4/*1*/] = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(908.043701171875, 3643.681884765625, 31.7073, 1.0, ${prop_table_03b_chr}, 1, 0, 1);
    if (ENTITY::DOES_ENTITY_EXIST(a_0._f29[4/*1*/])) {
        ENTITY::FREEZE_ENTITY_POSITION(a_0._f29[4/*1*/], 1);
    }
    if (!PED::IS_SYNCHRONIZED_SCENE_RUNNING(a_0._f3B)) {
        a_0._f3B = PED::CREATE_SYNCHRONIZED_SCENE(910.13, 3643.74, 31.69, 0.0, 0.0, sub_13593(0.26), 2);
        if (sub_8dd4(a_0._f1C[0/*1*/])) {
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[0/*1*/], a_0._f3B, v_6, "redneck_idle_a", 8.0, -8.0, 513, 0, 0x447a0000, 0);
        }
        if (sub_8dd4(a_0._f1C[1/*1*/])) {
            AI::TASK_SYNCHRONIZED_SCENE(a_0._f1C[1/*1*/], a_0._f3B, v_6, "redneck_idle_b", 8.0, -8.0, 513, 0, 0x447a0000, 0);
        }
        PED::SET_SYNCHRONIZED_SCENE_LOOPED(a_0._f3B, 1);
    }
    if (!sub_eab9(&a_0._f29[0/*1*/], ${weapon_assaultrifle}, 907.52, 3644.32, 31.86, 164.89)) {
    } else { }
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_E);
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_F);
    a_0._f9/*"24"*/ = "TRVRAM_1";
    a_0._f1B = 0;
}

auto sub_14642(auto a_0) {
    if (!BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()) {
        return 1;
    }
    if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) {
        return 1;
    }
    if (sub_abdb(a_0)) {
        return 1;
    }
    return 0;
}

auto sub_1466f(auto a_0) {
    sub_737b(a_0, &v_3);
    v_23 = sub_bc88();
    if (v_23 == 145) {
        return 1;
    } else if (((v_23 != 1) && (v_23 != 0)) && (v_23 != 2)) {
        return 1;
    }
    if (!GAMEPLAY::IS_BIT_SET(v_3._f1A, v_23)) {
        return 1;
    }
    return 0;
}

auto sub_146c3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0 == 1) {
        if (sub_14728(a_0[0/*1*/], a_2, a_5, a_1)) {
            return 1;
        }
    } else { 
        for (v_8 = 0; v_8 < a_0; v_8 += 1) {
            if (sub_14728(a_0[v_8/*1*/], a_2, a_5, a_1)) {
                v_8 = a_0;
                return 1;
            }
        }
    }
    sub_14bf4("DETERMINE_RC_TO_LAUNCH - Unable to find mission to launch [TERMINATING]");
    return 0;
}

auto sub_14728(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = 0;
    sub_737b(a_0, &v_9);
    if (sub_147a6(v_9._f6, a_1, a_4, 0)) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 0)) {
            if (!GAMEPLAY::IS_BIT_SET(game_state._f4338[a_0/*6*/], 3)) {
                v_8 = 1;
            } else { }
        } else { }
        if (sub_afb3(a_0)) {
            v_8 = 1;
        }
    } else { }
    if (v_8 == 1) {
        a_5 = a_0;
        a_5._f1/*"32"*/ = v_9;
        return 1;
    }
    return 0;
}

auto sub_147a6(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (a_6 < 0.0) {
        a_6 = 0.0;
    }
    if (!a_7) {
        if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
            if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
                if (GAMEPLAY::ABSF(a_0._f2 - a_3._f2) <= a_6) {
                    return 1;
                }
            }
        }
    } else if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
        if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
            return 1;
        }
    }
    return 0;
}

auto sub_14821(auto a_0) {
    if ((a_0 == 146) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f63._f3A[a_0/*1*/];
}

void sub_1484e(auto a_0, auto a_1) {
    sub_e4e8(a_0);
    if (a_1) {
        sub_14bf4(" SCRIPT TERMINATING: Cleaning up entities in Launcher");
        sub_14946(a_0, 0, 0, 0);
    }
    sub_14910(&a_0._f30);
    if (l_121 != -1) {
        sub_14bf4("SCRIPT TERMINATING: Ending off-mission cutscene request");
        sub_e3c6(&l_121);
    }
    if (l_12D != 0) {
        if ((a_0 == 55) || (a_0 == 53)) {
            PED::REMOVE_SCENARIO_BLOCKING_AREA(l_12D, 0);
        }
    }
    if (CAM::IS_GAMEPLAY_HINT_ACTIVE()) {
        CAM::STOP_GAMEPLAY_HINT(0);
    }
    if (l_125) {
        if (sub_2da("RAMP_HELP_TRIG")) {
            UI::CLEAR_HELP(1);
            l_125 = 0;
        } else { }
    } else { }
    sub_148f6();
    sub_14bf4("SCRIPT TERMINATED");
    g_15A87 = 0;
    SCRIPT::TERMINATE_THIS_THREAD();
}

void sub_148f6() {
    sub_14bf4("Running end routines.");
    g_18956 -= 1;
}

auto sub_14910(auto a_0) {
    if (sub_99aa(a_0)) {
        if (STREAMING::HAS_ANIM_DICT_LOADED(a_0)) {
            STREAMING::REMOVE_ANIM_DICT(a_0);
            a_0 = "";
            a_0._f1 = "";
            return 1;
        }
    }
    return 0;
}

void sub_14946(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_14b13(a_0, a_1);
    sub_149f1(a_0, a_2);
    sub_14966(a_0, a_3);
}

void sub_14966(auto a_0, auto a_1) {
    sub_14978(&a_0._f29, a_1);
}

void sub_14978(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1) {
            sub_9cd3(&a_0[v_4/*1*/]);
        } else { 
            sub_149b6(&a_0[v_4/*1*/], 0);
        }
    }
}

void sub_149b6(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        if (!a_1) {
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(a_0);
        } else { 
            OBJECT::_MARK_OBJECT_FOR_DELETION(a_0);
        }
    }
}

void sub_149f1(auto a_0, auto a_1) {
    sub_14a03(&a_0._f23, a_1);
}

void sub_14a03(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1) {
            sub_14a77(&a_0[v_4/*1*/]);
        } else { 
            sub_14a40(&a_0[v_4/*1*/]);
        }
    }
}

void sub_14a40(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        ENTITY::IS_ENTITY_DEAD(a_0);
        if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(a_0, 1)) {
            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
        }
    }
}

void sub_14a77(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        if (sub_9f6b(a_0)) {
            if (ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0) && ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(a_0, 1)) {
                if (sub_8dd4(PLAYER::PLAYER_PED_ID())) {
                    if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                        ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                        return ;
                    }
                }
                VEHICLE::DELETE_VEHICLE(a_0);
            }
        } else { 
            if (sub_8dd4(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                    ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(a_0);
                    return ;
                }
            }
            VEHICLE::DELETE_VEHICLE(a_0);
        }
    }
}

void sub_14b13(auto a_0, auto a_1) {
    sub_14b25(&a_0._f1C, a_1);
}

void sub_14b25(auto a_0, auto a_1) {
    v_4 = 0;
    for (v_4 = 0; v_4 <= (a_0 - 1); v_4 += 1) {
        if (a_1 == 1) {
            sub_14bb5(&a_0[v_4/*1*/]);
        } else { 
            sub_14b66(&a_0[v_4/*1*/], 0, 1, 0);
        }
    }
}

void sub_14b66(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
            if (a_3 == 0) {
                AI::CLEAR_PED_SECONDARY_TASK(a_0);
            }
            PED::SET_PED_KEEP_TASK(a_0, a_1);
            if (a_2 == 1) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
            }
        }
        ENTITY::SET_PED_AS_NO_LONGER_NEEDED(a_0);
    }
}

void sub_14bb5(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
        }
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 1, 0);
        }
        PED::DELETE_PED(a_0);
    }
}

void sub_14bf4(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {}
}

void sub_14c06(auto a_0) {
    a_0 = -1;
    a_0._f1/*"32"*/ = "";
    a_0._fF = 12.0;
    a_0._f10 = 6;
    a_0._f19 = 0;
    a_0._f1A = 0;
    a_0._f1B = 0;
}

void sub_14c39() {
    sub_14bf4("Running start routines.");
    g_18956 += 1;
}