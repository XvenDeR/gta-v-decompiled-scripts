// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_12 = "NULL";
    l_15 = 0.0;
    l_19 = -0.0375;
    l_1A = 0.17;
    l_1E = 80.0;
    l_1F = 140.0;
    l_20 = 180.0;
    l_23 = 3;
    l_55 = -1;
    l_56 = -1;
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(19)) {
        sub_17cf();
    }
    if (!sub_1731()) {
        sub_17cf();
    }
    if (!sub_1711(l_52)) {
        sub_17cf();
    } else { 
        sub_1564();
        l_53 = GAMEPLAY::GET_GAME_TIMER();
        l_55 = sub_1506();
        l_54 = 0;
        sub_1419(1, &l_58);
    }
    while (1) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (!sub_1711(l_52)) {
                sub_17cf();
            }
            v_2/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
            v_5/*{3}*/ = ENTITY::GET_ENTITY_COORDS(l_52, 1);
            if (SYSTEM::VDIST2(v_2, v_5) >= (100.0 * 100.0)) {
                sub_17cf();
            }
            switch (l_57) {
            case 0:
                sub_11f6(v_5, v_2, 18000, 0x41a00000);
                if (sub_835(&l_52, 0)) {
                    sub_80d();
                    sub_6bd(0);
                    sub_42c(v_5, v_2);
                    STREAMING::REQUEST_ANIM_DICT(sub_421());
                    l_57 = 1;
                }
                break;
            case 1:
                if (sub_289(&l_52, &l_4F, &l_56)) {
                    l_57 = 2;
                }
                break;
            case 2:
                if ((!sub_256(l_52, 0x6ba30179)) && (!PED::IS_PED_FLEEING(l_52))) {
                    if (!ENTITY::IS_ENTITY_PLAYING_ANIM(l_52, sub_421(), sub_24c(), 3)) {
                        sub_1b3();
                    }
                } else { 
                    sub_17cf();
                }
                break;
            }
        }
        SYSTEM::WAIT(0);
    }
}

void sub_1b3() {
    if (sub_1711(l_52)) {
        sub_1e3(&l_52);
        AI::TASK_SMART_FLEE_PED(l_52, PLAYER::PLAYER_PED_ID(), 10000.0, -1, 0, 0);
        PED::SET_PED_KEEP_TASK(l_52, 1);
    }
}

void sub_1e3(auto a_0) {
    if (sub_1711(a_0)) {
        PED::SET_PED_FLEE_ATTRIBUTES(a_0, 2, 0);
        PED::SET_PED_FLEE_ATTRIBUTES(a_0, 64, 0);
        PED::SET_PED_FLEE_ATTRIBUTES(a_0, 128, 0);
        PED::SET_PED_FLEE_ATTRIBUTES(a_0, 8, 0);
        PED::SET_PED_FLEE_ATTRIBUTES(a_0, 1, 0);
        PED::SET_PED_FLEE_ATTRIBUTES(a_0, 32, 0);
        PED::SET_PED_COMBAT_ATTRIBUTES(a_0, 5, 0);
        PED::SET_PED_COMBAT_ATTRIBUTES(a_0, 17, 1);
        PED::SET_PED_CONFIG_FLAG(a_0, 118, 1);
    }
}

auto sub_24c() {
    return "female_Flee_Table_Left_Maude";
}

auto sub_256(auto a_0, auto a_1) {
    if (sub_1711(a_0)) {
        if ((AI::GET_SCRIPT_TASK_STATUS(a_0, a_1) == 1) || (AI::GET_SCRIPT_TASK_STATUS(a_0, a_1) == 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_289(auto a_0, auto a_1, auto a_2) {
    if (sub_1711(a_0)) {
        if (ENTITY::IS_ENTITY_PLAYING_ANIM(a_0, sub_416(), sub_40b(), 3)) {
            if ((!PED::IS_PED_RAGDOLL(a_0)) || AI::IS_PED_GETTING_UP(a_0)) {
                STREAMING::REQUEST_ANIM_DICT(sub_421());
                if (STREAMING::HAS_ANIM_DICT_LOADED(sub_421())) {
                    a_2 = PED::CREATE_SYNCHRONIZED_SCENE(2727.4, 4145.56, 43.68, 0.0, 0.0, 92.17, 2);
                    PED::SET_SYNCHRONIZED_SCENE_LOOPED(a_2, 0);
                    PED::_394B9CD12435C981(a_2, 0);
                    if (sub_256(a_0, 0x6a67a5cc)) {
                        ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(a_0, -1000.0, 1);
                    }
                    AI::TASK_SYNCHRONIZED_SCENE(a_0, a_2, sub_421(), sub_24c(), 1000.0, -4.0, 4626, 0, 0x447a0000, 0);
                    PED::_2208438012482A1A(a_0, 0, 0);
                    if (sub_3eb(a_1)) {
                        if (ENTITY::IS_ENTITY_PLAYING_ANIM(a_1, sub_416(), sub_3e0(), 3)) {
                            ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(a_1, -16.0, 0);
                        }
                        v_5 = 0;
                        v_5 += 16;
                        v_5 += 64;
                        v_5 += 512;
                        v_5 += 4096;
                        ENTITY::PLAY_SYNCHRONIZED_ENTITY_ANIM(a_1, a_2, sub_3d5(), sub_421(), 16.0, -4.0, v_5, 0x447a0000);
                    }
                    return 1;
                } else { }
            } else { 
                return 1;
            }
        } else { 
            return 1;
        }
    }
    return 0;
}

auto sub_3d5() {
    return "Female_Flee_Table_Left_Maude_Chair";
}

auto sub_3e0() {
    return "base_chair";
}

auto sub_3eb(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_40b() {
    return "base";
}

auto sub_416() {
    return "special_ped@maude@base";
}

auto sub_421() {
    return "special_ped@maude@exit_flee";
}

void sub_42c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (sub_1711(l_52)) {
        if (!AUDIO::IS_AMBIENT_SPEECH_PLAYING(l_52)) {
            if (SYSTEM::VDIST2(a_3, a_0) < (35.0 * 35.0)) {
                sub_472(&l_52, "GENERIC_FRIGHTENED_HIGH", "MAUDE", 3);
            }
        }
    } else { }
}

void sub_472(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_1711(a_0)) {
        v_6 = AUDIO::IS_AMBIENT_SPEECH_DISABLED(a_0);
        if (v_6) {
            AUDIO::STOP_PED_SPEAKING(a_0, 0);
        }
        sub_4b4(a_0, a_1, a_2, a_3);
        if (v_6) {
            AUDIO::STOP_PED_SPEAKING(a_0, 1);
        }
    }
}

void sub_4b4(auto a_0, auto a_1, auto a_2, auto a_3) {
    AUDIO::_PLAY_AMBIENT_SPEECH_WITH_VOICE(a_0, a_1, a_2, sub_4cd(a_3), 0);
}

auto sub_4cd(auto a_0) {
    switch (a_0) {
    case 0:
        return "SPEECH_PARAMS_STANDARD";
    case 1:
        return "SPEECH_PARAMS_ALLOW_REPEAT";
    case 2:
        return "SPEECH_PARAMS_BEAT";
    case 3:
        return "SPEECH_PARAMS_FORCE";
    case 4:
        return "SPEECH_PARAMS_FORCE_FRONTEND";
    case 5:
        return "SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND";
    case 6:
        return "SPEECH_PARAMS_FORCE_NORMAL";
    case 7:
        return "SPEECH_PARAMS_FORCE_NORMAL_CLEAR";
    case 8:
        return "SPEECH_PARAMS_FORCE_NORMAL_CRITICAL";
    case 9:
        return "SPEECH_PARAMS_FORCE_SHOUTED";
    case 10:
        return "SPEECH_PARAMS_FORCE_SHOUTED_CLEAR";
    case 11:
        return "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL";
    case 12:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY";
    case 13:
        return "SPEECH_PARAMS_MEGAPHONE";
    case 14:
        return "SPEECH_PARAMS_HELI";
    case 15:
        return "SPEECH_PARAMS_FORCE_MEGAPHONE";
    case 16:
        return "SPEECH_PARAMS_FORCE_HELI";
    case 17:
        return "SPEECH_PARAMS_INTERRUPT";
    case 18:
        return "SPEECH_PARAMS_INTERRUPT_SHOUTED";
    case 19:
        return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR";
    case 20:
        return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL";
    case 21:
        return "SPEECH_PARAMS_INTERRUPT_NO_FORCE";
    case 22:
        return "SPEECH_PARAMS_INTERRUPT_FRONTEND";
    case 23:
        return "SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND";
    case 24:
        return "SPEECH_PARAMS_ADD_BLIP";
    case 25:
        return "SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT";
    case 26:
        return "SPEECH_PARAMS_ADD_BLIP_FORCE";
    case 27:
        return "SPEECH_PARAMS_ADD_BLIP_SHOUTED";
    case 28:
        return "SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE";
    case 29:
        return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT";
    case 30:
        return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE";
    case 31:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED";
    case 32:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR";
    case 33:
        return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL";
    case 34:
        return "SPEECH_PARAMS_SHOUTED";
    case 35:
        return "SPEECH_PARAMS_SHOUTED_CLEAR";
    case 36:
        return "SPEECH_PARAMS_SHOUTED_CRITICAL";
    }
    v_3 = 0;
    return v_3;
}

void sub_6bd(auto a_0) {
    if (sub_7eb()) {
        v_3/*{6}*/ = sub_7c7();
        v_9 = sub_75a();
        if (GAMEPLAY::ARE_STRINGS_EQUAL(&v_3, v_9)) {
            if (a_0) {
                sub_726();
            } else { 
                sub_6f5();
            }
        }
    }
}

void sub_6f5() {
    g_38F2 = 0;
    sub_705();
}

void sub_705() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
    }
}

void sub_726() {
    g_38F2 = 0;
    sub_736();
}

void sub_736() {
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::RESTART_SCRIPTED_CONVERSATION();
        g_4153 = 0;
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

auto sub_75a() {
    if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 3)) {
        return "BB4_loiter";
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 2)) {
        return "BB3_loiter";
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 1)) {
        return "BB2_loiter";
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 0)) {
        return "BB1_loiter";
    }
    return "MAUDE_loiter";
}

auto<6> sub_7c7() {
    v_2/*"24"*/ = "NULL";
    if (g_3D60 == 4) {
        return g_3BE3;
    } else { 
        return v_2;
    }
}

auto sub_7eb() {
    if ((g_3D60 != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_80d() {
    if (ENTITY::DOES_ENTITY_EXIST(l_51)) {
        ENTITY::FREEZE_ENTITY_POSITION(l_51, 0);
    }
    if (ENTITY::DOES_ENTITY_EXIST(l_50)) {
        ENTITY::FREEZE_ENTITY_POSITION(l_50, 0);
    }
}

auto sub_835(auto a_0, auto a_1) {
    if (sub_1711(a_0)) {
        if ((ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(a_0) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(a_0)) || ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(a_0)) {
            return 1;
        }
        if (PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), a_0)) {
                return 1;
            }
            if (ENTITY::DOES_ENTITY_EXIST(l_4F)) {
                if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), l_4F)) {
                    return 1;
                }
            }
            if (ENTITY::DOES_ENTITY_EXIST(l_50)) {
                if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), l_50)) {
                    return 1;
                }
            }
            if (ENTITY::DOES_ENTITY_EXIST(l_51)) {
                if (ENTITY::IS_ENTITY_TOUCHING_ENTITY(PLAYER::PLAYER_PED_ID(), l_51)) {
                    return 1;
                }
            }
        }
        if (PED::HAS_PED_RECEIVED_EVENT(a_0, 60)) {
            return 1;
        }
        if (PED::IS_PED_RAGDOLL(a_0)) {
            if (ENTITY::IS_ENTITY_AT_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), 3.0, 3.0, 3.0, 0, 1, 0)) {
                return 1;
            }
        }
        if (PED::HAS_PED_RECEIVED_EVENT(a_0, 50)) {
            return 1;
        }
        if (sub_d59(a_0, 0x432a0000)) {
            return 1;
        }
        if (sub_987(a_0, 1, 0, 0, 0)) {
            return 1;
        }
        if (FIRE::IS_EXPLOSION_IN_SPHERE(-1, ENTITY::GET_ENTITY_COORDS(a_0, 1), 15.0)) {
            return 1;
        }
        if (PED::HAS_PED_RECEIVED_EVENT(a_0, 72)) {
            return 1;
        }
        if (a_1) {
            if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) {
                return 1;
            }
        }
    } else { 
        return 1;
    }
    return 0;
}

auto sub_987(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = 8.0;
    v_8 = 15.0;
    if (a_1 == 0) {
        v_7 = 1.86;
        v_8 = 1.86;
    }
    if (a_2) {
        v_7 = 2.0;
    }
    if (sub_3eb(PLAYER::PLAYER_PED_ID()) && sub_3eb(a_0)) {
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_9, 1);
        if (v_9 == ${weapon_petrolcan}) {
            v_7 = 3.0;
            v_8 = 3.0;
        }
        if (!a_2) {
            if (sub_d11(a_0, a_1, v_7, v_8)) {
                return 1;
            }
            if (sub_a82(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        } else { 
            if (WEAPON::IS_PED_CURRENT_WEAPON_SILENCED(PLAYER::PLAYER_PED_ID())) {
                if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
                    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), v_7, 1)) {
                        return 1;
                    }
                }
            } else { 
                if (a_1) {
                    v_7 = 1.86;
                    v_8 = 1.86;
                }
                if (sub_d11(a_0, a_1, v_7, v_8)) {
                    return 1;
                }
            }
            if (sub_a82(a_0, v_8, a_3, a_4)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_a82(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
    v_9/*{3}*/ = v_6;
    v_6 -= a_1;
    v_6._f1 -= a_1;
    v_6._f2 -= a_1;
    v_9 += a_1;
    v_9._f1 += a_1;
    v_9._f2 += a_1;
    if (a_2) {
        if (((GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_grenade}, a_1, 1) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_molotov}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_smokegrenade}, a_1, 1)) || GAMEPLAY::_34318593248C8FB2(ENTITY::GET_ENTITY_COORDS(a_0, 1), ${weapon_stickybomb}, 5.0, 1)) {
            if (a_3) {
                if (sub_b8e(a_0, a_1)) {
                    return 1;
                } else { 
                    return 0;
                }
            }
            return 1;
        }
    } else { 
        if (a_3) {
            if (sub_b8e(a_0, a_1)) {
                return 1;
            } else { 
                return 0;
            }
        }
        if (GAMEPLAY::IS_PROJECTILE_IN_AREA(v_6, v_9, 1)) {
            return 1;
        }
    }
    return 0;
}

auto sub_b8e(auto a_0, auto a_1) {
    if ((((GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_grenade}, a_1, &v_5, &v_4, 0) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_smokegrenade}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_bzgas}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_stickybomb}, a_1, &v_5, &v_4, 0)) || GAMEPLAY::_82FDE6A57EE4EE44(a_0, ${weapon_molotov}, a_1, &v_5, &v_4, 0)) {
        if (sub_c23(a_0, v_5, 90.0, 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_c23(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8/*{3}*/ = sub_cd2(a_1 - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_4 < 0.1) || (a_4 > 360.0)) {
        return 1;
    }
    if (a_5 == 0) {
        v_B/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_B/*{3}*/ = sub_cd2(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_E = sub_cb1(v_B, v_8);
    if (v_E <= SYSTEM::COS(a_4 / 2.0)) {
        return 0;
    }
    return 1;
}

auto sub_cb1(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return ((a_0 * a_3) + (a_0._f1 * a_3._f1)) + (a_0._f2 * a_3._f2);
}

auto<3> sub_cd2(auto a_0, auto a_1, auto a_2) {
    v_5 = SYSTEM::VMAG(a_0);
    if (v_5 != 0.0) {
        v_6 = 1.0 / v_5;
        a_0 *= (vector)v_6;
    } else { 
        a_0 = 0.0;
        a_0._f1 = 0.0;
        a_0._f2 = 0.0;
    }
    return a_0;
}

auto sub_d11(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1) {
        if (PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, a_3, a_3, a_3, 0, 1, 0)) {
                return 1;
            }
        }
    }
    if (GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 1), a_2, 1)) {
        return 1;
    }
    return 0;
}

auto sub_d59(auto a_0, auto a_1) {
    if (sub_3eb(PLAYER::PLAYER_PED_ID()) && sub_3eb(a_0)) {
        if (sub_11ce(a_0) || PLAYER::IS_PLAYER_TARGETTING_ENTITY(PLAYER::PLAYER_ID(), a_0)) {
            if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
                v_4 = 40.0;
            } else { 
                v_4 = 3.0;
            }
            if (ENTITY::IS_ENTITY_AT_ENTITY(PLAYER::PLAYER_PED_ID(), a_0, v_4, v_4, v_4, 0, 1, 0)) {
                if (sub_dcf(a_0, a_1)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_dcf(auto a_0, auto a_1) {
    return sub_de7(a_0, PLAYER::PLAYER_PED_ID(), a_1, 1, 250, 7);
}

auto sub_de7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_C = sub_118f(a_0, a_1);
    if ((!sub_3eb(a_0)) || (!sub_3eb(a_1))) {
        if (v_C != -1) {
            sub_1174(&l_25[v_C/*4*/]);
        }
        return 0;
    }
    if (!sub_10e3(a_0, a_1, a_2, a_3)) {
        return 0;
    }
    if (v_C == -1) {
        v_C = sub_1099();
        if (v_C == -1) {
            return 0;
        }
        l_25[v_C/*4*/]._f1 = a_0;
        l_25[v_C/*4*/]._f2 = a_1;
    }
    v_9/*{3}*/ = PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    v_8 = sub_ea8(&l_25[v_C/*4*/], v_9, a_1, &l_25[v_C/*4*/]._f3, a_0, a_5);
    return v_8 || ((GAMEPLAY::GET_GAME_TIMER() - l_25[v_C/*4*/]._f3) < a_4);
}

auto sub_ea8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_11 = 0;
    if (!sub_3eb(a_4)) {
        a_0 = 0;
        return 0;
    }
    if (a_0 == 0) {
        v_B/*{3}*/ = sub_fd4(a_4, a_7);
        a_0 = WORLDPROBE::_7EE9F5D83DD4F90E(a_1, v_B + ((v_B - a_1) * ((vector)(0.1))), 511, a_6, 7);
        return 0;
    }
    v_12 = WORLDPROBE::_GET_RAYCAST_RESULT(a_0, &v_A, &v_B, &v_E, &v_11);
    if (v_12 == 0) {
        a_0 = 0;
        return 0;
    } else if (v_12 == 1) {
        return 0;
    }
    a_0 = 0;
    if (ENTITY::IS_ENTITY_A_PED(v_11)) {
        sub_3eb(v_11);
        if (ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(v_11) == a_4) {
            if (l_4E) {
                GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
            }
            a_5 = GAMEPLAY::GET_GAME_TIMER();
            return 1;
        }
        return 0;
    }
    if (ENTITY::IS_ENTITY_A_VEHICLE(v_11)) {
        sub_3eb(v_11);
        if (PED::IS_PED_IN_ANY_VEHICLE(a_4, 0)) {
            if (ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_11) == PED::GET_VEHICLE_PED_IS_IN(a_4, 0)) {
                if (l_4E) {
                    GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(a_1, ENTITY::GET_ENTITY_COORDS(a_4, 1), 255, 0, 0, 255, 0, 0, 255, 255);
                }
                a_5 = GAMEPLAY::GET_GAME_TIMER();
                return 1;
            }
        }
        return 0;
    }
    return 0;
}

auto<3> sub_fd4(auto a_0, auto a_1) {
    if (a_1 == 7) {
        v_4 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 7);
        a_1 = v_4;
    }
    if (a_1 == 0) {
        return ENTITY::GET_ENTITY_COORDS(a_0, 1);
    } else if (a_1 == 1) {
        return PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0);
    } else if (a_1 == 2) {
        return PED::GET_PED_BONE_COORDS(a_0, 39317, 0.0, 0.0, 0.0);
    } else if (a_1 == 3) {
        return PED::GET_PED_BONE_COORDS(a_0, 18905, 0.0, 0.0, 0.0);
    } else if (a_1 == 4) {
        return PED::GET_PED_BONE_COORDS(a_0, 57005, 0.0, 0.0, 0.0);
    } else if (a_1 == 5) {
        return PED::GET_PED_BONE_COORDS(a_0, 63931, 0.0, 0.0, 0.0);
    } else if (a_1 == 6) {
        return PED::GET_PED_BONE_COORDS(a_0, 36864, 0.0, 0.0, 0.0);
    }
    return ENTITY::GET_ENTITY_COORDS(a_0, 1);
}

auto sub_1099() {
    for (v_2 = 0; v_2 < l_25; v_2 += 1) {
        if (((l_25[v_2/*4*/] == 0) && (l_25[v_2/*4*/]._f1 == 0)) && (l_25[v_2/*4*/]._f2 == 0)) {
            return v_2;
        }
    }
    return -1;
}

auto sub_10e3(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{3}*/ = sub_cd2(ENTITY::GET_ENTITY_COORDS(a_1, 1) - ENTITY::GET_ENTITY_COORDS(a_0, 1));
    if ((a_2 < 0.1) || (a_2 > 360.0)) {
        return 1;
    }
    if (a_3 == 0) {
        v_9/*{3}*/ = ENTITY::GET_ENTITY_FORWARD_VECTOR(a_0);
    } else { 
        v_9/*{3}*/ = sub_cd2(PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 5.0, 0.0) - PED::GET_PED_BONE_COORDS(a_0, 31086, 0.0, 0.0, 0.0));
    }
    v_C = sub_cb1(v_9, v_6);
    if (v_C <= SYSTEM::COS(a_2 / 2.0)) {
        return 0;
    }
    return 1;
}

void sub_1174(auto a_0) {
    a_0 = 0;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0;
}

auto sub_118f(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < l_25; v_4 += 1) {
        if ((l_25[v_4/*4*/]._f1 == a_0) && (l_25[v_4/*4*/]._f2 == a_1)) {
            return v_4;
        }
    }
    return -1;
}

auto sub_11ce(auto a_0) {
    if (PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), a_0) && WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 6)) {
        return 1;
    }
    return 0;
}

auto sub_11f6(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (l_54 < l_55) {
        if (!sub_7eb()) {
            if (SYSTEM::VDIST2(a_3, a_0) < (a_7 * a_7)) {
                if ((GAMEPLAY::GET_GAME_TIMER() - l_53) > (a_6 + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2000))) {
                    asm .vardef<F> 10, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":16}]}]"
                    sub_137e(&v_A, 3, l_52, "MAUDE", 0, 1);
                    v_AF = sub_1311();
                    v_B0 = sub_75a();
                    sub_1280(&v_A, v_AF, v_B0, 7, 0, 0);
                    l_53 = GAMEPLAY::GET_GAME_TIMER();
                    l_54 += 1;
                    return 1;
                }
            }
        } else { 
            l_53 = GAMEPLAY::GET_GAME_TIMER();
        }
    }
    return 0;
}

void sub_1280(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_12bb(a_0, 145, a_1, a_4, a_5, 0);
    if (a_3 > 7) {
        if (a_3 < 12) {
            a_3 = 7;
        }
    }
    GAMEPLAY::SET_BIT(&g_38F2, 0);
    g_3D63 = a_3;
    g_3D56/*"24"*/ = a_2;
}

void sub_12bb(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B3E/*{165}*/ = a_0;
    g_63F = a_1;
    g_3DA6/*"24"*/ = a_2;
    g_413D = a_5;
    if (a_3 == 0) {
        g_413B = 1;
        g_4139 = 0;
    } else { 
        g_413B = 0;
        g_4139 = 1;
    }
    if (a_4 == 0) {
        g_413C = 1;
        g_413A = 0;
    } else { 
        g_413C = 0;
        g_413A = 1;
    }
}

auto sub_1311() {
    if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 3)) {
        return "BB4AUD";
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 2)) {
        return "BB3AUD";
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 1)) {
        return "BB2AUD";
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 0)) {
        return "BB1AUD";
    }
    return "MAUDEAU";
}

void sub_137e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!is_in_transition) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

void sub_1419(auto a_0, auto a_1) {
    v_4/*{3}*/ = {2711.19775390625, 4134.42529296875, 32.90168 };
    v_7/*{3}*/ = {2739.9814453125, 4155.220703125, 50.28858947753906 };
    if (a_0) {
        a_1 = PED::ADD_SCENARIO_BLOCKING_AREA(v_4, v_7, 0, 1, 1, 1);
        PED::SET_PED_NON_CREATION_AREA(v_4, v_7);
        VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(v_4, v_7, 0, 1);
        VEHICLE::REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(v_4, v_7, 0);
        PATHFIND::SET_ROADS_IN_AREA(2697.222412109375, 4119.8935546875, 42.79106903076172, 2746.03955078125, 4162.9736328125, 43.6273193359375, 0, 1);
        GAMEPLAY::CLEAR_AREA(2728.332763671875, 4144.77783203125, 43.29291915893555, 7.5, 1, 0, 0, 0);
    } else { 
        PED::REMOVE_SCENARIO_BLOCKING_AREA(a_1, 0);
        PED::CLEAR_PED_NON_CREATION_AREA();
        VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(v_4, v_7, 1, 1);
        PATHFIND::SET_ROADS_BACK_TO_ORIGINAL(2697.222412109375, 4119.8935546875, 42.79106903076172, 2746.03955078125, 4162.9736328125, 43.6273193359375, 1);
    }
}

auto sub_1506() {
    if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 3)) {
        return 4;
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 2)) {
        return 4;
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 1)) {
        return 4;
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f730F, 0)) {
        return 3;
    }
    return 4;
}

void sub_1564() {
    if (sub_1711(l_52)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(l_52)) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(l_52, 1, 0);
        }
        PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_52, 1);
        PED::SET_PED_MONEY(l_52, 0);
        PED::SET_PED_CAN_BE_TARGETTED(l_52, 0);
        PED::SET_PED_RELATIONSHIP_GROUP_HASH(l_52, ${player});
        AI::SET_PED_PATH_CAN_USE_CLIMBOVERS(l_52, 0);
        AI::SET_PED_PATH_CAN_DROP_FROM_HEIGHT(l_52, 0);
        PED::SET_PED_CONFIG_FLAG(l_52, 118, 0);
        v_2/*{3}*/ = {2728.33, 4145.6, 43.89 };
        if (OBJECT::DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(v_2, 10.0, ${prop_table_03b}, 0)) {
            l_50 = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(v_2, 10.0, ${prop_table_03b}, 1, 0, 1);
            if (sub_3eb(l_50)) {
                ENTITY::SET_ENTITY_COORDS(l_50, 2727.4, 4145.56, 43.68, 1, 0, 0, 1);
                ENTITY::SET_ENTITY_HEADING(l_50, 92.17);
                ENTITY::FREEZE_ENTITY_POSITION(l_50, 1);
            }
        }
        if (OBJECT::DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(v_2, 10.0, ${prop_laptop_01a}, 0)) {
            l_51 = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(v_2, 10.0, ${prop_laptop_01a}, 0, 0, 1);
            if (sub_3eb(l_51)) {
                if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(l_51)) {
                    ENTITY::SET_ENTITY_AS_MISSION_ENTITY(l_51, 1, 0);
                }
                ENTITY::SET_ENTITY_COORDS(l_51, 2727.68603515625, 4145.71484375, 44.08, 1, 0, 0, 1);
                ENTITY::SET_ENTITY_HEADING(l_51, 71.0);
                ENTITY::FREEZE_ENTITY_POSITION(l_51, 1);
            }
        }
        if (OBJECT::DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(v_2, 10.0, ${prop_table_03_chr}, 0)) {
            l_4F = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(v_2, 10.0, ${prop_table_03_chr}, 0, 0, 1);
            if (sub_3eb(l_4F)) {
                if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(l_4F)) {
                    ENTITY::SET_ENTITY_AS_MISSION_ENTITY(l_4F, 1, 0);
                }
                ENTITY::SET_ENTITY_COORDS(l_4F, 2728.35, 4145.58984375, 43.3, 1, 0, 0, 1);
                ENTITY::SET_ENTITY_HEADING(l_4F, 91.28);
            }
        }
    }
}

auto sub_1711(auto a_0) {
    if (sub_3eb(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_1731() {
    asm .vardef<F> 4, "[{\"offset\":0,\"value\":32}]"
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        v_2 = PED::GET_PED_NEARBY_PEDS(PLAYER::PLAYER_PED_ID(), &v_4, -1);
        for (v_3 = 0; v_3 < v_2; v_3 += 1) {
            if (sub_1711(v_4[v_3/*1*/])) {
                if (ENTITY::GET_ENTITY_MODEL(v_4[v_3/*1*/]) == sub_1798(62)) {
                    l_52 = v_4[v_3/*1*/];
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_1798(auto a_0) {
    if (!sub_17c3(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

auto sub_17c3(auto a_0) {
    return a_0 < 3;
}

void sub_17cf() {
    sub_1419(0, &l_58);
    if (sub_3eb(l_51)) {
        ENTITY::FREEZE_ENTITY_POSITION(l_51, 0);
    }
    sub_1903(&l_51, 0);
    if (sub_3eb(l_50)) {
        ENTITY::FREEZE_ENTITY_POSITION(l_50, 0);
    }
    sub_1903(&l_50, 0);
    if (sub_3eb(l_4F)) {
        ENTITY::FREEZE_ENTITY_POSITION(l_4F, 0);
        if (ENTITY::IS_ENTITY_PLAYING_ANIM(l_4F, "special_ped@maude@base", "base_chair", 3)) {
            ENTITY::STOP_ENTITY_ANIM(l_4F, "base_chair", "special_ped@maude@base", -1000.0);
            ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(l_4F, -1000.0, 1);
        } else if (ENTITY::IS_ENTITY_PLAYING_ANIM(l_4F, sub_421(), "Female_Flee_Table_Left_Maude_Chair", 3)) {
            ENTITY::STOP_ENTITY_ANIM(l_4F, "Female_Flee_Table_Left_Maude_Chair", sub_421(), -1000.0);
            ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(l_4F, -1000.0, 1);
        }
    }
    sub_1903(&l_4F, 0);
    if (sub_1711(l_52)) {
        PED::SET_PED_KEEP_TASK(l_52, 1);
        PED::SET_PED_CONFIG_FLAG(l_52, 118, 1);
    }
    sub_18b4(&l_52, 1, 0, 1);
    STREAMING::REMOVE_ANIM_DICT(sub_421());
    SCRIPT::TERMINATE_THIS_THREAD();
}

void sub_18b4(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(a_0, 0);
            if (a_3 == 0) {
                AI::CLEAR_PED_SECONDARY_TASK(a_0);
            }
            PED::SET_PED_KEEP_TASK(a_0, a_1);
            if (a_2 == 1) {
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
            }
        }
        ENTITY::SET_PED_AS_NO_LONGER_NEEDED(a_0);
    }
}

void sub_1903(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        if (!a_1) {
            ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(a_0);
        } else { 
            OBJECT::_MARK_OBJECT_FOR_DELETION(a_0);
        }
    }
}