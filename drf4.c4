// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_17 = "NULL";
    l_18 = 0.0;
    l_1C = -0.0375;
    l_1D = 0.17;
    l_1F = 3;
    l_22 = 80.0;
    l_23 = 140.0;
    l_24 = 180.0;
    l_2A = 1;
    l_2B = 65;
    l_2C = 49;
    l_2D = 64;
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(67)) {
        sub_4b4d();
        sub_49eb();
    }
    l_46 = sub_49e2();
    sub_48ff(&l_31, l_46);
    v_3 = sub_48f0(0) < sub_4895(l_46);
    while (1) {
        SYSTEM::WAIT(0);
        switch (l_30) {
        case 0:
            if (v_3) {
                if (sub_4723(&l_4A, &l_14F, &l_20C, &l_4ED)) {
                    sub_46ee(&l_EF, &l_14F, l_4ED);
                    sub_46ee(&l_11F, &l_20C, l_4ED);
                    v_4 = 1;
                }
            } else { 
                sub_2f10(&l_4A, &l_14F, &l_20C, &l_4ED, &l_301, &l_36E, &l_4EE, &l_413, &l_480, &l_4EF, &l_31, l_46);
                g_1575C = 0;
                sub_46ee(&l_EF, &l_14F, l_4ED);
                sub_46ee(&l_11F, &l_20C, l_4ED);
                sub_46ee(&l_2C9, &l_301, l_4EE);
                sub_46ee(&l_2E5, &l_36E, l_4EE);
                sub_46ee(&l_3DB, &l_413, l_4EF);
                sub_46ee(&l_3F7, &l_480, l_4EF);
                v_5 = 0;
            }
            l_30 = 1;
            break;
        case 1:
            if (v_3) {
                if (v_4) {
                    sub_2ed2(l_4ED, &l_4A, 36, "DrfAud", &l_EF, &l_11F, 9, 1, 0, 0, 0);
                    l_30 = 3;
                } else { 
                    l_30 = 2;
                }
            } else if (sub_277d(l_4ED, &l_4A, 36, "DrfAud", &l_EF, &l_11F, "SHRINK_CELL_Q", 9, 1, 0, 0, 0)) {
                sub_26e8(l_4EE, l_4EF, &l_2C9, &l_2E5, &l_3DB, &l_3F7);
                l_30 = 3;
            }
            break;
        case 2:
            if (!MOBILE::CAN_PHONE_BE_SEEN_ON_SCREEN()) {
                while (!UI::HAS_ADDITIONAL_TEXT_LOADED(0)) {
                    SYSTEM::WAIT(0);
                }
                sub_26d1("SHRINK_BROKE", -1);
                l_30 = 5;
            }
            break;
        case 3:
            if (AUDIO::GET_CURRENT_SCRIPTED_CONVERSATION_LINE() > v_2) {
                v_2 = AUDIO::GET_CURRENT_SCRIPTED_CONVERSATION_LINE();
            }
            if (sub_26a7()) {
                sub_2652(&l_47);
                v_5 = 1;
                v_2 = -1;
                if (sub_2555(&l_47, 30.0)) {
                    sub_2532(1);
                }
            }
            if (PED::IS_PED_JUMPING_OUT_OF_VEHICLE(PLAYER::PLAYER_PED_ID()) || ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                sub_23cd(0);
            }
            if (sub_23b6()) {
                if (((!v_3) && v_5) && (((sub_49e2() == 2) && (v_2 >= 8)) || ((sub_49e2() == 3) && (v_2 >= 10)))) {
                    l_30 = 4;
                } else { 
                    if (v_3) {
                        while (!UI::HAS_ADDITIONAL_TEXT_LOADED(0)) {
                            SYSTEM::WAIT(0);
                        }
                        sub_26d1("SHRINK_BROKE", -1);
                    }
                    l_30 = 5;
                }
            }
            break;
        case 4:
            sub_1264(sub_222d(), 24, sub_4895(l_46));
            sub_1150(0, 0);
            sub_49eb();
            break;
        case 5:
            if ((!v_3) || (!sub_113d("SHRINK_BROKE"))) {
                sub_316(0);
                sub_49eb();
            }
            break;
        }
    }
}

void sub_316(auto a_0) {
    if (game_state._f1E27 || sub_1112(0)) {
        v_3 = sub_10dd();
        if (!sub_35b(v_3)) {
            return ;
        }
        GAMEPLAY::SET_BIT(&g_1410F[v_3/*5*/]._f1, 5);
        g_16406 = a_0;
    }
}

auto sub_35b(auto a_0) {
    sub_ff6();
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        PLAYER::START_FIRING_AMNESTY(5000);
    }
    v_3 = g_1410F[a_0/*5*/];
    v_4 = g_10FD2._f6D[v_3/*4*/];
    sub_fb8(v_4, 1);
    PLAYER::_C9A763D8FE87436A(PLAYER::PLAYER_ID());
    PLAYER::SPECIAL_ABILITY_DEACTIVATE(PLAYER::PLAYER_ID());
    sub_472(&game_state._f6EA._f21B, v_4);
    if (g_14E6E == g_16407) {
        game_state._f1E27._f14A[v_4/*6*/]._f1 += 1;
    }
    if (!GAMEPLAY::IS_BIT_SET(g_14133[v_4/*34*/]._fF, 1)) {
        if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            GAMEPLAY::SET_FADE_IN_AFTER_DEATH_ARREST(0);
        }
    }
    game_state._f1E27._f14A[v_4/*6*/]._f2 += 1;
    g_14E6E = g_16407;
    if (a_0 == -1) {
        if (game_state._f1E27) {}
        return 0;
    }
    if (GAMEPLAY::IS_BIT_SET(g_1410F[a_0/*5*/]._f1, 4)) {
        return 0;
    }
    if (GAMEPLAY::IS_BIT_SET(g_1410F[a_0/*5*/]._f1, 5)) {
        return 0;
    }
    return 1;
}

void sub_472(auto a_0, auto a_1) {
    if (a_1 == 94) {
        return ;
    }
    for (v_4 = 0; v_4 < 3; v_4 += 1) {
        v_5 = game_state._f430F[v_4/*1*/];
        if (((((v_5 == 8) || (v_5 == 9)) || (v_5 == 10)) || ((((v_5 == 11) || (v_5 == 34)) || (v_5 == 72)) || (v_5 == 73))) && (!GAMEPLAY::IS_BIT_SET(game_state._f1E27._f63._fDB[0/*1*/], 9))) {
        } else { 
            v_6/*{3}*/ = {0.0, 0.0, 0.0 };
            v_9 = 0.0;
            if (!sub_649(game_state._f430F[v_4/*1*/], &v_6, &v_9)) {
                game_state._f430F[v_4/*1*/] = 318;
                sub_63b(&a_0._f5F4[v_4/*1*/]);
                a_0._f5F8[v_4/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
                a_0._f602[v_4/*1*/] = 0.0;
                a_0._f606[v_4/*1*/] = 0;
                a_0._f60A[v_4/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
                a_0._f614[v_4/*1*/] = 0;
                g_15AFD[v_4/*29*/]/*{3}*/ = {0.0, 0.0, 0.0 };
                g_15AFD[v_4/*29*/]._f9 = 0.0;
                g_15AFD[v_4/*29*/]._fC = 0.0;
                g_15AFD[v_4/*29*/]._f3/*{3}*/ = {0.0, 0.0, 0.0 };
                g_15AFD[v_4/*29*/]._fA = 0.0;
                g_15AFD[v_4/*29*/]._fD = 0.0;
                g_15AFD[v_4/*29*/]._f6/*{3}*/ = {0.0, 0.0, 0.0 };
                g_15AFD[v_4/*29*/]._fB = 0.0;
                g_15AFD[v_4/*29*/]._fE = 0.0;
                g_15AFD[v_4/*29*/]._f11/*{3}*/ = {0.0, 0.0, 0.0 };
                g_15AFD[v_4/*29*/]._f1A = 0.0;
                g_15AFD[v_4/*29*/]._f14/*{3}*/ = {0.0, 0.0, 0.0 };
                g_15AFD[v_4/*29*/]._f1B = 0.0;
                g_15AFD[v_4/*29*/]._f17/*{3}*/ = {0.0, 0.0, 0.0 };
                g_15AFD[v_4/*29*/]._f1C = 0.0;
            }
        }
    }
}

void sub_63b(auto a_0) {
    a_0 = -15;
}

auto sub_649(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case 11:
        a_1/*{3}*/ = {115.15689849853516, -1286.6839599609375, 28.2612991333 };
        a_2 = 111.0;
        return 1;
        break;
    case 8:
        a_1/*{3}*/ = {-90.00890350341797, -1324.1947021484375, 28.32029914855957 };
        a_2 = 194.18870544433594;
        return 1;
        break;
    case 9:
        return sub_649(8, a_1, a_2);
        break;
    case 10:
        return sub_649(8, a_1, a_2);
        break;
    case 13:
        a_1/*{3}*/ = {-807.2979125976562, -48.4, 36.817298889160156 };
        a_2 = 201.63279724121094;
        return 1;
        break;
    case 14:
        a_1/*{3}*/ = {1432.3402099609375, -1887.3831787109375, 70.57679748535156 };
        a_2 = 350.0509033203125;
        return 1;
        break;
    case 15:
        a_1/*{3}*/ = {1666.2039794921875, 1967.2503662109375, 143.32130432128906 };
        a_2 = 0.7896;
        return 1;
        break;
    case 12:
        a_1/*{3}*/ = {-1440.219970703125, 127.02, 50.0 };
        a_2 = 42.0;
        return 1;
        break;
    case 16:
        a_1/*{3}*/ = {135.05499267578125, -1759.6396484375, 27.8957 };
        a_2 = -129.0;
        return 1;
        break;
    case 17:
        a_1/*{3}*/ = {687.69921875, -1744.0299072265625, 28.3624 };
        a_2 = 267.1408996582031;
        return 1;
        break;
    case 18:
        a_1/*{3}*/ = {56.51169967651367, -744.6121826171875, 43.13560104370117 };
        a_2 = 340.0526123046875;
        return 1;
        break;
    case 19:
        a_1/*{3}*/ = {506.4849853515625, -1884.967041015625, 24.764 };
        a_2 = 22.9566;
        return 1;
        break;
    case 20:
        a_1/*{3}*/ = {1555.95751953125, 953.6135864257812, 77.206298828125 };
        a_2 = 152.81179809570312;
        return 1;
        break;
    case 21:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 22:
        a_1/*{3}*/ = {220.72, -64.4177017211914, 68.29219818115234 };
        a_2 = 250.45350646972656 - 360.0;
        return 1;
        break;
    case 74:
        a_1/*{3}*/ = {2048.07, 3840.84, 34.2238 };
        a_2 = 119.60299682617188;
        return 1;
        break;
    case 23:
        a_1/*{3}*/ = {-464.22, -1592.97998046875, 38.73 };
        a_2 = 168.0;
        return 1;
        break;
    case 24:
        a_1/*{3}*/ = {744.7899780273438 + 0.0186, -465.8599853515625 - 0.0114, 36.6399 };
        a_2 = 51.727901458740234;
        return 1;
        break;
    case 67:
        a_1/*{3}*/ = {-9.0, 508.1, 173.6278076171875 };
        a_2 = 151.25039672851562;
        return 1;
        break;
    case 25:
        a_1/*{3}*/ = {72.22779846191406, -1464.6798095703125, 28.2915 };
        a_2 = 156.88270568847656;
        return 1;
        break;
    case 27:
        a_1/*{3}*/ = {763.0, -906.0, 24.231199264526367 };
        a_2 = 7.2736;
        return 1;
        break;
    case 26:
        a_1/*{3}*/ = {257.91668701171875, -1120.7855224609375, 28.3684 };
        a_2 = 97.27359771728516;
        return 1;
        break;
    case 28:
        a_1/*{3}*/ = {422.5857849121094, -978.6331787109375, 69.7072982788086 };
        a_2 = 4.0;
        return 1;
        break;
    case 29:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 30:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 31:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 32:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 33:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 34:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 35:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 36:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 37:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 58:
        a_1/*{3}*/ = {294.85211181640625, 882.9365844726562, 197.8527069091797 };
        a_2 = 162.6929931640625;
        return 1;
        break;
    case 59:
        a_1/*{3}*/ = {-1771.801513671875, 794.4315795898438, 138.4210968017578 };
        a_2 = 128.99459838867188;
        return 1;
        break;
    case 60:
        a_1/*{3}*/ = {1495.5953369140625, -1848.8206787109375, 70.2074966430664 };
        a_2 = 32.272098541259766;
        return 1;
        break;
    case 38:
        a_1/*{3}*/ = {2897.554443359375, 4032.240966796875, 50.14189910888672 };
        a_2 = 192.80909729;
        return 1;
        break;
    case 39:
        a_1/*{3}*/ = {1973.35498046875, 3818.2041015625, 32.005 };
        a_2 = 32.0;
        return 1;
        break;
    case 40:
        a_1/*{3}*/ = {1973.35498046875, 3818.2041015625, 32.005 };
        a_2 = 32.0;
        return 1;
        break;
    case 41:
        a_1/*{3}*/ = {1397.0, 3725.8, 33.067298889160156 };
        a_2 = -3.7534;
        return 1;
        break;
    case 42:
        a_1/*{3}*/ = ({798.45361328125, -2975.3408203125, 4.0205 }) + ({0.0, 0.0, 1.0 });
        a_2 = 90.0;
        return 1;
        break;
    case 43:
        a_1/*{3}*/ = {709.0244140625, -2916.478759765625, 5.058899879455566 };
        a_2 = 355.32598876953125;
        return 1;
        break;
    case 44:
        a_1/*{3}*/ = {643.5247802734375, -2917.324951171875, 5.133699893951416 };
        a_2 = 334.1068115234375;
        return 1;
        break;
    case 45:
        a_1/*{3}*/ = {595.274169921875, -2819.1826171875, 5.0559 };
        a_2 = 46.88529968261719;
        return 1;
        break;
    case 46:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 47:
        a_1/*{3}*/ = {314.4171142578125, 965.2069702148438, 208.40240478515625 };
        a_2 = 165.9420928955078;
        return 1;
        break;
    case 49:
        a_1/*{3}*/ = {3321.536865234375, 4975.45458984375, 25.9097 };
        a_2 = 221.22799682617188;
        return 1;
        break;
    case 48:
        a_1/*{3}*/ = {-111.13179779052734, 6316.479, 30.4904 };
        a_2 = 42.0 + 180.0;
        return 1;
        break;
    case 50:
        a_1/*{3}*/ = {-731.3261108398438, 106.68, 54.71689987182617 };
        a_2 = 98.97640228271484;
        return 1;
        break;
    case 51:
        a_1/*{3}*/ = {-1257.5, 527, 30.236099243164062 };
        a_2 = 220.9553985595703;
        return 1;
        break;
    case 52:
        a_1/*{3}*/ = {736.9868774414062, -2050.677978515625, 28.271799087524414 };
        a_2 = 83.99220275878906;
        return 1;
        break;
    case 66:
        a_1/*{3}*/ = {262.5498962402344, -2540.150390625, 4.843299865722656 };
        a_2 = -64.1365966796875;
        return 1;
        break;
    case 53:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 55:
        a_1/*{3}*/ = {-315.7789, 6201.35498046875, 30.432199478149414 };
        a_2 = 127.75469970703125;
        return 1;
        break;
    case 56:
        a_1/*{3}*/ = {118.0988, -1264.916015625, 32.3637 };
        a_2 = -63.0;
        return 1;
        break;
    case 57:
        a_1/*{3}*/ = {37.5988, -1351.520263671875, 28.2954 };
        a_2 = 90.0338974;
        return 1;
        break;
    case 61:
        a_1/*{3}*/ = {-558.269287109375, 261.11669921875, 82.07 };
        a_2 = 84.6231;
        return 1;
        break;
    case 62:
        a_1/*{3}*/ = {197, 508, 132.477005 };
        a_2 = 99.60489654541016;
        return 1;
        break;
    case 63:
        a_1/*{3}*/ = {1312.01, 1645.87, 51.2 };
        a_2 = 120.0;
        return 1;
        break;
    case 68:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 69:
        a_1/*{3}*/ = {-818.7374267578125, 6.4824, 41.24319839477539 };
        a_2 = 211.82229614257812;
        return 1;
        break;
    case 64:
        a_1/*{3}*/ = {2091.2583, 4714.85205078125, 40.1935997 };
        a_2 = 136.0867;
        return 1;
        break;
    case 54:
        a_1/*{3}*/ = {1762.5899658203125, 3247.2119140625, 40.735 };
        a_2 = 27.0648;
        return 1;
        break;
    case 65:
        a_1/*{3}*/ = {1764.012939453125, 3252.902099609375, 40.735 };
        a_2 = 27.0648;
        return 1;
        break;
    case 70:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 71:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 72:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    case 73:
        a_1/*{3}*/ = {0.0, 0.0, 0.0 };
        a_2 = 0.0;
        return 1;
        break;
    default:
        break;
    }
    return 0;
}

void sub_fb8(auto a_0, auto a_1) {
    if (a_1) {
        if (((a_0 != 88) && (a_0 != 89)) && (a_0 != 92)) {
            g_14DB0[a_0/*2*/] = 1;
        }
    } else { 
        g_14DB0[a_0/*2*/] = 0;
    }
}

void sub_ff6() {
    g_16405 = 1;
    if (PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) {
        if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_10FAD)) {
            switch (sub_222d()) {
            case 0:
                g_10FAD/*"16"*/ = "CMN_MARRE";
                break;
            case 1:
                g_10FAD/*"16"*/ = "CMN_FARRE";
                break;
            case 2:
                g_10FAD/*"16"*/ = "CMN_TARRE";
                break;
            }
            g_10FB1/*"16"*/ = "";
        }
        g_16405 = 0;
    } else if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_10FAD)) {
            switch (sub_222d()) {
            case 0:
                g_10FAD/*"16"*/ = "CMN_MDIED";
                break;
            case 1:
                g_10FAD/*"16"*/ = "CMN_FDIED";
                break;
            case 2:
                g_10FAD/*"16"*/ = "CMN_TDIED";
                break;
            }
            g_10FB1/*"16"*/ = "";
        }
        g_16405 = 0;
        GAMEPLAY::SET_BIT(&g_163E2._f14, 25);
    } else { }
}

auto sub_10dd() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 7; v_2 += 1) {
        if (GAMEPLAY::IS_BIT_SET(g_1410F[v_2/*5*/]._f1, 2)) {
            return v_2;
        }
    }
    return -1;
}

auto sub_1112(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10FBD, 0);
}

auto sub_113d(auto a_0) {
    UI::_0A24DA3A41B718F5(a_0);
    return UI::_10BDDBFC529428DD(0);
}

void sub_1150(auto a_0, auto a_1) {
    if (!g_D96D) {
        g_D96D = a_1;
    }
    if (a_0) {
        if ((sub_1112(0) && (g_10FBB._f1 == 1)) && sub_1226(g_10FBB)) {
        } else { 
            g_D96B = 1;
        }
    }
    if (game_state._f1E27 || sub_1112(0)) {
        v_4 = sub_10dd();
        v_5 = g_1410F[v_4/*5*/];
        v_6 = g_10FD2._f6D[v_5/*4*/];
        if (v_4 == -1) {
            if (game_state._f1E27) {}
            return ;
        }
        if (GAMEPLAY::IS_BIT_SET(g_1410F[v_4/*5*/]._f1, 4)) {
            return ;
        }
        if (GAMEPLAY::IS_BIT_SET(g_1410F[v_4/*5*/]._f1, 5)) {
            return ;
        }
        GAMEPLAY::SET_BIT(&g_1410F[v_4/*5*/]._f1, 4);
        GAMEPLAY::SET_BIT(&g_10FBD, 1);
        g_10FCD = v_6;
        g_10FCE = GAMEPLAY::GET_GAME_TIMER();
    }
}

auto sub_1226(auto a_0) {
    switch (a_0) {
    case 71:
        return 1;
        break;
    case 86:
        return 1;
        break;
    case 91:
        return 1;
        break;
    default:
        return 0;
        break;
    }
    return 0;
}

auto sub_1264(auto a_0, auto a_1, auto a_2) {
    if (game_state._f7F07[a_0/*29*/]._f11 == 3) {
        return 0;
    }
    if (game_state._f7F07[a_0/*29*/]._f11 == 4) {
        return 0;
    }
    return sub_12ad(game_state._f7F07[a_0/*29*/]._f11, 0, a_1, a_2, 0);
}

auto sub_12ad(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    sub_21b8();
    if (a_3 < 1) {
        return 0;
    }
    v_7 = 1.0;
    switch (a_1) {
    case 0:
        switch (a_0) {
        case 0:
            sub_215b(99, 1);
            sub_2138(0xd8dde3ac, a_3);
            break;
        case 1:
            sub_2138(0x82f04461, a_3);
            break;
        case 2:
            sub_2138(0x5e1032a2, a_3);
            break;
        }
        sub_1d23(0);
        switch (a_2) {
        case 124:
        case 125:
        case 126:
        case 127:
        case 128:
            if (sub_1ce7(5)) {
                v_7 = 0.9;
                v_8 = 5;
            }
            break;
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
            switch (a_0) {
            case 0:
                sub_2138(0xb90a1501, a_3);
                break;
            case 1:
                sub_2138(0x1d36ffe4, a_3);
                break;
            case 2:
                sub_2138(0x7375f79, a_3);
                break;
            }
            if (sub_1ce7(1)) {
                v_7 = 0.0;
                v_8 = 1;
            }
            break;
        case 21:
            switch (a_0) {
            case 0:
                sub_2138(0xd156803, a_3);
                break;
            case 1:
                sub_2138(0x6f8ce97a, a_3);
                break;
            case 2:
                sub_2138(0x87561c19, a_3);
                break;
            }
            break;
        case 25:
            switch (a_0) {
            case 0:
                sub_2138(0x1a5c0a6, a_3);
                break;
            case 1:
                sub_2138(0x192b26bc, a_3);
                break;
            case 2:
                sub_2138(0x12d8dfd0, a_3);
                break;
            }
            break;
        case 98:
        case 99:
        case 100:
        case 101:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
            switch (a_0) {
            case 0:
                sub_2138(0x6bb0a613, a_3);
                break;
            case 1:
                sub_2138(0x5dfbc6d0, a_3);
                break;
            case 2:
                sub_2138(0x280c1bd4, a_3);
                break;
            }
            break;
        default:
            switch (SCRIPT::_GET_THIS_SCRIPT_HASH()) {
            case ${clothes_shop_sp}:
                switch (a_0) {
                case 0:
                    sub_2138(0x185b8f46, a_3);
                    break;
                case 1:
                    sub_2138(0xe6ae13d3, a_3);
                    break;
                case 2:
                    sub_2138(0xdebb7d4a, a_3);
                    break;
                }
                break;
            case ${hairdo_shop_sp}:
                switch (a_0) {
                case 0:
                    sub_2138(0x79818787, a_3);
                    break;
                case 1:
                    sub_2138(0xddda2f69, a_3);
                    break;
                case 2:
                    sub_2138(0xc723e8ec, a_3);
                    break;
                }
                if (sub_1ce7(0)) {
                    v_7 = 0.0;
                    v_8 = 0;
                }
                break;
            case ${gunclub_shop}:
                switch (a_0) {
                case 0:
                    sub_2138(0xe56d46f6, a_3);
                    break;
                case 1:
                    sub_2138(0xad57c3a1, a_3);
                    break;
                case 2:
                    sub_2138(0xd49e38cd, a_3);
                    break;
                }
                break;
            case ${carmod_shop}:
                switch (a_0) {
                case 0:
                    sub_2138(0x980b9ad0, a_3);
                    break;
                case 1:
                    sub_2138(0x2fa911e0, a_3);
                    break;
                case 2:
                    sub_2138(0xad45726, a_3);
                    break;
                }
                sub_1cc7(a_3);
                break;
            }
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            sub_215b(95, a_3);
            break;
        case 1:
            sub_215b(97, a_3);
            break;
        case 2:
            sub_215b(96, a_3);
            break;
        }
        sub_215b(98, a_3);
        break;
    }
    v_9 = a_0;
    a_3 = SYSTEM::FLOOR(v_7 * __678_$BBDA792448DB5A89(a_3));
    v_A = 0;
    v_B = a_3;
    if (v_7 == 0.0) {
        sub_1b88(v_8);
        return 1;
    } else if (v_7 != 1.0) {
        sub_1b88(v_8);
    }
    v_C = g_CE62[v_9/*1*/] + a_3;
    switch (a_1) {
    case 1:
        if ((g_CE62[v_9/*1*/] >= 0) && (a_3 > 0)) {
            if (v_C <= 0) {
                g_CE62[v_9/*1*/] = 0x7fffffff;
            } else { 
                g_CE62[v_9/*1*/] += a_3;
            }
        }
        switch (a_0) {
        case 0:
            sub_2138(0xec4f6a3c, a_3);
            break;
        case 1:
            sub_2138(0x652ec70d, a_3);
            break;
        case 2:
            sub_2138(0x63d3c8a1, a_3);
            break;
        }
        break;
    case 0:
        if (!a_4) {
            if ((g_CE62[v_9/*1*/] - a_3) < 0) {
                return 0;
            }
        }
        v_A = g_CE62[v_9/*1*/];
        g_CE62[v_9/*1*/] -= a_3;
        if (a_4) {
            v_B = v_A;
        }
        break;
    }
    if (a_2 == 1) {
        if (v_B > 20) {}
    } else { 
        game_state._f61C9._fE9[v_9/*69*/]._f2[game_state._f61C9._fE9[v_9/*69*/]._f1/*6*/] = a_1;
        game_state._f61C9._fE9[v_9/*69*/]._f2[game_state._f61C9._fE9[v_9/*69*/]._f1/*6*/]._f1 = a_2;
        game_state._f61C9._fE9[v_9/*69*/]._f2[game_state._f61C9._fE9[v_9/*69*/]._f1/*6*/]._f2 = a_3;
        game_state._f61C9._fE9[v_9/*69*/] += 1;
        game_state._f61C9._fE9[v_9/*69*/]._f1 += 1;
        if (game_state._f61C9._fE9[v_9/*69*/]._f1 > 10) {
            game_state._f61C9._fE9[v_9/*69*/]._f1 = 0;
        }
    }
    sub_1b2e(a_0);
    if (g_8B74 == 15) {
        sub_18ac(0);
    }
    return 1;
}

void sub_18ac(auto a_0) {
    v_3 = 0;
    v_4 = 0;
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        for (v_4 = 0; v_4 < 11; v_4 += 1) {
            game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f3 = game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/];
            game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f4 = game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f1;
            game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f5 = game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f2;
        }
    }
    for (v_3 = 0; v_3 < 10; v_3 += 1) {
        g_CE6A[v_3/*3*/][0/*1*/] = game_state._f61C9[v_3/*1*/];
        g_CE6A._f1F[v_3/*3*/][0/*1*/] = game_state._f61C9._fB[v_3/*1*/];
        g_CE6A._f3E[v_3/*3*/][0/*1*/] = game_state._f61C9._f16[v_3/*1*/];
        g_CE6A._f5D[v_3/*3*/][0/*1*/] = game_state._f61C9._f21[v_3/*1*/];
        g_CE6A._f7C[v_3/*3*/][0/*1*/] = game_state._f61C9._f2C[v_3/*1*/];
        g_CE6A._f9B[v_3/*3*/][0/*1*/] = game_state._f61C9._f37[v_3/*1*/];
        g_CE6A._fBA[v_3/*3*/][0/*1*/] = game_state._f61C9._f42[v_3/*1*/];
        g_CE6A._fD9[v_3/*3*/][0/*1*/] = game_state._f61C9._f4D[v_3/*1*/];
        g_CE6A._fF8[v_3/*3*/][0/*1*/] = game_state._f61C9._f58[v_3/*1*/];
        if (!a_0) {
            g_CE6A[v_3/*3*/][1/*1*/] = game_state._f61C9[v_3/*1*/];
            g_CE6A._f1F[v_3/*3*/][1/*1*/] = game_state._f61C9._fB[v_3/*1*/];
            g_CE6A._f3E[v_3/*3*/][1/*1*/] = game_state._f61C9._f16[v_3/*1*/];
            g_CE6A._f5D[v_3/*3*/][1/*1*/] = game_state._f61C9._f21[v_3/*1*/];
            g_CE6A._f7C[v_3/*3*/][1/*1*/] = game_state._f61C9._f2C[v_3/*1*/];
            g_CE6A._f9B[v_3/*3*/][1/*1*/] = game_state._f61C9._f37[v_3/*1*/];
            g_CE6A._fBA[v_3/*3*/][1/*1*/] = game_state._f61C9._f42[v_3/*1*/];
            g_CE6A._fD9[v_3/*3*/][1/*1*/] = game_state._f61C9._f4D[v_3/*1*/];
            g_CE6A._fF8[v_3/*3*/][1/*1*/] = game_state._f61C9._f58[v_3/*1*/];
        }
    }
}

void sub_1b2e(auto a_0) {
    v_3 = g_CE62[a_0/*1*/];
    switch (a_0) {
    case 0:
        STATS::STAT_SET_INT(0x324c31d, v_3, 1);
        break;
    case 1:
        STATS::STAT_SET_INT(0x44bd6982, v_3, 1);
        break;
    case 2:
        STATS::STAT_SET_INT(0x8d75047d, v_3, 1);
        break;
    }
}

void sub_1b88(auto a_0) {
    v_3 = 0;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f61C9._f1D7, a_0)) {
            v_3 = 1;
            GAMEPLAY::CLEAR_BIT(&game_state._f61C9._f1D7, a_0);
        }
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f61C9._f1D7, a_0) || GAMEPLAY::IS_BIT_SET(g_200000[sub_1cba()/*10270*/]._f1E12._fA, a_0)) {
        v_3 = 1;
        GAMEPLAY::CLEAR_BIT(&game_state._f61C9._f1D7, a_0);
        GAMEPLAY::CLEAR_BIT(&g_200000[sub_1cba()/*10270*/]._f1E12._fA, a_0);
    }
    if (v_3) {
        v_4/*"64"*/ = "CHAR_LIFEINVADER";
        UI::_SET_NOTIFICATION_TEXT_ENTRY("COUP_RED");
        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(sub_1c48(a_0));
        UI::_SET_NOTIFICATION_MESSAGE(&v_4, &v_4, 1, 0, "", 0);
    }
}

auto sub_1c48(auto a_0) {
    switch (a_0) {
    case 0:
        return "COUP_HAIRC";
    case 1:
        return "COUP_TATTOO";
    case 2:
        return "COUP_WARSTOCK";
    case 3:
        return "COUP_MOSPORT";
    case 4:
        return "COUP_ELITAS";
    case 5:
        return "COUP_MEDSPENS";
    case 6:
        return "COUP_SPRUNK";
    case 7:
        return "COUP_RESPRAY";
    }
    return "";
}

auto sub_1cba() {
    v_2 = 0;
    return v_2;
}

void sub_1cc7(auto a_0) {
    sub_215b(93, a_0);
    sub_215b(29, a_0);
    sub_215b(30, a_0);
}

auto sub_1ce7(auto a_0) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return GAMEPLAY::IS_BIT_SET(game_state._f61C9._f1D7, a_0);
    } else { 
        return GAMEPLAY::IS_BIT_SET(g_200000[sub_1cba()/*10270*/]._f1E12._fA, a_0);
    }
}

auto sub_1d23(auto a_0) {
    v_4 = 0;
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(27)) {
        return 0;
    }
    if (STATS::STAT_GET_INT(0xd8dde3ac, &v_3, -1)) {
        v_4 += v_3;
    }
    if (STATS::STAT_GET_INT(0x82f04461, &v_3, -1)) {
        v_4 += v_3;
    }
    if (STATS::STAT_GET_INT(0x5e1032a2, &v_3, -1)) {
        v_4 += v_3;
    }
    if (a_0) {}
    v_5 = 0;
    STATS::STAT_GET_INT(0xe6d69c91, &v_5, -1);
    if ((v_4 > 0) && ((v_5 / 0x1e8480) != (v_4 / 0x1e8480))) {
        STATS::STAT_SET_INT(0xe6d69c91, v_4, 1);
        sub_20e7(27, v_4);
    }
    if (v_4 < 0xbebc200) {
        return 0;
    }
    sub_1dda(27, 1);
    return 1;
}

auto sub_1dda(auto a_0, auto a_1) {
    if (a_0 >= 70) {
        return 0;
    }
    return sub_1df5(a_0, a_1);
}

auto sub_1df5(auto a_0, auto a_1) {
    if (sub_20d9(14) && (!sub_2089(a_0))) {
        return 0;
    }
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_0) && (a_1 == 1)) {
        return 0;
    }
    if ((g_6311 != 0) && (!is_in_transition)) {
        return 0;
    }
    if (sub_207b(&g_270ECA)) {
        if (sub_203c(&g_270ECA, a_0)) {
            return 0;
        }
        if (sub_1e92(&g_270ECA, a_0)) {
            return 1;
        }
    } else { 
        if (!PLAYER::GIVE_ACHIEVEMENT_TO_PLAYER(a_0)) {
            return 0;
        }
        if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_0)) {
            return 1;
        }
        return 0;
    }
    return 0;
}

auto sub_1e92(auto a_0, auto a_1) {
    asm .vardef<F> 5, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":70}]}]"
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_1)) {
        return 0;
    }
    if (sub_20d9(14) && (!sub_2089(a_1))) {
        return 0;
    }
    if (sub_203c(a_0, a_1)) {
        return 0;
    }
    if (sub_2030(a_0) < 0.0) {
        sub_2013(a_0, 0);
    }
    sub_1fcf(&v_5);
    v_4 = 0;
    for (v_4 = 0; v_4 < (a_0 - 1); v_4 += 1) {
        v_5[v_4 + 1/*1*/] = a_0[v_4/*1*/];
    }
    sub_1f43(&v_5, a_1);
    v_4 = 0;
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        a_0[v_4/*1*/] = v_5[v_4/*1*/];
    }
    return 1;
}

auto sub_1f43(auto a_0, auto a_1) {
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_1)) {
        return 0;
    }
    if (sub_20d9(14) && (!sub_2089(a_1))) {
        return 0;
    }
    if (sub_203c(a_0, a_1)) {
        return 0;
    }
    if (sub_2030(a_0) < 0.0) {
        sub_2013(a_0, 0);
    }
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        if (sub_1fbe(a_0, v_4)) {
            a_0[v_4/*1*/] = a_1;
            return 1;
        }
    }
    return 0;
}

auto sub_1fbe(auto a_0, auto a_1) {
    return a_0[a_1/*1*/] == 70;
}

void sub_1fcf(auto a_0) {
    for (v_3 = 0; v_3 < a_0; v_3 += 1) {
        sub_2003(a_0, v_3);
    }
    sub_2013(a_0, g_270EC9 - 0.5);
}

void sub_2003(auto a_0, auto a_1) {
    a_0[a_1/*1*/] = 70;
}

void sub_2013(auto a_0, auto a_1) {
    if (a_1 == 0.0) {
        a_0._f48 = 0.0;
    } else { 
        a_0._f48 = a_1;
    }
}

auto sub_2030(auto a_0) {
    return a_0._f48;
}

auto sub_203c(auto a_0, auto a_1) {
    return sub_204e(a_0, a_1) != -1;
}

auto sub_204e(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        if (a_0[v_4/*1*/] == a_1) {
            return v_4;
        }
    }
    return -1;
}

auto sub_207b(auto a_0) {
    return a_0._f47 == 1;
}

auto sub_2089(auto a_0) {
    switch (a_0) {
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
        return 1;
    }
    return 0;
}

auto sub_20d9(auto a_0) {
    return g_8B74 == a_0;
}

auto sub_20e7(auto a_0, auto a_1) {
    if (a_0 < 0) {
        return 0;
    }
    if (a_0 > 70) {
        return 0;
    }
    if ((a_1 <= 0) || (a_1 > 100)) {
        return 0;
    }
    v_4 = PLAYER::_1C186837D0619335(a_0);
    if (a_1 > v_4) {
        return PLAYER::_C2AFFFDABBDC2C5C(a_0, a_1);
    } else { }
    return 0;
}

void sub_2138(auto a_0, auto a_1) {
    STATS::STAT_GET_INT(a_0, &v_4, -1);
    v_4 += a_1;
    STATS::STAT_SET_INT(a_0, v_4, 1);
}

void sub_215b(auto a_0, auto a_1) {
    if (a_1 < 1) {
        return ;
    }
    if (g_C8CA[a_0/*7*/]._f2) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return ;
    }
    if (g_C8CA[a_0/*7*/]) {
        STATS::STAT_GET_INT(g_C8CA[a_0/*7*/]._f1, &v_4, -1);
        v_4 += a_1;
        STATS::STAT_SET_INT(g_C8CA[a_0/*7*/]._f1, v_4, 1);
    }
}

void sub_21b8() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        STATS::STAT_GET_INT(0x324c31d, &v_2, -1);
        if (!(g_CE62[0/*1*/] == v_2)) {
            g_CE62[0/*1*/] = v_2;
        }
        STATS::STAT_GET_INT(0x44bd6982, &v_2, -1);
        if (!(g_CE62[1/*1*/] == v_2)) {
            g_CE62[1/*1*/] = v_2;
        }
        STATS::STAT_GET_INT(0x8d75047d, &v_2, -1);
        if (!(g_CE62[2/*1*/] == v_2)) {
            g_CE62[2/*1*/] = v_2;
        }
    }
}

auto sub_222d() {
    sub_2246();
    return game_state._f6EA._f21B._fDDD;
}

void sub_2246() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_238c(game_state._f6EA._f21B._fDDD) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_234f(PLAYER::PLAYER_PED_ID());
            if (sub_2343(v_2) && ((!sub_20d9(14)) || g_18658)) {
                if ((game_state._f6EA._f21B._fDDD != v_2) && sub_2343(game_state._f6EA._f21B._fDDD)) {
                    game_state._f6EA._f21B._fDDE = game_state._f6EA._f21B._fDDD;
                }
                game_state._f6EA._f21B._fDDF = v_2;
                game_state._f6EA._f21B._fDDD = v_2;
                return ;
            }
        } else { 
            if (game_state._f6EA._f21B._fDDD != 145) {
                game_state._f6EA._f21B._fDDF = game_state._f6EA._f21B._fDDD;
            }
            return ;
        }
    }
    game_state._f6EA._f21B._fDDD = 145;
}

auto sub_2343(auto a_0) {
    return a_0 < 3;
}

auto sub_234f(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_238c(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_238c(auto a_0) {
    if (sub_2343(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

auto sub_23b6() {
    if (g_3D60 == 0) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_23cd(auto a_0) {
    if (g_38EB) {
        sub_2464(0, 0);
    }
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8EC, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D60 = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 30);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 30);
    }
    if (!sub_243d()) {
        current_character._f1 = 3;
    }
}

auto sub_243d() {
    if ((current_character._f1 == 1) || (current_character._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_2464(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_24d8(0)) {
            g_38EB = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_380E);
            }
            g_3805/*{3}*/ = g_3817[g_3816/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    } else if (g_38EB == 1) {
        g_38EB = 0;
        g_3805/*{3}*/ = g_381E[g_3816/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_380E);
        } else { 
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    }
}

auto sub_24d8(auto a_0) {
    if (a_0 == 1) {
        if (current_character._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (current_character._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

void sub_2532(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 24);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 24);
    }
}

auto sub_2555(auto a_0, auto a_1) {
    if (sub_2589(a_0, a_1)) {
        sub_2573(a_0);
        return 1;
    }
    return 0;
}

void sub_2573(auto a_0) {
    a_0._f1 = 0.0;
    a_0._f2 = 0.0;
    a_0 = 0;
}

auto sub_2589(auto a_0, auto a_1) {
    if (sub_2642(a_0)) {
        if (sub_25ab(a_0) > a_1) {
            return 1;
        }
    }
    return 0;
}

auto sub_25ab(auto a_0) {
    if (sub_2642(a_0)) {
        if (sub_2632(a_0)) {
            return a_0._f2;
        } else { 
            return sub_25ea(GAMEPLAY::IS_BIT_SET(a_0, 4)) - a_0._f1;
        }
    } else { 
        return a_0._f1;
    }
}

auto sub_25ea(auto a_0) {
    if (a_0) {
        return __678_$BBDA792448DB5A89(GAMEPLAY::GET_GAME_TIMER()) / 1000.0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_3 = NETWORK::GET_NETWORK_TIME();
        return __678_$BBDA792448DB5A89(v_3) / 1000.0;
    }
    return __678_$BBDA792448DB5A89(GAMEPLAY::GET_GAME_TIMER()) / 1000.0;
}

auto sub_2632(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(a_0, 2);
}

auto sub_2642(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(a_0, 1);
}

void sub_2652(auto a_0) {
    if (!sub_2642(a_0)) {
        sub_266a(a_0);
    }
}

void sub_266a(auto a_0) {
    sub_2679(a_0, 0.0);
}

void sub_2679(auto a_0, auto a_1) {
    a_0._f1 = sub_25ea(GAMEPLAY::IS_BIT_SET(a_0, 4)) - a_1;
    GAMEPLAY::SET_BIT(a_0, 1);
    GAMEPLAY::CLEAR_BIT(a_0, 2);
    a_0._f2 = 0.0;
}

auto sub_26a7() {
    if (GAMEPLAY::IS_BIT_SET(g_8EC, 23)) {
        if (g_3D95 == 1) {
            return 1;
        } else { 
            return 0;
        }
    } else { 
        return 0;
    }
}

void sub_26d1(auto a_0, auto a_1) {
    UI::_SET_TEXT_COMPONENT_FORMAT(a_0);
    UI::_DISPLAY_HELP_TEXT_FROM_STRING_LABEL(0, 0, 1, a_1);
}

auto sub_26e8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (GAMEPLAY::IS_BIT_SET(g_8EC, 9)) {
        return 0;
    } else { 
        GAMEPLAY::SET_BIT(&g_8EC, 9);
        g_4138 = a_0;
        for (v_8 = 0; v_8 < (a_0 + 1); v_8 += 1) {
            g_3E63[v_8/*6*/]/*"24"*/ = a_2[v_8/*1*/];
            g_3FCD[v_8/*6*/]/*"24"*/ = a_3[v_8/*1*/];
        }
        g_4137 = a_1;
        for (v_9 = 0; v_9 < (a_1 + 1); v_9 += 1) {
            g_3F18[v_9/*6*/]/*"24"*/ = a_4[v_9/*1*/];
            g_4082[v_9/*6*/]/*"24"*/ = a_5[v_9/*1*/];
        }
        return 1;
    }
}

auto sub_277d(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    sub_2e7c(a_1, a_2, a_3, a_9, a_A, 0);
    sub_2e43();
    if (a_8 == 1) {
        g_3D6C = 1;
    } else { 
        g_3D6C = 0;
    }
    sub_2e1d(a_0);
    g_3D94 = 1;
    g_3DF4/*"24"*/ = a_6;
    g_3D5F = 3;
    return sub_27ca(a_4, a_5, a_7, a_B);
}

auto sub_27ca(auto a_0, auto a_1, auto a_2, auto a_3) {
    g_3D61 = 0;
    if ((g_3D60 == 0) || (g_3D62 == 2)) {
        if (g_3D60 != 0) {
            if (a_2 > g_3D62) {
                if (a_3 == 0) {
                    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
                    current_character._f1 = 3;
                    g_3D60 = 0;
                    g_3D61 = 1;
                    g_3D95 = 0;
                    g_3D5C = 0;
                    g_3D5D = 0;
                } else { 
                    sub_2dc6();
                    return 0;
                }
            } else { 
                return 0;
            }
        }
        if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
            return 0;
        }
        if (sub_2d8b(8, -1)) {
            return 0;
        }
        g_3DAC/*{6}*/ = g_3DA6;
        sub_2d34();
        g_3A99/*{165}*/ = g_3B3E;
        g_3D66 = g_3D67;
        g_3D6D = g_3D6E;
        g_280002 = g_280001;
        g_3D6F/*{16}*/ = g_3D7F;
        g_3D68 = g_3D69;
        g_413E = g_413F;
        g_4146/*{6}*/ = g_414C;
        g_4144 = g_4145;
        g_4140 = g_4141;
        g_4142 = g_4143;
        g_3BE3._f170 = g_413B;
        g_3BE3._f171 = g_413C;
        g_3BE3._f172 = g_413D;
        g_3D5C = g_3D5D;
        g_3D5E = g_3D5F;
        if (g_3E62 == 0) {
            g_3DFA[0/*6*/]/*{6}*/ = g_3E14[0/*6*/];
            g_3DFA[1/*6*/]/*{6}*/ = g_3E14[1/*6*/];
            g_3E2E[0/*6*/]/*{6}*/ = g_3E48[0/*6*/];
            g_3E2E[1/*6*/]/*{6}*/ = g_3E48[1/*6*/];
            g_3E07[0/*6*/]/*{6}*/ = g_3E21[0/*6*/];
            g_3E07[1/*6*/]/*{6}*/ = g_3E21[1/*6*/];
            g_3E3B[0/*6*/]/*{6}*/ = g_3E55[0/*6*/];
            g_3E3B[1/*6*/]/*{6}*/ = g_3E55[1/*6*/];
        }
        if (g_3D66) {
            GAMEPLAY::CLEAR_BIT(&g_8EB, 20);
            GAMEPLAY::CLEAR_BIT(&g_8EC, 17);
            GAMEPLAY::CLEAR_BIT(&g_8ED, 0);
            if (a_3) {
                sub_2c93();
                if (g_C10[current_character/*2811*/][0/*281*/]._f103 == 2) {
                    if (a_2 == 13) {
                    } else { 
                        return 0;
                    }
                }
                if (current_character._f1 > 3) {
                    return 0;
                }
            }
            if (g_382B == 1) {
                return 0;
            }
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (sub_2bfa()) {
                    return 0;
                }
                if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), ${gadget_parachute})) {
                    return 0;
                }
                if (!is_in_transition) {
                    if (g_3E62 == 0) {
                        if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                            return 0;
                        }
                        if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) {
                            return 0;
                        }
                        if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID())) {
                            return 0;
                        }
                        if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID())) {
                            return 0;
                        }
                    }
                }
            }
            if (sub_243d()) {
                return 0;
            } else { 
                switch (current_character._f1) {
                case 7:
                    return 0;
                    break;
                case 8:
                    return 0;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                default:
                    break;
                }
            }
            sub_2b65();
            g_3D6A = a_3;
        }
        g_3D62 = a_2;
        if (g_3D5C > 0) {
            for (v_6 = 0; v_6 < g_3D5C; v_6 += 1) {
                g_3BE3._f6[v_6/*6*/]/*"24"*/ = a_0[v_6/*1*/];
                g_3BE3._fBB[v_6/*6*/]/*"24"*/ = a_1[v_6/*1*/];
            }
        }
        g_38F2 = 0;
        sub_2b34();
        return 1;
    } else { 
        if (g_3D60 == 5) {
            return 0;
        }
        if ((a_2 < g_3D62) || (a_2 == g_3D62)) {
            return 0;
        } else { 
            if (a_2 == 2) {
            } else { 
                sub_2dc6();
            }
            return 0;
        }
    }
}

void sub_2b34() {
    for (v_2 = 0; v_2 <= 69; v_2 += 1) {
        g_38F4[v_2/*6*/]/*"24"*/ = "";
    }
    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    g_3D60 = 1;
}

void sub_2b65() {
    g_3D95 = g_3D94;
    g_3D8F = g_3D90;
    g_3DBE/*{6}*/ = g_3DB2;
    g_3DC4/*{6}*/ = g_3DB8;
    g_3D97 = g_3D96;
    g_3DDC/*{6}*/ = g_3DCA;
    g_3DE2/*{6}*/ = g_3DD0;
    g_3DE8/*{6}*/ = g_3DD6;
    g_3DEE/*{6}*/ = g_3DF4;
    g_63E = g_63F;
    g_640 = g_641;
    g_3D6B = g_3D6C;
    g_3D6D = g_3D6E;
    g_3D6F/*{16}*/ = g_3D7F;
    g_3D64 = g_3D65;
    g_4158 = 0;
    g_3D91 = 0;
    g_3D92 = 0;
    GAMEPLAY::CLEAR_BIT(&g_8EC, 16);
}

auto sub_2bfa() {
    if (is_in_transition) {
        v_2 = 0;
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_3, 1);
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (((v_3 == ${weapon_sniperrifle}) || (v_3 == ${weapon_heavysniper})) || (v_3 == ${weapon_remotesniper})) {
                v_2 = 1;
            }
        }
        if (CAM::IS_AIM_CAM_ACTIVE() && (v_2 == 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::GET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 78, 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else { 
        return 1;
    }
}

void sub_2c93() {
    if (sub_20d9(14)) {
        if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[0/*29*/]) {
                current_character = 0;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[1/*29*/]) {
                current_character = 1;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[2/*29*/]) {
                current_character = 2;
            } else { 
                current_character = 0;
            }
        }
    } else { 
        current_character = sub_222d();
        if (current_character == 145) {
            current_character = 3;
        }
        if (is_in_transition) {
            current_character = 3;
        }
        if (current_character > 3) {
            current_character = 3;
        }
    }
}

void sub_2d34() {
    for (v_2 = 0; v_2 <= 15; v_2 += 1) {
        g_3A99[v_2/*10*/] = 0;
        g_3A99[v_2/*10*/]._f1/*"24"*/ = "";
        g_3A99[v_2/*10*/]._f7 = 0;
        g_3A99[v_2/*10*/]._f8 = 0;
    }
    g_3A99._fA1 = -99;
    g_3A99._fA2/*{3}*/ = {0.0, 0.0, 0.0 };
}

auto sub_2d8b(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_146CF3._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_146CF3._f3B5, a_0);
}

void sub_2dc6() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (current_character._f1 == 9)) || (g_384C == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
        current_character._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

void sub_2e1d(auto a_0) {
    g_3D5D = a_0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4145 = 0;
    g_280001 = 0;
}

void sub_2e43() {
    g_3D90 = 0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_3D6E = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 0;
    g_3D96 = 0;
    g_280001 = 0;
}

void sub_2e7c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B3E/*{165}*/ = a_0;
    g_63F = a_1;
    g_3DA6/*"24"*/ = a_2;
    g_413D = a_5;
    if (a_3 == 0) {
        g_413B = 1;
        g_4139 = 0;
    } else { 
        g_413B = 0;
        g_4139 = 1;
    }
    if (a_4 == 0) {
        g_413C = 1;
        g_413A = 0;
    } else { 
        g_413C = 0;
        g_413A = 1;
    }
}

auto sub_2ed2(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    sub_2e7c(a_1, a_2, a_3, a_8, a_9, 0);
    sub_2e43();
    if (a_7 == 1) {
        g_3D6C = 1;
    } else { 
        g_3D6C = 0;
    }
    sub_2e1d(a_0);
    return sub_27ca(a_4, a_5, a_6, a_A);
}

void sub_2f10(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    UI::REQUEST_ADDITIONAL_TEXT("SHRINK", 0);
    UI::REQUEST_ADDITIONAL_TEXT("DrfAud", 6);
    while ((!UI::HAS_ADDITIONAL_TEXT_LOADED(0)) || (!UI::HAS_ADDITIONAL_TEXT_LOADED(6))) {
        SYSTEM::WAIT(0);
    }
    sub_4653(a_0, 0, PLAYER::PLAYER_PED_ID(), "MICHAEL", 0, 1);
    sub_4653(a_0, 1, 0, "FRIEDLANDER", 0, 1);
    sub_45be(a_1, a_2, a_3, a_B);
    v_F/*{4}*/ = sub_431f(a_B, &v_13, &v_14, 1);
    v_E = sub_42bb(&v_F);
    sub_4195(a_1, a_2, a_3, v_E);
    sub_416d(a_1, a_2, a_3, a_B);
    sub_39e8(a_1, a_2, a_3, a_B);
    sub_3997(a_4, a_5, a_7, a_8, a_6, a_9, a_B);
    sub_3432(a_4, a_5, a_7, a_8, a_6, a_9, a_A, a_B);
    sub_3151(a_4, a_5, a_7, a_8, a_6, a_9, a_A);
    sub_3067(a_4, a_5, a_7, a_8, a_6, a_9, a_B);
    for (v_15 = 0; v_15 < 47; v_15 += 1) {
        if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_1[v_15/*4*/])) {
            v_15 = 47;
        } else { }
    }
    for (v_15 = 0; v_15 < 27; v_15 += 1) {
        if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_4[v_15/*4*/])) {
            v_15 = 27;
        } else { }
    }
    for (v_15 = 0; v_15 < 27; v_15 += 1) {
        if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_7[v_15/*4*/])) {
            v_15 = 27;
        } else { }
    }
}

void sub_3067(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    switch (a_6) {
    case 2:
        v_9/*"16"*/ = "DRF_3";
        v_D = 17;
        v_E = 7;
        break;
    case 3:
        v_9/*"16"*/ = "DRF_4";
        v_D = 6;
        v_E = 17;
        break;
    default:
        break;
    }
    sub_30ca(a_0, a_1, a_4, &v_9, v_D, v_E, 0);
    sub_30ca(a_2, a_3, a_5, &v_9, v_D, v_E, 0);
}

void sub_30ca(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    for (v_D = a_4; v_D <= ((a_4 + a_5) - 1); v_D += 1) {
        v_9/*"16"*/ = a_3;
        v_9/*16*/ += "_";
        if ((v_D < 9) && a_6) {
            v_9/*16*/ += "0";
        }
        v_9/*16*/ += v_D + 1;
        if (UI::DOES_TEXT_LABEL_EXIST(&v_9)) {
            v_E = a_2 + v_F;
            a_0[v_E/*4*/]/*"16"*/ = a_3;
            a_1[v_E/*4*/]/*{4}*/ = v_9;
            v_F += 1;
        } else { }
    }
    a_2 += v_F;
}

void sub_3151(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    switch (a_6._f13) {
    case 1:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 4)) {
        case 0:
            v_9 = 6;
            break;
        case 1:
            v_9 = 7;
            break;
        case 2:
            v_9 = 8;
            break;
        case 3:
            v_9 = 9;
            break;
        }
        break;
    case 2:
    case 4:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 3)) {
        case 0:
            v_9 = 6;
            break;
        case 1:
            v_9 = 7;
            break;
        case 2:
            v_9 = 9;
            break;
        }
        break;
    case 3:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 4)) {
        case 0:
            v_9 = 2;
            break;
        case 1:
            v_9 = 6;
            break;
        case 2:
            v_9 = 7;
            break;
        case 3:
            v_9 = 9;
            break;
        }
        break;
    case 5:
    case 6:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 4)) {
        case 0:
            v_9 = 3;
            break;
        case 1:
            v_9 = 6;
            break;
        case 2:
            v_9 = 7;
            break;
        case 3:
            v_9 = 9;
            break;
        }
        break;
    case 7:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 6)) {
        case 0:
            v_9 = 2;
            break;
        case 1:
            v_9 = 4;
            break;
        case 2:
            v_9 = 6;
            break;
        case 3:
            v_9 = 7;
            break;
        case 4:
            v_9 = 8;
            break;
        case 5:
            v_9 = 9;
            break;
        }
        break;
    case 8:
    case 9:
    case 11:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 8)) {
        case 0:
            v_9 = 2;
            break;
        case 1:
            v_9 = 3;
            break;
        case 2:
            v_9 = 4;
            break;
        case 3:
            v_9 = 6;
            break;
        case 4:
            v_9 = 7;
            break;
        case 5:
            v_9 = 8;
            break;
        case 6:
            v_9 = 9;
            break;
        case 7:
            v_9 = 11;
            break;
        }
        break;
    case 10:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 7)) {
        case 0:
            v_9 = 3;
            break;
        case 1:
            v_9 = 4;
            break;
        case 2:
            v_9 = 6;
            break;
        case 3:
            v_9 = 7;
            break;
        case 4:
            v_9 = 8;
            break;
        case 5:
            v_9 = 9;
            break;
        case 6:
            v_9 = 11;
            break;
        }
        break;
    case 12:
        switch (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 4)) {
        case 0:
            v_9 = 6;
            break;
        case 1:
            v_9 = 7;
            break;
        case 2:
            v_9 = 9;
            break;
        case 3:
            v_9 = 11;
            break;
        }
        break;
    }
    sub_30ca(a_0, a_1, a_4, "PMCSUM", v_9 - 1, 1, 0);
    sub_30ca(a_2, a_3, a_5, "PMCSUM", v_9 - 1, 1, 0);
}

void sub_3432(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    switch (a_7) {
    case 2:
        v_E = 1;
        break;
    case 3:
        v_E = 3;
        break;
    }
    sub_30ca(a_0, a_1, a_4, "DRF_SEX", v_E, 1, 0);
    sub_30ca(a_2, a_3, a_5, "DRF_SEX", v_E, 1, 0);
    v_A/*{4}*/ = sub_34ac(a_6, &v_F, a_7, 1);
    sub_30ca(a_0, a_1, a_4, &v_A, 0, v_F, 0);
    sub_30ca(a_2, a_3, a_5, &v_A, 0, v_F, 0);
}

auto<4> sub_34ac(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_3969() <= 0) {
        if (!sub_395b()) {
            v_A = sub_36f8(1, 2, 3, 4, 12);
        } else if (sub_36ca() >= 1) {
            v_A = sub_36f8(5, 6, 7, 0, 0);
        } else { 
            v_A = sub_36f8(5, 7, 0, 0, 0);
        }
    } else if (sub_3969() >= 2) {
        v_A = sub_36f8(10, 11, 0, 0, 0);
    } else if (!sub_395b()) {
        if (a_2 != 4) {
            v_A = sub_36f8(8, 9, 0, 0, 0);
        } else { 
            v_A = 9;
        }
    } else if (a_2 != 4) {
        v_A = sub_36f8(8, 9, 10, 0, 0);
    } else { 
        v_A = sub_36f8(9, 10, 0, 0, 0);
    }
    sub_36bc(a_0, v_A);
    if (a_3) {
        sub_367d(&game_state._f48A3, v_A, 1);
    }
    v_6/*"16"*/ = "DRF_PR_";
    switch (v_A) {
    case 1:
        v_6/*16*/ += "1_A";
        a_1 = 3;
        break;
    case 2:
        v_6/*16*/ += "1_B";
        a_1 = 5;
        break;
    case 3:
        v_6/*16*/ += "1_C";
        a_1 = 3;
        break;
    case 4:
        v_6/*16*/ += "1_D";
        a_1 = 3;
        break;
    case 5:
        v_6/*16*/ += "1_STR";
        a_1 = 3;
        break;
    case 6:
        v_6/*16*/ += "5_T1B";
        a_1 = 5;
        break;
    case 7:
        v_6/*"16"*/ = "5_T1C";
        a_1 = 4;
        break;
    case 8:
        v_6/*16*/ += "5PROA";
        a_1 = 5;
        break;
    case 9:
        v_6/*16*/ += "5PROB";
        a_1 = 5;
        break;
    case 10:
        v_6/*16*/ += "5STRA";
        a_1 = 7;
        break;
    case 11:
        v_6/*16*/ += "5STRB";
        a_1 = 4;
        break;
    case 12:
        v_6/*16*/ += "5_NON";
        a_1 = 5;
        break;
    }
    return v_6;
}

void sub_367d(auto a_0, auto a_1, auto a_2) {
    if ((a_1 < 0) || (a_1 > 12)) {
        return ;
    }
    a_1 += 11;
    if (a_2) {
        GAMEPLAY::SET_BIT(&a_0._f1, a_1);
    } else { 
        GAMEPLAY::CLEAR_BIT(&a_0._f1, a_1);
    }
}

void sub_36bc(auto a_0, auto a_1) {
    a_0._f13 = a_1;
}

auto sub_36ca() {
    for (v_2 = 0; v_2 < 1; v_2 += 1) {
        if (g_15760[v_2/*1*/] > 0) {
            v_3 += 1;
        }
    }
    return v_3;
}

auto sub_36f8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    asm .vardef<F> 9, "[{\"offset\":0,\"value\":13}]"
    for (v_7 = 0; v_7 < 13; v_7 += 1) {
        v_9[v_7/*1*/] = v_7;
    }
    if (((a_0 > 0) && (a_0 < 13)) && (!sub_392d(&game_state._f48A3, a_0))) {
        v_9[a_0/*1*/] = 0;
    } else if (((a_1 > 0) && (a_1 < 13)) && (!sub_392d(&game_state._f48A3, a_1))) {
        v_9[a_1/*1*/] = 0;
    } else if (((a_2 > 0) && (a_2 < 13)) && (!sub_392d(&game_state._f48A3, a_2))) {
        v_9[a_2/*1*/] = 0;
    } else if (((a_3 > 0) && (a_3 < 13)) && (!sub_392d(&game_state._f48A3, a_3))) {
        v_9[a_3/*1*/] = 0;
    } else if (((a_4 > 0) && (a_4 < 13)) && (!sub_392d(&game_state._f48A3, a_4))) {
        v_9[a_4/*1*/] = 0;
    }
    v_8 = sub_38ba(&v_9, 13, 1, 13);
    if (v_8 > 0) {
        return v_8;
    }
    if ((a_2 <= 0) || (a_2 >= 13)) {
        v_8 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 3);
    } else if ((a_3 <= 0) || (a_3 >= 13)) {
        v_8 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 4);
    } else if ((a_4 <= 0) || (a_4 >= 13)) {
        v_8 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 5);
    } else { 
        v_8 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 6);
    }
    switch (v_8) {
    case 1:
        return a_0;
    case 2:
        return a_1;
    case 3:
        return a_2;
    case 4:
        return a_3;
    case 5:
        return a_4;
    }
    return 0;
}

auto sub_38ba(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 1;
    v_8 = 0;
    while (v_6 && (v_8 < 50)) {
        v_6 = 0;
        v_9 = (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 50000) % (a_3 - a_2)) + a_2;
        for (v_7 = 0; v_7 <= (a_1 - 1); v_7 += 1) {
            if (a_0[v_7/*1*/] == v_9) {
                v_6 = 1;
                v_7 = 999999;
            }
        }
        v_8 += 1;
    }
    if (v_8 == 50) {
        return -1;
    }
    return v_9;
}

auto sub_392d(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 12)) {
        return 0;
    }
    a_1 += 11;
    return GAMEPLAY::IS_BIT_SET(a_0._f1, a_1);
}

auto sub_395b() {
    return g_15762 > 0;
}

auto sub_3969() {
    for (v_2 = 0; v_2 < 2; v_2 += 1) {
        if (g_1575D[v_2/*1*/] > 0) {
            v_3 += 1;
        }
    }
    return v_3;
}

void sub_3997(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    switch (a_6) {
    case 2:
        v_9 = 3;
        v_A = 1;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        break;
    }
    sub_30ca(a_0, a_1, a_4, "DRF_ACC", v_9, 1, 0);
    sub_30ca(a_2, a_3, a_5, "DRF_DEN", v_A, 1, 0);
}

void sub_39e8(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_3) {
    case 2:
        v_A = 2;
        break;
    case 3:
        v_A = 3;
        break;
    }
    sub_30ca(a_0, a_1, a_2, "DRF_OPW", v_A, 1, 0);
    v_6/*{4}*/ = sub_3a3f(a_3, 0, 1, &v_B);
    sub_30ca(a_0, a_1, a_2, &v_6, 0, v_B, 0);
}

auto<4> sub_3a3f(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (((((!sub_4145(&game_state._f48A3, 8)) && a_1) && (a_0 != 4)) && (sub_4036(3) > 0)) && (GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(0, 0x3f800000) < 0.75)) {
        v_A = 8;
        a_3 = 4;
    } else { 
        if ((!sub_4145(&game_state._f48A3, 1)) && (sub_4036(5) > 0)) {
            GAMEPLAY::SET_BIT(&v_B, 1);
            v_C += 1;
        }
        if ((!sub_4145(&game_state._f48A3, 2)) && (sub_4036(7) >= 2)) {
            GAMEPLAY::SET_BIT(&v_B, 2);
            v_C += 1;
        }
        if ((!sub_4145(&game_state._f48A3, 3)) && (((((sub_4036(8) > 0) || (sub_4036(9) > 0)) && (sub_4036(7) > 0)) && a_1) && (a_0 != 4))) {
            GAMEPLAY::SET_BIT(&v_B, 3);
            v_C += 1;
        }
        if (((!sub_4145(&game_state._f48A3, 4)) && (sub_4036(1) > 0)) && (sub_4036(1) < 3)) {
            GAMEPLAY::SET_BIT(&v_B, 4);
            v_C += 1;
        }
        if ((!sub_4145(&game_state._f48A3, 5)) && (sub_4036(1) >= 3)) {
            GAMEPLAY::SET_BIT(&v_B, 5);
            v_C += 1;
        }
        if ((!sub_4145(&game_state._f48A3, 6)) && (sub_4036(0) > 0)) {
            GAMEPLAY::SET_BIT(&v_B, 6);
            v_C += 1;
        }
        if (!sub_4145(&game_state._f48A3, 7)) {
            GAMEPLAY::SET_BIT(&v_B, 7);
            v_C += 1;
        }
        if ((((!sub_4145(&game_state._f48A3, 8)) && a_1) && (sub_4036(3) > 0)) && (a_0 != 4)) {
            GAMEPLAY::SET_BIT(&v_B, 8);
            v_C += 1;
        }
        if (!sub_4145(&game_state._f48A3, 9)) {
            GAMEPLAY::SET_BIT(&v_B, 9);
            v_C += 1;
        }
        if (!sub_4145(&game_state._f48A3, 10)) {
            GAMEPLAY::SET_BIT(&v_B, 10);
            v_C += 1;
        }
        if (!sub_4145(&game_state._f48A3, 11)) {
            GAMEPLAY::SET_BIT(&v_B, 11);
            v_C += 1;
        }
        if (v_C <= 0) {
            if (a_0 != 4) {
                v_A = sub_3e6b(7, 9, 10, 11, 0);
            } else { 
                v_A = sub_3e6b(7, 9, 10, 0, 0);
            }
        } else { 
            v_D = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, v_C + 1);
            v_E = 1;
            while (v_D > 0) {
                if (GAMEPLAY::IS_BIT_SET(v_B, v_E)) {
                    v_D -= 1;
                    if (v_D == 0) {
                        v_A = v_E;
                    }
                }
                v_E += 1;
            }
        }
        switch (v_A) {
        case 1:
            a_3 = 5;
            break;
        case 2:
            a_3 = 5;
            break;
        case 3:
            a_3 = 7;
            break;
        case 4:
            a_3 = 4;
            break;
        case 5:
            a_3 = 4;
            break;
        case 6:
            a_3 = 5;
            break;
        case 7:
            a_3 = 4;
            break;
        case 8:
            a_3 = 4;
            break;
        case 9:
            a_3 = 4;
            break;
        case 10:
            a_3 = 5;
            break;
        case 11:
            a_3 = 7;
            break;
        }
    }
    if (a_2) {
        sub_3e32(&game_state._f48A3, v_A, 1);
    }
    v_6/*"16"*/ = "DRF_OWR_";
    if ((v_A >= 1) && (v_A <= 3)) {
        v_6/*16*/ += v_A;
    } else if (v_A < 7) {
        v_6/*16*/ += 4;
        if (v_A == 4) {
            v_6/*16*/ += "A";
        } else if (v_A == 5) {
            v_6/*16*/ += "B";
        } else { 
            v_6/*16*/ += "C";
        }
    } else { 
        v_6/*16*/ += 7;
        if (v_A == 7) {
            v_6/*16*/ += "A";
        } else if (v_A == 8) {
            v_6/*16*/ += "B";
        } else if (v_A == 9) {
            v_6/*16*/ += "C";
        } else if (v_A == 10) {
            v_6/*16*/ += "D";
        } else { 
            v_6/*16*/ += "E";
        }
    }
    return v_6;
}

void sub_3e32(auto a_0, auto a_1, auto a_2) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return ;
    }
    if (a_2) {
        GAMEPLAY::SET_BIT(&a_0._f1, a_1);
    } else { 
        GAMEPLAY::CLEAR_BIT(&a_0._f1, a_1);
    }
}

auto sub_3e6b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    asm .vardef<F> 9, "[{\"offset\":0,\"value\":12}]"
    for (v_7 = 0; v_7 < 12; v_7 += 1) {
        v_9[v_7/*1*/] = v_7;
    }
    if (((a_0 > 0) && (a_0 < 12)) && (!sub_4145(&game_state._f48A3, a_0))) {
        v_9[a_0/*1*/] = 0;
        v_16 = 1;
    }
    if (((a_1 > 0) && (a_1 < 12)) && (!sub_4145(&game_state._f48A3, a_1))) {
        v_9[a_1/*1*/] = 0;
        v_16 = 1;
    }
    if (((a_2 > 0) && (a_2 < 12)) && (!sub_4145(&game_state._f48A3, a_2))) {
        v_9[a_2/*1*/] = 0;
        v_16 = 1;
    }
    if (((a_3 > 0) && (a_3 < 12)) && (!sub_4145(&game_state._f48A3, a_3))) {
        v_9[a_3/*1*/] = 0;
        v_16 = 1;
    }
    if (((a_4 > 0) && (a_4 < 12)) && (!sub_4145(&game_state._f48A3, a_4))) {
        v_9[a_4/*1*/] = 0;
        v_16 = 1;
    }
    if (!v_16) {
        if ((a_0 > 0) && (a_0 < 12)) {
            v_9[a_0/*1*/] = 0;
        }
        if ((a_1 > 0) && (a_1 < 12)) {
            v_9[a_1/*1*/] = 0;
        }
        if ((a_2 > 0) && (a_2 < 12)) {
            v_9[a_2/*1*/] = 0;
        }
        if ((a_3 > 0) && (a_3 < 12)) {
            v_9[a_3/*1*/] = 0;
        }
        if ((a_4 > 0) && (a_4 < 12)) {
            v_9[a_4/*1*/] = 0;
        }
    }
    v_8 = sub_38ba(&v_9, 12, 1, 12);
    if (v_8 > 0) {
        return v_8;
    }
    v_8 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 3);
    switch (v_8) {
    case 1:
        return a_0;
    case 2:
        return a_1;
    }
    return 0;
}

auto sub_4036(auto a_0) {
    switch (a_0) {
    case 0:
        return sub_4118(&g_15763, 1);
        break;
    case 1:
        return sub_4118(&g_15765, 3);
        break;
    case 2:
        return sub_4118(&g_15769, 1);
        break;
    case 3:
        return sub_4118(&g_1576B, 1);
        break;
    case 4:
        return sub_4118(&g_1576D, 1);
        break;
    case 5:
        return sub_4118(&g_1576F, 1);
        break;
    case 6:
        return sub_4118(&g_15771, 1);
        break;
    case 7:
        return sub_4118(&g_15773, 2);
        break;
    case 8:
        return sub_4118(&g_15776, 1);
        break;
    case 9:
        return sub_4118(&g_15778, 1);
        break;
    }
    return 0;
}

auto sub_4118(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < a_1; v_4 += 1) {
        if (a_0[v_4/*1*/] > 0) {
            v_5 += 1;
        }
    }
    return v_5;
}

auto sub_4145(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(a_0._f1, a_1);
}

void sub_416d(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6/*{4}*/ = sub_431f(a_3, &v_A, &v_B, 1);
    sub_30ca(a_0, a_1, a_2, &v_6, v_A, v_B, 0);
}

void sub_4195(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_3 == 0) {
        sub_30ca(a_0, a_1, a_2, "DRF_OVG", GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 3), 1, 0);
        sub_30ca(a_0, a_1, a_2, "DRF_TMG", sub_4283(sub_429a(), 0, 2), 1, 0);
    } else if (a_3 == 1) {
        sub_30ca(a_0, a_1, a_2, "DRF_OVO", GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 3), 1, 0);
        sub_4226(a_0, a_1, a_2, "PDRTMO", 3);
    } else { 
        sub_30ca(a_0, a_1, a_2, "DRF_OVB", 0, 1, 0);
        sub_30ca(a_0, a_1, a_2, "DRF_TMB", 2, 1, 0);
    }
}

void sub_4226(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, a_4 + 1);
    a_0[a_2/*4*/]/*"16"*/ = a_3;
    a_1[a_2/*4*/]/*"16"*/ = a_3;
    a_1[a_2/*4*/]/*16*/ += "_";
    if (v_7 < 10) {
        a_1[a_2/*4*/]/*16*/ += "0";
    }
    a_1[a_2/*4*/]/*16*/ += v_7;
    a_2 += 1;
}

auto sub_4283(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

auto sub_429a() {
    if (GAMEPLAY::IS_BIT_SET(GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 65535), 0)) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_42bb(auto a_0) {
    v_3 = 2;
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        return v_3;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "DRF_SOL1")) {
        v_3 = 1;
    } else if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "DRF_EXILE")) {
        v_3 = 2;
    } else if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "DRF_SOL2")) {
        v_3 = 1;
    } else if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "DRF_MIC2")) {
        v_3 = 1;
    }
    return v_3;
}

auto<4> sub_431f(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_4592(59) && (!sub_4592(45))) {
        if (a_0 == 2) {
            v_6/*"16"*/ = "DRF_SOL1";
            a_1 = 0;
            a_2 = 19;
            if (a_3) {
                sub_455f(&game_state._f48A3, 6);
            }
        }
    } else if (sub_4592(14) && (!sub_4592(16))) {
        v_6/*"16"*/ = "DRF_EXILE";
        a_1 = 0;
        a_2 = 9;
        if (a_3) {
            sub_455f(&game_state._f48A3, 7);
        }
    } else if (sub_4592(16) && (!sub_4592(39))) {
        v_6/*"16"*/ = "DRF_EXILE";
        a_1 = 9;
        a_2 = 10;
        if (a_3) {
            sub_455f(&game_state._f48A3, 8);
        }
    } else if ((sub_4592(39) && (!sub_4592(47))) && (!sub_4463(0x1ee3253f))) {
        v_6/*"16"*/ = "DRF_SOL2";
        a_1 = 0;
        a_2 = 15;
        if (a_3) {
            sub_455f(&game_state._f48A3, 9);
        }
    } else if (sub_4592(47) && (!sub_4592(22))) {
        v_6/*"16"*/ = "DRF_MIC2";
        a_1 = 0;
        a_2 = 13;
        if (a_3) {
            sub_455f(&game_state._f48A3, 10);
        }
    }
    return v_6;
}

auto sub_4463(auto a_0) {
    for (v_3 = 0; v_3 < game_state._f18B2._f88; v_3 += 1) {
        if (game_state._f18B2[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state._f18B2._f28A; v_3 += 1) {
        if (game_state._f18B2._fC7[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state._f18B2._fC6; v_3 += 1) {
        if (game_state._f18B2._f89[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state._f18B2.maybe_character_count; v_3 += 1) {
        if (game_state._f18B2._f28B[v_3/*14*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state._f18B2._f362; v_3 += 1) {
        if (game_state._f18B2._f2FD[v_3/*10*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

void sub_455f(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 12)) {
        return ;
    }
    a_0 -= a_0 & 31;
    a_0 |= a_1;
}

auto sub_4592(auto a_0) {
    if ((a_0 == 94) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f14A[a_0/*6*/];
}

void sub_45be(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_3) {
    case 2:
        v_6/*"16"*/ = "DRF_3";
        v_A = 17;
        break;
    case 3:
        v_6/*"16"*/ = "DRF_4";
        v_A = 6;
        break;
    default:
        break;
    }
    sub_30ca(a_0, a_1, a_2, &v_6, 0, v_A, 0);
    switch (a_3) {
    case 2:
        v_6/*"16"*/ = "DRF_OVR_2";
        break;
    case 3:
        v_6/*"16"*/ = "DRF_OVR_5";
        break;
    }
    a_0[a_2/*4*/]/*"16"*/ = "DRF_OVR";
    a_1[a_2/*4*/]/*{4}*/ = v_6;
    a_2 += 1;
}

void sub_4653(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!is_in_transition) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

void sub_46ee(auto a_0, auto a_1, auto a_2) {
    for (v_5 = 0; v_5 < a_2; v_5 += 1) {
        a_0[v_5/*1*/] = sub_4719(&a_1[v_5/*4*/]);
    }
}

auto sub_4719(auto a_0) {
    return a_0;
}

auto sub_4723(auto a_0, auto a_1, auto a_2, auto a_3) {
    if ((g_1575C != 0) && ((GAMEPLAY::GET_GAME_TIMER() - g_1575C) < 0x1b7740)) {
        return 0;
    }
    UI::REQUEST_ADDITIONAL_TEXT("SHRINK", 0);
    UI::REQUEST_ADDITIONAL_TEXT("DrfAud", 6);
    while ((!UI::HAS_ADDITIONAL_TEXT_LOADED(0)) || (!UI::HAS_ADDITIONAL_TEXT_LOADED(6))) {
        SYSTEM::WAIT(0);
    }
    if (!sub_47af(a_1, a_2, a_3)) {
        return 0;
    }
    sub_4653(a_0, 0, PLAYER::PLAYER_PED_ID(), "MICHAEL", 0, 1);
    sub_4653(a_0, 1, 0, "FRIEDLANDER", 0, 1);
    g_1575C = GAMEPLAY::GET_GAME_TIMER();
    return 1;
}

auto sub_47af(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_4883(&game_state._f48A3);
    switch (v_5) {
    case 0:
        sub_30ca(a_0, a_1, a_2, "PBTNM", 0, 11, 0);
        sub_4848(&game_state._f48A3, 1);
        break;
    case 1:
        sub_30ca(a_0, a_1, a_2, "PBTNM2", 0, 10, 0);
        sub_4848(&game_state._f48A3, 2);
        break;
    case 2:
        sub_30ca(a_0, a_1, a_2, "PBTNM3", 0, 12, 0);
        sub_4848(&game_state._f48A3, 3);
        break;
    default:
        return 0;
        break;
    }
    return 1;
}

void sub_4848(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 3)) {
        return ;
    }
    a_0 -= a_0 & SYSTEM::SHIFT_LEFT(3, 5);
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 5);
}

auto sub_4883(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 5) & 3;
}

auto sub_4895(auto a_0) {
    switch (a_0) {
    case 0:
        return 500;
        break;
    case 1:
        return 1000;
        break;
    case 2:
        return 1500;
        break;
    case 3:
        return 1500;
        break;
    case 4:
        return 2000;
        break;
    }
    return 0;
}

auto sub_48f0(auto a_0) {
    return g_CE62[a_0/*1*/];
}

void sub_48ff(auto a_0, auto a_1) {
    switch (a_1) {
    case 0:
        a_0/*"24"*/ = "DRF_MIC_1_CS_1";
        a_0._f6/*"24"*/ = "OBTNR1";
        a_0._fC/*"24"*/ = "DRF_MIC_1_CS_2";
        a_0._f12 = 293200;
        break;
    case 1:
        a_0/*"24"*/ = "DRF_MIC_2_CS_1";
        a_0._f6/*"24"*/ = "OBTNR2";
        a_0._fC/*"24"*/ = "DRF_MIC_2_CS_2";
        a_0._f12 = 243600;
        break;
    case 2:
        a_0/*"24"*/ = "PBTINT1";
        a_0._f6/*"24"*/ = "PBTNR2";
        a_0._fC/*"24"*/ = "PBTOUT1";
        break;
    case 3:
        a_0/*"24"*/ = "PBTINT2";
        a_0._f6/*"24"*/ = "PBTNR3";
        a_0._fC/*"24"*/ = "PBTOUT2";
        break;
    case 4:
        a_0/*"24"*/ = "DRF_MIC_3_CS_1";
        a_0._f6/*"24"*/ = "OBTNR1";
        a_0._fC/*"24"*/ = "DRF_MIC_3_CS_2";
        a_0._f12 = 252700;
        break;
    default:
        break;
    }
}

auto sub_49e2() {
    return 3;
}

void sub_49eb() {
    sub_4b3d();
    sub_4a41();
    sub_4a03();
    SCRIPT::TERMINATE_THIS_THREAD();
}

void sub_4a03() {
    for (v_2 = 0; v_2 < 1; v_2 += 1) {
        g_15760[v_2/*1*/] = 0;
    }
    for (v_2 = 0; v_2 < 2; v_2 += 1) {
        g_1575D[v_2/*1*/] = 0;
    }
}

void sub_4a41() {
    for (v_3 = 0; v_3 < 10; v_3 += 1) {
        v_2 = v_3;
        switch (v_2) {
        case 0:
            sub_4b1b(&g_15763, 1);
            break;
        case 1:
            sub_4b1b(&g_15765, 3);
            break;
        case 2:
            sub_4b1b(&g_15769, 1);
            break;
        case 3:
            sub_4b1b(&g_1576B, 1);
            break;
        case 4:
            sub_4b1b(&g_1576D, 1);
            break;
        case 5:
            sub_4b1b(&g_1576F, 1);
            break;
        case 6:
            sub_4b1b(&g_15771, 1);
            break;
        case 7:
            sub_4b1b(&g_15773, 2);
            break;
        case 8:
            sub_4b1b(&g_15776, 1);
            break;
        case 9:
            sub_4b1b(&g_15778, 1);
            break;
        }
    }
}

void sub_4b1b(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < a_1; v_4 += 1) {
        a_0[v_4/*1*/] = 0;
    }
}

void sub_4b3d() {
    g_38F2 = 0;
    sub_2dc6();
}

void sub_4b4d() {
    if (SCRIPT::HAS_SCRIPT_LOADED("buddyDeathResponse")) {
        SYSTEM::START_NEW_SCRIPT("buddyDeathResponse", 1424);
    }
    if (game_state._f1E27 || sub_1112(0)) {
        if (!sub_4bbe()) {
            v_2 = sub_10dd();
            if (v_2 != -1) {
                if (!sub_35b(v_2)) {
                    return ;
                }
                GAMEPLAY::SET_BIT(&g_1410F[v_2/*5*/]._f1, 5);
                return ;
            } else { }
        } else { 
            sub_ff6();
        }
    }
}

auto sub_4bbe() {
    if ((((g_163E2 == 13) || (g_163E2 == 10)) || (g_163E2 == 11)) || (g_163E2 == 12)) {
        return 0;
    }
    return 1;
}