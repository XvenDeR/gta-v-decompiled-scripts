// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_14 = 3;
    l_15 = "NULL";
    l_16 = 0.0;
    l_1A = -0.0375;
    l_1B = 0.17;
    l_1E = 80.0;
    l_1F = 140.0;
    l_20 = 180.0;
    l_45 = 1;
    l_46 = 65;
    l_47 = 49;
    l_48 = 64;
    local_current_time = -1;
    l_53 = -1;
    l_57 = -1;
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(82)) {
        exit_controller();
    }
    next_message_deadline = GAMEPLAY::GET_GAME_TIMER() + 20000;
    state0_cycle = 0;
    l_54 = GAMEPLAY::GET_GAME_TIMER();
    while (1) {
        current_time = GAMEPLAY::GET_GAME_TIMER();
        switch (comms_state) {
        case 0:
            // TODO: this is a first cycle text message thing, it is probably important to decode each of these
            // functions.
            if (is_message_state_not_15() && (!is_message_state(12))) {
                exit_controller();
            }
            local_bool_flag0 = 0;
            if (local_current_time != -1) {
                local_current_time = -1;
            }
            switch (state0_cycle) {
            case 0:
                try_receive_message0(&current_time);
                break;
            case 1:
                try_receive_message1(&current_time);
                break;
            case 2:
                try_receive_message2(&current_time);
                break;
            case 3:
                try_receive_message3(&current_time);
                break;
            case 4:
                try_receive_message4(&current_time);
                break;
            }
            state0_cycle += 1;
            if (state0_cycle > 4) {
                state0_cycle = 0;
            }
            if (((((((!is_message_state(0)) && (!is_message_state(4))) && (!is_message_state(5))) && (!is_message_state(2))) && (!is_message_state(1))) && (!is_message_state(3))) && (!sub_789c())) {
                sub_6c4f();
            }
            break;
        case 1:
            if (g_8D98 == -1) {
                if ((!sub_6a5d(0)) && (!is_message_state(12))) {
                    sub_6389(&current_time, 0);
                    comms_state = 0;
                }
            }
            if (comms_state == 1) {
                if (l_4F) {
                    if (!sub_6373()) {
                        l_4F = 0;
                    }
                } else if (((sub_635d() || sub_633a()) || sub_6373()) || g_10EC3) {
                    sub_6389(&current_time, 0);
                    comms_state = 0;
                }
            }
            if (comms_state == 1) {
                if (sub_62e0(0)) {
                    if (sub_62bb()) {
                        if (game_state.pending_messages[g_8D97/*15*/]._f3 == 5) {
                            sub_6298(0);
                        }
                        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 3)) {
                            if (sub_60bc()) {
                                comms_state = 2;
                            }
                        } else {
                            comms_state = 2;
                        }
                    }
                }
            }
            if (comms_state == 1) {
                if (local_current_time == -1) {
                    local_current_time = GAMEPLAY::GET_GAME_TIMER();
                } else if ((GAMEPLAY::GET_GAME_TIMER() - local_current_time) > 20000) {
                    sub_6075();
                    sub_5f6a(1);
                    sub_6389(&current_time, 1);
                    local_current_time = -1;
                    comms_state = 0;
                }
            }
            break;
        case 2:
            if (sub_5f53()) {
                sub_5d67(&current_time);
                l_4E = 0;
                next_message_deadline = current_time + 20000;
                comms_state = 0;
                g_8D97 = -1;
            } else if (g_8D97 != -1) {
                sub_3932();
                sub_365d();
                sub_3591(current_time);
            }
            break;
        }
        for (v_4 = 0; v_4 < game_state.pending_messages._f38E; v_4 += 1) {
            maybe_delay_next_message(&current_time, &game_state.pending_messages._f363[v_4/*14*/]);
        }
        sub_13b9();
        if (g_8D99 || g_8D9A) {
            sub_1285();
            g_8D9A = 0;
        }
        sub_31d();
        SYSTEM::WAIT(0);
    }
}

void sub_31d() {
    if (game_state._f21EB._f74 == 0) {
        return ;
    }
    if (!sub_1238(0, 3)) {
        return ;
    }
    if (sub_113c(0xeaa92474) || sub_113c(0xdce408ea)) {
        if (sub_c0b(game_state._f21EB._f74)) {
            sub_59b(0xeaa92474);
            sub_59b(0xdce408ea);
            sub_46a(0x922f9878, 4, 54, 3, 0x6ddd00, -1, 4);
            sub_46a(0xe707422a, 4, 54, 3, 0x6ddd00, -1, 4);
            return ;
        }
    }
    if (sub_458() == 0x95ad1f73) {
        sub_59b(0x95ad1f73);
        sub_59b(0xeaa92474);
        sub_59b(0xdce408ea);
        sub_59b(0x922f9878);
        sub_59b(0xe707422a);
        game_state.pending_messages._f38F = -1;
        if (sub_c0b(game_state._f21EB._f74)) {
            sub_46a(0x922f9878, 4, 54, 3, 0x6ddd00, -1, 4);
            sub_46a(0xe707422a, 4, 54, 3, 0x6ddd00, -1, 4);
        } else {
            sub_46a(0xeaa92474, 4, 54, 3, 0x6ddd00, -1, 4);
            sub_46a(0xdce408ea, 4, 54, 3, 0x6ddd00, -1, 4);
        }
    }
}

auto sub_458() {
    return game_state.pending_messages._f38F;
}

auto sub_46a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (sub_570(0)) {
        return 0;
    }
    if (a_2 < 3) {
        if (GAMEPLAY::IS_BIT_SET(a_1, a_2)) {
            return 0;
        }
    }
    if ((a_1 < 1) || (a_1 > 7)) {
        return 0;
    }
    if (a_4 <= 0) {
        return 0;
    }
    if (game_state.pending_messages._f28A < 30) {
        v_9 = a_0;
        if (game_state.pending_messages._f38F == v_9) {
            game_state.pending_messages._f38F = -1;
        }
        v_9._f1 = 0;
        v_9._f6 = a_2;
        v_9._f2 = a_1;
        v_9._fE = a_3;
        v_9._f3 = a_6;
        v_9._f7 = -1;
        v_9._f8 = 0;
        v_9._f9 = -1;
        v_9._f4 = GAMEPLAY::GET_GAME_TIMER() + a_4;
        v_9._f9 = a_5;
        v_9._fA = -1;
        v_9._fB = -1;
        GAMEPLAY::SET_BIT(&v_9._f1, 0);
        GAMEPLAY::SET_BIT(&v_9._f1, 6);
        game_state.pending_messages._fC7[game_state.pending_messages._f28A/*15*/]/*{15}*/ = v_9;
        game_state.pending_messages._f28A += 1;
        return 1;
    }
    return 0;
}

auto sub_570(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10FBD, 0);
}

auto sub_59b(auto a_0) {
    v_4 = 0;
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (game_state.pending_messages[v_3/*15*/] == a_0) {
            if (g_8D97 != v_3) {
                sub_b30(v_3);
                sub_9c0(a_0);
                v_4 = 1;
            }
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages._fC6; v_3 += 1) {
        if (game_state.pending_messages._f89[v_3/*15*/] == a_0) {
            sub_9c0(a_0);
            v_4 = 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages._f28A; v_3 += 1) {
        if (game_state.pending_messages._fC7[v_3/*15*/] == a_0) {
            sub_913(a_0);
            v_4 = 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (game_state.pending_messages.messages_something[v_3/*14*/] == a_0) {
            sub_77b(v_3);
            v_4 = 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages._f362; v_3 += 1) {
        if (game_state.pending_messages._f2FD[v_3/*10*/] == a_0) {
            sub_6c2(v_3);
            v_4 = 1;
        }
    }
    return v_4;
}

void sub_6c2(auto a_0) {
    if ((a_0 < 0) || (a_0 >= game_state.pending_messages._f362)) {
        return ;
    }
    if (game_state.pending_messages._f362 > 1) {
        for (v_3 = a_0; v_3 <= (game_state.pending_messages._f362 - 2); v_3 += 1) {
            game_state.pending_messages._f2FD[v_3/*10*/]/*{10}*/ = game_state.pending_messages._f2FD[v_3 + 1/*10*/];
        }
    }
    if (game_state.pending_messages._f362 > 0) {
        game_state.pending_messages._f2FD[game_state.pending_messages._f362 - 1/*10*/]/*{10}*/ = v_4;
        game_state.pending_messages._f362 -= 1;
    }
}

void sub_77b(auto a_0) {
    if ((a_0 < 0) || (a_0 >= game_state.pending_messages.count)) {
        return ;
    }
    if (game_state.pending_messages.count > 1) {
        for (v_3 = a_0; v_3 <= (game_state.pending_messages.count - 2); v_3 += 1) {
            game_state.pending_messages.messages_something[v_3/*14*/]/*{14}*/ = game_state.pending_messages.messages_something[v_3 + 1/*14*/];
        }
    }
    if (game_state.pending_messages.count > 0) {
        game_state.pending_messages.messages_something[game_state.pending_messages.count - 1/*14*/]/*{14}*/ = v_4;
        game_state.pending_messages.count -= 1;
    }
    sub_843(0);
    sub_843(1);
    sub_843(2);
}

void sub_843(auto a_0) {
    v_4 = 0;
    if (!sub_907(a_0)) {
        return ;
    }
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[v_3/*15*/]._f2, a_0)) {
            if (game_state.pending_messages[v_3/*15*/]._f3 > v_4) {
                v_4 = game_state.pending_messages[v_3/*15*/]._f3;
            }
        }
    }
    for (v_5 = 0; v_5 < game_state.pending_messages.count; v_5 += 1) {
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages.messages_something[v_5/*14*/]._f2, a_0)) {
            if (game_state.pending_messages.messages_something[v_5/*14*/]._f3 == 5) {
                v_4 = 5;
            }
        }
    }
    game_state.pending_messages._f397[a_0/*1*/] = v_4;
}

auto sub_907(auto a_0) {
    return a_0 < 3;
}

void sub_913(auto a_0) {
    for (v_12 = 0; v_12 < game_state.pending_messages._f28A; v_12 += 1) {
        if (game_state.pending_messages._fC7[v_12/*15*/] == a_0) {
            for (v_13 = v_12; v_13 <= (game_state.pending_messages._f28A - 2); v_13 += 1) {
                game_state.pending_messages._fC7[v_13/*15*/]/*{15}*/ = game_state.pending_messages._fC7[v_13 + 1/*15*/];
            }
            game_state.pending_messages._fC7[game_state.pending_messages._f28A - 1/*15*/]/*{15}*/ = v_3;
            game_state.pending_messages._f28A -= 1;
            return ;
        }
    }
}

void sub_9c0(auto a_0) {
    for (v_12 = 0; v_12 < game_state.pending_messages._fC6; v_12 += 1) {
        if (game_state.pending_messages._f89[v_12/*15*/] == a_0) {
            sub_a7c(game_state.pending_messages._f89[v_12/*15*/]._f6);
            for (v_13 = v_12; v_13 <= (game_state.pending_messages._fC6 - 2); v_13 += 1) {
                game_state.pending_messages._f89[v_13/*15*/]/*{15}*/ = game_state.pending_messages._f89[v_13 + 1/*15*/];
            }
            game_state.pending_messages._f89[game_state.pending_messages._fC6 - 1/*15*/]/*{15}*/ = v_3;
            game_state.pending_messages._fC6 -= 1;
            return ;
        }
    }
}

auto sub_a7c(auto a_0) {
    if (g_75[a_0/*10*/]._f8 != 138) {
        if (game_state._f7F07[a_0/*29*/]._f13[current_character/*1*/] == 1) {
            game_state._f7F07[a_0/*29*/]._f13[current_character/*1*/] = 0;
            if (game_state._f7F07[a_0/*29*/]._f18[current_character/*1*/] == 0) {
                v_3 = current_character;
                sub_aed(a_0, v_3);
            }
            return 1;
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

void sub_aed(auto a_0, auto a_1) {
    if (g_75[a_0/*10*/]._f8 != 138) {
        if (a_1 > 3) {
        } else {
            game_state._f7F07[a_0/*29*/]._fC[a_1/*1*/] = 0;
            game_state._f7F07[a_0/*29*/]._f18[a_1/*1*/] = 0;
        }
    }
}

void sub_b30(auto a_0) {
    if ((a_0 < 0) || (a_0 >= game_state.pending_messages.count)) {
        return ;
    }
    v_4 = game_state.pending_messages[a_0/*15*/]._f2;
    if (game_state.pending_messages.count > 1) {
        for (v_3 = a_0; v_3 <= (game_state.pending_messages.count - 2); v_3 += 1) {
            game_state.pending_messages[v_3/*15*/]/*{15}*/ = game_state.pending_messages[v_3 + 1/*15*/];
        }
    }
    if (game_state.pending_messages.count > 0) {
        game_state.pending_messages[game_state.pending_messages.count - 1/*15*/]/*{15}*/ = v_5;
        game_state.pending_messages.count -= 1;
    }
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        if (GAMEPLAY::IS_BIT_SET(v_4, v_3)) {
            sub_843(v_3);
        }
    }
}

auto sub_c0b(auto a_0) {
    return sub_c1d(sub_f3b(), a_0);
}

auto sub_c1d(auto a_0, auto a_1) {
    if ((!sub_dbd(a_1)) || (!sub_dbd(a_0))) {
        return 1;
    }
    v_4 = sub_d81(a_0);
    v_5 = sub_d81(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_d74(a_0);
    v_5 = sub_d74(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_d62(a_0);
    v_5 = sub_d62(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_d4f(a_0);
    v_5 = sub_d4f(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_d3c(a_0);
    v_5 = sub_d3c(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_d29(a_0);
    v_5 = sub_d29(a_1);
    if (v_4 > v_5) {
        return 1;
    }
    return 0;
}

auto sub_d29(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 20) & 63;
}

auto sub_d3c(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 14) & 63;
}

auto sub_d4f(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 9) & 31;
}

auto sub_d62(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 4) & 31;
}

auto sub_d74(auto a_0) {
    return a_0 & 15;
}

auto sub_d81(auto a_0) {
    return ((SYSTEM::SHIFT_RIGHT(a_0, 26) & 31) * sub_da6(GAMEPLAY::IS_BIT_SET(a_0, 31), -1, 1)) + 2011;
}

auto sub_da6(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else {
        return a_2;
    }
}

auto sub_dbd(auto a_0) {
    if (a_0 == -15) {
        return 0;
    }
    v_3 = sub_d29(a_0);
    if ((v_3 < 0) || (v_3 >= 60)) {
        return 0;
    }
    v_4 = sub_d3c(a_0);
    if ((v_4 < 0) || (v_4 >= 60)) {
        return 0;
    }
    v_5 = sub_d4f(a_0);
    if ((v_5 < 0) || (v_5 > 23)) {
        return 0;
    }
    v_6 = sub_d81(a_0);
    if (((v_6 <= 0) || (v_6 > 2043)) || (v_6 < 1979)) {
        return 0;
    }
    v_7 = sub_d74(a_0);
    if ((v_7 < 0) || (v_7 > 11)) {
        return 0;
    }
    v_8 = sub_d62(a_0);
    if ((v_8 < 1) || (v_8 > sub_e99(v_7, v_6))) {
        return 0;
    }
    return 1;
}

auto sub_e99(auto a_0, auto a_1) {
    if (a_1 < 0) {
        a_1 = 0;
    }
    switch (a_0) {
    case 0:
    case 2:
    case 4:
    case 6:
    case 7:
    case 9:
    case 11:
        return 31;
        break;
    case 3:
    case 5:
    case 8:
    case 10:
        return 30;
        break;
    case 1:
        if ((a_1 % 4) == 0) {
            if ((a_1 % 100) != 0) {
                return 29;
            } else if ((a_1 % 400) == 0) {
                return 29;
            }
        }
        return 28;
        break;
    }
    return 30;
}

auto sub_f3b() {
    sub_1100(&v_2, TIME::GET_CLOCK_SECONDS());
    sub_10c5(&v_2, TIME::GET_CLOCK_MINUTES());
    sub_108b(&v_2, TIME::GET_CLOCK_HOURS());
    sub_103a(&v_2, TIME::GET_CLOCK_DAY_OF_MONTH());
    sub_1007(&v_2, TIME::GET_CLOCK_MONTH());
    sub_f81(&v_2, TIME::GET_CLOCK_YEAR());
    return v_2;
}

void sub_f81(auto a_0, auto a_1) {
    if (a_1 <= 0) {
        return ;
    }
    if ((a_1 > 2043) || (a_1 < 1979)) {
        return ;
    }
    a_0 -= a_0 & 0x7c000000;
    if (a_1 < 2011) {
        a_0 |= SYSTEM::SHIFT_LEFT(2011 - a_1, 26);
        a_0 |= 0x80000000;
    } else {
        a_0 |= SYSTEM::SHIFT_LEFT(a_1 - 2011, 26);
        a_0 -= a_0 & 0x80000000;
    }
}

void sub_1007(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return ;
    }
    a_0 -= a_0 & 15;
    a_0 |= a_1;
}

void sub_103a(auto a_0, auto a_1) {
    v_4 = sub_d74(a_0);
    v_5 = sub_d81(a_0);
    if ((a_1 < 1) || (a_1 > sub_e99(v_4, v_5))) {
        return ;
    }
    a_0 -= a_0 & 496;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 4);
}

void sub_108b(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 24)) {
        return ;
    }
    a_0 -= a_0 & 15872;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 9);
}

void sub_10c5(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0xfc000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 14);
}

void sub_1100(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0x3f00000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 20);
}

auto sub_113c(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (game_state.pending_messages[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages._f28A; v_3 += 1) {
        if (game_state.pending_messages._fC7[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages._fC6; v_3 += 1) {
        if (game_state.pending_messages._f89[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (game_state.pending_messages.messages_something[v_3/*14*/] == a_0) {
            return 1;
        }
    }
    for (v_3 = 0; v_3 < game_state.pending_messages._f362; v_3 += 1) {
        if (game_state.pending_messages._f2FD[v_3/*10*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

auto sub_1238(auto a_0, auto a_1) {
    if ((a_0 == 11) || (a_0 == -1)) {
        return 0;
    }
    if ((a_1 < 0) || (a_1 >= 32)) {
        return 0;
    }
    v_4 = GAMEPLAY::IS_BIT_SET(game_state._f1E27._f63._fDB[a_0/*1*/], a_1);
    return v_4;
}

void sub_1285() {
    v_3 = SYSTEM::CEIL(GAMEPLAY::GET_FRAME_TIME() * 1000.0);
    next_message_deadline += v_3;
    for (v_2 = 0; v_2 < game_state.pending_messages.count; v_2 += 1) {
        game_state.pending_messages[v_2/*15*/]._f4 += v_3;
    }
    for (v_2 = 0; v_2 < game_state.pending_messages.count; v_2 += 1) {
        game_state.pending_messages.messages_something[v_2/*14*/]._f4 += v_3;
    }
    for (v_2 = 0; v_2 < game_state.pending_messages._f362; v_2 += 1) {
        game_state.pending_messages._f2FD[v_2/*10*/]._f4 += v_3;
    }
    for (v_2 = 0; v_2 < game_state.pending_messages._f28A; v_2 += 1) {
        game_state.pending_messages._fC7[v_2/*15*/]._f4 += v_3;
    }
    for (v_2 = 0; v_2 < 147; v_2 += 1) {
        g_8D9C[v_2/*1*/] += v_3;
    }
}

void sub_13b9() {
    if (!sub_1bef(2)) {
        if (sub_1bc3(0)) {
            if (!sub_1bc3(1)) {
                if (sub_62e0(1)) {
                    if (g_8D97 != -1) {
                        if ((game_state.pending_messages[g_8D97/*15*/] == 0x600756de) || (game_state.pending_messages[g_8D97/*15*/] == 0x2c42d867)) {
                            switch (sub_1b9c("AM_H_FCAL1")) {
                            case 2:
                                sub_19a8("AM_H_FCAL1", 2, 0, 1000, 7500, 7, 0, 0, 0);
                                break;
                            case 1:
                                sub_1966(2);
                                break;
                            }
                        }
                    }
                }
            }
        }
    }
    if (!sub_1bef(3)) {
        if (!l_4D) {
            if (sub_1bc3(0)) {
                if (!sub_1bc3(1)) {
                    if (sub_62e0(1)) {
                        if (g_8D97 != -1) {
                            if ((game_state.pending_messages[g_8D97/*15*/] == 0x600756de) || (game_state.pending_messages[g_8D97/*15*/] == 0x2c42d867)) {
                                if (sub_62bb()) {
                                    if (sub_192b("AM_H_FCAL1")) {
                                        sub_15b4("AM_H_FCAL1", 1);
                                    }
                                    if (sub_15a1("AM_H_FCAL1")) {
                                        UI::CLEAR_HELP(0);
                                    }
                                    sub_1966(2);
                                    sub_19a8("AM_H_FCAL2", 2, 0, 1000, 7500, 7, 0, 0, 0);
                                    l_4D = 1;
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if (sub_1b9c("AM_H_FCAL2") == 2) {
                l_4D = 0;
            } else if (sub_1b9c("AM_H_FCAL2") == 1) {
                sub_1966(3);
            }
            if (!sub_62bb()) {
                sub_15b4("AM_H_FCAL2", 1);
                if (sub_15a1("AM_H_FCAL2")) {
                    UI::CLEAR_HELP(0);
                }
                sub_1966(3);
            }
        }
        if ((game_state.pending_messages._f38F == 0x600756de) || (game_state.pending_messages._f38F == 0x2c42d867)) {
            sub_1966(3);
            sub_1966(2);
            if (sub_192b("AM_H_FCAL1")) {
                sub_15b4("AM_H_FCAL1", 1);
            }
            if (sub_15a1("AM_H_FCAL1")) {
                UI::CLEAR_HELP(0);
            }
            if (sub_192b("AM_H_FCAL2")) {
                sub_15b4("AM_H_FCAL2", 1);
            }
            if (sub_15a1("AM_H_FCAL2")) {
                UI::CLEAR_HELP(0);
            }
        }
    }
}

auto sub_15a1(auto a_0) {
    UI::_0A24DA3A41B718F5(a_0);
    return UI::_10BDDBFC529428DD(0);
}

void sub_15b4(auto a_0, auto a_1) {
    if (g_18522 && a_1) {
        if (sub_15a1(a_0) && (!UI::IS_HELP_MESSAGE_FADING_OUT())) {
            UI::CLEAR_HELP(0);
        }
    }
    for (v_4 = 0; v_4 < game_state._f612F._f91; v_4 += 1) {
        if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, &game_state._f612F[v_4/*16*/])) {
            for (v_5 = v_4; v_5 <= (game_state._f612F._f91 - 2); v_5 += 1) {
                sub_181b(v_5, v_5 + 1);
            }
            sub_1781(game_state._f612F._f91 - 1);
            game_state._f612F._f91 -= 1;
            sub_1661();
            return ;
        }
    }
}

void sub_1661() {
    for (v_2 = 0; v_2 < 3; v_2 += 1) {
        game_state._f612F._f92[v_2/*1*/] = 0;
    }
    for (v_2 = 0; v_2 < game_state._f612F._f91; v_2 += 1) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f612F[v_2/*16*/]._fB, 0)) {
            if (game_state._f612F[v_2/*16*/]._fC > game_state._f612F._f92[0/*1*/]) {
                game_state._f612F._f92[0/*1*/] = game_state._f612F[v_2/*16*/]._fC;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(game_state._f612F[v_2/*16*/]._fB, 1)) {
            if (game_state._f612F[v_2/*16*/]._fC > game_state._f612F._f92[1/*1*/]) {
                game_state._f612F._f92[1/*1*/] = game_state._f612F[v_2/*16*/]._fC;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(game_state._f612F[v_2/*16*/]._fB, 2)) {
            if (game_state._f612F[v_2/*16*/]._fC > game_state._f612F._f92[2/*1*/]) {
                game_state._f612F._f92[2/*1*/] = game_state._f612F[v_2/*16*/]._fC;
            }
        }
    }
}

void sub_1781(auto a_0) {
    game_state._f612F[a_0/*16*/]/*"16"*/ = "";
    game_state._f612F[a_0/*16*/]._f4/*"16"*/ = "";
    game_state._f612F[a_0/*16*/]._f8 = 0;
    game_state._f612F[a_0/*16*/]._f9 = 0;
    game_state._f612F[a_0/*16*/]._fB = 0;
    game_state._f612F[a_0/*16*/]._fA = -1;
    game_state._f612F[a_0/*16*/]._fC = 0;
    game_state._f612F[a_0/*16*/]._fD = 0;
    game_state._f612F[a_0/*16*/]._fE = 0;
    game_state._f612F[a_0/*16*/]._fF = 0;
}

void sub_181b(auto a_0, auto a_1) {
    game_state._f612F[a_0/*16*/]/*{4}*/ = game_state._f612F[a_1/*16*/];
    game_state._f612F[a_0/*16*/]._f4/*{4}*/ = game_state._f612F[a_1/*16*/]._f4;
    game_state._f612F[a_0/*16*/]._f8 = game_state._f612F[a_1/*16*/]._f8;
    game_state._f612F[a_0/*16*/]._fA = game_state._f612F[a_1/*16*/]._fA;
    game_state._f612F[a_0/*16*/]._f9 = game_state._f612F[a_1/*16*/]._f9;
    game_state._f612F[a_0/*16*/]._fB = game_state._f612F[a_1/*16*/]._fB;
    game_state._f612F[a_0/*16*/]._fC = game_state._f612F[a_1/*16*/]._fC;
    game_state._f612F[a_0/*16*/]._fD = game_state._f612F[a_1/*16*/]._fD;
    game_state._f612F[a_0/*16*/]._fE = game_state._f612F[a_1/*16*/]._fE;
    game_state._f612F[a_0/*16*/]._fF = game_state._f612F[a_1/*16*/]._fF;
}

auto sub_192b(auto a_0) {
    for (v_3 = 0; v_3 < game_state._f612F._f91; v_3 += 1) {
        if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, &game_state._f612F[v_3/*16*/])) {
            return 1;
        }
    }
    return 0;
}

void sub_1966(auto a_0) {
    v_3 = a_0;
    v_4 = 0;
    while (v_3 > 31) {
        v_3 -= 32;
        v_4 += 1;
    }
    if (v_4 < 3) {
        GAMEPLAY::SET_BIT(&game_state._f612F._f96[v_4/*1*/], v_3);
    } else { }
}

void sub_19a8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    sub_19c9(a_0, "", a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8);
}

void sub_19c9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "")) {
        return ;
    }
    if (a_3 < 0) {
        return ;
    }
    if ((a_5 < 500) && (a_5 != -1)) {
        return ;
    }
    if ((a_4 < 0) && (a_4 != -1)) {
        return ;
    }
    if ((a_6 < 1) || (a_6 > 7)) {
        return ;
    }
    if (a_7 == 235) {
        return ;
    }
    if (a_8 == 235) {
        return ;
    }
    for (v_C = 0; v_C < game_state._f612F._f91; v_C += 1) {
        if (GAMEPLAY::ARE_STRINGS_EQUAL(&game_state._f612F[v_C/*16*/], a_0)) {
            return ;
        }
    }
    if (game_state._f612F._f91 < 9) {
        game_state._f612F[game_state._f612F._f91/*16*/]/*"16"*/ = a_0;
        game_state._f612F[game_state._f612F._f91/*16*/]._f4/*"16"*/ = a_1;
        game_state._f612F[game_state._f612F._f91/*16*/]._f8 = GAMEPLAY::GET_GAME_TIMER() + a_3;
        game_state._f612F[game_state._f612F._f91/*16*/]._f9 = a_5;
        game_state._f612F[game_state._f612F._f91/*16*/]._fB = a_6;
        game_state._f612F[game_state._f612F._f91/*16*/]._fC = a_2;
        game_state._f612F[game_state._f612F._f91/*16*/]._fD = a_7;
        game_state._f612F[game_state._f612F._f91/*16*/]._fE = a_8;
        game_state._f612F[game_state._f612F._f91/*16*/]._fF = a_9;
        if (a_4 != -1) {
            game_state._f612F[game_state._f612F._f91/*16*/]._fA = (GAMEPLAY::GET_GAME_TIMER() + a_3) + a_4;
        } else {
            game_state._f612F[game_state._f612F._f91/*16*/]._fA = -1;
        }
        game_state._f612F._f91 += 1;
        sub_1661();
    } else { }
}

auto sub_1b9c(auto a_0) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, &g_18525)) {
        return 1;
    }
    if (sub_192b(a_0)) {
        return 0;
    }
    return 2;
}

auto sub_1bc3(auto a_0) {
    if ((a_0 == 94) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f14A[a_0/*6*/];
}

auto sub_1bef(auto a_0) {
    v_3 = a_0;
    v_4 = 0;
    while (v_3 > 31) {
        v_3 -= 32;
        v_4 += 1;
    }
    if (v_4 < 3) {
        return GAMEPLAY::IS_BIT_SET(game_state._f612F._f96[v_4/*1*/], v_3);
    }
    return 0;
}

void maybe_delay_next_message(auto current_time, auto message_hash) {
    load_message_name_into(message_hash, &v_4);
    switch (sub_22a6(&v_4)) {
    case 0:
        game_state.pending_messages._f394 = 0;
        delay_next_message(current_time, message_hash);
        break;
    case 3:
        game_state.pending_messages._f394 = 1;
        game_state.pending_messages._f395 = 1;
        delay_next_message(current_time, message_hash);
        break;
    case 4:
        game_state.pending_messages._f394 = 1;
        game_state.pending_messages._f395 = 0;
        break;
    }
}

void delay_next_message(auto current_time, auto a_1) {
    sub_1dc6(a_1);
    game_state.pending_messages._f393 = a_1;
    next_message_deadline = current_time + 20000;
    g_8D9C[a_1._f6/*1*/] = current_time + 20000;
    sub_1cea(a_1);
}

void sub_1cea(auto a_0) {
    v_3 = sub_1d8a(a_0);
    if (v_3 == -1) {
        return ;
    }
    for (v_4 = v_3; v_4 <= (game_state.pending_messages._f38E - 2); v_4 += 1) {
        game_state.pending_messages._f363[v_4/*14*/]/*{14}*/ = game_state.pending_messages._f363[v_4 + 1/*14*/];
    }
    game_state.pending_messages._f363[game_state.pending_messages._f38E - 1/*14*/]/*{14}*/ = v_5;
    game_state.pending_messages._f38E -= 1;
    sub_843(0);
    sub_843(1);
    sub_843(2);
}

auto sub_1d8a(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages._f38E; v_3 += 1) {
        if (game_state.pending_messages._f363[v_3/*14*/] == a_0) {
            return v_3;
        }
    }
    return -1;
}

void sub_1dc6(auto a_0) {
    if (a_0._f8 == 235) {
        return ;
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f1, 5)) {
        for (v_3 = 0; v_3 < 3; v_3 += 1) {
            if (GAMEPLAY::IS_BIT_SET(a_0._f2, v_3)) {
                sub_1e61(a_0._f6, v_3, 0);
            }
        }
    }
    if (a_0._f8 != 0) {
        sub_1e24(a_0._f8, 0);
        return ;
    }
}

void sub_1e24(auto a_0, auto a_1) {
    if ((a_0 == 235) || (a_0 == 0)) {
        return ;
    }
    game_state._f1C4F[a_0/*1*/] = 1;
    game_state._f1C4F._fEC[a_0/*1*/] = GAMEPLAY::GET_GAME_TIMER() + a_1;
}

void sub_1e61(auto a_0, auto a_1, auto a_2) {
    g_B99 = a_0;
    if (g_75[a_0/*10*/]._f8 != 138) {
        sub_2088();
        if (a_1 == 4) {
            game_state._f7F07[a_0/*29*/]._fC[0/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._fC[1/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._fC[2/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._f18[0/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._f18[1/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._f18[2/*1*/] = 1;
        } else {
            if ((game_state._f7F07[a_0/*29*/]._fC[a_1/*1*/] == 1) && (game_state._f7F07[a_0/*29*/]._f18[a_1/*1*/] == 1)) {
                a_2 = 0;
            }
            game_state._f7F07[a_0/*29*/]._fC[a_1/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._f18[a_1/*1*/] = 1;
        }
        if (a_2) {
            if (!is_in_transition) {
                if (a_1 != 4) {
                    if (current_character != a_1) {
                        g_B7E[a_1/*4*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
                        g_B8F[a_1/*1*/] = 1;
                        g_B94[a_1/*1*/] = a_0;
                    } else if (a_0 == current_character) {
                    } else {
                        g_B4D[1/*6*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
                        g_B4D[1/*6*/]._f5 = a_1;
                        sub_200b();
                    }
                } else {
                    g_B4D[1/*6*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
                    g_B4D[1/*6*/]._f5 = a_1;
                    sub_200b();
                }
            } else {
                g_B4D[1/*6*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
                g_B4D[1/*6*/]._f5 = a_1;
                sub_200b();
            }
        }
    }
}

void sub_200b() {
    v_2/*"64"*/ = UI::_GET_LABEL_TEXT(&game_state._f7F07[g_B99/*29*/]._f7);
    if (g_BAC == 0) {
        UI::_SET_NOTIFICATION_TEXT_ENTRY("");
        v_12/*"64"*/ = UI::_GET_LABEL_TEXT(&g_B4D[1/*6*/]);
        v_22 = UI::_GET_LABEL_TEXT("CELL_253");
        UI::_SET_NOTIFICATION_MESSAGE(&v_2, &v_2, 0, 3, v_22, &v_12);
    } else {
        UI::_SET_NOTIFICATION_TEXT_ENTRY("CELL_255");
        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_B4D[1/*6*/]);
        UI::_SET_NOTIFICATION_MESSAGE(&v_2, &v_2, 0, 3, "", 0);
    }
    GAMEPLAY::CLEAR_BIT(&g_8EB, 0);
}

void sub_2088() {
    if (is_message_state(14)) {
        if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[0/*29*/]) {
                current_character = 0;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[1/*29*/]) {
                current_character = 1;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[2/*29*/]) {
                current_character = 2;
            } else {
                current_character = 0;
            }
        }
    } else {
        current_character = sub_2129();
        if (current_character == 145) {
            current_character = 3;
        }
        if (is_in_transition) {
            current_character = 3;
        }
        if (current_character > 3) {
            current_character = 3;
        }
    }
}

auto sub_2129() {
    sub_2142();
    return game_state._f6EA._f21B._fDDD;
}

void sub_2142() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_227c(game_state._f6EA._f21B._fDDD) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_223f(PLAYER::PLAYER_PED_ID());
            if (sub_907(v_2) && ((!is_message_state(14)) || g_18658)) {
                if ((game_state._f6EA._f21B._fDDD != v_2) && sub_907(game_state._f6EA._f21B._fDDD)) {
                    game_state._f6EA._f21B._fDDE = game_state._f6EA._f21B._fDDD;
                }
                game_state._f6EA._f21B._fDDF = v_2;
                game_state._f6EA._f21B._fDDD = v_2;
                return ;
            }
        } else {
            if (game_state._f6EA._f21B._fDDD != 145) {
                game_state._f6EA._f21B._fDDF = game_state._f6EA._f21B._fDDD;
            }
            return ;
        }
    }
    game_state._f6EA._f21B._fDDD = 145;
}

auto sub_223f(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_227c(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_227c(auto a_0) {
    if (sub_907(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

auto sub_22a6(auto a_0) {
    v_3 = 0;
    v_4 = 0;
    for (; v_3 < 35; v_3 += 1) {
        if (!GAMEPLAY::IS_STRING_NULL(&game_state._f31E7[v_3/*104*/])) {
            if (GAMEPLAY::ARE_STRINGS_EQUAL(&game_state._f31E7[v_3/*104*/], a_0)) {
                v_4 = game_state._f31E7[v_3/*104*/]._f1D;
                return v_4;
            }
        }
    }
    return v_4;
}

void load_message_name_into(auto message_hash, auto name) {
    if (get_message_category(message_hash) == 2) {
        switch (message_hash) {
        case 0x6d56f32d:
            name/*"16"*/ = "AH_1_U";
            break;
        case 0x7e0eb525:
            name/*"16"*/ = "AH_2_U";
            break;
        case 0xdc42fca:
            name/*"16"*/ = "AH_P_U";
            break;
        case 0x26182369:
            name/*"16"*/ = "AH_GETA_R";
            break;
        case 0x73d98de3:
            name/*"16"*/ = "AH3B_UNLK";
            break;
        case 0x617d68e2:
            name/*"16"*/ = "ASS1_MIS";
            break;
        case 0xd059dc72:
            name/*"16"*/ = "ASS_FINA";
            break;
        case 0x80babd35:
            name/*"16"*/ = "ASS_FINB";
            break;
        case 0x89dcfad4:
            name/*"16"*/ = "ARM2_END";
            break;
        case 0x33aa39ec:
            name/*"16"*/ = "ARM3_END2";
            break;
        case 0x1877e53d:
            name/*"16"*/ = "ARM3_END1";
            break;
        case 0x145db0fd:
            name/*"16"*/ = "CAR1_ALL";
            break;
        case 0x4f302b76:
            name/*"16"*/ = "CAR2_DONE";
            break;
        case 0xf9f17:
            name/*"16"*/ = "CAR3_F_REM";
            break;
        case 0xb59f55d:
            name/*"16"*/ = "CAR3_MT_REM";
            break;
        case 0x68febf18:
            name/*"16"*/ = "MIC2_MIS";
            break;
        case 0x63d10d5d:
            name/*"16"*/ = "CHOP_UNLOCK";
            break;
        case 0x911bd97:
            name/*"16"*/ = "CITY_RON";
            break;
        case 0x2be36c88:
            name/*"16"*/ = "CHEF_U";
            break;
        case 0x3207a446:
            name/*"16"*/ = "DOCKS1_F_SHT";
            break;
        case 0x188569ed:
            name/*"16"*/ = "DCKP1_U";
            break;
        case 0xda58ba7b:
            name/*"16"*/ = "DCKP2B_U";
            break;
        case 0xdf38a48c:
            name/*"16"*/ = "DCKP2B_R";
            break;
        case 0x68e48091:
            name/*"16"*/ = "DOCKS1_M_FLY";
            break;
        case 0x4ba7fc1d:
            name/*"16"*/ = "DCK2_U";
            break;
        case 0x245e499a:
            name/*"16"*/ = "EXIL2_U";
            break;
        case 0xb3a2d7a2:
            name/*"16"*/ = "EXIL2_OSC";
            break;
        case 0xb2e5a37f:
            name/*"16"*/ = "RBH_PAT";
            break;
        case 0x4f2b6359:
            name/*"16"*/ = "EXIL_WAD";
            break;
        case 0x537920b7:
            name/*"16"*/ = "EXL_HUNT_PIE";
            break;
        case 0x3a86adc4:
            name/*"16"*/ = "EXL_JIM_MCAR";
            break;
        case 0xaad87797:
            name/*"16"*/ = "FAM1_END";
            break;
        case 0xa01d7b2c:
            name/*"16"*/ = "FAM3_INIT";
            break;
        case 0x17e3416:
            name/*"16"*/ = "FAM5_END";
            break;
        case 0x68b48b:
            name/*"16"*/ = "FBI4I_U";
            break;
        case 0xd8f25bf0:
            name/*"16"*/ = "FB4_RM_M";
            break;
        case 0x4b7daa4c:
            name/*"16"*/ = "FB4_RM_FT";
            break;
        case 0x9d7f81fd:
            name/*"16"*/ = "FBI4_UM";
            break;
        case 0xf88a17b7:
            name/*"16"*/ = "FBI4_UFT";
            break;
        case 0x4ee47a0b:
            name/*"16"*/ = "FBI4_ASS";
            break;
        case 0xb8264fa4:
            name/*"16"*/ = "FBI4_MTASS";
            break;
        case 0x8c36c185:
            name/*"16"*/ = "FIH_PA_U";
            break;
        case 0xe7abeb45:
            name/*"16"*/ = "FIH_PB_U";
            break;
        case 0x7b9323b0:
            name/*"16"*/ = "FIH_PD_U";
            break;
        case 0xb783050a:
            name/*"16"*/ = "FIH_GETA_R";
            break;
        case 0x2a003834:
            name/*"16"*/ = "FIH_KILLM";
            break;
        case 0xb88a553e:
            name/*"16"*/ = "FIH_KILLT";
            break;
        case 0x1dac995d:
            name/*"16"*/ = "FORSALE_TXT";
            break;
        case 0xa67ab126:
            name/*"16"*/ = "FRAN0_END";
            break;
        case 0x3841fd70:
            name/*"16"*/ = "FRA1_END";
            break;
        case 0x2916eba5:
            name/*"16"*/ = "JP1A_U";
            break;
        case 0xd846b710:
            name/*"16"*/ = "JH1A_FRNK";
            break;
        case 0xefdf2905:
            name/*"16"*/ = "JP2A_U";
            break;
        case 0x9e2679d7:
            name/*"16"*/ = "JP1B_U";
            break;
        case 0x57ae20c8:
            name/*"16"*/ = "JP1B_HOST";
            break;
        case 0x8ff738be:
            name/*"16"*/ = "JH2_P";
            break;
        case 0x93b9e729:
            name/*"16"*/ = "JOSH1_TXT";
            break;
        case 0xe3b4a6f2:
            name/*"16"*/ = "MAR1_U";
            break;
        case 0xa1f812d3:
            name/*"16"*/ = "MAR_CASH1";
            break;
        case 0xb65d6c0f:
            name/*"16"*/ = "MAR_CASH2";
            break;
        case 0xef91499:
            name/*"16"*/ = "MAR_TREV";
            break;
        case 0xb8040ea8:
            name/*"16"*/ = "ME_A_FAIL";
            break;
        case 0x3043874f:
            name/*"16"*/ = "ME_A_FAIL2";
            break;
        case 0xf71352b1:
            name/*"16"*/ = "ME_J_FAIL";
            break;
        case 0x4a407ca4:
            name/*"16"*/ = "ME_T_FAIL";
            break;
        case 0xa1496af9:
            name/*"16"*/ = "MIC4_M";
            break;
        case 0xd8c7927f:
            name/*"16"*/ = "MIC4_F";
            break;
        case 0x2e0ec791:
            name/*"16"*/ = "PLTSC_U";
            break;
        case 0x35d19a26:
            name/*"16"*/ = "RBH_U";
            break;
        case 0xce75bc60:
            name/*"16"*/ = "RBH_P_U";
            break;
        case 0x1d045a5a:
            name/*"16"*/ = "SHOOT_U";
            break;
        case 0xe913d6d0:
            name/*"16"*/ = "SXT_";
            break;
        case 0x8d42fa99:
            name/*"16"*/ = "FTX_";
            break;
        case 0x7caf29c1:
            name/*"16"*/ = "FTX_";
            break;
        case 0x139a21ed:
            name/*"16"*/ = "FTX_";
            break;
        case 0x93e9b695:
            name/*"16"*/ = "FTX_";
            break;
        case 0x1bbc034e:
            name/*"16"*/ = "FTX_";
            break;
        case 0xcf55cd20:
            name/*"16"*/ = "FTX_";
            break;
        case 0xd61e255d:
            name/*"16"*/ = "FTX_";
            break;
        case 0x10318ad9:
            name/*"16"*/ = "PRM";
            break;
        case 0x6505e080:
            name/*"16"*/ = "BSTXT_";
            break;
        case 0xf5314440:
            name/*"16"*/ = "FGTXT_M";
            break;
        case 0x5491666f:
            name/*"16"*/ = "FGTXT_F";
            break;
        case 0x7c69a035:
            name/*"16"*/ = "FGTXT_T";
            break;
        case 0x955303a2:
            name/*"16"*/ = "FGTXT_H";
            break;
        case 0x1ccf525d:
            name/*"16"*/ = "BARR3_U";
            break;
        case 0x6b50f09b:
            name/*"16"*/ = "BARR4_U";
            break;
        case 0x7d89864c:
            name/*"16"*/ = "EPSI6_U";
            break;
        case 0x95ad3957:
            name/*"16"*/ = "EXTR2_U";
            break;
        case 0xbadc0ca2:
            name/*"16"*/ = "EXTR3_U";
            break;
        case 0xbc5d950e:
            name/*"16"*/ = "HUNT1_U";
            break;
        case 0xa9e940e0:
            name/*"16"*/ = "PAP3_U";
            break;
        case 0x39c1cec8:
            name/*"16"*/ = "TON3_U";
            break;
        case 0x6afd26ce:
            name/*"16"*/ = "TON4_U";
            break;
        case 0x7684cf5c:
            name/*"16"*/ = "RE_BUR_MIS";
            break;
        case 0x4994650a:
            name/*"16"*/ = "SOL2_PASS";
            break;
        case 0x5a645d52:
            name/*"16"*/ = "DRF3_U";
            break;
        case 0xd725a1c9:
            name/*"16"*/ = "DRF4_U";
            break;
        case 0xe08dde02:
            name/*"16"*/ = "SR_AIRPORT";
            break;
        case 0x10836e3e:
            name/*"16"*/ = "SR_FREEWAY";
            break;
        case 0x1c6ee74f:
            name/*"16"*/ = "SR_CANALS";
            break;
        case 0x8eb3c345:
            name/*"16"*/ = "MGTNS_U";
            break;
        case 0x91fe2fc1:
            name/*"16"*/ = "MGTNS_U2";
            break;
        case 0xcf671b4f:
            name/*"16"*/ = "T_LOST_HANGER";
            break;
        case 0x15eaada8:
            name/*"16"*/ = "OMEGA_TXT1";
            break;
        case 0x3ed4559:
            name/*"16"*/ = "BLAZER3_U";
            break;
        case 0x4ae4f7ca:
            name/*"16"*/ = "ABI1_MISS";
            break;
        case 0x4ef68140:
            name/*"16"*/ = "HAO1_ENDT";
            break;
        case 0x20f23520:
            name/*"16"*/ = "PHT_WLD_BEV1";
            break;
        case 0x6862d0e7:
            name/*"16"*/ = "MNKY_CAR_UNLK";
            break;
        case 0xca5f7c47:
            name/*"16"*/ = "MNKY_LAMAR";
            break;
        case 0x43eebabf:
            name/*"16"*/ = "CRACE_UNLK";
            break;
        default:
            break;
        }
    } else {
        return ;
    }
}

auto get_message_category(auto message_hash) {
    switch (message_hash) {
    case 0x807837f1:
    case 0x81d97e29:
    case 0x82cde574:
    case 0x82e32b95:
    case 0x83e133cb:
    case 0x84ae3100:
    case 0x86d9151b:
    case 0x87f4c4b0:
    case 0x896d9160:
    case 0x89f03feb:
    case 0x8a861085:
    case 0x8bd1cea8:
    case 0x8c0f260c:
    case 0x8f274a57:
    case 0x8f58e8e9:
    case 0x900acdba:
    case 0x91ddcded:
    case 0x922f9878:
    case 0x93ab6dcf:
    case 0x95ad1f73:
    case 0x96b0e466:
    case 0x96e1384c:
    case 0x97799060:
    case 0x97ece4e1:
    case 0x99b334e8:
    case 0x9b414af2:
    case 0x9b659305:
    case 0x9e70e8ea:
    case 0x9ec82ed8:
    case 0x9f52b230:
    case 0x9fbbbdfc:
    case 0xa3bc808b:
    case 0xa6bf8a93:
    case 0xa7e431cd:
    case 0xa87dc8ef:
    case 0xa9759b6f:
    case 0xaa7c3b89:
    case 0xaa802249:
    case 0xac4ac946:
    case 0xaca19075:
    case 0xace7a27a:
    case 0xae8d04bd:
    case 0xaf009c30:
    case 0xafe57fc3:
    case 0xb07a9229:
    case 0xb1187417:
    case 0xb11f8ac6:
    case 0xb220b35f:
    case 0xb3f0e08d:
    case 0xb8741010:
    case 0xb887ef6b:
    case 0xb8971f9f:
    case 0xb8b52e7e:
    case 0xbacca1a5:
    case 0xbb2072eb:
    case 0xbb5c3f3c:
    case 0xbbfa5a0a:
    case 0xbc597452:
    case 0xbde6e903:
    case 0xbe0c97a1:
    case 0xbfed3f70:
    case 0xc0c37cff:
    case 0xc14a43a3:
    case 0xc48d606b:
    case 0xc5e38d79:
    case 0xcb32bdfe:
    case 0xcb744ba3:
    case 0xce1043c3:
    case 0xd21ff9cd:
    case 0xd2f51974:
    case 0xd34fe721:
    case 0xd565a07e:
    case 0xd69f0978:
    case 0xd6d65b54:
    case 0xd9323e52:
    case 0xda503684:
    case 0xdaee9071:
    case 0xdce408ea:
    case 0xdd712a67:
    case 0xdd9ab18e:
    case 0xdefe2414:
    case 0xe11d4224:
    case 0xe4a76caf:
    case 0xe505df9e:
    case 0xe581a290:
    case 0xe5b5692c:
    case 0xe6e883c4:
    case 0xe707422a:
    case 0xeaa92474:
    case 0xeb258282:
    case 0xec478636:
    case 0xec496d40:
    case 0xed4064e6:
    case 0xedb5187d:
    case 0xeed1855f:
    case 0xeff92ac5:
    case 0xf1e7311b:
    case 0xf29b7a55:
    case 0xf35df4c9:
    case 0xf5725e6e:
    case 0xf82d774b:
    case 0xf850f39e:
    case 0xf8c8d27f:
    case 0xf945e2d3:
    case 0xfb59c9c7:
    case 0xfbf395a8:
    case 0xfd2c2214:
    case 0xfda498e6:
    case 0xfff17b38:
    case 0x191aaf:
    case 0x16e65f9:
    case 0x43bfc01:
    case 0x47165bb:
    case 0x4f207d9:
    case 0x5a745ca:
    case 0x9223005:
    case 0x9340090:
    case 0xa29d166:
    case 0xb0dcd3c:
    case 0xb31ccd7:
    case 0xb9c8ac2:
    case 0xe555e76:
    case 0x10ad4f01:
    case 0x12a36297:
    case 0x132bf8bf:
    case 0x1387e864:
    case 0x143e6049:
    case 0x14755a78:
    case 0x183ed81f:
    case 0x1953dede:
    case 0x1b01ae83:
    case 0x1b73648d:
    case 0x1bc96eb3:
    case 0x1bf474fb:
    case 0x1fa5bf80:
    case 0x209249b5:
    case 0x2130b5ea:
    case 0x229d4331:
    case 0x253e8183:
    case 0x265cd92b:
    case 0x282843d9:
    case 0x28fc54fe:
    case 0x2a25f8c7:
    case 0x2af4a6f8:
    case 0x2b6718a6:
    case 0x2c42d867:
    case 0x2e5a7405:
    case 0x2f6de363:
    case 0x2fc37c7d:
    case 0x36412c68:
    case 0x384f588e:
    case 0x3965c1c3:
    case 0x39689edb:
    case 0x3d776e77:
    case 0x406a36f1:
    case 0x408804e7:
    case 0x43a0cbe1:
    case 0x4cf22e51:
    case 0x4daf89f6:
    case 0x51ce526b:
    case 0x51eacdac:
    case 0x540b5420:
    case 0x55bdbdbf:
    case 0x59883104:
    case 0x59f8277c:
    case 0x5b11ad95:
    case 0x5d6e7bad:
    case 0x5f142e52:
    case 0x5fe560b2:
    case 0x600756de:
    case 0x6151ace3:
    case 0x6416b323:
    case 0x67297a5c:
    case 0x6950e70e:
    case 0x69890d17:
    case 0x6b64d84c:
    case 0x6f4e5c90:
    case 0x7017daa6:
    case 0x70b20d6d:
    case 0x71a61a4d:
    case 0x7596eaf7:
    case 0x76ef231f:
    case 0x78c0e237:
    case 0x792ff3e2:
    case 0x7b1c2d3d:
    case 0x7ce81c87:
    case 0x7ddf902f:
        return 0;
        break;
    default:
        switch (message_hash) {
        case 0x850a7d98:
        case 0x883fd83d:
        case 0x89cf0a7d:
        case 0x972ec4c9:
        case 0x9fcea718:
        case 0xa2ab0b77:
        case 0xaf6d24fb:
        case 0xb300e084:
        case 0xbbfd136e:
        case 0xbca5695e:
        case 0xbd50f180:
        case 0xbe1c4954:
        case 0xc75d03b7:
        case 0xce371020:
        case 0xcff9ed0f:
        case 0xd154996b:
        case 0xd5aa106c:
        case 0xd5f8a2b3:
        case 0xd60ea11a:
        case 0xd9a2005f:
        case 0xe7c84652:
        case 0xe9985094:
        case 0xef632be1:
        case 0xf1a47ebc:
        case 0xf9826801:
        case 0xfa756bac:
        case 0xd747070:
        case 0x12af366b:
        case 0x1ee3253f:
        case 0x1f0505c9:
        case 0x1f223344:
        case 0x24bf40a7:
        case 0x283ce6df:
        case 0x28c84511:
        case 0x308e91ae:
        case 0x38705859:
        case 0x3a204ff9:
        case 0x3beaff96:
        case 0x40f1184b:
        case 0x42613553:
        case 0x43350460:
        case 0x4946fa06:
        case 0x4ce1feda:
        case 0x4e24e26c:
        case 0x4ea39427:
        case 0x52c4990d:
        case 0x5d236ad7:
        case 0x609fa964:
        case 0x61105d6a:
        case 0x6351d9a8:
        case 0x6708e2e9:
        case 0x6ac570d4:
        case 0x6bb49f27:
        case 0x70eb33e6:
        case 0x76cb3e07:
        case 0x7983ac32:
        case 0x7a753ca8:
        case 0x7b07ed3b:
        case 0x7d04ef08:
            return 0;
            break;
        case 0xb60976a2:
        case 0xd2480017:
        case 0xe4495071:
        case 0xe4cd3ed0:
        case 0xf9fb438e:
        case 0xaa70f07:
        case 0x2c0343f6:
        case 0x3c9d7d9d:
        case 0x50ebf9f5:
        case 0x6174d2a4:
        case 0x6879598f:
        case 0x7ee77a9e:
            return 1;
            break;
        case 0x80babd35:
        case 0x89dcfad4:
        case 0x8c36c185:
        case 0x8d42fa99:
        case 0x8eb3c345:
        case 0x8ff738be:
        case 0x91fe2fc1:
        case 0x93b9e729:
        case 0x93e9b695:
        case 0x955303a2:
        case 0x95ad3957:
        case 0x9d7f81fd:
        case 0x9e2679d7:
        case 0xa01d7b2c:
        case 0xa1496af9:
        case 0xa1f812d3:
        case 0xa67ab126:
        case 0xa9e940e0:
        case 0xaad87797:
        case 0xb2e5a37f:
        case 0xb3a2d7a2:
        case 0xb65d6c0f:
        case 0xb783050a:
        case 0xb8040ea8:
        case 0xb8264fa4:
        case 0xb88a553e:
        case 0xbadc0ca2:
        case 0xbc5d950e:
        case 0xca5f7c47:
        case 0xce75bc60:
        case 0xcf55cd20:
        case 0xcf671b4f:
        case 0xd059dc72:
        case 0xd61e255d:
        case 0xd725a1c9:
        case 0xd846b710:
        case 0xd8c7927f:
        case 0xd8f25bf0:
        case 0xda58ba7b:
        case 0xdf38a48c:
        case 0xe08dde02:
        case 0xe3b4a6f2:
        case 0xe7abeb45:
        case 0xe913d6d0:
        case 0xefdf2905:
        case 0xf5314440:
        case 0xf71352b1:
        case 0xf88a17b7:
        case 0xf9f17:
        case 0x68b48b:
        case 0x17e3416:
        case 0x3ed4559:
        case 0x911bd97:
        case 0xb59f55d:
        case 0xdc42fca:
        case 0xef91499:
        case 0x10318ad9:
        case 0x10836e3e:
        case 0x139a21ed:
        case 0x145db0fd:
        case 0x15eaada8:
        case 0x1877e53d:
        case 0x188569ed:
        case 0x1bbc034e:
        case 0x1c6ee74f:
        case 0x1ccf525d:
        case 0x1d045a5a:
        case 0x1dac995d:
        case 0x20f23520:
        case 0x245e499a:
        case 0x26182369:
        case 0x2916eba5:
        case 0x2a003834:
        case 0x2be36c88:
        case 0x2e0ec791:
        case 0x3043874f:
        case 0x3207a446:
        case 0x33aa39ec:
        case 0x35d19a26:
        case 0x3841fd70:
        case 0x39c1cec8:
        case 0x3a86adc4:
        case 0x43eebabf:
        case 0x4994650a:
        case 0x4a407ca4:
        case 0x4ae4f7ca:
        case 0x4b7daa4c:
        case 0x4ba7fc1d:
        case 0x4ee47a0b:
        case 0x4ef68140:
        case 0x4f2b6359:
        case 0x4f302b76:
        case 0x537920b7:
        case 0x5491666f:
        case 0x57ae20c8:
        case 0x5a645d52:
        case 0x617d68e2:
        case 0x63d10d5d:
        case 0x6505e080:
        case 0x6862d0e7:
        case 0x68e48091:
        case 0x68febf18:
        case 0x6afd26ce:
        case 0x6b50f09b:
        case 0x6d56f32d:
        case 0x73d98de3:
        case 0x7684cf5c:
        case 0x7b9323b0:
        case 0x7c69a035:
        case 0x7caf29c1:
        case 0x7d89864c:
        case 0x7e0eb525:
            return 2;
            break;
        default:
            switch (message_hash) {
            case 0x80b4f1f9:
            case 0x80e2e9f5:
            case 0x8442b916:
            case 0x8682ec56:
            case 0x8ee4da2c:
            case 0x90774620:
            case 0x9141374b:
            case 0x917ef31f:
            case 0x9370c8a0:
            case 0x99911393:
            case 0x9c2cbe24:
            case 0x9da7d91d:
            case 0xa3845be1:
            case 0xa3b4978a:
            case 0xa52f5284:
            case 0xa55711b6:
            case 0xa65abcee:
            case 0xaab6bebb:
            case 0xab643ef7:
            case 0xac2c8475:
            case 0xb250428a:
            case 0xb559bad4:
            case 0xbbc11fcf:
            case 0xbed6a9c9:
            case 0xc042a9c9:
            case 0xc05b34a1:
            case 0xc302563d:
            case 0xc5942008:
            case 0xc89ae156:
            case 0xc90ec608:
            case 0xce52d794:
            case 0xd0f49b50:
            case 0xd20931b2:
            case 0xd360b80c:
            case 0xd50d0d18:
            case 0xd5bc7bb1:
            case 0xd84207c6:
            case 0xdb4d62b6:
            case 0xdbdceba4:
            case 0xe005757d:
            case 0xe0e429ee:
            case 0xe1dffa77:
            case 0xe50b4938:
            case 0xe6c7f3fc:
            case 0xe74a0282:
            case 0xf819b29c:
            case 0xfa752fd8:
            case 0x81304d9:
            case 0x88cbd34:
            case 0xaeedf2d:
            case 0xde8f4d4:
            case 0x13090323:
            case 0x14337d1f:
            case 0x1512bb6f:
            case 0x1574d704:
            case 0x1632e753:
            case 0x165018b2:
            case 0x19a97fdc:
            case 0x19b04309:
            case 0x1abfd091:
            case 0x20913b61:
            case 0x25b1c10d:
            case 0x2949a988:
            case 0x2a6e5d04:
            case 0x2d7e3df9:
            case 0x2fc3982f:
            case 0x2fc6a2ec:
            case 0x334198fb:
            case 0x390c29c5:
            case 0x39aa5a25:
            case 0x3aab4e74:
            case 0x3eab0617:
            case 0x432db261:
            case 0x481cc1ba:
            case 0x488d6141:
            case 0x5014c3e8:
            case 0x50f14383:
            case 0x537c383d:
            case 0x54e16b2a:
            case 0x552622b6:
            case 0x55e28af2:
            case 0x5a110444:
            case 0x61a24268:
            case 0x6c6428ea:
            case 0x70f23ae5:
            case 0x75051623:
            case 0x7882ef65:
            case 0x788fc410:
            case 0x7b022dba:
            case 0x7d966c77:
            case 0x7e7a7c18:
                return 3;
                break;
            }
            break;
        }
        break;
    }
    return -1;
}

void sub_3591(auto a_0) {
    if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 3)) {
        v_3 = game_state.pending_messages[g_8D97/*15*/]._f7;
        if (v_3 != -1) {
            if (sub_35f8(PLAYER::PLAYER_PED_ID(), v_3, g_8B75[v_3/*5*/]._f3 * 0.35)) {
                sub_6389(&a_0, 0);
                sub_5f6a(0);
                comms_state = 0;
                next_message_deadline = a_0 + 20000;
            }
        }
    }
}

auto sub_35f8(auto a_0, auto a_1, auto a_2) {
    if (!ENTITY::IS_ENTITY_DEAD(a_0)) {
        v_5/*{5}*/ = g_8B75[a_1/*5*/];
        v_A = v_5._f3;
        if (a_2 > 0.0) {
            v_A = a_2;
        }
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(a_0, 1), v_5, 1) < v_A) {
            return 1;
        } else if (v_5._f4 != -1) {
            return sub_35f8(a_0, v_5._f4, a_2);
        }
    }
    return 0;
}

void sub_365d() {
    if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 1)) {
        if (!sub_1bef(26)) {
            if (sub_3908()) {
                switch (game_state.pending_messages[g_8D97/*15*/]) {
                case 0xe4495071:
                case 0xaa70f07:
                case 0x6174d2a4:
                    sub_38f1("AM_H_FDEC", -1);
                    sub_1966(26);
                    break;
                }
            }
        }
        if (!game_state.pending_messages._f391) {
            if (sub_38e6() != 0) {
                if (sub_15a1("AM_H_FDEC")) {
                    UI::CLEAR_HELP(0);
                }
                if (sub_38e6() == 1) {
                    game_state.pending_messages._f392 = 1;
                    game_state.pending_messages._f391 = 1;
                } else {
                    if (g_8D98 != -1) {
                        sub_38a9(&g_8D98);
                        sub_37e4();
                        for (v_2 = 0; v_2 < 9; v_2 += 1) {
                            if (game_state._f4161._fAF[v_2/*19*/]._f8 == 0) {
                                sub_376e(&game_state._f4161._fAF[v_2/*19*/]._f5, 300.0);
                            }
                        }
                    }
                    game_state.pending_messages._f392 = 0;
                    game_state.pending_messages._f391 = 1;
                }
            }
        }
    }
}

void sub_376e(auto a_0, auto a_1) {
    a_0._f1 = sub_379c(GAMEPLAY::IS_BIT_SET(a_0, 4)) - a_1;
    GAMEPLAY::SET_BIT(a_0, 1);
    GAMEPLAY::CLEAR_BIT(a_0, 2);
    a_0._f2 = 0.0;
}

auto sub_379c(auto a_0) {
    if (a_0) {
        return __678_$BBDA792448DB5A89(GAMEPLAY::GET_GAME_TIMER()) / 1000.0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_3 = NETWORK::GET_NETWORK_TIME();
        return __678_$BBDA792448DB5A89(v_3) / 1000.0;
    }
    return __678_$BBDA792448DB5A89(GAMEPLAY::GET_GAME_TIMER()) / 1000.0;
}

void sub_37e4() {
    for (v_2 = 0; v_2 < 8; v_2 += 1) {
        if (g_15934[v_2/*17*/] && (!g_15934[v_2/*17*/]._f1)) {
            if (g_15934[v_2/*17*/]._f3 == 0) {
                if (((g_15934[v_2/*17*/]._f5 != 88) && (g_15934[v_2/*17*/]._f5 != 89)) && (g_15934[v_2/*17*/]._f5 != 92)) {
                    sub_386b(g_15934[v_2/*17*/]._f5, 1);
                }
            }
        }
    }
}

void sub_386b(auto a_0, auto a_1) {
    if (a_1) {
        if (((a_0 != 88) && (a_0 != 89)) && (a_0 != 92)) {
            g_14DB0[a_0/*2*/] = 1;
        }
    } else {
        g_14DB0[a_0/*2*/] = 0;
    }
}

void sub_38a9(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (!(a_0 == g_8B4E)) {
        a_0 = -1;
        return ;
    }
    a_0 = -1;
    g_8B4D = 0;
    g_8B4F = 0;
    message_state = 15;
    g_D968 = 0;
    g_D969 = 0;
}

auto sub_38e6() {
    return g_4159;
}

void sub_38f1(auto a_0, auto a_1) {
    UI::_SET_TEXT_COMPONENT_FORMAT(a_0);
    UI::_DISPLAY_HELP_TEXT_FROM_STRING_LABEL(0, 0, 1, a_1);
}

auto sub_3908() {
    if (GAMEPLAY::IS_BIT_SET(g_8EC, 23)) {
        if (g_3D95 == 1) {
            return 1;
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

void sub_3932() {
    if (l_4E) {
        v_2 = game_state.pending_messages[g_8D97/*15*/]._f9;
        if (v_2 != -1) {
            if (sub_51d5(game_state.pending_messages[g_8D97/*15*/]._f9)) {
                v_3 = game_state.pending_messages[g_8D97/*15*/]._fA;
            } else {
                v_3 = game_state.pending_messages[g_8D97/*15*/]._fB;
            }
            if (v_3 != -1) {
                sub_39cf(v_3, &v_4);
                sub_39ae(&v_4, &v_4._f4);
            } else { }
        } else { }
        l_4E = 0;
    }
}

void sub_39ae(auto a_0, auto a_1) {
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        g_3D99 = 1;
        g_3DA0/*"24"*/ = a_0;
        g_3D9A/*"24"*/ = a_1;
    }
}

void sub_39cf(auto a_0, auto a_1) {
    if (get_message_category(a_0) == 0) {
        a_1/*"16"*/ = "CHATCAU";
        a_1._f8/*"16"*/ = "";
        switch (a_0) {
        case 0xb11f8ac6:
            a_1/*"16"*/ = "FB3aAUD";
            a_1._f4/*"16"*/ = "F3A_INTALT";
            break;
        case 0xd9323e52:
            a_1/*"16"*/ = "AHFAUD";
            a_1._f4/*"16"*/ = "AHF_C4";
            break;
        case 0xf1e7311b:
            a_1/*"16"*/ = "AHFAUD";
            a_1._f4/*"16"*/ = "AHF_C7";
            break;
        case 0xe11d4224:
            a_1/*"16"*/ = "AHFAUD";
            a_1._f4/*"16"*/ = "AHF_C5";
            break;
        case 0x8f58e8e9:
            a_1/*"16"*/ = "AHFAUD";
            a_1._f4/*"16"*/ = "AHF_C6";
            break;
        case 0x2e5a7405:
            a_1/*"16"*/ = "AHFAUD";
            a_1._f4/*"16"*/ = "AHF_C8";
            break;
        case 0xa3bc808b:
            a_1/*"16"*/ = "AHFAUD";
            a_1._f4/*"16"*/ = "AHF_C9";
            break;
        case 0x69890d17:
            a_1/*"16"*/ = "FBIS4AU";
            a_1._f4/*"16"*/ = "AH3A_PASS";
            break;
        case 0xaf009c30:
            a_1/*"16"*/ = "AH3BAUD";
            a_1._f4/*"16"*/ = "AH3B_PASS";
            break;
        case 0x600756de:
            a_1/*"16"*/ = "ARFLAUD";
            a_1._f4/*"16"*/ = "ARFL_CALL1";
            break;
        case 0x2c42d867:
            a_1/*"16"*/ = "ARFLAUD";
            a_1._f4/*"16"*/ = "ARFL_CALL_CT";
            break;
        case 0x97799060:
            a_1/*"16"*/ = "ARFLAUD";
            a_1._f4/*"16"*/ = "ARFL_CALL2";
            break;
        case 0x16e65f9:
            a_1/*"16"*/ = "ASFLAUD";
            a_1._f4/*"16"*/ = "ASFL_CALL1";
            break;
        case 0x14755a78:
            a_1/*"16"*/ = "OJASAUD";
            a_1._f4/*"16"*/ = "OJAS_HOTEL_C";
            break;
        case 0x28fc54fe:
            a_1/*"16"*/ = "CSFLAUD";
            a_1._f4/*"16"*/ = "CSFL_CALL0";
            break;
        case 0xbc597452:
            a_1/*"16"*/ = "MIFLAUD";
            a_1._f4/*"16"*/ = "MIFL_CALL2";
            break;
        case 0xbb2072eb:
            a_1/*"16"*/ = "CHFLAUD";
            a_1._f4/*"16"*/ = "CHFL_CALL1";
            a_1._f8/*"16"*/ = "CHFL_CALL2";
            break;
        case 0xfff17b38:
            a_1/*"16"*/ = "DHFAUD";
            a_1._f4/*"16"*/ = "DHF_C3";
            break;
        case 0xbde6e903:
            a_1/*"16"*/ = "DHFAUD";
            a_1._f4/*"16"*/ = "DHF_C4";
            break;
        case 0x51ce526b:
            a_1/*"16"*/ = "DHFAUD";
            a_1._f4/*"16"*/ = "DHF_C3B";
            break;
        case 0xe505df9e:
            a_1/*"16"*/ = "DHFAUD";
            a_1._f4/*"16"*/ = "DHF_WP1";
            break;
        case 0x384f588e:
            a_1/*"16"*/ = "DHFAUD";
            a_1._f4/*"16"*/ = "DHF_WP2";
            break;
        case 0xd34fe721:
            a_1/*"16"*/ = "DHFAUD";
            a_1._f4/*"16"*/ = "DHF_C2A";
            break;
        case 0xa7e431cd:
            a_1/*"16"*/ = "EXL1AUD";
            a_1._f4/*"16"*/ = "EXL1_CALLM";
            break;
        case 0xa9759b6f:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_CALL1";
            break;
        case 0xbb5c3f3c:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_CALL2";
            break;
        case 0x61105d6a:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR09";
            break;
        case 0x6ac570d4:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR10";
            break;
        case 0xf1a47ebc:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR11";
            break;
        case 0xbbfd136e:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR05";
            break;
        case 0x6bb49f27:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR12";
            break;
        case 0x7a753ca8:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR13";
            break;
        case 0x883fd83d:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR14";
            break;
        case 0x1f0505c9:
            a_1/*"16"*/ = "EXILAUD";
            a_1._f4/*"16"*/ = "EXIL_MAR07";
            break;
        case 0x191aaf:
            a_1/*"16"*/ = "FMFLAUD";
            a_1._f4/*"16"*/ = "FMFL_AM4";
            break;
        case 0xd21ff9cd:
            a_1/*"16"*/ = "EXL3AUD";
            a_1._f4/*"16"*/ = "EXL3_STEVE";
            break;
        case 0xd69f0978:
            a_1/*"16"*/ = "EPSDAUD";
            a_1._f4/*"16"*/ = "EPSD_CRIS";
            break;
        case 0xcb32bdfe:
            a_1/*"16"*/ = "EPSDAUD";
            a_1._f4/*"16"*/ = "EPSD_FIN";
            break;
        case 0xda503684:
            a_1/*"16"*/ = "EPS8AU";
            a_1._f4/*"16"*/ = "EPS8_CF1";
            break;
        case 0x96e1384c:
            a_1/*"16"*/ = "EPS8AU";
            a_1._f4/*"16"*/ = "EPS8_CF3";
            break;
        case 0x76ef231f:
            a_1/*"16"*/ = "FMFLAUD";
            a_1._f4/*"16"*/ = "FMFL_TRFAM4";
            break;
        case 0xcb744ba3:
            a_1/*"16"*/ = "FMFLAUD";
            a_1._f4/*"16"*/ = "FMFL_TRCHILL";
            break;
        case 0xe581a290:
            a_1/*"16"*/ = "FOFLAUD";
            a_1._f4/*"16"*/ = "FOFL_CALL1A";
            a_1._f8/*"16"*/ = "FOFL_CALL1A2";
            break;
        case 0x9340090:
            a_1/*"16"*/ = "FOFLAUD";
            a_1._f4/*"16"*/ = "FOFL_CALL1B";
            break;
        case 0x2f6de363:
            a_1/*"16"*/ = "FOFLAUD";
            a_1._f4/*"16"*/ = "FOFL_CALL4";
            break;
        case 0x91ddcded:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP1_MENDC";
            break;
        case 0xd565a07e:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP1_FENDC";
            break;
        case 0xb8971f9f:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP1_TENDC";
            break;
        case 0x51eacdac:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP2_MENDC";
            break;
        case 0x1fa5bf80:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP2_FENDC";
            break;
        case 0xe555e76:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP2_TENDC";
            break;
        case 0x229d4331:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP4_MENDC";
            break;
        case 0x2b6718a6:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP4_FENDC";
            break;
        case 0x36412c68:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP4_TENDC";
            break;
        case 0x47165bb:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP5_MENDC";
            break;
        case 0xb8741010:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP5_FENDC";
            break;
        case 0x2fc37c7d:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBIP5_TENDC";
            break;
        case 0x5b11ad95:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBI4_READY";
            break;
        case 0xf29b7a55:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBI4_WAIT";
            break;
        case 0x87f4c4b0:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBI4_READY";
            break;
        case 0xed4064e6:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBI4_ITSONF";
            break;
        case 0xb220b35f:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBI4_ITSONT";
            break;
        case 0xdaee9071:
            a_1/*"16"*/ = "FBIPRAU";
            a_1._f4/*"16"*/ = "FBI4_ISAGO";
            break;
        case 0x9fbbbdfc:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_CHC1";
            break;
        case 0x896d9160:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_CHC1B";
            break;
        case 0x8a861085:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_CHC2";
            break;
        case 0xc0c37cff:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_CHC2B";
            break;
        case 0x93ab6dcf:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_CHC3";
            break;
        case 0x82e32b95:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_AMAN";
            break;
        case 0xa87dc8ef:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_DAVE";
            break;
        case 0xf8c8d27f:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_DEV09";
            break;
        case 0xdd712a67:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_LAM22";
            break;
        case 0xaca19075:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_MDEAD1";
            break;
        case 0x1bc96eb3:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_MDEAD2";
            break;
        case 0xb0dcd3c:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_MDEAD3";
            break;
        case 0x7596eaf7:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_STE01";
            break;
        case 0xeed1855f:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_TDEAD1";
            break;
        case 0xfd2c2214:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_TDEAD2";
            break;
        case 0xdefe2414:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_STN1";
            break;
        case 0xaa802249:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_STN2";
            break;
        case 0x86d9151b:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_STN3";
            break;
        case 0xe4a76caf:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_CUT1E";
            break;
        case 0x132bf8bf:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_CUT2E";
            break;
        case 0x12a36297:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_CUT3E";
            break;
        case 0x89f03feb:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_MPC1";
            break;
        case 0x5d6e7bad:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_FPC1";
            break;
        case 0x9b659305:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_TPC1";
            break;
        case 0x9ec82ed8:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_MPC2";
            break;
        case 0x3965c1c3:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_FPC2";
            break;
        case 0xb1187417:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_TPC2";
            break;
        case 0x7ce81c87:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_CAR1";
            break;
        case 0x5fe560b2:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_CAR2";
            break;
        case 0x43a0cbe1:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_CAR3";
            break;
        case 0xb31ccd7:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_TRN1";
            break;
        case 0xfda498e6:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_TRN2";
            break;
        case 0xc48d606b:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_TRN3";
            break;
        case 0xf850f39e:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_GETA1";
            break;
        case 0xf82d774b:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_GETA2";
            break;
        case 0xec496d40:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_GETA3";
            break;
        case 0xb07a9229:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_RDY";
            break;
        case 0xf35df4c9:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_PREP";
            break;
        case 0x6416b323:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_STNG";
            break;
        case 0xace7a27a:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_GETA";
            break;
        case 0x5a745ca:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_DRILL";
            break;
        case 0xbe0c97a1:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_TRN";
            break;
        case 0xeff92ac5:
            a_1/*"16"*/ = "FHFAUD";
            a_1._f4/*"16"*/ = "FHF_GAU";
            break;
        case 0x209249b5:
            a_1/*"16"*/ = "FRFLAUD";
            a_1._f4/*"16"*/ = "FRFL_1LC";
            break;
        case 0x84ae3100:
            a_1/*"16"*/ = "LSFLAUD";
            a_1._f4/*"16"*/ = "LSFL_ENG01";
            break;
        case 0xae8d04bd:
            a_1/*"16"*/ = "LSFLAUD";
            a_1._f4/*"16"*/ = "LSFL_ENG02";
            break;
        case 0x183ed81f:
            a_1/*"16"*/ = "LSFLAUD";
            a_1._f4/*"16"*/ = "LSFL_ENG03";
            break;
        case 0xce1043c3:
            a_1/*"16"*/ = "LSFLAUD";
            a_1._f4/*"16"*/ = "LSFL_ENG04";
            break;
        case 0xfb59c9c7:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_C1";
            break;
        case 0x1387e864:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_C3A";
            break;
        case 0x97ece4e1:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_P10A";
            break;
        case 0x8c0f260c:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_P10B";
            break;
        case 0xc14a43a3:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_BZD1";
            break;
        case 0x5f142e52:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_TRANSM";
            break;
        case 0xe6e883c4:
            a_1/*"16"*/ = "JHFAUD";
            a_1._f4/*"16"*/ = "JHF_TRANSF";
            break;
        case 0xe5b5692c:
            a_1/*"16"*/ = "MIFLAUD";
            a_1._f4/*"16"*/ = "MIFL_DAVE";
            break;
        case 0x9223005:
            a_1/*"16"*/ = "MIFLAUD";
            a_1._f4/*"16"*/ = "MIFL_TR1";
            break;
        case 0xe9985094:
            a_1/*"16"*/ = "MIFLAUD";
            a_1._f4/*"16"*/ = "MIFL_PREM";
            break;
        case 0xfbf395a8:
            a_1/*"16"*/ = "MIFLAUD";
            a_1._f4/*"16"*/ = "MIFL_AM1";
            break;
        case 0x2a25f8c7:
            a_1/*"16"*/ = "PAP3AAU";
            a_1._f4/*"16"*/ = "PAP3A_ENDCAL";
            break;
        case 0x792ff3e2:
            a_1/*"16"*/ = "PAFLAUD";
            a_1._f4/*"16"*/ = "PAFL_01";
            break;
        case 0x6b64d84c:
            a_1/*"16"*/ = "PAFLAUD";
            a_1._f4/*"16"*/ = "PAFL_02";
            break;
        case 0x99b334e8:
            a_1/*"16"*/ = "PAFLAUD";
            a_1._f4/*"16"*/ = "PAFL_03";
            break;
        case 0x81d97e29:
            a_1/*"16"*/ = "RHFAUD";
            a_1._f4/*"16"*/ = "RHF_C1";
            break;
        case 0xbbfa5a0a:
            a_1/*"16"*/ = "RHFAUD";
            a_1._f4/*"16"*/ = "RHF_C1A";
            break;
        case 0x7017daa6:
            a_1/*"16"*/ = "RHFAUD";
            a_1._f4/*"16"*/ = "RHF_C2";
            break;
        case 0xb3f0e08d:
            a_1/*"16"*/ = "RHFAUD";
            a_1._f4/*"16"*/ = "RHF_C2A";
            break;
        case 0xaa7c3b89:
            a_1/*"16"*/ = "RHFAUD";
            a_1._f4/*"16"*/ = "RHF_C3";
            break;
        case 0x406a36f1:
            a_1/*"16"*/ = "FNFLAUD";
            a_1._f4/*"16"*/ = "FNFL_TANISHA";
            break;
        case 0x6151ace3:
            a_1/*"16"*/ = "FMFLAUD";
            a_1._f4/*"16"*/ = "FMFL_CALL2B";
            break;
        case 0xbfed3f70:
            a_1/*"16"*/ = "SLFLAUD";
            a_1._f4/*"16"*/ = "SLFL_MAR04";
            break;
        case 0x265cd92b:
            a_1/*"16"*/ = "T1M4AUD";
            a_1._f4/*"16"*/ = "SOL3_PASS";
            break;
        case 0x2af4a6f8:
            a_1/*"16"*/ = "DIVEAU";
            a_1._f4/*"16"*/ = "DIVE_PHONE";
            break;
        case 0x4daf89f6:
            a_1/*"16"*/ = "SONARAU";
            a_1._f4/*"16"*/ = "SONAR_PHONE";
            break;
        case 0xafe57fc3:
            a_1/*"16"*/ = "TRV5AUD";
            a_1._f4/*"16"*/ = "TRV5_LESCALL";
            break;
        case 0xb887ef6b:
            a_1/*"16"*/ = "REBU2AU";
            a_1._f4/*"16"*/ = "REBU2_CALLM";
            break;
        case 0x408804e7:
            a_1/*"16"*/ = "REBU2AU";
            a_1._f4/*"16"*/ = "REBU2_CALLF";
            break;
        case 0x82cde574:
            a_1/*"16"*/ = "REBU2AU";
            a_1._f4/*"16"*/ = "REBU2_CALLT";
            break;
        case 0xc5e38d79:
            a_1/*"16"*/ = "HAO1AU";
            a_1._f4/*"16"*/ = "HAO1_PCW";
            break;
        case 0xdd9ab18e:
            a_1/*"16"*/ = "TOWAUD";
            a_1._f4/*"16"*/ = "TOW_CALLSALE";
            break;
        case 0x78c0e237:
            a_1/*"16"*/ = "PROPAUD";
            a_1._f4/*"16"*/ = "PRP_INTRO";
            break;
        case 0xac4ac946:
            a_1/*"16"*/ = "PROPAUD";
            a_1._f4/*"16"*/ = "PRP_INTROM";
            break;
        case 0xf945e2d3:
            a_1/*"16"*/ = "PROPAUD";
            a_1._f4/*"16"*/ = "PRP_INTROF2";
            break;
        case 0x143e6049:
            a_1/*"16"*/ = "PMPLANE";
            a_1._f4/*"16"*/ = "PMPLA_MAN";
            break;
        case 0x1b01ae83:
            a_1/*"16"*/ = "PROPAUD";
            a_1._f4/*"16"*/ = "PRP_INTROF";
            break;
        case 0x12af366b:
            a_1/*"16"*/ = "FMMAUD";
            a_1._f4/*"16"*/ = "FMM_GRGa";
            break;
        case 0x7983ac32:
            a_1/*"16"*/ = "FMMAUD";
            a_1._f4/*"16"*/ = "FMM_GRRa";
            break;
        case 0x6351d9a8:
            a_1/*"16"*/ = "FMMAUD";
            a_1._f4/*"16"*/ = "FMM_GRCa";
            break;
        case 0x70eb33e6:
            a_1/*"16"*/ = "FMMAUD";
            a_1._f4/*"16"*/ = "FMM_GRHa";
            break;
        case 0x6708e2e9:
            a_1/*"16"*/ = "FMFAUD";
            a_1._f4/*"16"*/ = "FMF_GRGa";
            break;
        case 0x3a204ff9:
            a_1/*"16"*/ = "FMFAUD";
            a_1._f4/*"16"*/ = "FMF_GRRa";
            break;
        case 0xd5aa106c:
            a_1/*"16"*/ = "FMFAUD";
            a_1._f4/*"16"*/ = "FMF_GRCa";
            break;
        case 0x4ce1feda:
            a_1/*"16"*/ = "FMFAUD";
            a_1._f4/*"16"*/ = "FMF_GRB";
            break;
        case 0x609fa964:
            a_1/*"16"*/ = "FMFAUD";
            a_1._f4/*"16"*/ = "FMF_GRHa";
            break;
        case 0x3beaff96:
            a_1/*"16"*/ = "FMTAUD";
            a_1._f4/*"16"*/ = "FMT_GRGa";
            break;
        case 0x43350460:
            a_1/*"16"*/ = "FMTAUD";
            a_1._f4/*"16"*/ = "FMT_GRRa";
            break;
        case 0xb300e084:
            a_1/*"16"*/ = "FMTAUD";
            a_1._f4/*"16"*/ = "FMT_GRCa";
            break;
        case 0x76cb3e07:
            a_1/*"16"*/ = "FMTAUD";
            a_1._f4/*"16"*/ = "FMT_GRHa";
            break;
        default:
            switch (a_0) {
            case 0x7ddf902f:
                a_1/*"16"*/ = "FMFLAUD";
                a_1._f4/*"16"*/ = "FMFL_AM1";
                break;
            case 0x4cf22e51:
                a_1/*"16"*/ = "FMFLAUD";
                a_1._f4/*"16"*/ = "FMFL_AM2";
                break;
            case 0x9b414af2:
                a_1/*"16"*/ = "FMFLAUD";
                a_1._f4/*"16"*/ = "FMFL_AM3";
                break;
            case 0x6950e70e:
                a_1/*"16"*/ = "FMFLAUD";
                a_1._f4/*"16"*/ = "FMFL_AM4";
                break;
            case 0xeaa92474:
                a_1/*"16"*/ = "HTAMBAU";
                a_1._f4/*"16"*/ = "HTAMB_PH1";
                break;
            case 0xdce408ea:
                a_1/*"16"*/ = "HTAMBAU";
                a_1._f4/*"16"*/ = "HTAMB_PH2";
                break;
            case 0x922f9878:
                a_1/*"16"*/ = "HTAMBAU";
                a_1._f4/*"16"*/ = "HTAMB_PH3";
                break;
            case 0xe707422a:
                a_1/*"16"*/ = "HTAMBAU";
                a_1._f4/*"16"*/ = "HTAMB_PH4";
                break;
            case 0x95ad1f73:
                a_1/*"16"*/ = "HTAMBAU";
                a_1._f4/*"16"*/ = "HTAMB_PH5";
                break;
            case 0x55bdbdbf:
                a_1/*"16"*/ = "JHFAUD";
                a_1._f4/*"16"*/ = "JHF_DAVE";
                break;
            case 0x807837f1:
                a_1._f4/*"16"*/ = "CHATC_DEV03";
                break;
            case 0x71a61a4d:
                a_1._f4/*"16"*/ = "CHATC_DEV04";
                break;
            case 0x8bd1cea8:
                a_1._f4/*"16"*/ = "CHATC_DEV05";
                break;
            case 0x7b1c2d3d:
                a_1._f4/*"16"*/ = "CHATC_DEV06";
                break;
            case 0x253e8183:
                a_1._f4/*"16"*/ = "CHATC_DEV07";
                break;
            case 0x96b0e466:
                a_1._f4/*"16"*/ = "CHATC_DEV08";
                break;
            case 0x900acdba:
                a_1._f4/*"16"*/ = "CHATC_JIM05";
                break;
            case 0x10ad4f01:
                a_1._f4/*"16"*/ = "CHATC_JIM06";
                break;
            case 0x1b73648d:
                a_1._f4/*"16"*/ = "CHATC_JIM07";
                break;
            case 0xec478636:
                a_1._f4/*"16"*/ = "CHATC_JIM08";
                break;
            case 0xd6d65b54:
                a_1._f4/*"16"*/ = "CHATC_JIM09";
                break;
            case 0xeb258282:
                a_1._f4/*"16"*/ = "CHATC_JIM10";
                break;
            case 0x1953dede:
                a_1._f4/*"16"*/ = "CHATC_JIM11";
                break;
            case 0x70b20d6d:
                a_1._f4/*"16"*/ = "CHATC_JIM12";
                break;
            case 0x9e70e8ea:
                a_1._f4/*"16"*/ = "CHATC_JIM13";
                break;
            case 0x8f274a57:
                a_1._f4/*"16"*/ = "CHATC_JIM14";
                break;
            case 0xbacca1a5:
                a_1._f4/*"16"*/ = "CHATC_JIM15";
                break;
            case 0x39689edb:
                a_1._f4/*"16"*/ = "CHATC_JIM16";
                break;
            case 0x67297a5c:
                a_1._f4/*"16"*/ = "CHATC_JIM17";
                break;
            case 0x540b5420:
                a_1._f4/*"16"*/ = "CHATC_JIM18";
                break;
            case 0x83e133cb:
                a_1._f4/*"16"*/ = "CHATC_JIM19";
                break;
            case 0xa6bf8a93:
                a_1._f4/*"16"*/ = "CHATC_JIM20";
                break;
            case 0xb8b52e7e:
                a_1._f4/*"16"*/ = "CHATC_JIM21";
                break;
            case 0xa29d166:
                a_1._f4/*"16"*/ = "CHATC_JIM22";
                break;
            case 0x1bf474fb:
                a_1._f4/*"16"*/ = "CHATC_JIM23";
                break;
            case 0xedb5187d:
                a_1._f4/*"16"*/ = "CHATC_JIM24";
                break;
            case 0x4f207d9:
                a_1/*"16"*/ = "CSFLAUD";
                a_1._f4/*"16"*/ = "LAM_06";
                break;
            case 0x6f4e5c90:
                a_1._f4/*"16"*/ = "CHATC_LAM08";
                break;
            case 0x59883104:
                a_1._f4/*"16"*/ = "CHATC_LAM09";
                break;
            case 0x9f52b230:
                a_1._f4/*"16"*/ = "CHATC_LAM10";
                break;
            case 0x3d776e77:
                a_1._f4/*"16"*/ = "CHATC_LAM11";
                break;
            case 0xb9c8ac2:
                a_1._f4/*"16"*/ = "CHATC_LAM12";
                break;
            case 0x59f8277c:
                a_1._f4/*"16"*/ = "CHATC_LAM13";
                break;
            case 0x282843d9:
                a_1._f4/*"16"*/ = "CHATC_LAM14";
                break;
            case 0x43bfc01:
                a_1._f4/*"16"*/ = "CHATC_LAM15";
                break;
            case 0xd2f51974:
                a_1._f4/*"16"*/ = "CHATC_LAM16";
                break;
            case 0x2130b5ea:
                a_1._f4/*"16"*/ = "CHATC_LAM17";
                break;
            case 0xf5725e6e:
                a_1._f4/*"16"*/ = "CHATC_LAM18";
                break;
            case 0xce371020:
                a_1._f4/*"16"*/ = "CHATC_LAM19";
                break;
            case 0x24bf40a7:
                a_1._f4/*"16"*/ = "CHATC_LAM20";
                break;
            case 0x7b07ed3b:
                a_1/*"16"*/ = "FNFLAUD";
                a_1._f4/*"16"*/ = "FNFL_LAM21";
                break;
            case 0x972ec4c9:
                a_1._f4/*"16"*/ = "CHATC_RON03";
                break;
            case 0x40f1184b:
                a_1._f4/*"16"*/ = "CHATC_RON04";
                break;
            case 0x283ce6df:
                a_1._f4/*"16"*/ = "CHATC_RON05";
                break;
            case 0x9fcea718:
                a_1._f4/*"16"*/ = "CHATC_SOL01";
                break;
            case 0x1ee3253f:
                a_1._f4/*"16"*/ = "CHATC_SOL02";
                break;
            case 0x38705859:
                a_1._f4/*"16"*/ = "CHATC_SOL03";
                break;
            case 0x4946fa06:
                a_1._f4/*"16"*/ = "CHATC_SOL04";
                break;
            case 0x1f223344:
                a_1._f4/*"16"*/ = "CHATC_STR01";
                break;
            case 0x7d04ef08:
                a_1._f4/*"16"*/ = "CHATC_STR02";
                break;
            case 0xf9826801:
                a_1._f4/*"16"*/ = "CHATC_STR03";
                break;
            case 0xc75d03b7:
                a_1._f4/*"16"*/ = "CHATC_STR04";
                break;
            case 0xd60ea11a:
                a_1._f4/*"16"*/ = "CHATC_STR05";
                break;
            case 0x89cf0a7d:
                a_1._f4/*"16"*/ = "CHATC_TEXIL1";
                break;
            case 0x4ea39427:
                a_1._f4/*"16"*/ = "CHATC_TEXIL2";
                break;
            case 0xbd50f180:
                a_1._f4/*"16"*/ = "CHATC_TEXIL3";
                break;
            case 0xd5f8a2b3:
                a_1._f4/*"16"*/ = "CHATC_TEXIL4";
                break;
            case 0xd154996b:
                a_1._f4/*"16"*/ = "CHATC_TEXIL5";
                break;
            case 0xfa756bac:
                a_1._f4/*"16"*/ = "CHATC_TEXIL6";
                break;
            case 0xe7c84652:
                a_1._f4/*"16"*/ = "CHATC_TEXIL7";
                break;
            case 0xbca5695e:
                a_1/*"16"*/ = "FMFLAUD";
                a_1._f4/*"16"*/ = "FMFL_TNOT";
                break;
            case 0x28c84511:
                a_1._f4/*"16"*/ = "CHATC_TFAM";
                break;
            case 0x52c4990d:
                a_1._f4/*"16"*/ = "CHATC_TFAM4";
                break;
            case 0x850a7d98:
                a_1._f4/*"16"*/ = "CHATC_TFAM5";
                break;
            case 0xd9a2005f:
                a_1._f4/*"16"*/ = "CHATC_WADE01";
                break;
            case 0xef632be1:
                a_1._f4/*"16"*/ = "CHATC_WADE02";
                break;
            case 0xbe1c4954:
                a_1._f4/*"16"*/ = "CHATC_WADE04";
                break;
            case 0xcff9ed0f:
                a_1._f4/*"16"*/ = "CHATC_WADE05";
                break;
            case 0xa2ab0b77:
                a_1._f4/*"16"*/ = "CHATC_MAR01";
                break;
            case 0xaf6d24fb:
                a_1._f4/*"16"*/ = "CHATC_MAR02";
                break;
            case 0x4e24e26c:
                a_1._f4/*"16"*/ = "CHATC_MAR03";
                break;
            case 0x5d236ad7:
                a_1._f4/*"16"*/ = "CHATC_CHG1";
                break;
            case 0x42613553:
                a_1._f4/*"16"*/ = "CHATC_CHG2";
                break;
            case 0x308e91ae:
                a_1._f4/*"16"*/ = "CHATC_CHG3";
                break;
            case 0xd747070:
                a_1._f4/*"16"*/ = "CHATC_HOSP";
                break;
            default:
                break;
            }
            break;
        }
    } else {
        return ;
    }
}

auto sub_51d5(auto a_0) {
    if ((a_0 == -1) || (a_0 == 30)) {
        return 0;
    }
    sub_51fe(a_0, &v_3);
    return pcall:v_3();
}

void sub_51fe(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        a_1 = 23902;
        break;
    case 1:
        a_1 = 23801;
        break;
    case 2:
        a_1 = 23752;
        break;
    case 3:
        a_1 = 23718;
        break;
    case 4:
        a_1 = 23570;
        break;
    case 5:
        a_1 = 23547;
        break;
    case 6:
        a_1 = 23523;
        break;
    case 7:
        a_1 = 23285;
        break;
    case 8:
        a_1 = 23177;
        break;
    case 9:
        a_1 = 23153;
        break;
    case 10:
        a_1 = 23130;
        break;
    case 11:
        a_1 = 23106;
        break;
    case 12:
        a_1 = 22964;
        break;
    case 13:
        a_1 = 22941;
        break;
    case 14:
        a_1 = 22917;
        break;
    case 16:
        a_1 = 22885;
        break;
    case 17:
        a_1 = 22863;
        break;
    case 18:
        a_1 = 22697;
        break;
    case 19:
        a_1 = 22683;
        break;
    case 20:
        a_1 = 22659;
        break;
    case 21:
        a_1 = 22601;
        break;
    case 22:
        a_1 = 22541;
        break;
    case 23:
        a_1 = 21707;
        break;
    case 24:
        a_1 = 21680;
        break;
    case 25:
        a_1 = 21653;
        break;
    case 26:
        a_1 = 21626;
        break;
    case 27:
        a_1 = 21577;
        break;
    case 28:
        a_1 = 21528;
        break;
    case 29:
        a_1 = 21479;
        break;
    default:
        a_1 = 23902;
        break;
    }
}

auto sub_53e7() {
    v_2 = 5 - 3;
    if ((v_2 >= 0) && (v_2 < 3)) {
        if (ENTITY::DOES_ENTITY_EXIST(g_154E9[v_2/*1*/])) {
            return 0;
        }
    }
    return 1;
}

auto sub_5418() {
    v_2 = 4 - 3;
    if ((v_2 >= 0) && (v_2 < 3)) {
        if (ENTITY::DOES_ENTITY_EXIST(g_154E9[v_2/*1*/])) {
            return 0;
        }
    }
    return 1;
}

auto sub_5449() {
    v_2 = 3 - 3;
    if ((v_2 >= 0) && (v_2 < 3)) {
        if (ENTITY::DOES_ENTITY_EXIST(g_154E9[v_2/*1*/])) {
            return 0;
        }
    }
    return 1;
}

auto sub_547a() {
    if (ENTITY::DOES_ENTITY_EXIST(g_15B55[2/*1*/])) {
        return 0;
    }
    return 1;
}

auto sub_5495() {
    if (ENTITY::DOES_ENTITY_EXIST(g_15B55[1/*1*/])) {
        return 0;
    }
    return 1;
}

auto sub_54b0() {
    if (ENTITY::DOES_ENTITY_EXIST(g_15B55[0/*1*/])) {
        return 0;
    }
    return 1;
}

auto sub_54cb() {
    if (SCRIPT::IS_THREAD_ACTIVE(game_state._f4161._f18B)) {
        return 0;
    }
    v_2 = 4 - 3;
    if (v_2 < 3) {
        if (ENTITY::DOES_ENTITY_EXIST(g_154E9[v_2/*1*/])) {
            return 0;
        }
    }
    v_3 = 14;
    v_4 = 5;
    v_5 = TIME::GET_CLOCK_HOURS();
    if (v_3 < v_4) {
        if ((v_5 < v_3) || (v_5 >= v_4)) {
            return 0;
        }
    } else if ((v_5 < v_3) && (v_5 >= v_4)) {
        return 0;
    }
    v_6 = sub_5628(sub_57b2(sub_2129()), 4);
    if (v_6 >= 9) {
        return 0;
    } else {
        if (g_154FF[v_6/*2*/] != 0) {
            return 0;
        }
        if (game_state._f4161._fAF[v_6/*19*/]._f2 != 0) {
            return 0;
        }
        if (sub_5618(&game_state._f4161._fAF[v_6/*19*/]._f5) && (sub_55c9(&game_state._f4161._fAF[v_6/*19*/]._f5) < (5.0 * 60.0))) {
            return 0;
        }
    }
    return 1;
}

auto sub_55c9(auto a_0) {
    if (sub_5618(a_0)) {
        if (sub_5608(a_0)) {
            return a_0._f2;
        } else {
            return sub_379c(GAMEPLAY::IS_BIT_SET(a_0, 4)) - a_0._f1;
        }
    } else {
        return a_0._f1;
    }
}

auto sub_5608(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(a_0, 2);
}

auto sub_5618(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(a_0, 1);
}

auto sub_5628(auto a_0, auto a_1) {
    if (((a_0 != 0) && (a_0 != 1)) && (a_0 != 2)) {
        if (((a_1 == 0) || (a_1 == 1)) || (a_1 == 2)) {
            v_4 = a_1;
            a_1 = a_0;
            a_0 = v_4;
        }
    }
    switch (a_0) {
    case 0:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 0;
            break;
        case 2:
            return 2;
            break;
        case 3:
            return 10;
            break;
        case 4:
            return 5;
            break;
        case 5:
            return 8;
            break;
        default:
            return 10;
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 10;
            break;
        case 2:
            return 1;
            break;
        case 3:
            return 3;
            break;
        case 4:
            return 6;
            break;
        case 5:
            return 10;
            break;
        default:
            return 10;
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            return 2;
            break;
        case 1:
            return 1;
            break;
        case 2:
            return 10;
            break;
        case 3:
            return 4;
            break;
        case 4:
            return 7;
            break;
        case 5:
            return 10;
            break;
        default:
            return 10;
            break;
        }
        break;
    }
    return 10;
}

auto sub_57b2(auto a_0) {
    if (a_0 == 145) {
        return 7;
    } else if (a_0 < 147) {
        return game_state._f7F07[a_0/*29*/]._fB;
    } else if (a_0 == 144) {
        return 7;
    } else if (a_0 == 147) {
        return 6;
    } else if (a_0 == 148) {
        return 6;
    } else {
        return 6;
    }
}

auto sub_580d() {
    if (SCRIPT::IS_THREAD_ACTIVE(game_state._f4161._f18B)) {
        return 0;
    }
    v_2 = 3 - 3;
    if (v_2 < 3) {
        if (ENTITY::DOES_ENTITY_EXIST(g_154E9[v_2/*1*/])) {
            return 0;
        }
    }
    return 1;
}

auto sub_5849() {
    for (v_2 = 0; v_2 < game_state.pending_messages.count; v_2 += 1) {
        if (game_state.pending_messages[v_2/*15*/] == 0x792ff3e2) {
            return 0;
        }
    }
    return 1;
}

auto sub_5883() {
    return GAMEPLAY::IS_BIT_SET(game_state._f4338[26/*6*/], 3);
}

auto sub_589b() {
    return sub_1bc3(15);
}

auto sub_58a9() {
    if (g_151A9 == -1) {
        g_151A9 = GAMEPLAY::GET_GAME_TIMER();
    }
    if ((GAMEPLAY::GET_GAME_TIMER() - g_151A9) > 240000) {
        g_151A9 = -1;
        return 1;
    }
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        v_2 = SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), sub_5911(212, 0));
        if (v_2 > 22500.0) {
            g_151A9 = -1;
            return 1;
        }
    }
    return 0;
}

auto<3> sub_5911(auto a_0, auto a_1) {
    v_4 = a_0;
    if (((v_4 < 0) || (v_4 >= 263)) || (a_0 == 263)) {
        return {0.0, 0.0, 0.0 };
    }
    return g_6350[v_4/*23*/][a_1/*3*/];
}

auto sub_594f() {
    return game_state._f1E27._f14A[71/*6*/];
}

auto sub_5965() {
    if (game_state._f1E27._f63._fCD[8/*1*/] == 4) {
        return 1;
    }
    return 0;
}

auto sub_5985() {
    return !game_state._f1E27._f63._f3A[77/*1*/];
}

auto sub_599d() {
    return game_state._f1E27._f63._f3A[77/*1*/];
}

auto sub_59b4() {
    if (sub_1bc3(88)) {
        return 1;
    } else if (sub_59da(88)) {
        return 1;
    }
    return 0;
}

auto sub_59da(auto a_0) {
    if ((a_0 == 94) || (a_0 == -1)) {
        return 0;
    }
    if (g_14DB0[a_0/*2*/]) {
        return 1;
    }
    for (v_3 = 0; v_3 < g_1410F; v_3 += 1) {
        if (g_1410F[v_3/*5*/] != -1) {
            if (g_10FD2._f6D[g_1410F[v_3/*5*/]/*4*/] == a_0) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_5a42() {
    return !game_state._f1E27._f63._f3A[12/*1*/];
}

auto sub_5a5a() {
    return game_state._f1E27._f63._f3A[12/*1*/];
}

auto sub_5a71() {
    return !game_state._f1E27._f63._f3A[34/*1*/];
}

auto sub_5a89() {
    if (!sub_1bc3(40)) {
        return 0;
    }
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (SYSTEM::VDIST2(sub_5911(181, 0), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)) > 40000.0) {
            return 1;
        }
    }
    if (g_151A9 == -1) {
        g_151A9 = GAMEPLAY::GET_GAME_TIMER();
    }
    if ((GAMEPLAY::GET_GAME_TIMER() - g_151A9) > 30000) {
        g_151A9 = -1;
        return 1;
    }
    return 0;
}

auto sub_5af5() {
    for (v_2 = 0; v_2 < 10; v_2 += 1) {
        for (v_3 = 0; v_3 < g_155AC[v_2/*19*/]; v_3 += 1) {
            v_4 = 0;
            switch (v_2) {
            case 1:
            case 2:
                v_4 = sub_1bc3(90);
                break;
            case 3:
                v_4 = sub_1bc3(74);
                break;
            case 4:
                v_4 = sub_1bc3(75);
                break;
            case 5:
                v_4 = sub_1bc3(93);
                break;
            case 6:
                v_4 = sub_1bc3(69);
                break;
            case 7:
                v_4 = sub_1bc3(70);
                break;
            case 8:
                v_4 = sub_1bc3(84);
                break;
            case 9:
                v_4 = sub_1bc3(85);
                break;
            }
            if (v_4 && (game_state._f1._fC[v_2/*6*/][v_3/*1*/] == 12)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_5be3() {
    return !game_state._f1E27._f63._f3A[45/*1*/];
}

auto sub_5bfb() {
    return game_state._f1E27._f63._f3A[45/*1*/];
}

auto sub_5c12() {
    if (sub_5c27(0)) {
        return 0;
    }
    return 1;
}

auto sub_5c27(auto a_0) {
    if (a_0 >= 147) {
        return 0;
    }
    v_3 = sub_57b2(a_0);
    if (v_3 != 7) {
        for (v_4 = 0; v_4 < 9; v_4 += 1) {
            if ((game_state._f4161._fAF[v_4/*19*/] == v_3) || (game_state._f4161._fAF[v_4/*19*/]._f1 == v_3)) {
                v_5 = g_154FF[v_4/*2*/];
                if ((v_5 == 3) || (v_5 == 4)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_5ca6() {
    if (sub_5c27(0)) {
        return 0;
    }
    if (sub_59da(49)) {
        return 0;
    }
    return 1;
}

auto sub_5cc8() {
    if (sub_5c27(0)) {
        return 0;
    }
    v_2 = TIME::GET_CLOCK_HOURS();
    if ((v_2 < 6) || (v_2 > 14)) {
        return 0;
    }
    return 1;
}

auto sub_5cf9() {
    if (g_151A9 == -1) {
        g_151A9 = GAMEPLAY::GET_GAME_TIMER();
    }
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (!sub_35f8(PLAYER::PLAYER_PED_ID(), 11, 0)) {
            g_151A9 = -1;
            return 1;
        }
        if ((GAMEPLAY::GET_GAME_TIMER() - g_151A9) > 240000) {
            if (!sub_35f8(PLAYER::PLAYER_PED_ID(), 10, 0)) {
                g_151A9 = -1;
                return 1;
            }
        }
    }
    return 0;
}

auto sub_5d5e() {
    return 1;
}

void sub_5d67(auto a_0) {
    if (g_8D97 != -1) {
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 1) && (!game_state.pending_messages._f391)) {
            sub_6389(a_0, 0);
        } else {
            game_state.pending_messages._f390 = 1;
            sub_5ee1(game_state.pending_messages[g_8D97/*15*/]._f6, sub_2129());
            sub_5ec6();
            sub_1dc6(&game_state.pending_messages[g_8D97/*15*/]);
            game_state.pending_messages._f38F = game_state.pending_messages[g_8D97/*15*/];
            next_message_deadline = a_0 + 20000;
            g_8D9C[game_state.pending_messages[g_8D97/*15*/]._f6/*1*/] = a_0 + 20000;
            sub_9c0(game_state.pending_messages[g_8D97/*15*/]);
            sub_913(game_state.pending_messages[g_8D97/*15*/]);
            sub_b30(g_8D97);
            if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 15)) {
                switch (sub_2129()) {
                case 0:
                    v_3 = 0;
                    break;
                case 1:
                    v_3 = 1;
                    break;
                case 2:
                    v_3 = 2;
                    break;
                }
                sub_aed(game_state.pending_messages[g_8D97/*15*/]._f6, v_3);
                GAMEPLAY::CLEAR_BIT(&game_state.pending_messages[g_8D97/*15*/]._f1, 15);
            }
            if (sub_1bef(3)) {
                if (!sub_1bc3(1)) {
                    if (sub_15a1("AM_H_FCAL2")) {
                        UI::CLEAR_HELP(0);
                    }
                }
            }
        }
    }
}

void sub_5ec6() {
    asm .vardef<F> 2, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":16}]}]"
    g_8CF2/*{165}*/ = v_2;
}

void sub_5ee1(auto a_0, auto a_1) {
    if (a_0 != a_1) {
        v_4 = sub_57b2(a_0);
        v_5 = sub_57b2(a_1);
        if ((v_4 != 7) && (v_5 != 7)) {
            v_6 = sub_5628(v_4, v_5);
            if (v_6 != 10) {
                sub_5f44(&game_state._f4161._fAF[v_6/*19*/]._f5);
                game_state._f4161._fAF[v_6/*19*/]._f8 = 0;
            }
        }
    }
}

void sub_5f44(auto a_0) {
    sub_376e(a_0, 0.0);
}

auto sub_5f53() {
    if (g_3D60 == 0) {
        return 1;
    } else {
        return 0;
    }
}

void sub_5f6a(auto a_0) {
    if (g_38EB) {
        sub_6001(0, 0);
    }
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8EC, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D60 = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 30);
    } else {
        GAMEPLAY::CLEAR_BIT(&g_8EB, 30);
    }
    if (!sub_5fda()) {
        current_character._f1 = 3;
    }
}

auto sub_5fda() {
    if ((current_character._f1 == 1) || (current_character._f1 == 0)) {
        return 1;
    } else {
        return 0;
    }
}

void sub_6001(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_62e0(0)) {
            g_38EB = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_380E);
            }
            g_3805/*{3}*/ = g_3817[g_3816/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    } else if (g_38EB == 1) {
        g_38EB = 0;
        g_3805/*{3}*/ = g_381E[g_3816/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_380E);
        } else {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    }
}

void sub_6075() {
    g_38F2 = 0;
    sub_6085();
}

void sub_6085() {
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (g_384C == 1)) {
        AUDIO::RESTART_SCRIPTED_CONVERSATION();
        g_4153 = 0;
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
        current_character._f1 = g_384F;
        return ;
    }
}

auto sub_60bc() {
    switch (sub_60f0(&g_8D98, 5, 0, 0, 0)) {
    case 1:
        return 1;
        break;
    case 0:
        sub_5f6a(0);
        break;
    }
    return 0;
}

auto sub_60f0(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_1 == 7) {
        return 0;
    }
    if (!a_3) {
        if (g_15B55._f2C == 1) {
            return 2;
        }
    }
    if (a_1 == 0) {
        if (sub_6276(0)) {
            return 0;
        }
        g_8B50 += 1;
        a_0 = g_8B50;
        PLAYER::SET_PLAYER_INVINCIBLE(PLAYER::GET_PLAYER_INDEX(), 0);
        g_42DE._f5 = 0;
        if (a_2 != 5) {
            PLAYER::FORCE_CLEANUP(8);
        }
        message_state = a_2;
        g_8B4E = a_0;
        g_8B4F = a_4;
        g_8B4D = 0;
        return 1;
    }
    if (a_0 != -1) {
        if (g_8B4D > 0) {
            v_7 = 0;
            for (v_7 = 0; v_7 < g_8B4D; v_7 += 1) {
                if (g_8B53[v_7/*4*/] == a_0) {
                    return 2;
                }
            }
        } else if (g_8B4E == a_0) {
            return 1;
        }
        a_0 = -1;
    }
    if (a_0 == -1) {
        if (!sub_6a5d(a_2)) {
            return 0;
        }
        if (g_8B4D == 8) {
            return 0;
        }
        g_8B50 += 1;
        a_0 = g_8B50;
        g_8B53[g_8B4D/*4*/] = g_8B50;
        g_8B53[g_8B4D/*4*/]._f1 = a_1;
        g_8B53[g_8B4D/*4*/]._f2 = a_2;
        g_8B53[g_8B4D/*4*/]._f3 = 0;
        g_8B4D += 1;
        if (a_4 != 0) {
            sub_6227(a_0, a_4);
        }
    }
    return 2;
}

void sub_6227(auto a_0, auto a_1) {
    if (g_8B4D == 0) {
        return ;
    }
    if (a_0 == -1) {
        return ;
    }
    v_4 = 0;
    for (v_4 = 0; v_4 < g_8B4D; v_4 += 1) {
        if (g_8B53[v_4/*4*/] == a_0) {
            g_8B53[v_4/*4*/]._f3 = a_1;
        }
    }
    a_0 = -1;
}

auto sub_6276(auto a_0) {
    if (message_state == 15) {
        return 0;
    }
    if (sub_6a5d(a_0)) {
        return 0;
    }
    return 1;
}

void sub_6298(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 20);
    } else {
        GAMEPLAY::CLEAR_BIT(&g_8EB, 20);
    }
}

auto sub_62bb() {
    if (g_3D60 == 4) {
        if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
            return 1;
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

auto sub_62e0(auto a_0) {
    if (a_0 == 1) {
        if (current_character._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 14)) {
                return 1;
            } else {
                return 0;
            }
        } else {
            return 0;
        }
    } else {
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (current_character._f1 > 3) {
            return 1;
        } else {
            return 0;
        }
    }
}

auto sub_633a() {
    if ((g_3D91 == 1) || (g_4158 == 1)) {
        return 1;
    } else {
        return 0;
    }
}

auto sub_635d() {
    if (g_4158) {
        return 1;
    } else {
        return 0;
    }
}

auto sub_6373() {
    if (g_383E) {
        return 1;
    } else {
        return 0;
    }
}

void sub_6389(auto a_0, auto a_1) {
    sub_5f6a(0);
    if (sub_15a1("AM_H_FCAL1")) {
        UI::CLEAR_HELP(0);
    }
    if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 15)) {
        switch (sub_2129()) {
        case 0:
            v_4 = 0;
            break;
        case 1:
            v_4 = 1;
            break;
        case 2:
            v_4 = 2;
            break;
        }
        sub_aed(game_state.pending_messages[g_8D97/*15*/]._f6, v_4);
        GAMEPLAY::CLEAR_BIT(&game_state.pending_messages[g_8D97/*15*/]._f1, 15);
    }
    if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 1)) {
        if (!game_state.pending_messages._f391) {
            GAMEPLAY::SET_BIT(&game_state.pending_messages[g_8D97/*15*/]._f1, 10);
            sub_6899(&game_state.pending_messages[g_8D97/*15*/]);
            if (game_state.pending_messages[g_8D97/*15*/]._f6 == 17) {
                sub_1e24(125, 0);
            } else if (game_state.pending_messages[g_8D97/*15*/]._f6 == 14) {
                sub_1e24(126, 0);
            } else if (game_state.pending_messages[g_8D97/*15*/]._f6 == 15) {
                sub_1e24(127, 0);
            }
        }
    }
    if (g_8D98 != -1) {
        sub_37e4();
        sub_38a9(&g_8D98);
        for (v_5 = 0; v_5 < 9; v_5 += 1) {
            if (game_state._f4161._fAF[v_5/*19*/]._f8 == 0) {
                sub_376e(&game_state._f4161._fAF[v_5/*19*/]._f5, 300.0);
            }
        }
    }
    if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 10) || a_1) {
        delay_message(a_0, &game_state.pending_messages[g_8D97/*15*/], 0);
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 3)) {
            if (game_state.pending_messages[g_8D97/*15*/]._f5 < 300000) {
                game_state.pending_messages[g_8D97/*15*/]._f5 += 60000;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 8)) {
            sub_6899(&game_state.pending_messages[g_8D97/*15*/]);
        }
    } else if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[g_8D97/*15*/]._f1, 11)) {
        sub_66dc(game_state.pending_messages[g_8D97/*15*/]._fA, 1, game_state.pending_messages[g_8D97/*15*/]._f2, game_state.pending_messages[g_8D97/*15*/]._f6, game_state.pending_messages[g_8D97/*15*/]._f5, game_state.pending_messages[g_8D97/*15*/]._f5, game_state.pending_messages[g_8D97/*15*/]._f7, game_state.pending_messages[g_8D97/*15*/]._f8, game_state.pending_messages[g_8D97/*15*/]._f9, game_state.pending_messages[g_8D97/*15*/]._f1, 1);
        game_state.pending_messages._f38F = game_state.pending_messages[g_8D97/*15*/];
        game_state.pending_messages._f390 = 0;
        sub_9c0(game_state.pending_messages[g_8D97/*15*/]);
        sub_913(game_state.pending_messages[g_8D97/*15*/]);
        sub_b30(g_8D97);
    } else {
        game_state.pending_messages._f38F = game_state.pending_messages[g_8D97/*15*/];
        game_state.pending_messages._f390 = 0;
        sub_9c0(game_state.pending_messages[g_8D97/*15*/]);
        sub_913(game_state.pending_messages[g_8D97/*15*/]);
        sub_b30(g_8D97);
    }
    sub_5ec6();
    g_8D97 = -1;
}

auto sub_66dc(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    if (sub_570(0)) {
        return 0;
    }
    if (a_4 < 0) {
        return 0;
    }
    if (a_5 < 0) {
        return 0;
    }
    if (a_6 == 76) {
        return 0;
    }
    if (a_7 == 235) {
        return 0;
    }
    if (a_3 < 3) {
        if (GAMEPLAY::IS_BIT_SET(a_2, a_3)) {
            return 0;
        }
    }
    if ((a_2 < 1) || (a_2 > 7)) {
        return 0;
    }
    if (game_state.pending_messages.count < 8) {
        v_D = a_0;
        v_D._f3 = sub_67f7(a_1);
        v_D._f4 = GAMEPLAY::GET_GAME_TIMER() + a_4;
        v_D._f5 = a_5;
        v_D._f1 = a_9;
        v_D._f2 = a_2;
        v_D._f6 = a_3;
        v_D._f7 = a_6;
        v_D._f8 = a_7;
        v_D._f9 = a_8;
        v_D._fA = -1;
        v_D._fB = -1;
        v_D._fD = a_A;
        GAMEPLAY::CLEAR_BIT(&v_D._f1, 0);
        game_state.pending_messages.messages_something[game_state.pending_messages.count/*14*/]/*{14}*/ = v_D;
        game_state.pending_messages.count += 1;
        sub_843(0);
        sub_843(1);
        sub_843(2);
        return 1;
    }
    return 0;
}

auto sub_67f7(auto a_0) {
    switch (a_0) {
    case 0:
    case 4:
        return 5;
        break;
    case 7:
        return 4;
        break;
    case 2:
        return 3;
        break;
    case 1:
        return 2;
        break;
    case 3:
        return 1;
        break;
    case 5:
    case 6:
        return 0;
        break;
    }
    return 7;
}

void delay_message(auto current_time, auto message, auto long_delay) {
    if (message._f3 == 5) {
        message._f4 = current_time + 1000;
    } else if (long_delay) {
        message._f4 = current_time + 10000;
    } else {
        message._f4 = current_time + message._f5;
    }
}

void sub_6899(auto a_0) {
    if (!sub_6a24(a_0)) {
        if (game_state.pending_messages._fC6 < 4) {
            game_state.pending_messages._f89[game_state.pending_messages._fC6/*15*/]/*{15}*/ = a_0;
            game_state.pending_messages._fC6 += 1;
            sub_68f8(a_0._f6);
        } else { }
    } else { }
}

auto sub_68f8(auto a_0) {
    if (g_75[a_0/*10*/]._f8 != 138) {
        game_state._f7F07[a_0/*29*/]._f13[current_character/*1*/] = 1;
        if (game_state._f7F07[a_0/*29*/]._fC[current_character/*1*/] == 0) {
            v_3 = current_character;
            sub_694d(a_0, v_3, 0);
        }
        return 1;
    } else {
        return 0;
    }
}

void sub_694d(auto a_0, auto a_1, auto a_2) {
    if (g_75[a_0/*10*/]._f8 != 138) {
        if (a_1 == 4) {
            game_state._f7F07[a_0/*29*/]._fC[0/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._fC[1/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._fC[2/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._f18[0/*1*/] = 0;
            game_state._f7F07[a_0/*29*/]._f18[1/*1*/] = 0;
            game_state._f7F07[a_0/*29*/]._f18[2/*1*/] = 0;
        } else {
            game_state._f7F07[a_0/*29*/]._fC[a_1/*1*/] = 1;
            game_state._f7F07[a_0/*29*/]._f18[a_1/*1*/] = 0;
        }
        if (a_2) {
            g_B4D[1/*6*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
            g_B4D[1/*6*/]._f5 = a_1;
            GAMEPLAY::SET_BIT(&g_8EB, 0);
        }
    }
}

auto sub_6a24(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages._fC6; v_3 += 1) {
        if (game_state.pending_messages._f89[v_3/*15*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

auto sub_6a5d(auto a_0) {
    return sub_6a6e(a_0, message_state);
}

auto sub_6a6e(auto a_0, auto a_1) {
    if (a_1 == 15) {
        return 1;
    }
    if (a_0 == 15) {
        return 0;
    }
    switch (a_0) {
    case 16:
        switch (a_1) {
        case 7:
        case 9:
        case 10:
        case 13:
        case 14:
            return 0;
            break;
        }
        return 1;
        break;
    case 0:
        switch (a_1) {
        case 5:
        case 17:
            return 1;
            break;
        }
        break;
    case 2:
    case 3:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
        case 17:
            return 1;
            break;
        }
        break;
    case 4:
        if (a_1 == 17) {
            return 1;
        }
        break;
    case 5:
        break;
    case 6:
    case 8:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 7:
        if (a_1 == 6) {
            return 1;
        }
        break;
    case 9:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 10:
        switch (a_1) {
        case 5:
        case 6:
        case 17:
            return 1;
            break;
        }
        break;
    case 11:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 17:
        switch (a_1) {
        case 5:
        case 12:
        case 17:
            return 1;
            break;
        }
        break;
    case 12:
    case 18:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
            return 1;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    }
    return 0;
}

void sub_6c4f() {
    if (l_52 == 1) {
        if (!sub_787a()) {
            AUDIO::STOP_SOUND(l_57);
            AUDIO::PLAY_SOUND_FRONTEND(-1, "End_Squelch", "CB_RADIO_SFX", 1);
            l_52 = 0;
        } else if (!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) {
            sub_7849();
            AUDIO::STOP_SOUND(l_57);
            AUDIO::PLAY_SOUND_FRONTEND(-1, "End_Squelch", "CB_RADIO_SFX", 1);
            l_52 = 0;
        }
    } else if (((GAMEPLAY::GET_GAME_TIMER() - l_54) >= 10000) || (l_53 >= 1)) {
        if (sub_2129() == 2) {
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                    if (AUDIO::_IS_VEHICLE_RADIO_LOUD(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0))) {
                        switch (l_53) {
                        case -1:
                            l_55 = GAMEPLAY::GET_GAME_TIMER();
                            l_56 = GAMEPLAY::GET_GAME_TIMER();
                            l_53 += 1;
                            l_57 = AUDIO::GET_SOUND_ID();
                            break;
                        case 0:
                            if ((GAMEPLAY::GET_GAME_TIMER() - l_55) >= 120000) {
                                l_53 = 1;
                            }
                            if ((GAMEPLAY::GET_GAME_TIMER() - l_56) >= 300000) {
                                l_53 = 2;
                            }
                            break;
                        case 1:
                            if (sub_77db()) {
                                l_52 = 1;
                                l_55 = GAMEPLAY::GET_GAME_TIMER();
                                l_53 = 0;
                            }
                            break;
                        case 2:
                            if (sub_6d8e()) {
                                l_52 = 1;
                                l_56 = GAMEPLAY::GET_GAME_TIMER();
                                l_53 = 0;
                            }
                            break;
                        }
                    }
                } else if (l_53 != -1) {
                    l_53 = -1;
                }
            }
        }
        l_54 = GAMEPLAY::GET_GAME_TIMER();
    }
}

auto sub_6d8e() {
    v_B = sub_77ba();
    if (v_B) {
        v_2/*"16"*/ = "CB_MON";
        v_6 = sub_7698();
        v_2/*16*/ += v_6;
        v_7/*"16"*/ = "CB_CHAR";
        v_7/*16*/ += v_6;
        sub_75fd(&l_59, 3, 0, &v_7, 0, 0);
        if (sub_7045(&l_59, "CBRADAU", &v_2, 1, 1, 0, 0)) {
            AUDIO::PLAY_SOUND_FRONTEND(-1, "Start_Squelch", "CB_RADIO_SFX", 1);
            AUDIO::PLAY_SOUND_FRONTEND(l_57, "Background_Loop", "CB_RADIO_SFX", 1);
            return 1;
        }
    } else {
        v_2/*"16"*/ = "CB_CONVO";
        v_6 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 23);
        v_2/*16*/ += v_6;
        sub_6e90(v_6, &v_C, &v_D);
        v_7/*"16"*/ = "CB_CHAR";
        v_7/*16*/ += v_C;
        sub_75fd(&l_59, 3, 0, &v_7, 0, 0);
        v_E/*"16"*/ = "CB_CHAR";
        v_E/*16*/ += v_D;
        sub_75fd(&l_59, 4, 0, &v_E, 0, 0);
        if (sub_7045(&l_59, "CBRADAU", &v_2, 1, 1, 0, 0)) {
            AUDIO::PLAY_SOUND_FRONTEND(-1, "Start_Squelch", "CB_RADIO_SFX", 1);
            AUDIO::PLAY_SOUND_FRONTEND(l_57, "Background_Loop", "CB_RADIO_SFX", 1);
            return 1;
        }
    }
    return 0;
}

void sub_6e90(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case 1:
        a_1 = 1;
        a_2 = 8;
        break;
    case 2:
        a_1 = 5;
        a_2 = 2;
        break;
    case 3:
        a_1 = 3;
        a_2 = 10;
        break;
    case 4:
        a_1 = 4;
        a_2 = 13;
        break;
    case 5:
        a_1 = 7;
        a_2 = 6;
        break;
    case 6:
        a_1 = 12;
        a_2 = 9;
        break;
    case 7:
        a_1 = 11;
        a_2 = 44;
        break;
    case 8:
        a_1 = 34;
        a_2 = 14;
        break;
    case 9:
        a_1 = 15;
        a_2 = 28;
        break;
    case 10:
        a_1 = 43;
        a_2 = 16;
        break;
    case 11:
        a_1 = 17;
        a_2 = 18;
        break;
    case 12:
        a_1 = 19;
        a_2 = 20;
        break;
    case 13:
        a_1 = 26;
        a_2 = 21;
        break;
    case 14:
        a_1 = 22;
        a_2 = 23;
        break;
    case 15:
        a_1 = 24;
        a_2 = 25;
        break;
    case 16:
        a_1 = 27;
        a_2 = 29;
        break;
    case 17:
        a_1 = 30;
        a_2 = 31;
        break;
    case 18:
        a_1 = 33;
        a_2 = 32;
        break;
    case 19:
        a_1 = 35;
        a_2 = 36;
        break;
    case 20:
        a_1 = 38;
        a_2 = 37;
        break;
    case 21:
        a_1 = 40;
        a_2 = 39;
        break;
    case 22:
        a_1 = 41;
        a_2 = 42;
        break;
    default:
        a_1 = 1;
        a_2 = 2;
        break;
    }
}

auto sub_7045(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_75a7(a_0, 145, a_1, a_4, a_5, a_6);
    if (a_3 > 7) {
        if (a_3 < 12) {
            a_3 = 7;
        }
    }
    g_3D67 = 0;
    g_3D69 = 0;
    g_3D6E = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_280001 = 0;
    return sub_7093(a_2, a_3, 0);
}

auto sub_7093(auto a_0, auto a_1, auto a_2) {
    g_3D61 = 0;
    if ((g_3D60 == 0) || (g_3D62 == 2)) {
        if (g_3D60 != 0) {
            if (a_1 > g_3D62) {
                if (g_3D67 == 0) {
                    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
                    current_character._f1 = 3;
                    g_3D60 = 0;
                    g_3D61 = 1;
                    g_3D95 = 0;
                    g_3D5C = 0;
                    g_3D5D = 0;
                    g_3D6B = 0;
                    g_3D6A = 0;
                    g_384C = 0;
                } else {
                    sub_7550();
                    return 0;
                }
            } else {
                return 0;
            }
        }
        if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
            return 0;
        }
        if (sub_7515(8, -1)) {
            return 0;
        }
        g_3DAC/*{6}*/ = g_3DA6;
        sub_74be();
        g_3A99/*{165}*/ = g_3B3E;
        g_3D66 = g_3D67;
        g_3D6D = g_3D6E;
        g_280002 = g_280001;
        g_3D6F/*{16}*/ = g_3D7F;
        g_3D68 = g_3D69;
        g_413E = g_413F;
        g_4146/*{6}*/ = g_414C;
        g_4140 = g_4141;
        g_4142 = g_4143;
        g_4144 = g_4145;
        g_3BE3._f172 = g_413D;
        g_3BE3._f170 = g_413B;
        g_3BE3._f171 = g_413C;
        g_3D5C = g_3D5D;
        if (g_3D66) {
            GAMEPLAY::CLEAR_BIT(&g_8EB, 20);
            GAMEPLAY::CLEAR_BIT(&g_8EC, 17);
            GAMEPLAY::CLEAR_BIT(&g_8ED, 0);
            if (a_2) {
                sub_2088();
                if (g_C10[current_character/*2811*/][0/*281*/]._f103 == 2) {
                    if (a_1 == 13) {
                    } else {
                        return 0;
                    }
                }
                if (current_character._f1 > 3) {
                    return 0;
                }
            }
            if (g_382B == 1) {
                return 0;
            }
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (sub_7425()) {
                    return 0;
                }
                if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), ${gadget_parachute})) {
                    return 0;
                }
                if (!is_in_transition) {
                    if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                    if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                }
            }
            if (sub_5fda()) {
                return 0;
            } else {
                switch (current_character._f1) {
                case 7:
                    return 0;
                    break;
                case 8:
                    return 0;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                default:
                    break;
                }
                if (GAMEPLAY::IS_BIT_SET(g_8EB, 9)) {
                    return 0;
                }
            }
            sub_7390();
            g_3D6A = a_2;
        }
        g_3D62 = a_1;
        g_3BE3/*"24"*/ = a_0;
        g_38F2 = 0;
        sub_735f();
        return 1;
    } else {
        if (g_3D60 == 5) {
            return 0;
        }
        if ((a_1 < g_3D62) || (a_1 == g_3D62)) {
            return 0;
        } else {
            if (a_1 == 2) {
            } else {
                sub_7550();
            }
            return 0;
        }
    }
}

void sub_735f() {
    for (v_2 = 0; v_2 <= 69; v_2 += 1) {
        g_38F4[v_2/*6*/]/*"24"*/ = "";
    }
    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    g_3D60 = 1;
}

void sub_7390() {
    g_3D95 = g_3D94;
    g_3D8F = g_3D90;
    g_3DBE/*{6}*/ = g_3DB2;
    g_3DC4/*{6}*/ = g_3DB8;
    g_3D97 = g_3D96;
    g_3DDC/*{6}*/ = g_3DCA;
    g_3DE2/*{6}*/ = g_3DD0;
    g_3DE8/*{6}*/ = g_3DD6;
    g_3DEE/*{6}*/ = g_3DF4;
    g_63E = g_63F;
    g_640 = g_641;
    g_3D6B = g_3D6C;
    g_3D6D = g_3D6E;
    g_3D6F/*{16}*/ = g_3D7F;
    g_3D64 = g_3D65;
    g_4158 = 0;
    g_3D91 = 0;
    g_3D92 = 0;
    GAMEPLAY::CLEAR_BIT(&g_8EC, 16);
}

auto sub_7425() {
    if (is_in_transition) {
        v_2 = 0;
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_3, 1);
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (((v_3 == ${weapon_sniperrifle}) || (v_3 == ${weapon_heavysniper})) || (v_3 == ${weapon_remotesniper})) {
                v_2 = 1;
            }
        }
        if (CAM::IS_AIM_CAM_ACTIVE() && (v_2 == 1)) {
            return 1;
        } else {
            return 0;
        }
    } else if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::GET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 78, 1)) {
            return 1;
        } else {
            return 0;
        }
    } else {
        return 1;
    }
}

void sub_74be() {
    for (v_2 = 0; v_2 <= 15; v_2 += 1) {
        g_3A99[v_2/*10*/] = 0;
        g_3A99[v_2/*10*/]._f1/*"24"*/ = "";
        g_3A99[v_2/*10*/]._f7 = 0;
        g_3A99[v_2/*10*/]._f8 = 0;
    }
    g_3A99._fA1 = -99;
    g_3A99._fA2/*{3}*/ = {0.0, 0.0, 0.0 };
}

auto sub_7515(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_146CF3._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_146CF3._f3B5, a_0);
}

void sub_7550() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (current_character._f1 == 9)) || (g_384C == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
        current_character._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

void sub_75a7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B3E/*{165}*/ = a_0;
    g_63F = a_1;
    g_3DA6/*"24"*/ = a_2;
    g_413D = a_5;
    if (a_3 == 0) {
        g_413B = 1;
        g_4139 = 0;
    } else {
        g_413B = 0;
        g_4139 = 1;
    }
    if (a_4 == 0) {
        g_413C = 1;
        g_413A = 0;
    } else {
        g_413C = 0;
        g_413A = 1;
    }
}

void sub_75fd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!is_in_transition) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

auto sub_7698() {
    v_2 = sub_f3b();
    v_3 = sub_d4f(v_2);
    v_4 = 0;
    while (v_4 == 0) {
        v_5 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 44);
        switch (v_5) {
        case 5:
            if (v_3 > 19) {
                v_4 = 0;
            } else if (v_3 < 9) {
                v_4 = 0;
            } else if (!sub_770d(v_5)) {
                v_4 = 0;
            } else {
                v_4 = 1;
            }
            break;
        default:
            v_4 = 1;
            break;
        }
        SYSTEM::WAIT(0);
    }
    return v_5;
}

auto sub_770d(auto a_0) {
    switch (a_0) {
    case 5:
        if (((((((((GAMEPLAY::IS_PREV_WEATHER_TYPE("SMOG") || GAMEPLAY::IS_PREV_WEATHER_TYPE("OVERCAST")) || GAMEPLAY::IS_PREV_WEATHER_TYPE("RAIN")) || GAMEPLAY::IS_PREV_WEATHER_TYPE("THUNDER")) || GAMEPLAY::IS_PREV_WEATHER_TYPE("SNOW")) || GAMEPLAY::IS_NEXT_WEATHER_TYPE("SMOG")) || GAMEPLAY::IS_NEXT_WEATHER_TYPE("OVERCAST")) || GAMEPLAY::IS_NEXT_WEATHER_TYPE("RAIN")) || GAMEPLAY::IS_NEXT_WEATHER_TYPE("THUNDER")) || GAMEPLAY::IS_NEXT_WEATHER_TYPE("SNOW")) {
            return 0;
        }
        break;
    default:
        return 1;
        break;
    }
    return 1;
}

auto sub_77ba() {
    if (GAMEPLAY::IS_BIT_SET(GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 65535), 0)) {
        return 1;
    } else {
        return 0;
    }
}

auto sub_77db() {
    v_2/*"16"*/ = "CB_IDN";
    v_6 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1, 44);
    v_2/*16*/ += v_6;
    v_7/*"16"*/ = "CB_CHAR";
    v_7/*16*/ += v_6;
    sub_75fd(&l_59, 3, 0, &v_7, 0, 0);
    if (sub_7045(&l_59, "CBRADAU", &v_2, 1, 1, 0, 0)) {
        AUDIO::PLAY_SOUND_FRONTEND(-1, "Start_Squelch", "CB_RADIO_SFX", 1);
        AUDIO::PLAY_SOUND_FRONTEND(l_57, "Background_Loop", "CB_RADIO_SFX", 1);
        return 1;
    }
    return 0;
}

void sub_7849() {
    g_38F2 = 0;
    sub_7859();
}

void sub_7859() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
    }
}

auto sub_787a() {
    if ((g_3D60 != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else {
        return 0;
    }
}

auto sub_789c() {
    if (g_15929 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_14133[g_15929/*34*/]._fF, 13);
    }
    return 0;
}

void try_receive_message4(auto a_0) {
    if (!sub_907(sub_2129())) {
        return ;
    }
    v_3 = 0;
    while ((v_3 < game_state.pending_messages._f362) && (!local_bool_flag0)) {
        v_4 = 0;
        if (game_state.pending_messages._f2FD[v_3/*10*/]._f3 >= 5) {
            v_4 = 1;
        }
        if (((a_0 >= next_message_deadline) || GAMEPLAY::IS_BIT_SET(game_state.pending_messages._f2FD[v_3/*10*/]._f1, 21)) || v_4) {
            if ((a_0 >= g_8D9C[game_state.pending_messages._f2FD[v_3/*10*/]._f6/*1*/]) || v_4) {
                if (a_0 >= game_state.pending_messages._f2FD[v_3/*10*/]._f4) {
                    if (sub_7a09(&game_state.pending_messages._f2FD[v_3/*10*/])) {
                        local_current_time = -1;
                        sub_79cd(a_0, &game_state.pending_messages._f2FD[v_3/*10*/]);
                        sub_6c2(v_3);
                        local_bool_flag0 = 1;
                    } else {
                        delay_message(a_0, &game_state.pending_messages._f2FD[v_3/*10*/], 0);
                    }
                }
            }
        }
        v_3 += 1;
    }
}

void sub_79cd(auto a_0, auto a_1) {
    sub_1dc6(a_1);
    game_state.pending_messages._f396 = a_1;
    next_message_deadline = a_0 + 20000;
    if (a_1._f6 != 144) {
        g_8D9C[a_1._f6/*1*/] = a_0 + 20000;
    }
}

auto sub_7a09(auto a_0) {
    if ((sub_62e0(0) || sub_b2ca()) || sub_b2a1()) {
        return 0;
    }
    if (!sub_90b1(a_0._f2, a_0._f6, a_0._f3, a_0._f7, a_0._f1)) {
        return 0;
    }
    if (a_0._f9 != -1) {
        if (!sub_51d5(a_0._f9)) {
            return 0;
        }
    }
    if (a_0._f7 != -1) {
        if (sub_35f8(PLAYER::PLAYER_PED_ID(), a_0._f7, 0)) {
            return 0;
        }
    }
    sub_8ba4(a_0, &v_3);
    v_5 = 0;
    if (GAMEPLAY::IS_BIT_SET(a_0._f1, 16)) {
        v_5 = 1;
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f2, sub_8b8b()) || v_5) {
        for (v_4 = 0; v_4 < 3; v_4 += 1) {
            if (GAMEPLAY::IS_BIT_SET(a_0._f2, v_4)) {
                if (sub_8b7c(v_3)) {
                    if (!sub_8b6b(v_3)) {
                        sub_7ba6(v_3, v_5);
                        return 1;
                    } else {
                        return 0;
                    }
                } else {
                    sub_7b0d(v_3, v_5);
                    return 1;
                }
            }
        }
    }
    return 0;
}

void sub_7b0d(auto a_0, auto a_1) {
    sub_7b1d(a_0, a_1);
}

void sub_7b1d(auto a_0, auto a_1) {
    g_8F92 = 1;
    if ((!g_9C98[a_0/*46*/]) && (!g_9C98[a_0/*46*/]._f1)) {
        g_9C98[a_0/*46*/] = 1;
        sub_7ba6(a_0, a_1);
    } else {
        sub_7b64(a_0);
        sub_7b1d(a_0, a_1);
    }
}

void sub_7b64(auto a_0) {
    g_9C98[a_0/*46*/] = 0;
    g_9C98[a_0/*46*/]._f1F = 0;
    g_9C98[a_0/*46*/]._f2A = 0;
    g_9C98[a_0/*46*/]._f2D = 0;
    g_9C98[a_0/*46*/]._f2B = 0;
    g_9C98[a_0/*46*/]._f1 = 0;
}

void sub_7ba6(auto a_0, auto a_1) {
    if ((!g_9C98[a_0/*46*/]) && (!g_9C98[a_0/*46*/]._f1)) {
        return ;
    }
    if (g_9C98[a_0/*46*/]._f1F == g_9C98[a_0/*46*/]._f1E) {
        v_4 = g_9C98[a_0/*46*/]._f2A - 1;
        if (v_4 < 0) {
            return ;
        }
        if (g_8F9B[g_9C98[a_0/*46*/]._f20[v_4/*1*/]/*12*/]._f4 == 0) {
            g_9C98[a_0/*46*/]._f1 = 1;
        }
        return ;
    }
    if (g_9C98[a_0/*46*/]._f1) {
        return ;
    }
    v_5 = g_9C98[a_0/*46*/]._f8[g_9C98[a_0/*46*/]._f1F/*1*/];
    g_9C98[a_0/*46*/]._f1F += 1;
    sub_8b26(a_0, v_5);
    g_9C98[a_0/*46*/]._f2D = g_8F9B[v_5/*12*/]._fA;
    g_9C98[a_0/*46*/]._f2B = g_8F9B[v_5/*12*/]._fB;
    v_6 = g_9C98[a_0/*46*/]._f2;
    sub_7d42(g_8F9B[v_5/*12*/]._f3, a_0, 0, 0, a_1);
    for (v_7 = 0; v_7 < v_6; v_7 += 1) {
        if ((g_9C98[a_0/*46*/]._f3[v_7/*1*/] != g_8F9B[v_5/*12*/]._f2) && (g_9C98[a_0/*46*/]._f3[v_7/*1*/] != g_8F9B[v_5/*12*/]._f3)) {
            sub_7d42(g_9C98[a_0/*46*/]._f3[v_7/*1*/], a_0, 0, 0, a_1);
        }
    }
    if (g_9C98[a_0/*46*/]._f1F == g_9C98[a_0/*46*/]._f1E) {
        if (g_8F9B[g_9C98[a_0/*46*/]._f20[g_9C98[a_0/*46*/]._f2A - 1/*1*/]/*12*/]._f4 == 0) {
            g_9C98[a_0/*46*/]._f1 = 1;
            return ;
        }
    }
}

void sub_7d42(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!(a_0 < 3)) {
        return ;
    }
    v_7 = -1;
    v_A/*"64"*/ = "UNSET";
    if (!a_2) {
        v_1A = g_9C98[a_1/*46*/]._f2A - 1;
        if (v_1A < 0) {
            return ;
        }
        v_1B = g_9C98[a_1/*46*/]._f20[v_1A/*1*/];
        v_9 = v_1B;
        v_A/*{16}*/ = sub_8af5(g_8F9B[v_1B/*12*/]._f1);
        if ((g_8F9B[v_1B/*12*/]._f2 == a_0) && (!(g_8F9B[v_1B/*12*/]._f3 == a_0))) {
            return ;
        }
        v_8 = g_8F9B[v_1B/*12*/]._f2;
        v_7 = g_B285[a_0/*120*/];
        v_1C = 0;
        while (v_7 >= 16) {
            v_7 -= 16;
            v_1C = 1;
        }
        if (v_1C) {
            if (!g_B285[a_0/*120*/]._f45[v_7/*1*/]) {
                switch (a_0) {
                case 0:
                    g_8F93 -= 1;
                    if (g_8F93 < 0) {
                        g_8F93 = 0;
                    }
                    break;
                case 1:
                    g_8F94 -= 1;
                    if (g_8F94 < 0) {
                        g_8F94 = 0;
                    }
                    break;
                case 2:
                    g_8F95 -= 1;
                    if (g_8F95 < 0) {
                        g_8F95 = 0;
                    }
                    break;
                }
            }
        }
        g_B285[a_0/*120*/]._f12[v_7/*1*/] = a_1;
        g_B285[a_0/*120*/]._f1[v_7/*1*/] = v_1A;
        g_B285[a_0/*120*/]._f23[v_7/*1*/] = 0;
        g_B285[a_0/*120*/]._f56[v_7/*1*/] = 0;
        g_B285[a_0/*120*/]._f45[v_7/*1*/] = 0;
        g_B285[a_0/*120*/] += 1;
    } else {
        v_7 = g_B285[a_0/*120*/];
        v_1D = 0;
        while (v_7 >= 16) {
            v_7 -= 16;
            v_1D = 1;
        }
        if (v_1D) {
            if (!g_B285[a_0/*120*/]._f45[v_7/*1*/]) {
                switch (a_0) {
                case 0:
                    g_8F93 -= 1;
                    if (g_8F93 < 0) {
                        g_8F93 = 0;
                    }
                    break;
                case 1:
                    g_8F94 -= 1;
                    if (g_8F94 < 0) {
                        g_8F94 = 0;
                    }
                    break;
                case 2:
                    g_8F95 -= 1;
                    if (g_8F95 < 0) {
                        g_8F95 = 0;
                    }
                    break;
                }
            }
        }
        v_1E = -1;
        v_1F = 0;
        for (v_1F = 0; v_1F < 7; v_1F += 1) {
            if ((g_B3EF[v_1F/*203*/]._f1 == a_1) && (g_B3EF[v_1F/*203*/]._f9 > 0)) {
                v_1E = v_1F;
            }
        }
        if (v_1E == -1) {
            return ;
        }
        g_B285[a_0/*120*/]._f12[v_7/*1*/] = g_B3EF[v_1E/*203*/]._f1;
        g_B285[a_0/*120*/]._f1[v_7/*1*/] = g_B3EF[v_1E/*203*/]._f9 - 1;
        g_B285[a_0/*120*/]._f23[v_7/*1*/] = 0;
        g_B285[a_0/*120*/]._f56[v_7/*1*/] = 1;
        g_B285[a_0/*120*/]._f45[v_7/*1*/] = 0;
        g_B285[a_0/*120*/] += 1;
        v_20 = g_B285[a_0/*120*/]._f1[v_7/*1*/];
        v_21 = g_B3EF[v_1E/*203*/]._fA[v_20/*48*/];
        v_9 = v_21;
        v_8 = g_8F9B[v_21/*12*/]._f2;
        if (g_B3EF[v_1E/*203*/]._fA[g_B3EF[v_1E/*203*/]._f9 - 1/*48*/]._f1) {
            v_A/*"64"*/ = g_B3EF[v_1E/*203*/]._fA[g_B3EF[v_1E/*203*/]._f9 - 1/*48*/]._f2;
        } else {
            v_A/*{16}*/ = sub_8af5(g_8F9B[v_21/*12*/]._f1);
        }
    }
    if (!a_4) {
        if ((!g_B285[a_0/*120*/]._f45[v_7/*1*/]) && (!a_3)) {
            switch (a_0) {
            case 0:
                sub_8118(0, v_8, v_9, &v_A, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                break;
            case 1:
                if (v_9 == 249) {
                    sub_8118(1, v_8, v_9, "PW_FEED_EM_1", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                } else {
                    sub_8118(1, v_8, v_9, &v_A, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                }
                break;
            case 2:
                sub_8118(2, v_8, v_9, &v_A, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                break;
            }
        }
    }
}

void sub_8118(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13) {
    if (CUTSCENE::IS_CUTSCENE_PLAYING()) {
        return ;
    }
    v_10 = sub_2129();
    v_11 = 0;
    v_12/*"64"*/ = sub_8699(a_1, &v_11);
    if (v_10 == a_0) {
        switch (a_2) {
        case 72:
            UI::_SET_NOTIFICATION_TEXT_ENTRY("PROPR_INCEMAIL1");
            break;
        case 73:
            UI::_SET_NOTIFICATION_TEXT_ENTRY("PROPR_INCEMAIL3");
            break;
        case 74:
            UI::_SET_NOTIFICATION_TEXT_ENTRY("PROPR_INCEMAIL2");
            break;
        default:
            UI::_SET_NOTIFICATION_TEXT_ENTRY(a_3);
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_4)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_4);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_5)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_5);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_6)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_6);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_7)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_7);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_8)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_8);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_9)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_9);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_A)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_A);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_B)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_B);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_C)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_C);
            }
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_D)) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_D);
            }
            break;
        }
        if (v_11) {
            sub_8300(UI::_SET_NOTIFICATION_MESSAGE(&v_12, &v_12, 0, 2, UI::_GET_LABEL_TEXT(sub_832e(a_1)), 0));
        } else {
            sub_8300(UI::_SET_NOTIFICATION_MESSAGE("CHAR_DEFAULT", "CHAR_DEFAULT", 0, 2, UI::_GET_LABEL_TEXT(sub_832e(a_1)), 0));
        }
        switch (current_character) {
        case 0:
            g_3842/*"24"*/ = "Phone_SoundSet_Michael";
            g_8F93 += 1;
            if (g_8F93 > 16) {
                g_8F93 = 16;
            }
            break;
        case 2:
            g_3842/*"24"*/ = "Phone_SoundSet_Trevor";
            g_8F95 += 1;
            if (g_8F95 > 16) {
                g_8F95 = 16;
            }
            break;
        case 1:
            g_3842/*"24"*/ = "Phone_SoundSet_Franklin";
            g_8F94 += 1;
            if (g_8F94 > 16) {
                g_8F94 = 16;
            }
            break;
        default:
            g_3842/*"24"*/ = "Phone_SoundSet_Default";
            break;
        }
        AUDIO::PLAY_SOUND_FRONTEND(-1, "Notification", &g_3842, 1);
    } else { }
}

void sub_8300(auto a_0) {
    g_8F96[g_8F9A/*1*/] = a_0;
    g_4182 = 1;
    g_4181 = a_0;
    g_8F9A += 1;
    if (g_8F9A == 3) {
        g_8F9A = 0;
    }
}

auto sub_832e(auto a_0) {
    switch (a_0) {
    case 0:
        return "EMSTR_0";
    case 3:
        return "EMSTR_3";
    case 1:
        return "EMSTR_6";
    case 2:
        return "EMSTR_9";
    case 4:
        return "EMSTR_12";
    case 5:
        return "EMSTR_29";
    case 6:
        return "EMSTR_36";
    case 7:
        return "EMSTR_39";
    case 8:
        return "EMSTR_52";
    case 9:
        return "EMSTR_55";
    case 10:
        return "EMSTR_58";
    case 11:
        return "EMSTR_78";
    case 12:
        return "EMSTR_81";
    case 13:
        return "EMSTR_84";
    case 14:
        return "EMSTR_87";
    case 15:
        return "EMSTR_106";
    case 16:
        return "EMSTR_114";
    case 17:
        return "EMSTR_142";
    case 18:
        return "EMSTR_145";
    case 19:
        return "EMSTR_152";
    case 20:
        return "EMSTR_157";
    case 21:
        return "EMSTR_163";
    case 22:
        return "EMSTR_182";
    case 23:
        return "EMSTR_187";
    case 24:
        return "EMSTR_190";
    case 25:
        return "EMSTR_206";
    case 26:
        return "EMSTR_219";
    case 27:
        return "EMSTR_226";
    case 28:
        return "EMSTR_233";
    case 29:
        return "EMSTR_242";
    case 30:
        return "EMSTR_249";
    case 31:
        return "EMSTR_262";
    case 32:
        return "EMSTR_269";
    case 33:
        return "EMSTR_319";
    case 34:
        return "EMSTR_340";
    case 35:
        return "EMSTR_348";
    case 36:
        return "EMSTR_182";
    case 37:
        return "EMSTR_357";
    case 38:
        return "EMSTR_360";
    case 39:
        return "EMSTR_369";
    case 40:
        return "EMSTR_376";
    case 41:
        return "EMSTR_379";
    case 42:
        return "EMSTR_382";
    case 43:
        return "EMSTR_384";
    case 44:
        return "EMSTR_387";
    case 45:
        return "EMSTR_390";
    case 46:
        return "EMSTR_393";
    case 47:
        return "EMSTR_396";
    case 48:
        return "EMSTR_399";
    case 49:
        return "EMSTR_402";
    case 50:
        return "EMSTR_405";
    case 51:
        return "EMSTR_408";
    case 52:
        return "EMSTR_411";
    case 53:
        return "EMSTR_414";
    case 54:
        return "EMSTR_465";
    case 55:
        return "EMSTR_468";
    case 56:
        return "EMSTR_489";
    case 57:
        return "EMSTR_492";
    case 58:
        return "EMSTR_495";
    case 59:
        return "EMSTR_498";
    case 60:
        return "EMSTR_501";
    case 61:
        return "EMSTR_504";
    case 62:
        return "EMSTR_507";
    case 63:
        return "EMSTR_640";
    case 64:
        return "EMSTR_643";
    case 65:
        return "EMSTR_652";
    }
    return "NULL";
}

auto sub_8699(auto a_0, auto a_1) {
    a_1 = 1;
    switch (a_0) {
    case 0:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[0/*29*/]._f7);
    case 1:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[1/*29*/]._f7);
    case 2:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[2/*29*/]._f7);
    case 7:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[12/*29*/]._f7);
    case 4:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[60/*29*/]._f7);
    case 6:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[62/*29*/]._f7);
    case 3:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[14/*29*/]._f7);
    case 16:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[97/*29*/]._f7);
    case 19:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[99/*29*/]._f7);
    case 15:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[96/*29*/]._f7);
    case 63:
        return "CHAR_CARSITE2";
    case 64:
        return "CHAR_BOATSITE";
    case 8:
        return "CHAR_BANK_MAZE";
    case 9:
        return "CHAR_BANK_FLEECA";
    case 10:
        return "CHAR_BANK_BOL";
    case 21:
        return "CHAR_MINOTAUR";
    case 25:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[15/*29*/]._f7);
    case 26:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[30/*29*/]._f7);
    case 27:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[17/*29*/]._f7);
    case 29:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[20/*29*/]._f7);
    case 30:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[43/*29*/]._f7);
    case 31:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[44/*29*/]._f7);
    case 32:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[19/*29*/]._f7);
    case 34:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[40/*29*/]._f7);
    case 36:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[22/*29*/]._f7);
    case 38:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[64/*29*/]._f7);
    case 5:
        return "CHAR_EPSILON";
    case 13:
        return "CHAR_MILSITE";
    case 11:
        return "CHAR_CARSITE";
    case 14:
        return "CHAR_BOATSITE";
    case 12:
        return "CHAR_PLANESITE";
    case 24:
        return "CHAR_DR_FRIEDLANDER";
    case 55:
        return "CHAR_CARSITE2";
    case 54:
        return "CHAR_BIKESITE";
    case 39:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[122/*29*/]._f7);
    case 40:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[125/*29*/]._f7);
    case 41:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[113/*29*/]._f7);
    case 42:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[126/*29*/]._f7);
    case 43:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[127/*29*/]._f7);
    case 44:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[124/*29*/]._f7);
    case 45:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[114/*29*/]._f7);
    case 46:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[115/*29*/]._f7);
    case 47:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[116/*29*/]._f7);
    case 48:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[123/*29*/]._f7);
    case 49:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[117/*29*/]._f7);
    case 50:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[118/*29*/]._f7);
    case 51:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[119/*29*/]._f7);
    case 52:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[120/*29*/]._f7);
    case 53:
        return UI::_GET_LABEL_TEXT(&game_state._f7F07[121/*29*/]._f7);
    }
    a_1 = 0;
    return "ERROR!";
}

auto<16> sub_8af5(auto a_0) {
    if (a_0 > -1) {
        v_3/*"64"*/ = "EMSTR_";
        v_3/*64*/ += a_0;
        return v_3;
    }
    v_13/*"64"*/ = "FAIL";
    return v_13;
}

auto sub_8b26(auto a_0, auto a_1) {
    if (g_9C98[a_0/*46*/]._f2A >= 9) {
        return 0;
    }
    g_9C98[a_0/*46*/]._f20[g_9C98[a_0/*46*/]._f2A/*1*/] = a_1;
    g_9C98[a_0/*46*/]._f2A += 1;
    return 1;
}

auto sub_8b6b(auto a_0) {
    return g_9C98[a_0/*46*/]._f1;
}

auto sub_8b7c(auto a_0) {
    return g_9C98[a_0/*46*/];
}

auto sub_8b8b() {
    sub_2142();
    return game_state._f6EA._f21B._fDDD;
}

void sub_8ba4(auto a_0, auto a_1) {
    if (get_message_category(a_0) == 3) {
        switch (a_0) {
        case 0x7882ef65:
            a_1 = 14;
            break;
        case 0x2fc3982f:
            a_1 = 6;
            break;
        case 0x7d966c77:
            a_1 = 29;
            break;
        case 0x55e28af2:
            a_1 = 31;
            break;
        case 0x7b022dba:
            a_1 = 32;
            break;
        case 0x390c29c5:
            a_1 = 33;
            break;
        case 0x14337d1f:
            a_1 = 13;
            break;
        case 0x6c6428ea:
            a_1 = 15;
            break;
        case 0x5a110444:
            a_1 = 16;
            break;
        case 0x488d6141:
            a_1 = 17;
            break;
        case 0xc89ae156:
            a_1 = 18;
            break;
        case 0xb559bad4:
            a_1 = 19;
            break;
        case 0xa3b4978a:
            a_1 = 20;
            break;
        case 0x917ef31f:
            a_1 = 21;
            break;
        case 0xd5bc7bb1:
            a_1 = 22;
            break;
        case 0xc302563d:
            a_1 = 30;
            break;
        case 0x2949a988:
            a_1 = 28;
            break;
        case 0x481cc1ba:
            a_1 = 27;
            break;
        case 0xbbc11fcf:
            a_1 = 26;
            break;
        case 0x2fc6a2ec:
            a_1 = 107;
            break;
        case 0x13090323:
            a_1 = 108;
            break;
        case 0xe6c7f3fc:
            a_1 = 109;
            break;
        case 0xa65abcee:
            a_1 = 67;
            break;
        case 0x5014c3e8:
            a_1 = 68;
            break;
        case 0x50f14383:
            a_1 = 94;
            break;
        case 0x165018b2:
            a_1 = 40;
            break;
        case 0x99911393:
            a_1 = 41;
            break;
        case 0x788fc410:
            a_1 = 42;
            break;
        case 0xc042a9c9:
            a_1 = 43;
            break;
        case 0xd0f49b50:
            a_1 = 46;
            break;
        case 0xaeedf2d:
            a_1 = 64;
            break;
        case 0xb250428a:
            a_1 = 44;
            break;
        case 0x25b1c10d:
            a_1 = 54;
            break;
        case 0x334198fb:
            a_1 = 45;
            break;
        case 0x19b04309:
            a_1 = 47;
            break;
        case 0xd20931b2:
            a_1 = 61;
            break;
        case 0x9da7d91d:
            a_1 = 48;
            break;
        case 0x9370c8a0:
            a_1 = 49;
            break;
        case 0xf819b29c:
            a_1 = 50;
            break;
        case 0x2a6e5d04:
            a_1 = 51;
            break;
        case 0xa52f5284:
            a_1 = 52;
            break;
        case 0x80b4f1f9:
            a_1 = 53;
            break;
        case 0x8442b916:
            a_1 = 55;
            break;
        case 0x8ee4da2c:
            a_1 = 56;
            break;
        case 0xaab6bebb:
            a_1 = 57;
            break;
        case 0x54e16b2a:
            a_1 = 62;
            break;
        case 0xd84207c6:
            a_1 = 63;
            break;
        case 0x8682ec56:
            a_1 = 65;
            break;
        case 0xa3845be1:
            a_1 = 95;
            break;
        case 0xc5942008:
            a_1 = 97;
            break;
        case 0x9141374b:
            a_1 = 96;
            break;
        case 0x9c2cbe24:
            a_1 = 69;
            break;
        case 0x1abfd091:
            a_1 = 58;
            break;
        case 0x20913b61:
            a_1 = 59;
            break;
        case 0x3eab0617:
            a_1 = 60;
            break;
        case 0xe1dffa77:
            a_1 = 71;
            break;
        case 0x19a97fdc:
            a_1 = 74;
            break;
        case 0xd360b80c:
            a_1 = 75;
            break;
        case 0x1512bb6f:
            a_1 = 76;
            break;
        case 0x537c383d:
            a_1 = 77;
            break;
        case 0x81304d9:
            a_1 = 78;
            break;
        case 0xe005757d:
            a_1 = 79;
            break;
        case 0x39aa5a25:
            a_1 = 80;
            break;
        case 0x80e2e9f5:
            a_1 = 81;
            break;
        case 0xab643ef7:
            a_1 = 82;
            break;
        case 0xe0e429ee:
            a_1 = 83;
            break;
        case 0xa55711b6:
            a_1 = 84;
            break;
        case 0x70f23ae5:
            a_1 = 85;
            break;
        case 0xde8f4d4:
            a_1 = 86;
            break;
        case 0x3aab4e74:
            a_1 = 87;
            break;
        case 0xce52d794:
            a_1 = 88;
            break;
        case 0x1632e753:
            a_1 = 89;
            break;
        case 0xfa752fd8:
            a_1 = 90;
            break;
        case 0x61a24268:
            a_1 = 91;
            break;
        case 0x7e7a7c18:
            a_1 = 92;
            break;
        case 0xe50b4938:
            a_1 = 93;
            break;
        case 0x2d7e3df9:
            a_1 = 72;
            break;
        case 0xd50d0d18:
            a_1 = 73;
            break;
        case 0xc05b34a1:
            a_1 = 110;
            break;
        case 0xc90ec608:
            a_1 = 111;
            break;
        case 0xdbdceba4:
            a_1 = 112;
            break;
        case 0xe74a0282:
            a_1 = 113;
            break;
        case 0x90774620:
            a_1 = 114;
            break;
        case 0x432db261:
            a_1 = 115;
            break;
        case 0x1574d704:
            a_1 = 116;
            break;
        case 0xac2c8475:
            a_1 = 117;
            break;
        case 0xbed6a9c9:
            a_1 = 118;
            break;
        case 0x88cbd34:
            a_1 = 119;
            break;
        case 0xdb4d62b6:
            a_1 = 120;
            break;
        case 0x75051623:
            a_1 = 121;
            break;
        default:
            break;
        }
    } else {
        return ;
    }
}

auto sub_90b1(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (!CAM::IS_SCREEN_FADED_IN()) {
        return 0;
    }
    if (sub_b2ca()) {
        return 0;
    }
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID()) != -1) {
            return 0;
        }
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 0;
    }
    if (is_message_state_not_15() && (a_2 < 4)) {
        return 0;
    }
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (sub_b237(PLAYER::PLAYER_PED_ID())) {
            if (GAMEPLAY::IS_BIT_SET(a_0, sub_8b8b()) && (!GAMEPLAY::IS_BIT_SET(a_4, 19))) {
                return 0;
            }
        }
    }
    if (g_10EC3) {
        return 0;
    }
    if (CUTSCENE::IS_CUTSCENE_PLAYING()) {
        return 0;
    }
    if (g_10980) {
        return 0;
    }
    if (g_15596) {
        return 0;
    }
    if ((sub_b21b() || (g_42DE._f4 && (g_42DE._f68 == 4))) || sub_b201()) {
        return 0;
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 18)) {
        if (!GAMEPLAY::IS_BIT_SET(a_0, sub_8b8b())) {
            return 0;
        }
    }
    v_7 = 1;
    if ((((g_163E2 == 13) || (g_163E2 == 10)) || (g_163E2 == 11)) || (g_163E2 == 12)) {
        v_7 = 0;
    }
    if (v_7 == 1) {
        return 0;
    }
    if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        return 0;
    } else if (a_2 != 5) {
        if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 1) {
            return 0;
        }
        if (GAMEPLAY::IS_AUTO_SAVE_IN_PROGRESS()) {
            return 0;
        }
        if (g_1592F) {
            return 0;
        }
        if (sub_9700(50.0, 1) != -1) {
            return 0;
        }
        if ((((((a_1 == 17) || (a_1 == 19)) || (a_1 == 14)) || (a_1 == 0)) || (a_1 == 1)) || (a_1 == 2)) {
            if (GAMEPLAY::IS_BIT_SET(a_0, sub_8b8b())) {
                v_8 = sub_57b2(sub_2129());
                v_9 = sub_57b2(a_1);
                v_A = sub_5628(v_8, v_9);
                if (v_A < 9) {
                    if ((game_state._f4161._fAF[v_A/*19*/]._f8 == 1) || (game_state._f4161._fAF[v_A/*19*/]._f8 == 2)) {
                        if (sub_5618(&game_state._f4161._fAF[v_A/*19*/]._f5)) {
                            if (sub_55c9(&game_state._f4161._fAF[v_A/*19*/]._f5) < 30.0) {
                                return 0;
                            }
                        }
                    }
                }
            }
        }
    }
    if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 2) {
        return 0;
    }
    if (sub_96d6()) {
        return 0;
    }
    if (GAMEPLAY::IS_BIT_SET(a_4, 3)) {
        if (g_186B7) {
            return 0;
        }
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) {
                return 0;
            }
        }
        if (g_18568._f13 != 0) {
            return 0;
        }
        if (message_state == 5) {
            return 0;
        }
    }
    if (a_3 != -1) {
        if (sub_35f8(PLAYER::PLAYER_PED_ID(), a_3, 0)) {
            return 0;
        }
    }
    v_B = sub_2129();
    if (sub_907(v_B)) {
        asm .vardef<F> 12, "[{\"offset\":0,\"value\":16}]"
        PED::GET_PED_NEARBY_PEDS(PLAYER::PLAYER_PED_ID(), &v_C, -1);
        asm .vardef<F> 0x1d, "[{\"offset\":0,\"value\":2}]"
        switch (a_1) {
        case 4:
            switch (v_B) {
            case 0:
                v_1D[0/*1*/] = sub_227c(1);
                v_1D[1/*1*/] = sub_227c(2);
                break;
            case 1:
                v_1D[0/*1*/] = sub_227c(0);
                v_1D[1/*1*/] = sub_227c(2);
                break;
            case 2:
                v_1D[0/*1*/] = sub_227c(0);
                v_1D[1/*1*/] = sub_227c(1);
                break;
            }
            break;
        case 5:
            v_1D[0/*1*/] = sub_227c(1);
            v_1D[1/*1*/] = sub_227c(2);
            break;
        case 6:
            v_1D[0/*1*/] = sub_96ab(12);
            v_1D[1/*1*/] = sub_227c(1);
            break;
        case 7:
            v_1D[0/*1*/] = sub_96ab(12);
            v_1D[1/*1*/] = sub_227c(0);
            break;
        case 8:
            v_1D[0/*1*/] = sub_227c(0);
            v_1D[1/*1*/] = sub_227c(1);
            break;
        case 9:
            v_1D[0/*1*/] = sub_227c(0);
            v_1D[1/*1*/] = sub_227c(2);
            break;
        case 10:
            v_1D[0/*1*/] = sub_96ab(23);
            v_1D[1/*1*/] = sub_227c(0);
            break;
        case 11:
            v_1D[0/*1*/] = sub_96ab(23);
            v_1D[1/*1*/] = sub_227c(0);
            break;
        default:
            if (sub_907(a_1)) {
                v_1D[0/*1*/] = sub_227c(a_1);
            } else {
                v_1D[0/*1*/] = sub_96ab(a_1);
            }
            v_1D[1/*1*/] = 0;
            break;
        }
        for (v_20 = 0; v_20 < 2; v_20 += 1) {
            if (v_1D[v_20/*1*/] != 0) {
                for (v_21 = 0; v_21 < 16; v_21 += 1) {
                    if (ENTITY::DOES_ENTITY_EXIST(v_C[v_21/*1*/])) {
                        if (ENTITY::GET_ENTITY_MODEL(v_C[v_21/*1*/]) == v_1D[v_20/*1*/]) {
                            if (!ENTITY::IS_ENTITY_DEAD(v_C[v_21/*1*/])) {
                                if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
                                    if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(v_C[v_21/*1*/], 1), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)) < 6400.0) {
                                        return 0;
                                    }
                                }
                            } else {
                                return 0;
                            }
                        }
                    }
                }
                v_22 = 0;
                switch (v_1D[v_20/*1*/]) {
                case ${player_zero}:
                    v_22 = g_15B55[0/*1*/];
                    break;
                case ${player_one}:
                    v_22 = g_15B55[1/*1*/];
                    break;
                case ${player_two}:
                    v_22 = g_15B55[2/*1*/];
                    break;
                }
                if (ENTITY::DOES_ENTITY_EXIST(v_22)) {
                    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
                        if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(v_22, 1), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)) < 6400.0) {
                            return 0;
                        }
                    }
                }
                switch (v_1D[v_20/*1*/]) {
                case ${player_zero}:
                    v_22 = g_163D8[0/*1*/];
                    break;
                case ${player_one}:
                    v_22 = g_163D8[1/*1*/];
                    break;
                case ${player_two}:
                    v_22 = g_163D8[2/*1*/];
                    break;
                }
                if (ENTITY::DOES_ENTITY_EXIST(v_22)) {
                    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
                        if (SYSTEM::VDIST2(ENTITY::GET_ENTITY_COORDS(v_22, 1), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)) < 6400.0) {
                            return 0;
                        }
                    }
                }
            }
        }
    } else {
        return 0;
    }
    return 1;
}

auto sub_96ab(auto a_0) {
    if (!sub_907(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

auto sub_96d6() {
    if (g_10FC9) {
        return 1;
    } else if (g_D965 && (!g_D96B)) {
        return 1;
    }
    return 0;
}

auto sub_9700(auto a_0, auto a_1) {
    v_25 = -1;
    v_26 = a_0;
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        v_28 = sub_b1bb();
        v_29 = 0;
        for (v_29 = 0; v_29 < 63; v_29 += 1) {
            v_24 = v_29;
            if (GAMEPLAY::IS_BIT_SET(game_state._f4338[v_24/*6*/], 2) && (!GAMEPLAY::IS_BIT_SET(game_state._f4338[v_24/*6*/], 3))) {
                sub_97ac(v_24, &v_4);
                v_27 = GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), v_4._f6, 1);
                if (v_27 < v_26) {
                    v_2A = 1;
                    if (a_1) {
                        if (v_28 != v_4._f1A) {
                            v_2A = 0;
                        }
                    }
                    if (v_2A) {
                        v_25 = v_24;
                        v_26 = v_27;
                    }
                }
            }
        }
    }
    return v_25;
}

void sub_97ac(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        sub_a961(a_1, "Abigail1", sub_ad38(a_0), 0, 0, 4, -1604.66796875, 5239.1, 3.01, 66, "", 109, 0, "ambient_Diving", 0, 0, 1, 4, 1, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 1:
        sub_a961(a_1, "Abigail2", sub_ad38(a_0), 0, 0, 4, -1592.8399658203125, 5214.04, 3.01, 400, "", 110, 0, "", 0, 0, -1, 4, 1, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 2:
        sub_a961(a_1, "Barry1", sub_ad38(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", 74, 0, "", 0, 1, -1, 4, 1, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 3:
        sub_a961(a_1, "Barry2", sub_ad38(a_0), 0, 1, 4, 190.26, -956.3499755859375, 29.63, 381, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 1);
        break;
    case 4:
        sub_a961(a_1, "Barry3", sub_ad38(a_0), 0, 1, 4, 414.0, -761.0, 29.0, 381, "", -1, 0, "", 164, 1, -1, 0, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 5:
        sub_a961(a_1, "Barry3A", sub_ad38(a_0), 1, 1, 0, 1199.27, -1255.63, 34.23, 381, "BARSTASH", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 6:
        sub_a961(a_1, "Barry3C", sub_ad38(a_0), 3, 1, 0, 468.9, -1713.06, 18.21, 381, "", 84, 0, "", 166, 0, 7, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 7:
        sub_a961(a_1, "Barry4", sub_ad38(a_0), 0, 1, 4, 237.64999999999998, -385.41, 44.4, 381, "", 85, 0, "postRC_Barry4", 0, 0, -1, 4, 2, 800, 2000, sub_a9f2(a_0), 0, 0);
        break;
    case 8:
        sub_a961(a_1, "Dreyfuss1", sub_ad38(a_0), 0, 2, 4, -1458.969970703125, 485.99, 115.38, 66, "LETTERS_HINT", 106, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 9:
        sub_a961(a_1, "Epsilon1", sub_ad38(a_0), 0, 3, 4, -1622.89, 4204.8701171875, 83.3, 66, "", 86, 0, "", 0, 1, 10, 4, 1, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 10:
        sub_a961(a_1, "Epsilon2", sub_ad38(a_0), 0, 3, 4, 242.7, 362.7, 104.74, 206, "", 87, 16, "", 0, 0, 11, 4, 1, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 11:
        sub_a961(a_1, "Epsilon3", sub_ad38(a_0), 0, 3, 4, 1835.53, 4705.85986328125, 38.1, 206, "", 88, 16, "epsCars", 0, 0, 12, 4, 1, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 12:
        sub_a961(a_1, "Epsilon4", sub_ad38(a_0), 0, 3, 4, 1826.13, 4698.8798828125, 38.919999999999995, 206, "", 90, 16, "postRC_Epsilon4", 0, 0, 13, 4, 1, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 13:
        sub_a961(a_1, "Epsilon5", sub_ad38(a_0), 0, 3, 4, 637.02, 119.70929718017578, 89.5, 206, "", 89, 16, "epsRobes", 0, 0, 14, 4, 1, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 14:
        sub_a961(a_1, "Epsilon6", sub_ad38(a_0), 0, 3, 4, -2892.929931640625, 3192.3701171875, 11.66, 206, "", 93, 0, "", 0, 0, 15, 4, 1, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 15:
        sub_a961(a_1, "Epsilon7", sub_ad38(a_0), 0, 3, 4, 524.43, 3079.82, 39.48, 206, "", -1, 16, "epsDesert", 0, 0, 16, 4, 1, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 16:
        sub_a961(a_1, "Epsilon8", sub_ad38(a_0), 0, 3, 4, -697.75, 45.38, 43.03, 206, "", 94, 16, "epsilonTract", 0, 0, -1, 4, 1, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 17:
        sub_a961(a_1, "Extreme1", sub_ad38(a_0), 0, 4, 4, -188.22, 1296.1, 302.8599853515625, 66, "", -1, 0, "", 4, 1, 18, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 18:
        sub_a961(a_1, "Extreme2", sub_ad38(a_0), 0, 4, 4, -954.19, -2760.05, 14.64, 382, "", 96, 0, "", 171, 0, 19, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 19:
        sub_a961(a_1, "Extreme3", sub_ad38(a_0), 0, 4, 4, 63.8, -809.5, 321.8, 382, "", 97, 0, "", 0, 0, 20, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 20:
        sub_a961(a_1, "Extreme4", sub_ad38(a_0), 0, 4, 4, 1731.41, 96.96, 170.39, 382, "", 98, 16, "", 0, 0, -1, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 21:
        sub_a961(a_1, "Fanatic1", sub_ad38(a_0), 0, 5, 4, -1877.8199462890625, -440.64898681640625, 45.05, 405, "", 74, 0, "", 0, 1, -1, 4, 1, 700, 2000, sub_a9f2(a_0), 1, 0);
        break;
    case 22:
        sub_a961(a_1, "Fanatic2", sub_ad38(a_0), 0, 5, 4, 809.6599731445312, 1279.76, 360.49, 405, "", -1, 0, "", 0, 1, -1, 4, 4, 700, 2000, sub_a9f2(a_0), 1, 0);
        break;
    case 23:
        sub_a961(a_1, "Fanatic3", sub_ad38(a_0), 0, 5, 4, 915.6, 6139.2, 5.5, 405, "", -1, 0, "", 0, 1, -1, 4, 2, 700, 2000, sub_a9f2(a_0), 0, 1);
        break;
    case 24:
        sub_a961(a_1, "Hao1", sub_ad38(a_0), 0, 6, 4, -72.29, -1260.63, 28.14, 66, "", -1, 0, "controller_Races", 13, 1, -1, 4, 2, 2000, 500, sub_a9f2(a_0), 0, 1);
        break;
    case 25:
        sub_a961(a_1, "Hunting1", sub_ad38(a_0), 0, 7, 4, 1804.3199462890625, 3931.33, 32.82, 66, "", -1, 0, "", 174, 1, 26, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 26:
        sub_a961(a_1, "Hunting2", sub_ad38(a_0), 0, 7, 4, -684.1699829101562, 5839.16015625, 16.09, 384, "", 99, 0, "", 7, 0, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 27:
        sub_a961(a_1, "Josh1", sub_ad38(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 66, "", -1, 0, "forSaleSigns", 0, 1, 28, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 28:
        sub_a961(a_1, "Josh2", sub_ad38(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", 105, 0, "", 0, 0, 29, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 1);
        break;
    case 29:
        sub_a961(a_1, "Josh3", sub_ad38(a_0), 0, 8, 4, 565.39, -1772.88, 29.77, 385, "", -1, 16, "", 0, 0, 30, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 1);
        break;
    case 30:
        sub_a961(a_1, "Josh4", sub_ad38(a_0), 0, 8, 4, -1104.93, 291.25, 64.3, 385, "", -1, 36, "", 0, 0, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 31:
        sub_a961(a_1, "Maude1", sub_ad38(a_0), 0, 9, 4, 2726.1, 4145.0, 44.3, 66, "", -1, 0, "BailBond_Launcher", 0, 1, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 32:
        sub_a961(a_1, "Minute1", sub_ad38(a_0), 0, 10, 4, 327.85, 3405.7, 35.73, 66, "", -1, 0, "", 0, 1, 33, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 33:
        sub_a961(a_1, "Minute2", sub_ad38(a_0), 0, 10, 4, 18.0, 4527.0, 105.0, 386, "", -1, 10, "", 0, 0, 34, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 34:
        sub_a961(a_1, "Minute3", sub_ad38(a_0), 0, 10, 4, -303.82, 6211.29, 31.05, 386, "", -1, 10, "", 0, 0, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 35:
        sub_a961(a_1, "MrsPhilips1", sub_ad38(a_0), 0, 11, 4, 1972.5899658203125, 3816.429931640625, 32.419999999999995, 66, "", -1, 0, "ambient_MrsPhilips", 0, 1, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 36:
        sub_a961(a_1, "MrsPhilips2", sub_ad38(a_0), 0, 11, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 1, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 37:
        sub_a961(a_1, "Nigel1", sub_ad38(a_0), 0, 12, 4, -1097.16, 790.01, 164.52, 66, "", -1, 0, "", 177, 1, -1, 1, 4, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 38:
        sub_a961(a_1, "Nigel1A", sub_ad38(a_0), 0, 12, 1, -558.65, 284.49, 90.86, 149, "NIGITEMS", 100, 0, "", 0, 0, 42, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 1);
        break;
    case 39:
        sub_a961(a_1, "Nigel1B", sub_ad38(a_0), 0, 12, 1, -1034.15, 366.0799865722656, 80.11, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_a9f2(a_0), 1, 1);
        break;
    case 40:
        sub_a961(a_1, "Nigel1C", sub_ad38(a_0), 0, 12, 1, -623.9099731445312, -266.17, 37.76, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_a9f2(a_0), 1, 1);
        break;
    case 41:
        sub_a961(a_1, "Nigel1D", sub_ad38(a_0), 0, 12, 1, -1096.8499755859375, 67.68, 52.95, 149, "", 100, 0, "", 0, 0, 42, 4, 4, 700, 2000, sub_a9f2(a_0), 1, 1);
        break;
    case 42:
        sub_a961(a_1, "Nigel2", sub_ad38(a_0), 0, 12, 4, 1310.6999999999998, -640.219970703125, 26.54, 149, "", -1, 8, "", 0, 0, 43, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 1);
        break;
    case 43:
        sub_a961(a_1, "Nigel3", sub_ad38(a_0), 0, 12, 4, -44.75, -1288.67, 28.21, 149, "", -1, 16, "postRC_Nigel3", 0, 0, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 1);
        break;
    case 44:
        sub_a961(a_1, "Omega1", sub_ad38(a_0), 0, 13, 4, 2468.51, 3437.389892578125, 49.9, 66, "", -1, 0, "spaceshipParts", 0, 1, 45, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 45:
        sub_a961(a_1, "Omega2", sub_ad38(a_0), 0, 13, 4, 2319.43994140625, 2583.58, 46.76, 387, "", 107, 0, "", 0, 0, -1, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 46:
        sub_a961(a_1, "Paparazzo1", sub_ad38(a_0), 0, 14, 4, -149.75, 285.81, 93.67, 66, "", -1, 0, "", 0, 1, 47, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 47:
        sub_a961(a_1, "Paparazzo2", sub_ad38(a_0), 0, 14, 4, 70.71, 301.43, 106.79, 389, "", -1, 8, "", 0, 0, 48, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 48:
        sub_a961(a_1, "Paparazzo3", sub_ad38(a_0), 0, 14, 4, -257.22, 292.85, 90.63, 389, "", -1, 8, "", 183, 1, -1, 2, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 49:
        sub_a961(a_1, "Paparazzo3A", sub_ad38(a_0), 0, 14, 2, 305.5199890136719, 157.19, 102.94, 389, "PAPPHOTO", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 50:
        sub_a961(a_1, "Paparazzo3B", sub_ad38(a_0), 0, 14, 2, 1040.9599609375, -534.4199829101562, 60.169999999999995, 389, "", 102, 0, "", 0, 0, 51, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 51:
        sub_a961(a_1, "Paparazzo4", sub_ad38(a_0), 0, 14, 4, -484.2, 229.67999999999998, 82.21, 389, "", -1, 8, "", 0, 1, -1, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 52:
        sub_a961(a_1, "Rampage1", sub_ad38(a_0), 0, 15, 4, 908.0, 3643.7, 32.2, 66, "", -1, 0, "", 0, 1, 54, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 54:
        sub_a961(a_1, "Rampage3", sub_ad38(a_0), 0, 15, 4, 465.1, -1849.3, 27.8, 84, "", -1, 0, "", 0, 1, 55, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 55:
        sub_a961(a_1, "Rampage4", sub_ad38(a_0), 0, 15, 4, -161.0, 1669.6999999999998, 33.0, 84, "", -1, 0, "", 0, 0, 56, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 56:
        sub_a961(a_1, "Rampage5", sub_ad38(a_0), 0, 15, 4, 1298.1999999999998, 2504.139892578125, 21.09, 84, "", -1, 0, "", 0, 0, 53, 4, 4, 0, 2359, sub_a9f2(a_0), 0, 0);
        break;
    case 53:
        sub_a961(a_1, "Rampage2", sub_ad38(a_0), 0, 15, 4, 1181.5, -400.1, 67.5, 84, "", -1, 0, "rampage_controller", 0, 0, -1, 4, 4, 0, 2359, sub_a9f2(a_0), 1, 0);
        break;
    case 57:
        sub_a961(a_1, "TheLastOne", sub_ad38(a_0), 0, 16, 4, -1298.97998046875, 4640.16015625, 105.67, 66, "", 133, 1, "", 0, 1, -1, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 58:
        sub_a961(a_1, "Tonya1", sub_ad38(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 66, "AM_H_RCFS", -1, 0, "ambient_TonyaCall", 24, 1, 59, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 59:
        sub_a961(a_1, "Tonya2", sub_ad38(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "ambient_Tonya", 185, 0, 60, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 60:
        sub_a961(a_1, "Tonya3", sub_ad38(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 187, 0, 61, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 61:
        sub_a961(a_1, "Tonya4", sub_ad38(a_0), 0, 17, 4, 0.0, 0.0, 0.0, -1, "", -1, 0, "", 0, 0, 62, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    case 62:
        sub_a961(a_1, "Tonya5", sub_ad38(a_0), 0, 17, 4, -14.39, -1472.68994140625, 29.58, 388, "", -1, 48, "", 0, 0, -1, 4, 2, 0, 2359, sub_a9f2(a_0), 0, 1);
        break;
    default:
        break;
    }
}

void sub_a961(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16, auto a_17, auto a_18, auto a_19, auto a_20, auto a_21, auto a_22, auto a_23, auto a_24) {
    a_0._f4 = a_5;
    a_0 = a_1;
    a_0._f1/*{2}*/ = a_2;
    a_0._f3 = a_4;
    a_0._f5 = a_6;
    a_0._f6/*{3}*/ = a_7;
    a_0._f9 = a_A;
    a_0._fA/*"16"*/ = a_B;
    a_0._fE = a_C;
    a_0._fF = a_D;
    a_0._f10/*"24"*/ = a_E;
    a_0._f16 = a_F;
    a_0._f17 = a_10;
    a_0._f18 = a_11;
    a_0._f19 = a_12;
    a_0._f1A = a_13;
    a_0._f1B = a_14;
    a_0._f1C = a_15;
    a_0._f1D = a_16;
    a_0._f1E = a_17;
    a_0._f1F = a_18;
}

auto sub_a9f2(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 1;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 1;
        break;
    case 6:
        return 1;
        break;
    case 7:
        return 0;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 0;
        break;
    case 10:
        return 0;
        break;
    case 11:
        return 0;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 0;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 0;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 1;
        break;
    case 23:
        return 1;
        break;
    case 24:
        return 1;
        break;
    case 25:
        return 1;
        break;
    case 26:
        return 1;
        break;
    case 27:
        return 0;
        break;
    case 28:
        return 1;
        break;
    case 29:
        return 1;
        break;
    case 30:
        return 1;
        break;
    case 31:
        return 0;
        break;
    case 32:
        return 1;
        break;
    case 33:
        return 1;
        break;
    case 34:
        return 1;
        break;
    case 35:
        return 0;
        break;
    case 36:
        return 0;
        break;
    case 37:
        return 0;
        break;
    case 38:
        return 1;
        break;
    case 39:
        return 1;
        break;
    case 40:
        return 1;
        break;
    case 41:
        return 1;
        break;
    case 42:
        return 1;
        break;
    case 43:
        return 1;
        break;
    case 44:
        return 0;
        break;
    case 45:
        return 0;
        break;
    case 46:
        return 1;
        break;
    case 47:
        return 1;
        break;
    case 48:
        return 0;
        break;
    case 49:
        return 1;
        break;
    case 50:
        return 1;
        break;
    case 51:
        return 1;
        break;
    case 52:
        return 1;
        break;
    case 54:
        return 1;
        break;
    case 55:
        return 1;
        break;
    case 56:
        return 1;
        break;
    case 53:
        return 1;
        break;
    case 57:
        return 1;
        break;
    case 58:
        return 1;
        break;
    case 59:
        return 1;
        break;
    case 60:
        return 1;
        break;
    case 61:
        return 1;
        break;
    case 62:
        return 1;
        break;
    default:
        break;
    }
    return 0;
}

auto<2> sub_ad38(auto a_0) {
    v_3/*"8"*/ = "";
    v_5/*{2}*/ = sub_ad6f(a_0);
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_5)) {
    } else {
        v_3/*"8"*/ = "RC_";
        v_3/*8*/ += v_5;
    }
    return v_3;
}

auto<2> sub_ad6f(auto a_0) {
    v_3/*"8"*/ = "";
    switch (a_0) {
    case 0:
        v_3/*"8"*/ = "ABI1";
        break;
    case 1:
        v_3/*"8"*/ = "ABI2";
        break;
    case 2:
        v_3/*"8"*/ = "BA1";
        break;
    case 3:
        v_3/*"8"*/ = "BA2";
        break;
    case 4:
        v_3/*"8"*/ = "BA3";
        break;
    case 5:
        v_3/*"8"*/ = "BA3A";
        break;
    case 6:
        v_3/*"8"*/ = "BA3C";
        break;
    case 7:
        v_3/*"8"*/ = "BA4";
        break;
    case 8:
        v_3/*"8"*/ = "DRE1";
        break;
    case 9:
        v_3/*"8"*/ = "EPS1";
        break;
    case 10:
        v_3/*"8"*/ = "EPS2";
        break;
    case 11:
        v_3/*"8"*/ = "EPS3";
        break;
    case 12:
        v_3/*"8"*/ = "EPS4";
        break;
    case 13:
        v_3/*"8"*/ = "EPS5";
        break;
    case 14:
        v_3/*"8"*/ = "EPS6";
        break;
    case 15:
        v_3/*"8"*/ = "EPS7";
        break;
    case 16:
        v_3/*"8"*/ = "EPS8";
        break;
    case 17:
        v_3/*"8"*/ = "EXT1";
        break;
    case 18:
        v_3/*"8"*/ = "EXT2";
        break;
    case 19:
        v_3/*"8"*/ = "EXT3";
        break;
    case 20:
        v_3/*"8"*/ = "EXT4";
        break;
    case 21:
        v_3/*"8"*/ = "FAN1";
        break;
    case 22:
        v_3/*"8"*/ = "FAN2";
        break;
    case 23:
        v_3/*"8"*/ = "FAN3";
        break;
    case 24:
        v_3/*"8"*/ = "HAO1";
        break;
    case 25:
        v_3/*"8"*/ = "HUN1";
        break;
    case 26:
        v_3/*"8"*/ = "HUN2";
        break;
    case 27:
        v_3/*"8"*/ = "JOS1";
        break;
    case 28:
        v_3/*"8"*/ = "JOS2";
        break;
    case 29:
        v_3/*"8"*/ = "JOS3";
        break;
    case 30:
        v_3/*"8"*/ = "JOS4";
        break;
    case 31:
        v_3/*"8"*/ = "MAU1";
        break;
    case 32:
        v_3/*"8"*/ = "MIN1";
        break;
    case 33:
        v_3/*"8"*/ = "MIN2";
        break;
    case 34:
        v_3/*"8"*/ = "MIN3";
        break;
    case 35:
        v_3/*"8"*/ = "MRS1";
        break;
    case 36:
        v_3/*"8"*/ = "MRS2";
        break;
    case 37:
        v_3/*"8"*/ = "NI1";
        break;
    case 38:
        v_3/*"8"*/ = "NI1A";
        break;
    case 39:
        v_3/*"8"*/ = "NI1B";
        break;
    case 40:
        v_3/*"8"*/ = "NI1C";
        break;
    case 41:
        v_3/*"8"*/ = "NI1D";
        break;
    case 42:
        v_3/*"8"*/ = "NI2";
        break;
    case 43:
        v_3/*"8"*/ = "NI3";
        break;
    case 44:
        v_3/*"8"*/ = "OME1";
        break;
    case 45:
        v_3/*"8"*/ = "OME2";
        break;
    case 46:
        v_3/*"8"*/ = "PA1";
        break;
    case 47:
        v_3/*"8"*/ = "PA2";
        break;
    case 48:
        v_3/*"8"*/ = "PA3";
        break;
    case 49:
        v_3/*"8"*/ = "PA3A";
        break;
    case 50:
        v_3/*"8"*/ = "PA3B";
        break;
    case 51:
        v_3/*"8"*/ = "PA4";
        break;
    case 52:
        v_3/*"8"*/ = "RAM1";
        break;
    case 53:
        v_3/*"8"*/ = "RAM2";
        break;
    case 54:
        v_3/*"8"*/ = "RAM3";
        break;
    case 55:
        v_3/*"8"*/ = "RAM4";
        break;
    case 56:
        v_3/*"8"*/ = "RAM5";
        break;
    case 57:
        v_3/*"8"*/ = "SAS1";
        break;
    case 58:
        v_3/*"8"*/ = "TON1";
        break;
    case 59:
        v_3/*"8"*/ = "TON2";
        break;
    case 60:
        v_3/*"8"*/ = "TON3";
        break;
    case 61:
        v_3/*"8"*/ = "TON4";
        break;
    case 62:
        v_3/*"8"*/ = "TON5";
        break;
    default:
        break;
    }
    return v_3;
}

auto sub_b1bb() {
    sub_2142();
    switch (game_state._f6EA._f21B._fDDD) {
    case 0:
        return 1;
        break;
    case 1:
        return 2;
        break;
    case 2:
        return 4;
        break;
    }
    return 0;
}

auto sub_b201() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${player_timetable_scene}) > 0) {
        return 1;
    }
    return 0;
}

auto sub_b21b() {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return g_15B55._f2C == 1;
    }
    return 0;
}

auto sub_b237(auto a_0) {
    if (a_0 == 0) {
        return 0;
    }
    if (sub_b258(a_0) == -1) {
        return 0;
    }
    return 1;
}

auto sub_b258(auto a_0) {
    if (a_0 == 0) {
        return -1;
    }
    v_3 = 0;
    for (v_3 = 0; v_3 < 16; v_3 += 1) {
        if (!(g_8EC9[v_3/*5*/] == -1)) {
            if (a_0 == g_8EC9[v_3/*5*/]._f1) {
                return v_3;
            }
        }
    }
    return -1;
}

auto sub_b2a1() {
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        return 1;
    } else {
        return 0;
    }
}

auto sub_b2ca() {
    if (current_character._f1 == 1) {
        return 1;
    } else {
        return 0;
    }
}

void try_receive_message3(auto a_0) {
    if (sub_b2a1()) {
        if (comms_state == 0) {
            sub_e6c6(a_0);
        }
        if (comms_state == 0) {
            sub_e038(a_0);
        }
        if (comms_state == 0) {
            sub_d7a2(a_0);
        }
    }
    sub_b31c(a_0);
}

void sub_b31c(auto a_0) {
    asm .vardef<F> 3, "[{\"offset\":0,\"value\":5}]"
    switch (l_51) {
    case 0:
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (sub_d73e(48)) {
                if ((((sub_d725() || sub_d71c()) || sub_d713()) || sub_d70a()) || sub_d64f()) {
                    if (((((!ENTITY::DOES_ENTITY_EXIST(sub_d633(60))) && (!ENTITY::DOES_ENTITY_EXIST(sub_d633(61)))) && (g_10EC1 == -1)) && (!sub_d605())) && (!sub_d5a1())) {
                        if (sub_2129() == 0) {
                            sub_75fd(&l_59, 0, PLAYER::PLAYER_PED_ID(), "MICHAEL", 0, 1);
                            sub_75fd(&l_59, 3, 0, "DBLIMPOperator", 0, 1);
                            v_3[0/*1*/] = "DAB_HELLO";
                            v_3[1/*1*/] = "DAB_MICHAEL";
                            v_3[2/*1*/] = "DAB_SEND";
                            v_3[3/*1*/] = "DAB_THANK_M";
                            v_3[4/*1*/] = "DAB_BYE";
                        } else if (sub_2129() == 1) {
                            sub_75fd(&l_59, 1, PLAYER::PLAYER_PED_ID(), "FRANKLIN", 0, 1);
                            sub_75fd(&l_59, 3, 0, "DBLIMPOperator", 0, 1);
                            v_3[0/*1*/] = "DAB_HELLO";
                            v_3[1/*1*/] = "DAB_FRANKLIN";
                            v_3[2/*1*/] = "DAB_SEND";
                            v_3[3/*1*/] = "DAB_THANK_F";
                            v_3[4/*1*/] = "DAB_BYE";
                        } else if (sub_2129() == 2) {
                            sub_75fd(&l_59, 2, PLAYER::PLAYER_PED_ID(), "TREVOR", 0, 1);
                            sub_75fd(&l_59, 3, 0, "DBLIMPOperator", 0, 1);
                            v_3[0/*1*/] = "DAB_HELLO";
                            v_3[1/*1*/] = "DAB_TREVOR";
                            v_3[2/*1*/] = "DAB_SEND";
                            v_3[3/*1*/] = "DAB_THANK_T";
                            v_3[4/*1*/] = "DAB_BYE";
                        }
                        if (sub_d19a(5, &l_59, 48, "BLIMPAU", &v_3, &v_3, 11, 1, 0, 0, 0)) {
                            l_51 += 1;
                        }
                    }
                }
            }
        }
        break;
    case 1:
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if ((!sub_d73e(48)) && (!sub_62e0(1))) {
                next_message_deadline = a_0 + 20000;
                if (!sub_62bb()) {
                    l_51 = 3;
                }
            } else if (g_10EC1 != -1) {
                sub_5f6a(0);
            }
        }
        break;
    case 2:
        if (GAMEPLAY::GET_GAME_TIMER() > next_message_deadline) {
            l_51 += 1;
        }
        break;
    case 3:
        sub_b554();
        l_51 = 0;
        break;
    }
}

auto sub_b554() {
    if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        return 0;
    }
    v_3 = 99999.9921875;
    v_4 = -1;
    asm .vardef<F> 5, "[{\"offset\":0,\"value\":2}]"
    v_C/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
    v_5[0/*3*/]/*{3}*/ = {1133.2099609375, 120.2, 80.9 };
    v_5[1/*3*/]/*{3}*/ = {806.31, -2679.64990234375, 13.899999999999999 };
    for (v_2 = 0; v_2 < 2; v_2 += 1) {
        if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_C, v_5[v_2/*3*/], 1) < v_3) {
            v_3 = GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_C, v_5[v_2/*3*/], 1);
            v_4 = v_2;
        }
    }
    sub_b742(60);
    sub_b742(61);
    if (CAM::IS_SPHERE_VISIBLE(v_5[v_4/*3*/], 300.0) || (v_3 < 300.0)) {
        if (v_4 == 0) {
            v_4 = 1;
        } else {
            v_4 = 0;
        }
    }
    if (v_4 == 0) {
        sub_b687(60, 1);
        sub_b662(60);
        return 1;
    } else if (v_4 == 1) {
        sub_b687(61, 1);
        sub_b662(61);
        return 1;
    }
    return 0;
}

void sub_b662(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    g_10A5A[a_0/*1*/] = 0;
    g_10A5A._f45[a_0/*1*/] = 0;
}

void sub_b687(auto a_0, auto a_1) {
    if (a_0 == -1) {
        return ;
    }
    if (a_1) {
        if (!sub_b71f(a_0, 0)) {
            sub_b6e4(a_0, 1, 0);
            sub_b6e4(a_0, 2, 0);
            sub_b6e4(a_0, 3, 0);
            sub_b6e4(a_0, 4, 0);
            sub_b6e4(a_0, 0, 1);
            g_10A5A[a_0/*1*/] = 1;
        }
    } else {
        sub_b6e4(a_0, 0, 0);
    }
}

void sub_b6e4(auto a_0, auto a_1, auto a_2) {
    if (a_0 == -1) {
        return ;
    }
    if (a_2) {
        GAMEPLAY::SET_BIT(&game_state._f493F[a_0/*1*/], a_1);
    } else {
        GAMEPLAY::CLEAR_BIT(&game_state._f493F[a_0/*1*/], a_1);
    }
}

auto sub_b71f(auto a_0, auto a_1) {
    if (a_0 == -1) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(game_state._f493F[a_0/*1*/], a_1);
}

void sub_b742(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    if (sub_b7bc(&g_10A5A._f22B[0/*21*/], a_0)) {
        if (ENTITY::DOES_ENTITY_EXIST(g_10A5A._f8B[a_0/*1*/])) {
            ENTITY::SET_ENTITY_AS_MISSION_ENTITY(g_10A5A._f8B[a_0/*1*/], 1, 1);
            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&g_10A5A._f8B[a_0/*1*/]);
            g_10A5A._f8B[a_0/*1*/] = 0;
        }
        if (GAMEPLAY::IS_BIT_SET(g_10A5A._f22B[0/*21*/]._f9, 13)) {
            sub_b687(a_0, 0);
        }
    }
}

auto sub_b7bc(auto a_0, auto a_1) {
    a_0/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f3 = 0.0;
    a_0._f4 = 0;
    a_0._f5/*"16"*/ = "";
    a_0._f9 = 0;
    a_0._fA = 0;
    a_0._fB = 0;
    a_0._fC = 145;
    a_0._fD = -1;
    a_0._fE = 0;
    a_0._fF/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f12/*{3}*/ = {0.0, 0.0, 0.0 };
    switch (a_1) {
    case 0:
        a_0/*{3}*/ = {-831.8538208, 172.1154022216797, 69.90579986572266 };
        a_0._f3 = 157.57049560546875;
        a_0._f4 = sub_cefc(0, 1);
        a_0._fC = 0;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 1:
        a_0/*{3}*/ = {1970.943359375, 3801.683837890625, 31.1396 };
        a_0._f3 = 301.3963928222656;
        a_0._f4 = sub_cefc(0, 1);
        a_0._fC = 0;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 2:
        a_0/*{3}*/ = {-22.62969970703125, -1439.1368408203125, 29.65489959716797 };
        a_0._f3 = 180.08079528808594;
        a_0._f4 = sub_cefc(1, 1);
        a_0._fC = 1;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 3:
        a_0/*{3}*/ = {-22.522899627685547, -1434.6986083984375, 29.65519905090332 };
        a_0._f3 = 141.6114044189453;
        a_0._f4 = sub_cefc(1, 2);
        a_0._fC = 1;
        GAMEPLAY::SET_BIT(&a_0._f9, 19);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 4:
        a_0/*{3}*/ = {10.928099632263184, 545.669, 174.79510498046875 };
        a_0._f3 = 61.391998291015625;
        a_0._f4 = sub_cefc(1, 1);
        a_0._fC = 1;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 5:
        a_0/*{3}*/ = {6.1093, 544.9741821289062, 174.2834930419922 };
        a_0._f3 = 92.1548;
        a_0._f4 = sub_cefc(1, 2);
        a_0._fC = 1;
        GAMEPLAY::SET_BIT(&a_0._f9, 19);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 6:
        a_0/*{3}*/ = {1981.416259765625, 3808.13134765625, 31.138399124145508 };
        a_0._f3 = 117.25569915771484;
        a_0._f4 = sub_cefc(2, 1);
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 7:
        a_0/*{3}*/ = {-1158.487548828125, -1529.3673095703125, 3.8994998931884766 };
        a_0._f3 = 35.7504997253418;
        a_0._f4 = sub_cefc(2, 1);
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 8:
        a_0/*{3}*/ = {148.28680419921875, -1270.569458, 28.2252 };
        a_0._f3 = 208.468505859375;
        a_0._f4 = sub_cefc(2, 1);
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 20);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        v_4 = 1;
        break;
    case 9:
        a_0/*{3}*/ = {1459.508544921875, -1380.449951171875, 78.32589721679688 };
        a_0._f3 = 99.62110137939453;
        a_0._f4 = ${scorcher};
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 10:
        a_0/*{3}*/ = {-1518.947021484375, -1387.865478515625, -0.5134 };
        a_0._f3 = 98.38670349121094;
        a_0._f4 = ${seashark};
        v_4 = 1;
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        break;
    case 11:
        a_0/*{3}*/ = {353.09259033203125, 3577.592529296875, 32.351 };
        a_0._f3 = 16.6205;
        a_0._f4 = ${duster};
        v_4 = 1;
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        break;
    case 12:
        a_0._fE = 0;
        a_0/*{3}*/ = {-1652.0042724609375, -3142.348388671875, 12.99209976196289 };
        a_0._f3 = 329.1081848144531;
        a_0._fC = 0;
        a_0._fD = 359;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 13:
        a_0._fE = 1;
        a_0/*{3}*/ = {-1271.648681640625, -3380.685302734375, 12.945099830627441 };
        a_0._f3 = 329.5137023925781;
        a_0._fC = 1;
        a_0._fD = 359;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 14:
        a_0._fE = 2;
        a_0/*{3}*/ = {1735.5863037109375, 3294.530517578125, 40.1651 };
        a_0._f3 = 194.95249938964844;
        a_0._fC = 2;
        a_0._fD = 359;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 15:
        a_0._fE = 3;
        a_0/*{3}*/ = {-846.27, -1363.18994140625, 0.22 };
        a_0._f3 = 108.78;
        a_0._fC = 0;
        a_0._fD = 356;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 22);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 16:
        a_0._fE = 4;
        a_0/*{3}*/ = {-849.469970703125, 1354.99, 0.24 };
        a_0._f3 = 109.84;
        a_0._fC = 1;
        a_0._fD = 356;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 22);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 17:
        a_0._fE = 5;
        a_0/*{3}*/ = {-852.469970703125, 1346.1999999999998, 0.21 };
        a_0._f3 = 108.76;
        a_0._fC = 2;
        a_0._fD = 356;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 22);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 18:
        a_0._fE = 6;
        a_0/*{3}*/ = {-745.8569946289062, -1433.903564453125, 4.0005 };
        a_0._fC = 0;
        a_0._fD = 360;
        a_0._fF/*{3}*/ = {-756.2952270507812, -1441.6092529296875, 2.9184 };
        a_0._f12/*{3}*/ = {-738.0606079101562, -1423.067626953125, 8.283499717712402 };
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 19:
        a_0._fE = 7;
        a_0/*{3}*/ = {-761.8485717773438, -1453.829345703125, 4.0005 };
        a_0._fC = 1;
        a_0._fD = 360;
        a_0._fF/*{3}*/ = {-772.8157958984375, -1459.9571533203125, 3.289400100708 };
        a_0._f12/*{3}*/ = {-754.3353271484375, -1440.8360595703125, 8.333399772644043 };
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 20:
        a_0._fE = 8;
        a_0/*{3}*/ = {1769.3, 3244.0, 41.1 };
        a_0._fC = 2;
        a_0._fD = 360;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        v_4 = 1;
        break;
    case 21:
        a_0._fE = 9;
        a_0/*{3}*/ = {192.78970336914062, -1020.5385131835938, -99.98 };
        a_0._f3 = 180.0;
        a_0._f4 = 0;
        a_0._fC = 0;
        a_0._fD = 357;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 24);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        GAMEPLAY::SET_BIT(&a_0._f9, 29);
        v_4 = 1;
        break;
    case 22:
        a_0._fE = 10;
        a_0/*{3}*/ = {192.78970336914062, -1020.5385131835938, -99.98 };
        a_0._f3 = 180.0;
        a_0._f4 = 0;
        a_0._fC = 1;
        a_0._fD = 357;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 24);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        GAMEPLAY::SET_BIT(&a_0._f9, 29);
        v_4 = 1;
        break;
    case 23:
        a_0._fE = 11;
        a_0/*{3}*/ = {192.78970336914062, -1020.5385131835938, -99.98 };
        a_0._f3 = 180.0;
        a_0._f4 = 0;
        a_0._fC = 2;
        a_0._fD = 357;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 14);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 24);
        GAMEPLAY::SET_BIT(&a_0._f9, 28);
        GAMEPLAY::SET_BIT(&a_0._f9, 29);
        v_4 = 1;
        break;
    case 26:
    case 27:
    case 28:
        v_5 = a_1 - 26;
        a_0._fE = 12 + v_5;
        a_0/*{3}*/ = {196.27940368652344, -1020.4791259765625, -99.98 };
        a_0._f3 = 180.0;
        a_0._f4 = 0;
        a_0._fC = 0 + v_5;
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 27);
        GAMEPLAY::SET_BIT(&a_0._f9, 24);
        GAMEPLAY::SET_BIT(&a_0._f9, 29);
        v_4 = 1;
        break;
    case 29:
    case 30:
    case 31:
        v_5 = a_1 - 29;
        a_0._fE = 15 + v_5;
        a_0/*{3}*/ = {199.88720703125, -1020.0479736328125, -99.98 };
        a_0._f3 = 180.0;
        a_0._f4 = 0;
        a_0._fC = 0 + v_5;
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 27);
        GAMEPLAY::SET_BIT(&a_0._f9, 24);
        GAMEPLAY::SET_BIT(&a_0._f9, 29);
        v_4 = 1;
        break;
    case 32:
    case 33:
    case 34:
        v_5 = a_1 - 32;
        a_0._fE = 18 + v_5;
        a_0/*{3}*/ = {203.6, -1019.7761840820312, -99.98 };
        a_0._f3 = 180.0;
        a_0._f4 = 0;
        a_0._fC = 0 + v_5;
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        GAMEPLAY::SET_BIT(&a_0._f9, 7);
        GAMEPLAY::SET_BIT(&a_0._f9, 27);
        GAMEPLAY::SET_BIT(&a_0._f9, 24);
        GAMEPLAY::SET_BIT(&a_0._f9, 29);
        v_4 = 1;
        break;
    case 24:
        a_0._fE = 21;
        a_0/*{3}*/ = {0.0, 0.0, 0.0 };
        a_0._f3 = 0.0;
        a_0._f4 = 0;
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 11);
        GAMEPLAY::SET_BIT(&a_0._f9, 13);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        v_4 = 1;
        break;
    case 25:
        a_0._fE = 22;
        a_0/*{3}*/ = {723.2515258789062, -632.0496215820312, 27.148399353027344 };
        a_0._f3 = 12.931599617;
        a_0._f4 = ${tailgater};
        GAMEPLAY::SET_BIT(&a_0._f9, 10);
        GAMEPLAY::SET_BIT(&a_0._f9, 11);
        GAMEPLAY::SET_BIT(&a_0._f9, 13);
        GAMEPLAY::SET_BIT(&a_0._f9, 12);
        v_4 = 1;
        break;
    case 35:
        a_0/*{3}*/ = {51.23, 3111.9, 24.95 };
        a_0._f3 = 46.78;
        a_0._f4 = ${proptrailer};
        GAMEPLAY::SET_BIT(&a_0._f9, 8);
        v_4 = 1;
        break;
    case 36:
        a_0/*{3}*/ = {-55.7984, -1096.5855712890625, 25.4223 };
        a_0._f3 = 308.05960083;
        a_0._f4 = ${bjxl};
        a_0._fA = 126;
        a_0._fB = 126;
        GAMEPLAY::SET_BIT(&a_0._f9, 9);
        GAMEPLAY::SET_BIT(&a_0._f9, 13);
        v_4 = 1;
        break;
    case 37:
        a_0/*{3}*/ = {-2892.929931640625, 3192.3701171875, 11.66 };
        a_0._f3 = -132.35;
        a_0._f4 = ${velum};
        a_0._fA = 157;
        a_0._fB = 157;
        GAMEPLAY::SET_BIT(&a_0._f9, 9);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 13);
        v_4 = 1;
        break;
    case 38:
        a_0/*{3}*/ = {1744.308349609375, 3270.673095703125, 40.20759963989258 };
        a_0._f3 = 125.0;
        a_0._f4 = ${cargobob3};
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 8);
        v_4 = 1;
        break;
    case 39:
        a_0/*{3}*/ = {1751.439697265625, 3322.64306640625, 42.18550109863281 };
        a_0._f3 = 268.134;
        a_0._f4 = ${submersible};
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        v_4 = 1;
        break;
    case 41:
        a_0/*{3}*/ = {1377.1044921875, 2076.2, 52.0 };
        a_0._f3 = 37.5;
        a_0._f4 = ${towtruck};
        GAMEPLAY::SET_BIT(&a_0._f9, 8);
        v_4 = 1;
        break;
    case 40:
        a_0/*{3}*/ = {1380.42, -2072.76953125, 51.76070022583 };
        a_0._f3 = 37.5;
        a_0._f4 = ${trash};
        GAMEPLAY::SET_BIT(&a_0._f9, 8);
        v_4 = 1;
        break;
    case 42:
        a_0/*{3}*/ = {1359.38916015625, 3618.440673828125, 33.89070129394531 };
        a_0._f3 = 108.23370361328125;
        a_0._f4 = ${barracks};
        GAMEPLAY::SET_BIT(&a_0._f9, 8);
        v_4 = 1;
        break;
    case 43:
        a_0/*{3}*/ = {693.1154174804688, -1018.1550903320312, 21.6387 };
        a_0._f3 = 177.645401;
        a_0._f4 = ${firetruk};
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 8);
        v_4 = 1;
        break;
    case 44:
        a_0/*{3}*/ = {-73.69629669189453, 495.1239929199219, 143.52259826660156 };
        a_0._f3 = 155.59939575195312;
        a_0._f4 = ${vacca};
        v_4 = 1;
        break;
    case 45:
        a_0/*{3}*/ = {-67.63140106201172, 891.8265991210938, 234.53480529785156 };
        a_0._f3 = 294.9930114746094;
        a_0._f4 = ${surano};
        v_4 = 1;
        break;
    case 46:
        a_0/*{3}*/ = {533.90478515625, -169.2469024658203, 53.7005 };
        a_0._f3 = 1.2998;
        a_0._f4 = ${tornado2};
        v_4 = 1;
        break;
    case 47:
        a_0/*{3}*/ = {-726.8914184570312, -408.6951904296875, 34.04159927368164 };
        a_0._f3 = 267.73919677734375;
        a_0._f4 = ${superd};
        v_4 = 1;
        break;
    case 48:
        a_0/*{3}*/ = {-1321.5185546875, 261.3992919921875, 61.5709 };
        a_0._f3 = 350.76971435546875;
        a_0._f4 = ${double};
        v_4 = 1;
        break;
    case 49:
        a_0/*{3}*/ = {1268, 451.64630126953125, 93.7071 };
        a_0._f3 = 48.93109893798828;
        a_0._f4 = ${double};
        v_4 = 1;
        break;
    case 50:
        a_0/*{3}*/ = {-1062.076171875, -226.76370239257812, 37.157 };
        a_0._f3 = 234.27670288085938;
        a_0._f4 = ${double};
        v_4 = 1;
        break;
    case 51:
        a_0/*{3}*/ = {68.16914367675781, -1558.9581298828125, 29.46904182434082 };
        a_0._f3 = 49.90575408935547;
        a_0._f4 = ${rumpo2};
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 26);
        v_4 = 1;
        break;
    case 52:
        a_0/*{3}*/ = {589.4398803710938, 2736.707763671875, 42.033164978027344 };
        a_0._f3 = -175.7104949951172;
        a_0._f4 = ${rumpo2};
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 26);
        v_4 = 1;
        break;
    case 53:
        a_0/*{3}*/ = {-488.7739562988281, -344.572052, 34.363563537597656 };
        a_0._f3 = 82.4041976928711;
        a_0._f4 = ${rumpo2};
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 26);
        v_4 = 1;
        break;
    case 54:
        a_0/*{3}*/ = {288.8808288574219, -585.4728393554688, 43.15428161621094 };
        a_0._f3 = -20.80706787109375;
        a_0._f4 = ${rumpo2};
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 26);
        v_4 = 1;
        break;
    case 55:
        a_0/*{3}*/ = {304.8293762207031, -1383.6741943359375, 31.67744255065918 };
        a_0._f3 = -41.11602783203125;
        a_0._f4 = ${rumpo2};
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 26);
        v_4 = 1;
        break;
    case 56:
        a_0/*{3}*/ = {1126.1943359375, -1481.4859619140625, 34.701602935791016 };
        a_0._f3 = -91.4336929321289;
        a_0._f4 = ${rumpo2};
        a_0._fC = 2;
        GAMEPLAY::SET_BIT(&a_0._f9, 26);
        v_4 = 1;
        break;
    case 57:
        a_0/*{3}*/ = {-1598.3599853515625, 5252.83984375, 0.0 };
        a_0._f3 = 28.14;
        a_0._f4 = ${submersible};
        a_0._fD = 308;
        GAMEPLAY::SET_BIT(&a_0._f9, 2);
        GAMEPLAY::SET_BIT(&a_0._f9, 30);
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 58:
        a_0/*{3}*/ = {1602.62, 5260.3701171875, 0.86 };
        a_0._f3 = 25.32;
        a_0._f4 = ${dinghy};
        a_0._fD = 404;
        GAMEPLAY::SET_BIT(&a_0._f9, 2);
        GAMEPLAY::SET_BIT(&a_0._f9, 22);
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 59:
        a_0/*{3}*/ = {2116.571044921875, 4763.279296875, 40.15959930419922 };
        a_0._f3 = 198.723;
        a_0._f4 = ${bfinjection};
        v_4 = 1;
        break;
    case 60:
        a_0/*{3}*/ = {1133.2099609375, 120.2, 80.9 };
        a_0._f3 = 134.39999999999998;
        if (sub_d64f()) {
            a_0._f4 = 0xdb6b4924;
        } else {
            a_0._f4 = ${blimp};
        }
        a_0._fD = 401;
        GAMEPLAY::SET_BIT(&a_0._f9, 13);
        GAMEPLAY::SET_BIT(&a_0._f9, 2);
        GAMEPLAY::SET_BIT(&a_0._f9, 1);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        v_4 = 1;
        break;
    case 61:
        a_0/*{3}*/ = {806.31, -2679.64990234375, 13.899999999999999 };
        a_0._f3 = 150.54;
        if (sub_d64f()) {
            a_0._f4 = 0xdb6b4924;
        } else {
            a_0._f4 = ${blimp};
        }
        a_0._fD = 401;
        GAMEPLAY::SET_BIT(&a_0._f9, 13);
        GAMEPLAY::SET_BIT(&a_0._f9, 2);
        GAMEPLAY::SET_BIT(&a_0._f9, 1);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        v_4 = 1;
        break;
    case 62:
        a_0/*{3}*/ = {1985.8499755859375, 3828.9599609375, 31.98 };
        a_0._f3 = 16.58;
        a_0._f4 = ${blazer3};
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 63:
        a_0/*{3}*/ = {3870.75, 4464.669921875, 0.0 };
        a_0._f3 = 0.0;
        a_0._f4 = ${submersible2};
        a_0._fD = 308;
        GAMEPLAY::SET_BIT(&a_0._f9, 0);
        GAMEPLAY::SET_BIT(&a_0._f9, 21);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        GAMEPLAY::SET_BIT(&a_0._f9, 30);
        v_4 = 1;
        break;
    case 64:
        a_0/*{3}*/ = {1257.7294921875, -2564.47412109375, 41.717 };
        a_0._f3 = 284.55609130859375;
        a_0._f4 = 0xec8f7094;
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 65:
        a_0/*{3}*/ = {643.2822875976562, 3014.152099609375, 42.2733 };
        a_0._f3 = 128.05540466308594;
        a_0._f4 = 0xec8f7094;
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 66:
        a_0/*{3}*/ = {38.936798095703125, 850.86767578125, 196.3 };
        a_0._f3 = 311.6813049316406;
        a_0._f4 = ${dodo};
        GAMEPLAY::SET_BIT(&a_0._f9, 30);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    case 67:
        a_0/*{3}*/ = {1333.875244140625, 4262.2255859375, 30.78 };
        a_0._f3 = 262.529296875;
        a_0._f4 = ${dodo};
        GAMEPLAY::SET_BIT(&a_0._f9, 30);
        GAMEPLAY::SET_BIT(&a_0._f9, 23);
        GAMEPLAY::SET_BIT(&a_0._f9, 6);
        v_4 = 1;
        break;
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f9, 10)) {
        a_0._f4 = game_state._f493F._f45[a_0._fE/*78*/]._f42;
        if (a_1 == 14) {
            if ((((((a_0._f4 == ${miljet}) || (a_0._f4 == 0x6cbd1d6d)) || (a_0._f4 == ${luxor})) || (a_0._f4 == ${shamal})) || (a_0._f4 == ${titan})) || (a_0._f4 == 0xb79f589e)) {
                a_0/*{3}*/ = {1678.8, 3229.6, 41.8 };
                a_0._f3 = 106.09059906;
            }
        }
        if (!sub_ceb5(game_state._f493F._f748[a_0._fE/*3*/], 0.0, 0.0, 0.0, 0)) {
            a_0/*{3}*/ = game_state._f493F._f748[a_0._fE/*3*/];
        }
        if (game_state._f493F._f78E[a_0._fE/*1*/] != -1.0) {
            a_0._f3 = game_state._f493F._f78E[a_0._fE/*1*/];
        }
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f9, 19)) {
        if (!sub_ceb5(game_state._f6EA._f21B._fB00[1/*10*/][a_0._fC/*3*/], 0.0, 0.0, 0.0, 0)) {
            a_0/*{3}*/ = game_state._f6EA._f21B._fB00[1/*10*/][a_0._fC/*3*/];
            a_0._f3 = game_state._f6EA._f21B._fB15[1/*4*/][a_0._fC/*1*/];
        }
    } else if (GAMEPLAY::IS_BIT_SET(a_0._f9, 20)) {
        if (!sub_ceb5(game_state._f6EA._f21B._fB00[0/*10*/][a_0._fC/*3*/], 0.0, 0.0, 0.0, 0)) {
            a_0/*{3}*/ = game_state._f6EA._f21B._fB00[0/*10*/][a_0._fC/*3*/];
            a_0._f3 = game_state._f6EA._f21B._fB15[0/*4*/][a_0._fC/*1*/];
        }
    }
    return v_4;
}

auto sub_ceb5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_6) {
        return (a_0 == a_3) && (a_0._f1 == a_3._f1);
    } else {
        return ((a_0 == a_3) && (a_0._f1 == a_3._f1)) && (a_0._f2 == a_3._f2);
    }
}

auto sub_cefc(auto a_0, auto a_1) {
    if (sub_907(a_0)) {
        asm .vardef<F> 4, "[{\"type\":\"field\",\"value\":[{\"offset\":11,\"value\":12}]},{\"type\":\"field\",\"value\":[{\"offset\":31,\"value\":49}]},{\"type\":\"field\",\"value\":[{\"offset\":81,\"value\":2}]}]"
        sub_cf3e(a_0, &v_4, a_1);
        return v_4;
    } else if (a_0 != 145) {}
    return 0;
}

void sub_cf3e(auto a_0, auto a_1, auto a_2) {
    a_1._f58 = 1;
    a_1._f54 = 255;
    a_1._f55 = 255;
    a_1._f56 = 255;
    a_1._f61 = 1;
    a_1._f3 = 1000;
    a_1._f1 = 0;
    switch (a_0) {
    case 0:
        v_5 = ${tailgater};
        if (game_state._f1E27._f63._f3A[128/*1*/] && (!game_state._f1E27._f63._f3A[131/*1*/])) {
            v_5 = ${premier};
        }
        switch (v_5) {
        case ${tailgater}:
            a_1 = v_5;
            a_1._f2 = 3.0;
            a_1._f4 = 0;
            a_1._f9 = 1;
            a_1._fB[0/*1*/] = 1;
            a_1._f1B/*"16"*/ = "5MDS003";
            break;
        case ${premier}:
            a_1 = v_5;
            a_1._f2 = 14.899999999999999;
            a_1._f5 = 43;
            a_1._f6 = 43;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._f9 = 0;
            a_1._f1B/*"16"*/ = "880HS955";
            break;
        }
        break;
    case 2:
        v_5 = ${bodhi2};
        switch (v_5) {
        case ${bodhi2}:
            a_1 = v_5;
            a_1._f2 = 14.0;
            a_1._f5 = 32;
            a_1._f6 = 0;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._f1B/*"16"*/ = "BETTY 32";
            if (game_state._f1E27._f63._f3A[119/*1*/]) {
                a_1._fB[1/*1*/] = 1;
            }
            break;
        }
        break;
    case 1:
        if (a_2 == 1) {
            v_5 = ${buffalo2};
        } else if (a_2 == 2) {
            v_5 = ${bagger};
        } else if (game_state._f1E27._f63._f3A[118/*1*/]) {
            v_5 = ${bagger};
        } else {
            v_5 = ${buffalo2};
        }
        switch (v_5) {
        case ${bagger}:
            a_1 = v_5;
            a_1._f2 = 6.0;
            a_1._f5 = 53;
            a_1._f6 = 0;
            a_1._f7 = 59;
            a_1._f8 = 156;
            a_1._f1B/*"16"*/ = "FC88";
            break;
        case ${buffalo2}:
            a_1 = v_5;
            a_1._f2 = 0.0;
            a_1._f5 = 111;
            a_1._f6 = 111;
            a_1._f7 = 0;
            a_1._f8 = 156;
            a_1._fA = 1;
            a_1._f1B/*"16"*/ = "FC1988";
            a_1._fB[0/*1*/] = 1;
            a_1._fB[1/*1*/] = 1;
            a_1._fB[2/*1*/] = 1;
            a_1._fB[3/*1*/] = 1;
            a_1._fB[4/*1*/] = 1;
            a_1._fB[5/*1*/] = 1;
            a_1._fB[6/*1*/] = 1;
            a_1._fB[7/*1*/] = 1;
            a_1._fB[8/*1*/] = 1;
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_d19a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    sub_75a7(a_1, a_2, a_3, a_8, a_9, 0);
    sub_d568();
    if (a_7 == 1) {
        g_3D6C = 1;
    } else {
        g_3D6C = 0;
    }
    sub_d542(a_0);
    return sub_d1d8(a_4, a_5, a_6, a_A);
}

auto sub_d1d8(auto a_0, auto a_1, auto a_2, auto a_3) {
    g_3D61 = 0;
    if ((g_3D60 == 0) || (g_3D62 == 2)) {
        if (g_3D60 != 0) {
            if (a_2 > g_3D62) {
                if (a_3 == 0) {
                    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
                    current_character._f1 = 3;
                    g_3D60 = 0;
                    g_3D61 = 1;
                    g_3D95 = 0;
                    g_3D5C = 0;
                    g_3D5D = 0;
                } else {
                    sub_7550();
                    return 0;
                }
            } else {
                return 0;
            }
        }
        if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
            return 0;
        }
        if (sub_7515(8, -1)) {
            return 0;
        }
        g_3DAC/*{6}*/ = g_3DA6;
        sub_74be();
        g_3A99/*{165}*/ = g_3B3E;
        g_3D66 = g_3D67;
        g_3D6D = g_3D6E;
        g_280002 = g_280001;
        g_3D6F/*{16}*/ = g_3D7F;
        g_3D68 = g_3D69;
        g_413E = g_413F;
        g_4146/*{6}*/ = g_414C;
        g_4144 = g_4145;
        g_4140 = g_4141;
        g_4142 = g_4143;
        g_3BE3._f170 = g_413B;
        g_3BE3._f171 = g_413C;
        g_3BE3._f172 = g_413D;
        g_3D5C = g_3D5D;
        g_3D5E = g_3D5F;
        if (g_3E62 == 0) {
            g_3DFA[0/*6*/]/*{6}*/ = g_3E14[0/*6*/];
            g_3DFA[1/*6*/]/*{6}*/ = g_3E14[1/*6*/];
            g_3E2E[0/*6*/]/*{6}*/ = g_3E48[0/*6*/];
            g_3E2E[1/*6*/]/*{6}*/ = g_3E48[1/*6*/];
            g_3E07[0/*6*/]/*{6}*/ = g_3E21[0/*6*/];
            g_3E07[1/*6*/]/*{6}*/ = g_3E21[1/*6*/];
            g_3E3B[0/*6*/]/*{6}*/ = g_3E55[0/*6*/];
            g_3E3B[1/*6*/]/*{6}*/ = g_3E55[1/*6*/];
        }
        if (g_3D66) {
            GAMEPLAY::CLEAR_BIT(&g_8EB, 20);
            GAMEPLAY::CLEAR_BIT(&g_8EC, 17);
            GAMEPLAY::CLEAR_BIT(&g_8ED, 0);
            if (a_3) {
                sub_2088();
                if (g_C10[current_character/*2811*/][0/*281*/]._f103 == 2) {
                    if (a_2 == 13) {
                    } else {
                        return 0;
                    }
                }
                if (current_character._f1 > 3) {
                    return 0;
                }
            }
            if (g_382B == 1) {
                return 0;
            }
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (sub_7425()) {
                    return 0;
                }
                if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), ${gadget_parachute})) {
                    return 0;
                }
                if (!is_in_transition) {
                    if (g_3E62 == 0) {
                        if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                            return 0;
                        }
                        if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) {
                            return 0;
                        }
                        if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID())) {
                            return 0;
                        }
                        if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID())) {
                            return 0;
                        }
                    }
                }
            }
            if (sub_5fda()) {
                return 0;
            } else {
                switch (current_character._f1) {
                case 7:
                    return 0;
                    break;
                case 8:
                    return 0;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                default:
                    break;
                }
            }
            sub_7390();
            g_3D6A = a_3;
        }
        g_3D62 = a_2;
        if (g_3D5C > 0) {
            for (v_6 = 0; v_6 < g_3D5C; v_6 += 1) {
                g_3BE3._f6[v_6/*6*/]/*"24"*/ = a_0[v_6/*1*/];
                g_3BE3._fBB[v_6/*6*/]/*"24"*/ = a_1[v_6/*1*/];
            }
        }
        g_38F2 = 0;
        sub_735f();
        return 1;
    } else {
        if (g_3D60 == 5) {
            return 0;
        }
        if ((a_2 < g_3D62) || (a_2 == g_3D62)) {
            return 0;
        } else {
            if (a_2 == 2) {
            } else {
                sub_7550();
            }
            return 0;
        }
    }
}

void sub_d542(auto a_0) {
    g_3D5D = a_0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4145 = 0;
    g_280001 = 0;
}

void sub_d568() {
    g_3D90 = 0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_3D6E = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 0;
    g_3D96 = 0;
    g_280001 = 0;
}

auto sub_d5a1() {
    asm .vardef<F> 2, "[{\"offset\":0,\"value\":15}]"
    v_12 = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), &v_2);
    for (v_13 = 0; v_13 <= (v_12 - 1); v_13 += 1) {
        if (ENTITY::GET_ENTITY_MODEL(v_2[v_13/*1*/]) == ${blimp}) {
            if ((!ENTITY::IS_ENTITY_DEAD(v_2[v_13/*1*/])) && VEHICLE::IS_VEHICLE_DRIVEABLE(v_2[v_13/*1*/], 0)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_d605() {
    if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) {
        if (ENTITY::GET_ENTITY_MODEL(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1)) == ${blimp}) {
            return 1;
        }
    }
    return 0;
}

auto sub_d633(auto a_0) {
    if (a_0 == -1) {
        return 0;
    }
    return g_10A5A._f8B[a_0/*1*/];
}

auto sub_d64f() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        if (NETWORK::_85443FF4C328F53B()) {
            if (NETWORK::_593570C289A77688()) {
                STATS::STAT_GET_INT(0x5da524f8, &v_2, -1);
                GAMEPLAY::SET_BIT(&v_2, 2);
                GAMEPLAY::SET_BIT(&v_2, 4);
                GAMEPLAY::SET_BIT(&v_2, 6);
                GAMEPLAY::SET_BIT(&g_19, 2);
                GAMEPLAY::SET_BIT(&g_19, 4);
                GAMEPLAY::SET_BIT(&g_19, 6);
                STATS::STAT_SET_INT(0x5da524f8, v_2, 1);
                if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
                    v_2 = GAMEPLAY::GET_PROFILE_SETTING(866);
                    GAMEPLAY::SET_BIT(&v_2, 0);
                    STATS::_DAC073C7901F9E15(v_2);
                }
                return 1;
            }
        }
    }
    if (g_21B38 == 2) {
        return 1;
    } else if (g_21B38 == 3) {
        return 0;
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        if (GAMEPLAY::IS_BIT_SET(GAMEPLAY::GET_PROFILE_SETTING(866), 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_d70a() {
    return 0;
}

auto sub_d713() {
    return 1;
}

auto sub_d71c() {
    return 1;
}

auto sub_d725() {
    if (DLC2::IS_DLC_PRESENT(0xb6de61e2)) {
        return 1;
    }
    return 0;
}

auto sub_d73e(auto a_0) {
    if ((g_41BA || g_41B9) || g_41BB) {
        if (a_0 == 130) {
        } else {
            return 0;
        }
    }
    if (g_75[a_0/*10*/]._f8 != 138) {
        if (current_character._f1 == 10) {
            if (g_63E == a_0) {
                return 1;
            } else {
                return 0;
            }
        } else {
            return 0;
        }
    } else {
        return 0;
    }
}

void sub_d7a2(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages._f28A; v_3 += 1) {
        v_4 = sub_2129();
        if (sub_907(v_4)) {
            if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages._fC7[v_3/*15*/]._f2, v_4)) {
                if (sub_d73e(game_state.pending_messages._fC7[v_3/*15*/]._f6)) {
                    if (a_0 >= g_8D9C[game_state.pending_messages._fC7[v_3/*15*/]._f6/*1*/]) {
                        v_5 = 0;
                        v_6 = 0;
                        while ((v_6 < game_state.pending_messages.count) && (!v_5)) {
                            if (game_state.pending_messages[v_6/*15*/] == game_state.pending_messages._fC7[v_3/*15*/]) {
                                v_5 = 1;
                            }
                            v_6 += 1;
                        }
                        if (!v_5) {
                            v_6 = game_state.pending_messages.count;
                            if (v_6 < 9) {
                                game_state.pending_messages[v_6/*15*/]/*{15}*/ = game_state.pending_messages._fC7[v_3/*15*/];
                                game_state.pending_messages.count += 1;
                                for (v_7 = 0; v_7 < 3; v_7 += 1) {
                                    if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[v_6/*15*/]._f2, v_7)) {
                                        sub_843(v_7);
                                    }
                                }
                            } else {
                                return ;
                            }
                        }
                        if (sub_d91c(&game_state.pending_messages[v_6/*15*/])) {
                            g_8D97 = v_6;
                            local_current_time = -1;
                            comms_state = 1;
                            game_state.pending_messages._f391 = 0;
                            local_bool_flag0 = 1;
                            if (sub_6373()) {
                                l_4F = 1;
                            }
                        } else {
                            sub_b30(v_6);
                        }
                    }
                }
            }
        }
    }
}

auto sub_d91c(auto a_0) {
    if (!sub_90b1(a_0._f2, a_0._f6, a_0._f3, a_0._f7, a_0._f1)) {
        return 0;
    }
    if (((a_0._f6 != 1) && (a_0._f6 != 2)) && (a_0._f6 != 0)) {
        if (sub_df4c(a_0._f6)) {
            return 0;
        }
    }
    if (a_0._f9 != -1) {
        if (!sub_51d5(a_0._f9)) {
            return 0;
        }
    }
    sub_da1e(a_0);
    sub_39cf(a_0, &v_3);
    if (sub_d9bf(&g_8CF2, a_0._f6, &v_3, &v_3._f4, 12, 1, 0, 0, 0)) {
        return 1;
    } else {
        sub_5ec6();
        return 0;
    }
}

auto sub_d9bf(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    sub_75a7(a_0, a_1, a_2, a_6, a_7, 0);
    g_3D90 = 0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 0;
    g_3D96 = 0;
    if (a_5 == 1) {
        g_3D6C = 1;
    } else {
        g_3D6C = 0;
    }
    g_280001 = 0;
    return sub_7093(a_3, a_4, a_8);
}

void sub_da1e(auto a_0) {
    if (GAMEPLAY::IS_BIT_SET(a_0._f2, sub_8b8b())) {
        switch (sub_2129()) {
        case 0:
            sub_75fd(&g_8CF2, 0, PLAYER::PLAYER_PED_ID(), "MICHAEL", 0, 1);
            break;
        case 1:
            sub_75fd(&g_8CF2, 1, PLAYER::PLAYER_PED_ID(), "FRANKLIN", 0, 1);
            break;
        case 2:
            sub_75fd(&g_8CF2, 2, PLAYER::PLAYER_PED_ID(), "TREVOR", 0, 1);
            break;
        }
    } else { }
    switch (a_0._f6) {
    case 0:
        sub_75fd(&g_8CF2, 0, 0, "MICHAEL", 0, 1);
        break;
    case 1:
        sub_75fd(&g_8CF2, 1, 0, "FRANKLIN", 0, 1);
        break;
    case 2:
        sub_75fd(&g_8CF2, 2, 0, "TREVOR", 0, 1);
        break;
    case 4:
        switch (sub_2129()) {
        case 0:
            sub_75fd(&g_8CF2, 1, 0, "FRANKLIN", 0, 1);
            sub_75fd(&g_8CF2, 2, 0, "TREVOR", 0, 1);
            break;
        case 1:
            sub_75fd(&g_8CF2, 0, 0, "MICHAEL", 0, 1);
            sub_75fd(&g_8CF2, 2, 0, "TREVOR", 0, 1);
            break;
        case 2:
            sub_75fd(&g_8CF2, 0, 0, "MICHAEL", 0, 1);
            sub_75fd(&g_8CF2, 1, 0, "FRANKLIN", 0, 1);
            break;
        }
        break;
    case 5:
        sub_75fd(&g_8CF2, 1, 0, "FRANKLIN", 0, 1);
        sub_75fd(&g_8CF2, 2, 0, "TREVOR", 0, 1);
        break;
    case 8:
        sub_75fd(&g_8CF2, 0, 0, "MICHAEL", 0, 1);
        sub_75fd(&g_8CF2, 1, 0, "FRANKLIN", 0, 1);
        break;
    case 9:
        sub_75fd(&g_8CF2, 0, 0, "MICHAEL", 0, 1);
        sub_75fd(&g_8CF2, 2, 0, "TREVOR", 0, 1);
        break;
    case 10:
        sub_75fd(&g_8CF2, 0, 0, "MICHAEL", 0, 1);
        sub_75fd(&g_8CF2, 3, 0, "STEVE", 0, 1);
        break;
    case 11:
        sub_75fd(&g_8CF2, 2, 0, "TREVOR", 0, 1);
        sub_75fd(&g_8CF2, 3, 0, "STEVE", 0, 1);
        break;
    default:
        sub_75fd(&g_8CF2, a_0._fE, 0, sub_dc46(a_0._f6), 0, 1);
        break;
    }
}

auto sub_dc46(auto a_0) {
    switch (a_0) {
    case 16:
        return "ABIGAIL";
        break;
    case 95:
        return "KIDNAPPEDFEMALE";
        break;
    case 17:
        return "AMANDA";
        break;
    case 21:
        return "CHENG";
        break;
    case 35:
        return "CHENGSR";
        break;
    case 30:
        return "DAVE";
        break;
    case 29:
        return "DEVIN";
        break;
    case 36:
        return "FRIEDLANDER";
        break;
    case 28:
        return "ESTATEAGENT";
        break;
    case 53:
        return "HAO";
        break;
    case 54:
        return "CLETUS";
        break;
    case 14:
        return "JIMMY";
        break;
    case 55:
        return "JIMMYBOSTON";
        break;
    case 19:
        return "LAMAR";
        break;
    case 12:
        return "LESTER";
        break;
    case 31:
        return "MARTIN";
        break;
    case 39:
        return "ONEIL";
        break;
    case 34:
        return "OSCAR";
        break;
    case 40:
        return "PATRICIA";
        break;
    case 20:
        return "NERVOUSRON";
        break;
    case 18:
        return "SIMEON";
        break;
    case 26:
        return "SOLOMON";
        break;
    case 23:
        return "STEVE";
        break;
    case 37:
        return "STRETCH";
        break;
    case 43:
        return "TANISHA";
        break;
    case 15:
        return "TRACEY";
        break;
    case 24:
        return "WADE";
        break;
    case 104:
        return "JULIET";
        break;
    case 105:
        return "NIKKI";
        break;
    case 106:
        return "CHASTITY";
        break;
    case 107:
        return "CHEETAH";
        break;
    case 108:
        return "SAPPHIRE";
        break;
    case 109:
        return "INFERNUS";
        break;
    case 110:
        return "FUFU";
        break;
    case 111:
        return "PEACH";
        break;
    case 94:
        return "BDOWNHOTCHICK";
        break;
    case 112:
        return "TaxiLiz";
        break;
    case 93:
        return "REHH2Hiker";
        break;
    case 46:
        return "LIEngineer";
        break;
    case 50:
        return "BEVERLY";
        break;
    case 51:
        return "CRIS";
        break;
    case 58:
        return "JOSH";
        break;
    case 62:
        return "MAUDE";
        break;
    case 113:
        return "TaxiDispatch";
        break;
    case 123:
        return "MANAGER";
        break;
    case 116:
        return "MANAGER";
        break;
    case 103:
        return "TONYA";
        break;
    default:
        break;
    }
    return "ERROR";
}

auto sub_df4c(auto a_0) {
    for (v_3 = 0; v_3 < 7; v_3 += 1) {
        v_4 = g_1410F[v_3/*5*/];
        if (v_4 != -1) {
            v_5 = -1;
            v_5 = g_10FD2._f6D[g_1410F[v_3/*5*/]/*4*/];
            if (v_5 != -1) {
                if (sub_dfa9(g_14133[v_5/*34*/]._fC, a_0)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_dfa9(auto a_0, auto a_1) {
    switch (a_1) {
    case 19:
        return sub_e029(a_0, 8);
        break;
    case 14:
        return sub_e029(a_0, 16);
        break;
    case 17:
        return sub_e029(a_0, 32);
        break;
    }
    return sub_dffc(a_0, a_1);
}

auto sub_dffc(auto a_0, auto a_1) {
    switch (a_1) {
    case 0:
    case 1:
    case 2:
        return GAMEPLAY::IS_BIT_SET(a_0, a_1);
    }
    return 0;
}

auto sub_e029(auto a_0, auto a_1) {
    return (a_0 & a_1) != 0;
}

void sub_e038(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages._fC6; v_3 += 1) {
        if (sub_d73e(game_state.pending_messages._f89[v_3/*15*/]._f6)) {
            if (a_0 >= g_8D9C[game_state.pending_messages._f89[v_3/*15*/]._f6/*1*/]) {
                v_4 = sub_e68e(game_state.pending_messages._f89[v_3/*15*/]);
                if (v_4 == -1) {
                    v_4 = game_state.pending_messages.count;
                    game_state.pending_messages[v_4/*15*/]/*{15}*/ = game_state.pending_messages._f89[v_3/*15*/];
                    game_state.pending_messages.count += 1;
                    for (v_5 = 0; v_5 < 3; v_5 += 1) {
                        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages._f89[v_3/*15*/]._f2, v_5)) {
                            sub_843(v_5);
                        }
                    }
                }
                if (sub_e15d(&game_state.pending_messages[v_4/*15*/], &l_4E)) {
                    g_8D97 = v_3;
                    local_current_time = -1;
                    comms_state = 1;
                    game_state.pending_messages._f391 = 0;
                    local_bool_flag0 = 1;
                    if (sub_6373()) {
                        l_4F = 1;
                    }
                } else {
                    delay_message(a_0, &game_state.pending_messages[v_4/*15*/], 0);
                }
            }
        }
    }
}

auto sub_e15d(auto a_0, auto a_1) {
    if ((!GAMEPLAY::IS_BIT_SET(a_0._f1, 7)) && (!GAMEPLAY::IS_BIT_SET(a_0._f1, 8))) {
        return 0;
    }
    if (!sub_90b1(a_0._f2, a_0._f6, a_0._f3, a_0._f7, a_0._f1)) {
        return 0;
    }
    if (sub_df4c(a_0._f6)) {
        return 0;
    }
    if (a_0._f9 != -1) {
        if (!sub_51d5(a_0._f9)) {
            return 0;
        }
    }
    if (sub_907(sub_2129())) {
        if (GAMEPLAY::IS_BIT_SET(a_0._f2, sub_8b8b())) {
            sub_da1e(a_0);
            if (get_message_category(a_0) == 1) {
                sub_e4b0(a_0, &v_4);
                sub_e339(a_0._fC, &v_10);
                sub_e339(a_0._fD, &v_14);
                if (sub_e2c5(&g_8CF2, a_0._f6, &v_4, &v_4._f4, 12, &v_4._f8, &v_10, &v_14, 1, 0, 0, 0)) {
                    if (GAMEPLAY::IS_BIT_SET(a_0._f1, 13)) {
                        a_1 = 1;
                    }
                    return 1;
                } else {
                    sub_5ec6();
                    return 0;
                }
            } else {
                sub_39cf(a_0, &v_18);
                if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_18._f8)) {
                    v_24/*{4}*/ = v_18._f4;
                } else {
                    v_24/*{4}*/ = v_18._f8;
                }
                if (sub_d9bf(&g_8CF2, a_0._f6, &v_18, &v_24, 12, 1, 0, 0, 0)) {
                    if (GAMEPLAY::IS_BIT_SET(a_0._f1, 13)) {
                        a_1 = 1;
                    }
                    return 1;
                } else {
                    sub_5ec6();
                    return 0;
                }
            }
        } else {
            return 0;
        }
    }
    return 0;
}

auto sub_e2c5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    sub_75a7(a_0, a_1, a_2, a_9, a_A, 0);
    g_3D90 = 0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_3D65 = 0;
    if (a_8 == 1) {
        g_3D6C = 1;
    } else {
        g_3D6C = 0;
    }
    g_3D94 = 1;
    g_3D96 = 0;
    g_3DB2/*"24"*/ = a_6;
    g_3DB8/*"24"*/ = a_7;
    g_3DF4/*"24"*/ = a_5;
    g_280001 = 0;
    return sub_7093(a_3, a_4, a_B);
}

void sub_e339(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        a_1/*"16"*/ = "MEFL_C1Y";
        break;
    case 1:
        a_1/*"16"*/ = "MEFL_C1N";
        break;
    case 2:
        a_1/*"16"*/ = "MEFL_C2Y";
        break;
    case 3:
        a_1/*"16"*/ = "MEFL_C2N";
        break;
    case 4:
        a_1/*"16"*/ = "MEFL_C3Y";
        break;
    case 5:
        a_1/*"16"*/ = "MEFL_C3N";
        break;
    case 6:
        a_1/*"16"*/ = "PRP_TAXIYM";
        break;
    case 7:
        a_1/*"16"*/ = "PRP_TAXINM";
        break;
    case 8:
        a_1/*"16"*/ = "PRP_TAXIYF";
        break;
    case 9:
        a_1/*"16"*/ = "OJTX_REJ_F";
        break;
    case 10:
        a_1/*"16"*/ = "PRP_TAXIYT";
        break;
    case 11:
        a_1/*"16"*/ = "PRP_TAXINT";
        break;
    case 12:
        a_1/*"16"*/ = "OJTX_TIE_LOC";
        break;
    case 13:
        a_1/*"16"*/ = "OJTX_EXC_LOC";
        break;
    case 14:
        a_1/*"16"*/ = "OJTX_FL_LOC";
        break;
    case 15:
        a_1/*"16"*/ = "OJTX_FC_LOC";
        break;
    case 16:
        a_1/*"16"*/ = "OJTX_GB_LOC";
        break;
    case 17:
        a_1/*"16"*/ = "OJTX_TB_LOC";
        break;
    case 18:
        a_1/*"16"*/ = "OJTX_CI_LOC";
        break;
    case 19:
        a_1/*"16"*/ = "OJTX_GN_LOC";
        break;
    case 20:
        a_1/*"16"*/ = "OJTX_CC_LOC";
        break;
    default:
        break;
    }
}

void sub_e4b0(auto a_0, auto a_1) {
    if (get_message_category(a_0) == 1) {
        switch (a_0) {
        case 0x6174d2a4:
            a_1/*"16"*/ = "MEFLAUD";
            a_1._f4/*"16"*/ = "MEFL_CALL1";
            a_1._f8/*"16"*/ = "MEFL_C1Q";
            break;
        case 0xe4495071:
            a_1/*"16"*/ = "MEFLAUD";
            a_1._f4/*"16"*/ = "MEFL_CALL2";
            a_1._f8/*"16"*/ = "MEFL_C2Q";
            break;
        case 0xaa70f07:
            a_1/*"16"*/ = "MEFLAUD";
            a_1._f4/*"16"*/ = "MEFL_CALL3";
            a_1._f8/*"16"*/ = "MEFL_C3Q";
            break;
        case 0x2c0343f6:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_TIE_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0xf9fb438e:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_EXC_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0x6879598f:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_DL_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0x3c9d7d9d:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_FC_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0xe4cd3ed0:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_GB_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0x7ee77a9e:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_TB_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0x50ebf9f5:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_CI_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0xd2480017:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_GN_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        case 0xb60976a2:
            a_1/*"16"*/ = "OJTXAUD";
            a_1._f4/*"16"*/ = "OJTX_CC_OFF";
            a_1._f8/*"16"*/ = "PROPR_PHONEQ";
            break;
        default:
            break;
        }
    } else {
        return ;
    }
}

auto sub_e68e(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (game_state.pending_messages[v_3/*15*/] == a_0) {
            return v_3;
        }
    }
    return -1;
}

void sub_e6c6(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages.count; v_3 += 1) {
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[v_3/*15*/]._f1, 7)) {
            if (sub_d73e(game_state.pending_messages[v_3/*15*/]._f6)) {
                if (a_0 >= g_8D9C[game_state.pending_messages[v_3/*15*/]._f6/*1*/]) {
                    if (sub_e15d(&game_state.pending_messages[v_3/*15*/], &l_4E)) {
                        g_8D97 = v_3;
                        local_current_time = -1;
                        comms_state = 1;
                        game_state.pending_messages._f391 = 0;
                        local_bool_flag0 = 1;
                        if (sub_6373()) {
                            l_4F = 1;
                        }
                    } else {
                        delay_message(a_0, &game_state.pending_messages[v_3/*15*/], 0);
                    }
                }
            }
        }
    }
}

void try_receive_message2(auto a_0) {
    if (!sub_907(sub_2129())) {
        return ;
    }
    v_3 = 0;
    while ((v_3 < game_state.pending_messages.count) && (!local_bool_flag0)) {
        force_message = 0;
        if (game_state.pending_messages.messages_something[v_3/*14*/]._f3 >= 5) {
            force_message = 1;
        }
        if (((a_0 >= next_message_deadline) || GAMEPLAY::IS_BIT_SET(game_state.pending_messages.messages_something[v_3/*14*/]._f1, 21)) || force_message) {
            if ((a_0 >= g_8D9C[game_state.pending_messages.messages_something[v_3/*14*/]._f6/*1*/]) || force_message) {
                if (a_0 >= game_state.pending_messages.messages_something[v_3/*14*/]._f4) {
                    if (receive_message_something(&game_state.pending_messages.messages_something[v_3/*14*/])) {
                        sub_e887(&game_state.pending_messages.messages_something[v_3/*14*/]);
                        game_state.pending_messages._f394 = 0;
                        sub_77b(v_3);
                        local_bool_flag0 = 1;
                    } else {
                        delay_message(a_0, &game_state.pending_messages.messages_something[v_3/*14*/], 1);
                    }
                }
            }
        }
        v_3 += 1;
    }
}

void sub_e887(auto a_0) {
    if (!sub_e8e2(a_0)) {
        if (game_state.pending_messages._f38E < 3) {
            game_state.pending_messages._f363[game_state.pending_messages._f38E/*14*/]/*{14}*/ = a_0;
            game_state.pending_messages._f38E += 1;
        } else { }
    } else { }
}

auto sub_e8e2(auto a_0) {
    for (v_3 = 0; v_3 < game_state.pending_messages._f38E; v_3 += 1) {
        if (game_state.pending_messages._f363[v_3/*14*/] == a_0) {
            return 1;
        }
    }
    return 0;
}

auto receive_message_something(auto message_hash) {
    if ((sub_62e0(0) || sub_b2ca()) || sub_b2a1()) {
        return 0;
    }
    if (!sub_90b1(message_hash._f2, message_hash._f6, message_hash._f3, message_hash._f7, message_hash._f1)) {
        return 0;
    }
    if (message_hash._f9 != -1) {
        if (!sub_51d5(message_hash._f9)) {
            return 0;
        }
    }
    if (message_hash._f7 != -1) {
        if (sub_35f8(PLAYER::PLAYER_PED_ID(), message_hash._f7, 0)) {
            return 0;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(message_hash._f1, 16)) {
        v_3 = 0;
    } else {
        v_3 = 1;
        if (GAMEPLAY::IS_BIT_SET(message_hash._f2, 0)) {
            if (sub_10296(0)) {
                sub_10205();
            }
        }
        if (GAMEPLAY::IS_BIT_SET(message_hash._f2, 1)) {
            if (sub_10296(1)) {
                sub_10205();
            }
        }
        if (GAMEPLAY::IS_BIT_SET(message_hash._f2, 2)) {
            if (sub_10296(2)) {
                sub_10205();
            }
        }
    }
    if (GAMEPLAY::IS_BIT_SET(message_hash._f1, 17)) {
        v_4 = 2;
    } else {
        v_4 = 1;
    }
    if (GAMEPLAY::IS_BIT_SET(message_hash._f1, 1)) {
        v_5 = 1;
    } else {
        v_5 = 0;
    }
    load_message_name_into(message_hash, &message_name);
    if (message_hash._fA != -1) {
        sub_fc6f(message_hash._fA, &v_A);
        message_name/*16*/ += v_A;
        if (message_hash._fB != -1) {
            sub_fc6f(message_hash._fB, &v_E);
            message_name/*16*/ += v_E;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(message_hash._f2, sub_8b8b())) {
        if (receive_message_simple2(message_hash._f6, &message_name, v_4, v_3, 0, v_5, 0, 1, 0, message_hash._fD)) {
            if (!GAMEPLAY::IS_BIT_SET(message_hash._f1, 18)) {
                for (v_12 = 0; v_12 < 3; v_12 += 1) {
                    if (GAMEPLAY::IS_BIT_SET(message_hash._f2, v_12) && (v_12 != sub_8b8b())) {
                        switch (v_12) {
                        case 0:
                            v_13 = 0;
                            break;
                        case 1:
                            v_13 = 1;
                            break;
                        case 2:
                            v_13 = 2;
                            break;
                        }
                        if (receive_message_simple(message_hash._f6, v_13, &message_name, v_4, 0, 0, v_5, 0, 0, 0, message_hash._fD)) {}
                    }
                }
            }
            if (!sub_1bef(4)) {
                if (sub_1bc3(1)) {
                    switch (sub_2129()) {
                    case 0:
                        sub_19a8("AM_H_FTXT", 2, 3000, -1, 7500, 1, 0, 0, 1);
                        break;
                    case 1:
                        sub_19a8("AM_H_FTXT", 2, 3000, -1, 7500, 2, 0, 0, 1);
                        break;
                    case 2:
                        sub_19a8("AM_H_FTXT", 2, 3000, -1, 7500, 4, 0, 0, 1);
                        break;
                    }
                    sub_1966(4);
                }
            }
            return 1;
        } else {
            return 0;
        }
    } else if (!GAMEPLAY::IS_BIT_SET(message_hash._f1, 18)) {
        if ((message_hash._fC >= 2) || GAMEPLAY::IS_BIT_SET(message_hash._f1, 19)) {
            v_15 = 0;
            for (v_14 = 0; v_14 < 3; v_14 += 1) {
                if (GAMEPLAY::IS_BIT_SET(message_hash._f2, v_14)) {
                    switch (v_14) {
                    case 0:
                        v_16 = 0;
                        break;
                    case 1:
                        v_16 = 1;
                        break;
                    case 2:
                        v_16 = 2;
                        break;
                    }
                    if (receive_message_simple(message_hash._f6, v_16, &message_name, v_4, v_3, 0, v_5, 0, 0, 0, message_hash._fD)) {
                        v_15 = 1;
                    }
                }
            }
            if (v_15) {
                return 1;
            }
        } else {
            message_hash._fC += 1;
            return 0;
        }
    }
    return 0;
}

auto receive_message_simple(auto a_0, auto a_1, auto message_name, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    GAMEPLAY::CLEAR_BIT(&g_8EB, 10);
    v_D = 0;
    v_E = "NULL";
    v_F = -99;
    v_10 = "NULL";
    v_11 = 0;
    v_12 = "NULL";
    v_13 = "NULL";
    if (receive_message(a_0, message_name, a_3, v_D, v_E, v_10, v_F, a_4, a_5, a_6, a_8, a_9, a_A, v_11, v_12, v_13, a_1) == 1) {
        if (a_8 == 1) {
            g_BAE = a_7;
            g_B4D[3/*6*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
            g_B9A = a_0;
            GAMEPLAY::SET_BIT(&g_8EB, 1);
            GAMEPLAY::SET_BIT(&g_8EB, 7);
        }
        return 1;
    } else {
        return 0;
    }
}

auto receive_message(auto a_0, auto message_name, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16) {
    if (a_D > 99) {}
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_E, a_F)) {}
    sub_2088();
    v_13 = 0;
    switch (a_10) {
    case 0:
        if (current_character == 0) {
            v_13 = 0;
        } else {
            v_13 = 1;
        }
        break;
    case 2:
        if (current_character == 2) {
            v_13 = 0;
        } else {
            v_13 = 1;
        }
        break;
    case 1:
        if (current_character == 1) {
            v_13 = 0;
        } else {
            v_13 = 1;
        }
        break;
    default:
        v_13 = 0;
        break;
    }
    if (v_13 == 0) {
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (PED::IS_PED_SWIMMING_UNDER_WATER(PLAYER::PLAYER_PED_ID())) {
                return 0;
            }
        }
        if (game_state._f318D[current_character/*20*/]._f11 == 1) {
            return 0;
        }
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${apptextmessage}) > 0) {
            return 0;
        }
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${apptextmessage}) > 0) {
            return 0;
        }
    }
    if (sub_fa80() == 0) {
        sub_f8ca();
        return 0;
    } else {
        sub_f838(g_418B);
        game_state._f31E7[g_418B/*104*/]/*"64"*/ = message_name;
        game_state._f31E7[g_418B/*104*/]._f11 = a_0;
        if (a_2 == 0) {
        } else {
            game_state._f31E7[g_418B/*104*/]._f18 = a_2;
        }
        game_state._f31E7[g_418B/*104*/]._f19 = a_7;
        game_state._f31E7[g_418B/*104*/]._f1A = a_8;
        game_state._f31E7[g_418B/*104*/]._f1D = a_9;
        game_state._f31E7[g_418B/*104*/]._f1E = a_C;
        game_state._f31E7[g_418B/*104*/]._f1F = a_B;
        game_state._f31E7[g_418B/*104*/]._f1C = 0;
        game_state._f31E7[g_418B/*104*/]._f20 = a_3;
        game_state._f31E7[g_418B/*104*/]._f21/*"64"*/ = a_4;
        game_state._f31E7[g_418B/*104*/]._f31 = a_6;
        game_state._f31E7[g_418B/*104*/]._f32/*"64"*/ = a_5;
        game_state._f31E7[g_418B/*104*/]._f42 = a_D;
        game_state._f31E7[g_418B/*104*/]._f43/*"64"*/ = a_E;
        game_state._f31E7[g_418B/*104*/]._f53/*"64"*/ = a_F;
        if (GAMEPLAY::IS_BIT_SET(g_8EB, 10)) {
            game_state._f31E7[g_418B/*104*/]._f63[0/*1*/] = 1;
            game_state._f31E7[g_418B/*104*/]._f63[1/*1*/] = 1;
            game_state._f31E7[g_418B/*104*/]._f63[2/*1*/] = 1;
            g_BAD = 4;
            sub_f819(0);
            sub_f819(2);
            sub_f819(1);
        } else {
            sub_2088();
            switch (a_10) {
            case 3:
                game_state._f31E7[g_418B/*104*/]._f63[current_character/*1*/] = 1;
                break;
            case 0:
                game_state._f31E7[g_418B/*104*/]._f63[0/*1*/] = 1;
                break;
            case 2:
                game_state._f31E7[g_418B/*104*/]._f63[2/*1*/] = 1;
                break;
            case 1:
                game_state._f31E7[g_418B/*104*/]._f63[1/*1*/] = 1;
                break;
            }
            if (a_10 == 3) {
                switch (current_character) {
                case 0:
                    sub_f819(0);
                    g_BAD = 0;
                    break;
                case 1:
                    sub_f819(1);
                    g_BAD = 1;
                    break;
                case 2:
                    sub_f819(2);
                    g_BAD = 2;
                    break;
                case 3:
                    sub_f819(3);
                    g_BAD = 3;
                    break;
                default:
                    g_BAD = 4;
                    break;
                }
            }
        }
        if (a_7 == 1) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 10)) {
                game_state._f318D[0/*20*/]._f11 = 1;
                game_state._f318D[1/*20*/]._f11 = 1;
                game_state._f318D[2/*20*/]._f11 = 1;
            } else {
                switch (a_10) {
                case 3:
                    game_state._f318D[current_character/*20*/]._f11 = 1;
                    break;
                case 0:
                    game_state._f318D[0/*20*/]._f11 = 1;
                    break;
                case 2:
                    game_state._f318D[2/*20*/]._f11 = 1;
                    break;
                case 1:
                    game_state._f318D[1/*20*/]._f11 = 1;
                    break;
                }
            }
        }
        g_418D[g_418B/*1*/] = 0;
        if (a_A) {
            sub_2088();
            if (is_prologue) {
                g_3842/*"24"*/ = "Phone_SoundSet_Prologue";
            } else {
                switch (current_character) {
                case 0:
                    g_3842/*"24"*/ = "Phone_SoundSet_Michael";
                    break;
                case 2:
                    g_3842/*"24"*/ = "Phone_SoundSet_Trevor";
                    break;
                case 1:
                    g_3842/*"24"*/ = "Phone_SoundSet_Franklin";
                    break;
                default:
                    g_3842/*"24"*/ = "Phone_SoundSet_Default";
                    break;
                }
            }
            if (!(g_C10[current_character/*2811*/][0/*281*/]._f103 == 1)) {
                if (!sub_f80d()) {
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "Text_Arrive_Tone", &g_3842, 1);
                }
            }
        }
        if (!g_38EC) {
            if (current_character._f1 == 6) {
                sub_f7aa(g_383A, "SET_DATA_SLOT_EMPTY", 1.0, 0xbf800000, 0xbf800000, 0xbf800000, 0xbf800000);
                sub_f187(1);
                sub_f7aa(g_383A, "DISPLAY_VIEW", 1.0, __678_$BBDA792448DB5A89(g_3839), 0xbf800000, 0xbf800000, 0xbf800000);
            }
        }
        return 1;
    }
}

void sub_f187(auto a_0) {
    g_418C = 0;
    g_B48 = a_0;
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        g_B24[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 9; v_3 += 1) {
        v_4 = 0;
        if (is_message_state(14)) {
            for (; v_4 < 34; v_4 += 1) {
                if (a_0 == g_8F2[v_4/*15*/]._fB) {
                    if (v_3 == g_8F2[v_4/*15*/]._f4) {
                        if (g_B24[v_3/*1*/] == 0) {
                            g_B00[v_3/*1*/] = v_4;
                            if (v_4 == 3) {
                                if (GAMEPLAY::IS_BIT_SET(g_8EC, 3)) {
                                    v_5 = 42;
                                    g_38EF = 1;
                                } else {
                                    v_5 = 255;
                                    g_38EF = 0;
                                }
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_383A, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F2[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_f798(&g_8F2[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_5);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            }
                            if (g_2540A1) {
                                if (v_4 == 14) {
                                    sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(g_4187), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                                }
                            }
                            g_B24[v_3/*1*/] = 1;
                        }
                    }
                }
            }
        } else {
            for (; v_4 < 34; v_4 += 1) {
                if (a_0 == g_8F2[v_4/*15*/]._fB) {
                    if (v_3 == g_8F2[v_4/*15*/]._f4) {
                        if (g_B24[v_3/*1*/] == 0) {
                            g_B00[v_3/*1*/] = v_4;
                            if (v_4 == 1) {
                                for (v_6 = 0; v_6 < 35; v_6 += 1) {
                                    if (game_state._f31E7[v_6/*104*/]._f18 != 0) {
                                        if (game_state._f31E7[v_6/*104*/]._f1C == 0) {
                                            if (game_state._f31E7[v_6/*104*/]._f63[current_character/*1*/] == 1) {
                                                g_418C += 1;
                                            }
                                        }
                                    }
                                }
                                sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(g_418C), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                            } else if (v_4 == 7) {
                                if (is_in_transition) {
                                    v_7 = 0;
                                    v_7 = g_2708F8;
                                    sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(v_7), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                                } else {
                                    switch (current_character) {
                                    case 0:
                                        v_8 = g_8F93;
                                        break;
                                    case 1:
                                        v_8 = g_8F94;
                                        break;
                                    case 2:
                                        v_8 = g_8F95;
                                        break;
                                    default:
                                        break;
                                    }
                                    sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(v_8), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                                }
                            } else if (v_4 == 14) {
                                sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(g_4187), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                            } else if (v_4 == 20) {
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_383A, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F2[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_f798(&g_8F2[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F1);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (v_4 == 2) {
                                if (GAMEPLAY::IS_BIT_SET(g_8EC, 6)) {
                                    v_9 = 42;
                                } else {
                                    v_9 = 255;
                                }
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_383A, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F2[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_f798(&g_8F2[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_9);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (v_4 == 3) {
                                if (GAMEPLAY::IS_BIT_SET(g_8EC, 3)) {
                                    v_A = 42;
                                    g_38EF = 1;
                                } else {
                                    v_A = 255;
                                    g_38EF = 0;
                                }
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_383A, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F2[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_f798(&g_8F2[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_A);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (v_4 == 8) {
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_383A, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F2[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_f798(&g_8F2[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(42);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if (((v_4 == 23) && GAMEPLAY::ARE_STRINGS_EQUAL(&g_8F2[v_4/*15*/], "CELL_BENWEB")) && GAMEPLAY::IS_BIT_SET(g_8EC, 6)) {
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_383A, "SET_DATA_SLOT");
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_3);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_8F2[v_4/*15*/]._fA);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                                sub_f798(&g_8F2[v_4/*15*/]);
                                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(42);
                                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                            } else if ((g_8F2[v_4/*15*/]._fA == 57) && (v_4 == 23)) {
                                v_B = 0;
                                v_B = g_1887DD._f1;
                                sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(v_B), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                            } else {
                                sub_f6e5(g_383A, "SET_DATA_SLOT", __678_$BBDA792448DB5A89(1), __678_$BBDA792448DB5A89(v_3), __678_$BBDA792448DB5A89(g_8F2[v_4/*15*/]._fA), __678_$BBDA792448DB5A89(0), -1.0, &g_8F2[v_4/*15*/], 0, 0, 0, 0);
                            }
                            g_B24[v_3/*1*/] = 1;
                        }
                    }
                }
            }
        }
    }
}

void sub_f6e5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_2));
    if (a_3 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_3));
    }
    if (a_4 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_4));
    }
    if (a_5 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_5));
    }
    if (a_6 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_6));
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_7)) {
        sub_f798(a_7);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_8)) {
        sub_f798(a_8);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_9)) {
        sub_f798(a_9);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_A)) {
        sub_f798(a_A);
    }
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_B)) {
        sub_f798(a_B);
    }
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

void sub_f798(auto a_0) {
    GRAPHICS::_BEGIN_TEXT_COMPONENT(a_0);
    GRAPHICS::_END_TEXT_COMPONENT();
}

void sub_f7aa(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(a_0, a_1);
    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_2));
    if (a_3 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_3));
    }
    if (a_4 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_4));
    }
    if (a_5 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_5));
    }
    if (a_6 != -1.0) {
        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(SYSTEM::ROUND(a_6));
    }
    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
}

auto sub_f80d() {
    return g_141447;
}

void sub_f819(auto a_0) {
    v_3 = game_state._f318D[a_0/*20*/]._f8;
    v_3 = v_3;
    v_4 = v_4;
}

void sub_f838(auto a_0) {
    v_3 = TIME::GET_CLOCK_SECONDS();
    v_4 = TIME::GET_CLOCK_MINUTES();
    v_5 = TIME::GET_CLOCK_HOURS();
    v_6 = TIME::GET_CLOCK_DAY_OF_MONTH();
    v_7 = TIME::GET_CLOCK_MONTH() + 1;
    v_8 = TIME::GET_CLOCK_YEAR();
    game_state._f31E7[a_0/*104*/]._f12 = v_3;
    game_state._f31E7[a_0/*104*/]._f12._f1 = v_4;
    game_state._f31E7[a_0/*104*/]._f12._f2 = v_5;
    game_state._f31E7[a_0/*104*/]._f12._f3 = v_6;
    game_state._f31E7[a_0/*104*/]._f12._f4 = v_7;
    game_state._f31E7[a_0/*104*/]._f12._f5 = v_8;
}

void sub_f8ca() {
    if (is_in_transition) {
        v_2 = 24;
        v_3 = 33;
    } else {
        v_2 = 0;
        v_3 = 20;
    }
    v_4 = v_2;
    g_418B = 34;
    game_state._f31E7[g_418B/*104*/]._f12 = -1;
    game_state._f31E7[g_418B/*104*/]._f12._f1 = 0;
    game_state._f31E7[g_418B/*104*/]._f12._f2 = 0;
    game_state._f31E7[g_418B/*104*/]._f12._f3 = 0;
    game_state._f31E7[g_418B/*104*/]._f12._f5 = 99999;
    for (; v_4 < v_3; v_4 += 1) {
        if (!sub_f995(game_state._f31E7[v_4/*104*/]._f12, game_state._f31E7[g_418B/*104*/]._f12)) {
            g_418B = v_4;
        }
    }
    game_state._f31E7[g_418B/*104*/]._f18 = 1;
}

auto sub_f995(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (a_0._f5 < a_6._f5) {
        return 0;
    }
    if (a_0._f5 > a_6._f5) {
        return 1;
    }
    if (a_0._f5 == a_6._f5) {
        if (a_0._f4 < a_6._f4) {
            return 0;
        }
        if (a_0._f4 > a_6._f4) {
            return 1;
        }
        if (a_0._f4 == a_6._f4) {
            v_E = a_0;
            v_E._f1 = a_0._f1 * 60;
            v_E._f2 = a_0._f2 * 3600;
            v_E._f3 = a_0._f3 * 86400;
            v_1A = ((v_E + v_E._f1) + v_E._f2) + v_E._f3;
            v_14 = a_6;
            v_14._f1 = a_6._f1 * 60;
            v_14._f2 = a_6._f2 * 3600;
            v_14._f3 = a_6._f3 * 86400;
            v_1B = ((v_14 + v_14._f1) + v_14._f2) + v_14._f3;
            if ((v_1A > v_1B) || (v_1A == v_1B)) {
                return 1;
            } else {
                return 0;
            }
        }
    }
    return 0;
}

auto sub_fa80() {
    if (is_in_transition) {
        v_2 = 24;
        v_3 = 33;
    } else {
        v_2 = 0;
        v_3 = 20;
    }
    for (v_4 = v_2; v_4 < v_3; v_4 += 1) {
        if (game_state._f31E7[v_4/*104*/]._f18 == 0) {
            g_418B = v_4;
            return 1;
        }
    }
    v_4 = v_2;
    g_418B = 34;
    game_state._f31E7[g_418B/*104*/]._f12 = -1;
    game_state._f31E7[g_418B/*104*/]._f12._f1 = 0;
    game_state._f31E7[g_418B/*104*/]._f12._f2 = 0;
    game_state._f31E7[g_418B/*104*/]._f12._f3 = 0;
    game_state._f31E7[g_418B/*104*/]._f12._f5 = 99999;
    for (; v_4 < v_3; v_4 += 1) {
        if ((game_state._f31E7[v_4/*104*/]._f18 == 0) || (game_state._f31E7[v_4/*104*/]._f18 == 1)) {
            if (!sub_f995(game_state._f31E7[v_4/*104*/]._f12, game_state._f31E7[g_418B/*104*/]._f12)) {
                g_418B = v_4;
            }
        }
    }
    if (g_418B == 34) {
        return 0;
    } else {
        game_state._f31E7[g_418B/*104*/]._f63[0/*1*/] = 0;
        game_state._f31E7[g_418B/*104*/]._f63[1/*1*/] = 0;
        game_state._f31E7[g_418B/*104*/]._f63[2/*1*/] = 0;
        return 1;
    }
}

auto receive_message_simple2(auto a_0, auto message_name, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    GAMEPLAY::CLEAR_BIT(&g_8EB, 10);
    v_C = 0;
    v_D = "NULL";
    v_E = -99;
    v_F = "NULL";
    v_10 = 0;
    v_11 = "NULL";
    v_12 = "NULL";
    v_13 = 3;
    if (receive_message(a_0, message_name, a_2, v_C, v_D, v_F, v_E, a_3, a_4, a_5, a_7, a_8, a_9, v_10, v_11, v_12, v_13) == 1) {
        if (a_7 == 1) {
            g_BAE = a_6;
            g_B4D[3/*6*/]/*{4}*/ = game_state._f7F07[a_0/*29*/]._f3;
            g_B9A = a_0;
            GAMEPLAY::SET_BIT(&g_8EB, 1);
            GAMEPLAY::SET_BIT(&g_8EB, 7);
        }
        return 1;
    } else {
        return 0;
    }
}

void sub_fc6f(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        a_1/*"16"*/ = "JUL_";
        break;
    case 1:
        a_1/*"16"*/ = "NIK_";
        break;
    case 2:
        a_1/*"16"*/ = "SAP_";
        break;
    case 3:
        a_1/*"16"*/ = "INF_";
        break;
    case 4:
        a_1/*"16"*/ = "TXI_";
        break;
    case 5:
        a_1/*"16"*/ = "HCH_";
        break;
    case 6:
        a_1/*"16"*/ = "STP";
        break;
    case 7:
        a_1/*"16"*/ = "RUD";
        break;
    case 8:
        a_1/*"16"*/ = "1ST";
        break;
    case 9:
        a_1/*"16"*/ = "2ND";
        break;
    case 10:
        a_1/*"16"*/ = "NEED";
        break;
    case 11:
        a_1/*"16"*/ = "_B";
        break;
    case 12:
        a_1/*"16"*/ = "_C";
        break;
    case 13:
        a_1/*"16"*/ = "_D";
        break;
    case 15:
        a_1/*"16"*/ = "_DD";
        break;
    case 14:
        a_1/*"16"*/ = "_DW";
        break;
    case 16:
        a_1/*"16"*/ = "_E";
        break;
    case 17:
        a_1/*"16"*/ = "_G";
        break;
    case 18:
        a_1/*"16"*/ = "_GE";
        break;
    case 19:
        a_1/*"16"*/ = "0";
        break;
    case 20:
        a_1/*"16"*/ = "1";
        break;
    case 21:
        a_1/*"16"*/ = "2";
        break;
    case 22:
        a_1/*"16"*/ = "3";
        break;
    case 23:
        a_1/*"16"*/ = "4";
        break;
    case 24:
        a_1/*"16"*/ = "M0";
        break;
    case 25:
        a_1/*"16"*/ = "M1";
        break;
    case 26:
        a_1/*"16"*/ = "M2";
        break;
    case 27:
        a_1/*"16"*/ = "M3";
        break;
    case 28:
        a_1/*"16"*/ = "M4";
        break;
    case 29:
        a_1/*"16"*/ = "F0";
        break;
    case 30:
        a_1/*"16"*/ = "T0";
        break;
    case 31:
        a_1/*"16"*/ = "T1";
        break;
    case 32:
        a_1/*"16"*/ = "T2";
        break;
    case 33:
        a_1/*"16"*/ = "N1";
        break;
    case 34:
        a_1/*"16"*/ = "N2";
        break;
    case 35:
        a_1/*"16"*/ = "N3";
        break;
    case 36:
        a_1/*"16"*/ = "N4";
        break;
    case 37:
        a_1/*"16"*/ = "N5";
        break;
    case 38:
        a_1/*"16"*/ = "N6";
        break;
    case 39:
        a_1/*"16"*/ = "P1";
        break;
    case 40:
        a_1/*"16"*/ = "P2";
        break;
    case 41:
        a_1/*"16"*/ = "P3";
        break;
    case 42:
        a_1/*"16"*/ = "P4";
        break;
    case 43:
        a_1/*"16"*/ = "P5";
        break;
    case 44:
        a_1/*"16"*/ = "P6";
        break;
    case 45:
        a_1/*"16"*/ = "F1";
        break;
    case 46:
        a_1/*"16"*/ = "F2";
        break;
    case 47:
        a_1/*"16"*/ = "F3";
        break;
    case 48:
        a_1/*"16"*/ = "F4";
        break;
    case 49:
        a_1/*"16"*/ = "F5";
        break;
    case 50:
        a_1/*"16"*/ = "F6";
        break;
    case 51:
        a_1/*"16"*/ = "F7";
        break;
    case 52:
        a_1/*"16"*/ = "F8";
        break;
    case 53:
        a_1/*"16"*/ = "WS_DL";
        break;
    case 54:
        a_1/*"16"*/ = "BA_DL";
        break;
    case 55:
        a_1/*"16"*/ = "BA_GA";
        break;
    case 56:
        a_1/*"16"*/ = "BA_ST";
        break;
    case 57:
        a_1/*"16"*/ = "BA_PA";
        break;
    case 58:
        a_1/*"16"*/ = "PSY_DF";
        break;
    case 59:
        a_1/*"16"*/ = "TAX_TX";
        break;
    case 60:
        a_1/*"16"*/ = "CI_PP";
        break;
    case 61:
        a_1/*"16"*/ = "M_";
        break;
    case 62:
        a_1/*"16"*/ = "F_";
        break;
    case 63:
        a_1/*"16"*/ = "T_";
        break;
    case 64:
        a_1/*"16"*/ = "L_";
        break;
    case 65:
        a_1/*"16"*/ = "J_";
        break;
    case 66:
        a_1/*"16"*/ = "A_";
        break;
    case 67:
        a_1/*"16"*/ = "LOSTa";
        break;
    case 68:
        a_1/*"16"*/ = "LOSTb";
        break;
    case 69:
        a_1/*"16"*/ = "LATEa";
        break;
    case 70:
        a_1/*"16"*/ = "LATEb";
        break;
    case 71:
        a_1/*"16"*/ = "HOSPa";
        break;
    case 72:
        a_1/*"16"*/ = "HOSPb";
        break;
    case 73:
        a_1/*"16"*/ = "PDIEDa";
        break;
    case 74:
        a_1/*"16"*/ = "PDIEDb";
        break;
    case 75:
        a_1/*"16"*/ = "PBUSTa";
        break;
    case 76:
        a_1/*"16"*/ = "PBUSTb";
        break;
    case 77:
        a_1/*"16"*/ = "GH_";
        break;
    case 78:
        a_1/*"16"*/ = "AH_";
        break;
    case 79:
        a_1/*"16"*/ = "BH_";
        break;
    case 80:
        a_1/*"16"*/ = "C1";
        break;
    case 81:
        a_1/*"16"*/ = "C2";
        break;
    case 82:
        a_1/*"16"*/ = "C3";
        break;
    default:
        break;
    }
}

auto sub_10205() {
    if ((game_state._f318D[0/*20*/]._f11 || game_state._f318D[1/*20*/]._f11) || game_state._f318D[2/*20*/]._f11) {
        game_state._f318D[0/*20*/]._f11 = 0;
        game_state._f318D[1/*20*/]._f11 = 0;
        game_state._f318D[2/*20*/]._f11 = 0;
        return 1;
    } else {
        game_state._f318D[0/*20*/]._f11 = 0;
        game_state._f318D[1/*20*/]._f11 = 0;
        game_state._f318D[2/*20*/]._f11 = 0;
        return 0;
    }
}

auto sub_10296(auto a_0) {
    if (((a_0 != 0) && (a_0 != 1)) && (a_0 != 2)) {
        return 0;
    }
    if (game_state._f318D[a_0/*20*/]._f11) {
        return 1;
    } else {
        return 0;
    }
}

void try_receive_message1(auto current_time) {
    if (!sub_907(sub_2129())) {
        return ;
    }
    index = 0;
    while ((index < game_state.pending_messages.count) && (!local_bool_flag0)) {
        if (GAMEPLAY::IS_BIT_SET(game_state.pending_messages[index].message_flags, 0)) {
            force_message = 0;
            if (game_state.pending_messages[index]._f3 >= 5) {
                force_message = 1;
            }
            if (((current_time >= next_message_deadline) || GAMEPLAY::IS_BIT_SET(game_state.pending_messages[index].message_flags, 21)) || force_message) {
                if ((game_state.pending_messages[index]._f3 == game_state.pending_messages._f397[sub_2129()/*1*/]) || (!GAMEPLAY::IS_BIT_SET(game_state.pending_messages[index]._f2, sub_8b8b()))) {
                    if (current_time >= game_state.pending_messages[index]._f4) {
                        if (sub_10401(&game_state.pending_messages[index], &l_4E)) {
                            g_8D97 = index;
                            local_current_time = -1;
                            comms_state = 1;
                            game_state.pending_messages._f391 = 0;
                            local_bool_flag0 = 1;
                            if (sub_6373()) {
                                l_4F = 1;
                            }
                        } else {
                            delay_message(current_time, &game_state.pending_messages[index], 0);
                        }
                    }
                }
            }
        }
        index += 1;
    }
}

auto sub_10401(auto a_0, auto a_1) {
    if ((sub_62e0(0) || sub_b2ca()) || sub_b2a1()) {
        return 0;
    }
    if (!sub_90b1(a_0._f2, a_0._f6, a_0._f3, a_0._f7, a_0._f1)) {
        return 0;
    }
    if (!GAMEPLAY::IS_BIT_SET(a_0._f1, 13)) {
        if (a_0._f9 != -1) {
            if (!sub_51d5(a_0._f9)) {
                return 0;
            }
        }
    }
    v_4 = 12;
    if (a_0._f3 == 5) {
        v_4 = 13;
    }
    if (GAMEPLAY::IS_BIT_SET(a_0._f2, sub_8b8b())) {
        sub_da1e(a_0);
        if (GAMEPLAY::IS_BIT_SET(a_0._f1, 14)) {
            switch (sub_2129()) {
            case 0:
                v_5 = 0;
                break;
            case 1:
                v_5 = 1;
                break;
            case 2:
                v_5 = 2;
                break;
            }
            if (!(game_state._f7F07[a_0._f6/*29*/]._fC[v_5/*1*/] == 1)) {
                GAMEPLAY::SET_BIT(&a_0._f1, 15);
                sub_1e61(a_0._f6, v_5, 0);
            }
        }
        if (get_message_category(a_0) == 1) {
            sub_e4b0(a_0, &v_6);
            sub_e339(a_0._fC, &v_12);
            sub_e339(a_0._fD, &v_16);
            if (GAMEPLAY::IS_BIT_SET(a_0._f1, 12)) {
                if (sub_10830(&g_8CF2, a_0._f6, &v_6, &v_6._f4, v_4, &v_6._f8, &v_12, &v_16, 0, 0, 1)) {
                    if ((a_0._f3 == 5) || GAMEPLAY::IS_BIT_SET(a_0._f1, 12)) {
                        sub_6298(1);
                    }
                    return 1;
                } else {
                    sub_5ec6();
                    return 0;
                }
            } else if (sub_107cd(&g_8CF2, a_0._f6, &v_6, &v_6._f4, v_4, &v_6._f8, &v_12, &v_16, 0, 0, 1)) {
                if ((a_0._f3 == 5) || GAMEPLAY::IS_BIT_SET(a_0._f1, 12)) {
                    sub_6298(1);
                }
                return 1;
            } else {
                sub_5ec6();
                return 0;
            }
        } else {
            sub_39cf(a_0, &v_1A);
            if (GAMEPLAY::IS_BIT_SET(a_0._f1, 9)) {
                if (sub_1077f(&g_8CF2, a_0._f6, &v_1A, &v_1A._f4, v_4, 0, 0, 1)) {
                    if ((a_0._f3 == 5) || GAMEPLAY::IS_BIT_SET(a_0._f1, 12)) {
                        sub_6298(1);
                    }
                    return 1;
                } else {
                    sub_5ec6();
                    return 0;
                }
            } else if (GAMEPLAY::IS_BIT_SET(a_0._f1, 0)) {
                if (sub_d9bf(&g_8CF2, a_0._f6, &v_1A, &v_1A._f4, v_4, 1, 0, 0, 0)) {
                    if ((a_0._f3 == 5) || GAMEPLAY::IS_BIT_SET(a_0._f1, 12)) {
                        sub_6298(1);
                    }
                    if (GAMEPLAY::IS_BIT_SET(a_0._f1, 13)) {
                        a_1 = 1;
                    }
                    return 1;
                } else {
                    sub_5ec6();
                    return 0;
                }
            } else if (a_0._f3 == 5) {
                if (sub_10731(&g_8CF2, a_0._f6, &v_1A, &v_1A._f4, v_4, 0, 0, 1)) {
                    sub_6298(1);
                    if (GAMEPLAY::IS_BIT_SET(a_0._f1, 13)) {
                        a_1 = 1;
                    }
                    return 1;
                } else {
                    sub_5ec6();
                    return 0;
                }
            } else if (sub_1077f(&g_8CF2, a_0._f6, &v_1A, &v_1A._f4, v_4, 0, 0, 1)) {
                if (GAMEPLAY::IS_BIT_SET(a_0._f1, 12)) {
                    sub_6298(1);
                }
                if (GAMEPLAY::IS_BIT_SET(a_0._f1, 13)) {
                    a_1 = 1;
                }
                return 1;
            } else {
                sub_5ec6();
                return 0;
            }
        }
    } else {
        return 0;
    }
}

auto sub_10731(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    sub_75a7(a_0, a_1, a_2, a_5, a_6, 0);
    g_3D90 = 1;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 0;
    g_3D96 = 0;
    g_280001 = 0;
    return sub_7093(a_3, a_4, a_7);
}

auto sub_1077f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    sub_75a7(a_0, a_1, a_2, a_5, a_6, 0);
    g_3D90 = 0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 0;
    g_3D96 = 0;
    g_280001 = 0;
    return sub_7093(a_3, a_4, a_7);
}

auto sub_107cd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    sub_75a7(a_0, a_1, a_2, a_8, a_9, 0);
    g_3D90 = 0;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 1;
    g_3D96 = 0;
    g_3DB2/*"24"*/ = a_6;
    g_3DB8/*"24"*/ = a_7;
    g_3DF4/*"24"*/ = a_5;
    g_280001 = 0;
    return sub_7093(a_3, a_4, a_A);
}

auto sub_10830(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    sub_75a7(a_0, a_1, a_2, a_8, a_9, 0);
    g_3D90 = 1;
    g_3D67 = 1;
    g_3D6E = 0;
    g_3D69 = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_3D65 = 0;
    g_3D94 = 1;
    g_3D96 = 0;
    g_3DB2/*"24"*/ = a_6;
    g_3DB8/*"24"*/ = a_7;
    g_3DF4/*"24"*/ = a_5;
    g_280001 = 0;
    return sub_7093(a_3, a_4, a_A);
}

void try_receive_message0(auto current_time) {
    if (!sub_907(sub_2129())) {
        return ;
    }
    index = 0;
    while ((index < game_state.pending_messages.count) && (!local_bool_flag0)) {
        if (!GAMEPLAY::IS_BIT_SET(game_state.pending_messages[index]._f1, 0)) {
            force_message = 0;
            if (game_state.pending_messages[index]._f3 >= 5) {
                force_message = 1;
            }
            if (((current_time >= next_message_deadline) || force_message) || GAMEPLAY::IS_BIT_SET(game_state.pending_messages[index]._f1, 21)) {
                if ((game_state.pending_messages[index]._f3 == game_state.pending_messages._f397[sub_2129()/*1*/]) || (!GAMEPLAY::IS_BIT_SET(game_state.pending_messages[index]._f2, sub_8b8b()))) {
                    if ((current_time >= g_8D9C[game_state.pending_messages[index]._f6/*1*/]) || force_message) {
                        if (current_time >= game_state.pending_messages[index]._f4) {
                            if (sub_10401(&game_state.pending_messages[index], &l_4E)) {
                                g_8D97 = index;
                                local_current_time = -1;
                                comms_state = 1;
                                game_state.pending_messages._f391 = 0;
                                local_bool_flag0 = 1;
                                if (sub_6373()) {
                                    l_4F = 1;
                                }
                            } else {
                                delay_message(current_time, &game_state.pending_messages[index], 0);
                            }
                        }
                    }
                }
            }
        }
        v_3 += 1;
    }
}

auto is_message_state(auto a_0) {
    // g_8B74
    return message_state == a_0;
}

auto is_message_state_not_15() {
    // g_8B74
    if (message_state == 15) {
        return 0;
    }
    return 1;
}

void exit_controller() {
    g_8D97 = -1;
    for (v_11 = 0; v_11 < game_state.pending_messages._fC6; v_11 += 1) {
        sub_a7c(game_state.pending_messages._f89[v_11/*15*/]._f6);
        for (v_12 = v_11; v_12 <= (game_state.pending_messages._fC6 - 2); v_12 += 1) {
            game_state.pending_messages._f89[v_12/*15*/]/*{15}*/ = game_state.pending_messages._f89[v_12 + 1/*15*/];
        }
        game_state.pending_messages._f89[game_state.pending_messages._fC6 - 1/*15*/]/*{15}*/ = v_2;
        game_state.pending_messages._fC6 -= 1;
    }
    SCRIPT::TERMINATE_THIS_THREAD();
}