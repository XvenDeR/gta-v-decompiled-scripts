// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(34)) {
        sub_4189();
    }
    sub_85e();
    while (1) {
        if (sub_850(13) || sub_850(14)) {
            if (l_115) {
                sub_6a8();
            }
        } else if (!l_115) {
            sub_85e();
        }
        sub_5b9();
        sub_87();
        SYSTEM::WAIT(0);
    }
}

void sub_87() {
    if (!l_114) {
        if (sub_58c(75)) {
            sub_32c();
            l_114 = 1;
        }
    }
    if (!l_118) {
        if (sub_58c(75)) {
            if (sub_271()) {
                sub_1c1();
                l_118 = 1;
            }
        }
    }
    if (!l_11B) {
        if (sub_195(62)) {
            if (sub_271()) {
                sub_e5();
                l_11B = 1;
            }
        }
    }
}

void sub_e5() {
    if (sub_271()) {
        sub_10b(0, 0x4e301cd0, 156.24, 0.0, 71.2, 1, 1);
    }
}

void sub_10b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = 0;
    GAMEPLAY::SET_BIT(&v_9, 2);
    GAMEPLAY::SET_BIT(&v_9, 1);
    if (a_6) {
        GAMEPLAY::SET_BIT(&v_9, 4);
    }
    if (a_5) {
        GAMEPLAY::SET_BIT(&v_9, 3);
    }
    l_119[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(a_1, sub_168(a_0), a_2, v_9, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_119[a_0/*1*/], 600000);
}

auto<3> sub_168(auto a_0) {
    switch (a_0) {
    case 0:
        return {-35.642, 2871.744140625, 58.615211486816406 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

auto sub_195(auto a_0) {
    if ((a_0 == 94) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f14A[a_0/*6*/];
}

void sub_1c1() {
    if (sub_271()) {
        sub_1e7(0, 0xe46e11b4, 156.24, 0.0, 166.2, 1, 1);
    }
}

void sub_1e7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = 0;
    GAMEPLAY::SET_BIT(&v_9, 2);
    GAMEPLAY::SET_BIT(&v_9, 1);
    if (a_6) {
        GAMEPLAY::SET_BIT(&v_9, 4);
    }
    if (a_5) {
        GAMEPLAY::SET_BIT(&v_9, 3);
    }
    l_116[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(a_1, sub_244(a_0), a_2, v_9, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_116[a_0/*1*/], 600000);
}

auto<3> sub_244(auto a_0) {
    switch (a_0) {
    case 0:
        return {299.4178771972656, 3942.443359375, -3.1884799 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

auto sub_271() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        if (NETWORK::_85443FF4C328F53B()) {
            if (NETWORK::_593570C289A77688()) {
                STATS::STAT_GET_INT(0x5da524f8, &v_2, -1);
                GAMEPLAY::SET_BIT(&v_2, 2);
                GAMEPLAY::SET_BIT(&v_2, 4);
                GAMEPLAY::SET_BIT(&v_2, 6);
                GAMEPLAY::SET_BIT(&g_19, 2);
                GAMEPLAY::SET_BIT(&g_19, 4);
                GAMEPLAY::SET_BIT(&g_19, 6);
                STATS::STAT_SET_INT(0x5da524f8, v_2, 1);
                if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
                    v_2 = GAMEPLAY::GET_PROFILE_SETTING(866);
                    GAMEPLAY::SET_BIT(&v_2, 0);
                    STATS::_DAC073C7901F9E15(v_2);
                }
                return 1;
            }
        }
    }
    if (g_21B38 == 2) {
        return 1;
    } else if (g_21B38 == 3) {
        return 0;
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        if (GAMEPLAY::IS_BIT_SET(GAMEPLAY::GET_PROFILE_SETTING(866), 0)) {
            return 1;
        }
    }
    return 0;
}

void sub_32c() {
    sub_3fc(0, ${pickup_weapon_grenadelauncher}, 156.24, 0.0, 25.2, 1, 1);
    sub_3fc(1, ${pickup_weapon_rpg}, -92.68, 62.64, 264.24, 1, 1);
    sub_3fc(2, ${pickup_weapon_combatmg}, -70.0, 0.0, -40.0, 1, 1);
    sub_3fc(3, ${pickup_armour_standard}, -71.0, 0.0, 168.48, 1, 1);
    sub_3fc(4, ${pickup_weapon_appistol}, -100.8, 92.8, 0.0, 1, 1);
    sub_3fc(5, ${pickup_weapon_pumpshotgun}, 77.76, 10.08, -17.28, 1, 1);
    sub_3fc(6, ${pickup_weapon_sniperrifle}, 97.92, 0.0, 100.8, 1, 1);
    sub_3fc(7, ${pickup_weapon_stickybomb}, 0.0, 0.0, 0.0, 1, 1);
    sub_3fc(8, ${pickup_weapon_stickybomb}, 0.0, 0.0, 0.0, 1, 1);
}

void sub_3fc(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = 0;
    if (a_1 == ${pickup_armour_standard}) {
        GAMEPLAY::SET_BIT(&v_9, 2);
        GAMEPLAY::SET_BIT(&v_9, 4);
        GAMEPLAY::SET_BIT(&v_9, 1);
        if (a_5) {
            GAMEPLAY::SET_BIT(&v_9, 3);
        }
    } else { 
        GAMEPLAY::SET_BIT(&v_9, 2);
        GAMEPLAY::SET_BIT(&v_9, 1);
        if (a_6) {
            GAMEPLAY::SET_BIT(&v_9, 4);
        }
        if (a_5) {
            GAMEPLAY::SET_BIT(&v_9, 3);
        }
    }
    l_10A[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(a_1, sub_487(a_0), a_2, v_9, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_10A[a_0/*1*/], 600000);
}

auto<3> sub_487(auto a_0) {
    switch (a_0) {
    case 0:
        return {346.89, 3999.51, -6.4 };
        break;
    case 1:
        return {303.8, 3949.8, -5.19 };
        break;
    case 2:
        return {308.5, 3972.7, 8.16 };
        break;
    case 3:
        return {295.2, 3961.0, 7.74 };
        break;
    case 4:
        return {293.0, 3969.6, -9.21 };
        break;
    case 5:
        return {289.23, 3955.219970703125, 6.54 };
        break;
    case 6:
        return {302.19, 3983.1201171875, -11.02 };
        break;
    case 7:
        return {282.4, 3966.9, -7.63 };
        break;
    case 8:
        return {317.8, 3968.1298828125, 10.11 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

auto sub_58c(auto a_0) {
    if ((a_0 == 146) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f63._f3A[a_0/*1*/];
}

void sub_5b9() {
    switch (g_630B) {
    case 0:
        break;
    case 1:
        switch (g_630C) {
        case 0:
            if (OBJECT::DOES_PICKUP_EXIST(l_14[g_630D/*1*/]) && OBJECT::DOES_PICKUP_OBJECT_EXIST(l_14[g_630D/*1*/])) {
                g_630E = 0;
            } else { 
                g_630E = 1;
            }
            break;
        case 1:
            if (OBJECT::DOES_PICKUP_EXIST(l_56[g_630D/*1*/]) && OBJECT::DOES_PICKUP_OBJECT_EXIST(l_56[g_630D/*1*/])) {
                g_630E = 0;
            } else { 
                g_630E = 1;
            }
            break;
        case 2:
            if (OBJECT::DOES_PICKUP_EXIST(l_A3[g_630D/*1*/]) && OBJECT::DOES_PICKUP_OBJECT_EXIST(l_A3[g_630D/*1*/])) {
                g_630E = 0;
            } else { 
                g_630E = 1;
            }
            break;
        case 3:
            g_630B = 3;
            break;
        }
        g_630B = 2;
        break;
    case 2:
        break;
    case 3:
        g_630D = 0;
        g_630E = 0;
        g_630B = 0;
        break;
    }
}

void sub_6a8() {
    sub_81e();
    sub_7ec();
    sub_7ba();
    sub_788();
    if (l_114) {
        sub_750();
    }
    if (l_118) {
        sub_719();
    }
    if (l_11B) {
        sub_6e2();
    }
    l_115 = 0;
}

void sub_6e2() {
    for (v_2 = 0; v_2 < 1; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_119[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_119[v_2/*1*/]);
        }
    }
    l_11B = 0;
}

void sub_719() {
    for (v_2 = 0; v_2 < 1; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_116[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_116[v_2/*1*/]);
        }
    }
    l_118 = 0;
}

void sub_750() {
    for (v_2 = 0; v_2 < 9; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_10A[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_10A[v_2/*1*/]);
        }
    }
    l_114 = 0;
}

void sub_788() {
    for (v_2 = 0; v_2 < 102; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_A3[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_A3[v_2/*1*/]);
        }
    }
}

void sub_7ba() {
    for (v_2 = 0; v_2 < 76; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_56[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_56[v_2/*1*/]);
        }
    }
}

void sub_7ec() {
    for (v_2 = 0; v_2 < 19; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_42[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_42[v_2/*1*/]);
        }
    }
}

void sub_81e() {
    for (v_2 = 0; v_2 < 45; v_2 += 1) {
        if (OBJECT::DOES_PICKUP_EXIST(l_14[v_2/*1*/])) {
            OBJECT::REMOVE_PICKUP(l_14[v_2/*1*/]);
        }
    }
}

auto sub_850(auto a_0) {
    return g_8B74 == a_0;
}

void sub_85e() {
    sub_36a9();
    sub_3377();
    sub_201a();
    sub_87a();
    l_115 = 1;
}

void sub_87a() {
    sub_ff8(0, ${pickup_weapon_assaultrifle}, 90.0, 0.0, 70.0, 0, 0, 1);
    sub_ff8(1, ${pickup_weapon_assaultrifle}, 90.0, 0.0, 0.0, 0, 0, 1);
    sub_ff8(2, ${pickup_weapon_assaultrifle}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(3, ${pickup_weapon_assaultrifle}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(4, ${pickup_weapon_assaultrifle}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(5, ${pickup_weapon_assaultrifle}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(6, ${pickup_weapon_grenade}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(7, ${pickup_weapon_grenade}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(8, ${pickup_weapon_grenade}, 95.0, 0.0, 0.0, 0, 0, 1);
    sub_ff8(9, ${pickup_weapon_grenade}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(10, ${pickup_weapon_grenadelauncher}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(11, ${pickup_weapon_grenadelauncher}, 118.0, 0.0, 92.0, 0, 0, 0);
    sub_ff8(12, ${pickup_weapon_grenadelauncher}, 82.0, -60.0, 0.0, 0, 0, 0);
    sub_ff8(13, ${pickup_weapon_minigun}, 0.0, 0.0, 0.0, 1, 1, 1);
    sub_ff8(14, ${pickup_weapon_mg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(15, ${pickup_weapon_mg}, 97.92, 60.48, 0.0, 0, 0, 1);
    sub_ff8(16, ${pickup_weapon_mg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(17, ${pickup_weapon_mg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(18, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(19, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(20, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(21, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(22, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(23, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(24, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(25, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(26, ${pickup_weapon_pistol}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(27, ${pickup_weapon_pistol}, 0.0, 0.0, 36.0, 1, 0, 1);
    sub_ff8(28, ${pickup_weapon_rpg}, 86.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(29, ${pickup_weapon_rpg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(30, ${pickup_weapon_rpg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(31, ${pickup_weapon_sawnoffshotgun}, -82.0, 0.0, 0.0, 0, 0, 1);
    sub_ff8(32, ${pickup_weapon_sawnoffshotgun}, 0.0, 0.0, 24.0, 1, 0, 1);
    sub_ff8(33, ${pickup_weapon_sawnoffshotgun}, 0.0, 0.0, 12.0, 1, 0, 1);
    sub_ff8(34, ${pickup_weapon_sawnoffshotgun}, 0.0, 0.0, 98.0, 1, 0, 1);
    sub_ff8(35, ${pickup_weapon_sawnoffshotgun}, 90.0, 0.0, 140.0, 1, 0, 1);
    sub_ff8(36, ${pickup_weapon_sawnoffshotgun}, 90.0, 0.0, 120.0, 0, 0, 1);
    sub_ff8(37, ${pickup_weapon_smg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(38, ${pickup_weapon_smg}, 85.68, 92.88, 0.0, 0, 0, 1);
    sub_ff8(39, ${pickup_weapon_smg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(40, ${pickup_weapon_smg}, 0.0, 0.0, 20.0, 1, 0, 1);
    sub_ff8(41, ${pickup_weapon_smg}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(42, ${pickup_weapon_smg}, 0.0, 0.0, 0.0, 1, 1, 1);
    sub_ff8(43, ${pickup_weapon_sniperrifle}, 0.0, 0.0, 42.0, 1, 0, 1);
    sub_ff8(44, ${pickup_weapon_sniperrifle}, 0.0, 0.0, 52.0, 1, 0, 1);
    sub_ff8(45, ${pickup_weapon_sniperrifle}, 90.0, 0.0, 87.0, 1, 0, 1);
    sub_ff8(46, ${pickup_weapon_sniperrifle}, 0.0, 0.0, 98.0, 1, 0, 1);
    sub_ff8(47, ${pickup_weapon_sniperrifle}, 0.0, 0.0, 20.0, 1, 0, 1);
    sub_ff8(48, ${pickup_weapon_stickybomb}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(49, ${pickup_weapon_stickybomb}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(50, ${pickup_weapon_rpg}, 63.0, 0.0, 0.0, 0, 0, 1);
    sub_ff8(51, ${pickup_weapon_pistol}, 0.0, 0.0, 4.0, 1, 0, 1);
    sub_ff8(52, ${pickup_weapon_pistol}, 90.0, 90.0, 90.0, 0, 0, 0);
    sub_ff8(53, ${pickup_weapon_sniperrifle}, 0.0, 0.0, 2.0, 1, 0, 1);
    sub_ff8(54, ${pickup_weapon_sawnoffshotgun}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(55, ${pickup_weapon_bat}, 90.0, 0.0, 4.0, 1, 0, 1);
    sub_ff8(56, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(57, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(58, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(59, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(60, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(61, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 1, 1);
    sub_ff8(62, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(63, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(64, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 1, 1);
    sub_ff8(65, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(66, ${pickup_weapon_crowbar}, 90.0, 0.0, 45.0, 0, 0, 1);
    sub_ff8(67, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(68, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(69, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(70, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(71, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(72, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(73, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(74, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(75, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(76, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(77, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(78, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(79, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(80, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(81, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(82, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(83, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(84, ${pickup_weapon_molotov}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(85, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(86, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(87, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(88, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(89, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(90, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(91, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(92, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(93, ${pickup_weapon_bat}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(94, ${pickup_weapon_crowbar}, 0.0, 0.0, 0.0, 1, 0, 1);
    sub_ff8(95, ${pickup_weapon_carbinerifle}, 0.0, 0.0, 87.0, 1, 0, 1);
    sub_ff8(96, ${pickup_weapon_assaultshotgun}, 0.0, 0.0, 0.0, 1, 1, 1);
    sub_ff8(97, ${pickup_weapon_assaultshotgun}, 85.7, 0.0, 136.0, 0, 0, 0);
    sub_ff8(98, ${pickup_parachute}, 10.0, 0.0, -90.0, 0, 0, 0);
    sub_ff8(99, ${pickup_weapon_pumpshotgun}, -88.0, 0.0, 0.0, 0, 0, 0);
    sub_ff8(100, ${pickup_parachute}, 11.0, 0.0, 28.16, 0, 0, 0);
    sub_ff8(101, ${pickup_weapon_sawnoffshotgun}, 92.8, 0.0, 50.4, 0, 0, 0);
}

void sub_ff8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_A = 0;
    GAMEPLAY::SET_BIT(&v_A, 2);
    GAMEPLAY::SET_BIT(&v_A, 1);
    if (a_7) {
        GAMEPLAY::SET_BIT(&v_A, 4);
    }
    if (a_5) {
        GAMEPLAY::SET_BIT(&v_A, 3);
    }
    l_A3[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(a_1, sub_10dd(a_0, 0), a_2, v_A, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_A3[a_0/*1*/], 600000);
    if (a_6) {
        INTERIOR::ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(l_A3[a_0/*1*/], sub_1069(a_0));
    }
}

auto sub_1069(auto a_0) {
    switch (a_0) {
    case 13:
        return "V_25_ObsvDckRm";
        break;
    case 42:
        return "GtaMloRoom002";
        break;
    case 31:
        return "V_70_GamesRm";
        break;
    case 61:
        return "V_68_BackRm";
        break;
    case 64:
        return "V_51_StoreRm";
        break;
    case 96:
        return "GtaMloRoomTun2";
        break;
    default:
        return "";
        break;
    }
    return "";
}

auto<3> sub_10dd(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        if (a_1 == 1) {
            return {-1760.3599853515625, 428.6, 126.31 };
        } else { 
            return {1756.974, 427.531, 126.7 };
        }
        break;
    case 1:
        return {-1595.7421875, 2799.37060546875, 16.0205 };
        break;
    case 2:
        if (a_1 == 1) {
            return {-197.14859, 1482.6845703125, 288.25299072265625 };
        } else { 
            return {-200.0113983154297, 1481.6971435546875, 289.4302978515625 };
        }
        break;
    case 3:
        return {256.7699890136719, 2841.046630859375, 42.6599 };
        break;
    case 4:
        return {-1360.22314453125, 4435.75146484375, 27.7754 };
        break;
    case 5:
        return {64.63, 7051.25341796875, 15.8272 };
        break;
    case 6:
        return {-456.2838134765625, 1593.798828125, 358.01190185546875 };
        break;
    case 7:
        if (a_1 == 1) {
            return {-3114.616943359375, 749.8445434570312, 11.593520164489746 };
        } else { 
            return {-3111.6142578125, 749.2816162109375, 12.628499999999999 };
        }
        break;
    case 8:
        return {713.6796875, 4095.96875, 33.765 };
        break;
    case 9:
        return {255.26710510253906, 2586.281494140625, 43.96189880371094 };
        break;
    case 10:
        return {-1292.64, -3345.82, 23.27 };
        break;
    case 11:
        return {3111.531, 2214.84814453125, -8.6457 };
        break;
    case 12:
        if (a_1 == 1) {
            return {555.82, -839.0499877929688, 39.84 };
        } else { 
            return {555.0, 837.81, 55.08 };
        }
        break;
    case 13:
        return {-2360.0, 3245.0, 91.9 };
        break;
    case 14:
        return {1691.1517333984375, 2640.85888671875, 54.06930160522461 };
        break;
    case 15:
        return {1982.37, 6203.64013671875, 41.15 };
        break;
    case 16:
        return {-2979.0, 1588.0, 23.3 };
        break;
    case 17:
        return {963.5308227539062, -1824.0399169921875, 30.0708 };
        break;
    case 18:
        return {-295.4186706542969, 6188.78564453125, 30.489320755 };
        break;
    case 19:
        return {-1778.0, 124.0, 67.9 };
        break;
    case 20:
        if (a_1 == 1) {
            return {157.57586669921875, 3133.994140625, 42.45732879638672 };
        } else { 
            return {161.29249572753906, 3131.853759765625, 42.58919906616211 };
        }
        break;
    case 21:
        return {-888.0, 5406.0, 30.5 };
        break;
    case 22:
        return {-1840.0, 793.0, 138.7 };
        break;
    case 23:
        if (a_1 == 1) {
            return {-495.8039245605469, -1750.2066650390625, 17.425090789794922 };
        } else { 
            return {-495.9967956542969, -1747.23095703125, 18.519399642944336 };
        }
        break;
    case 24:
        if (a_1 == 1) {
            return {-1764.6949462890625, -265.5809326171875, 47.61869812011719 };
        } else { 
            return {-1763.3587646484375, -263.2062072753906, 47.148101806640625 };
        }
        break;
    case 25:
        if (a_1 == 1) {
            return {548.0714721679688, -1642.4505615234375, 27.2033 };
        } else { 
            return {548.5942993164062, -1642.60302734375, 27.4424991607666 };
        }
        break;
    case 26:
        return {736.0562744140625, 2595.555908203125, 72.91649627685547 };
        break;
    case 27:
        if (a_1 == 1) {
            return {701.0009155273438, -1179.7015380859375, 23.287370681762695 };
        } else { 
            return {699.2747802734375, -1181.6705322265625, 33.260799407958984 };
        }
        break;
    case 28:
        if (a_1 == 1) {
            return {1146.74, 4938.93017578125, 221.27 };
        } else { 
            return {-1149.43701171875, 4940.36181640625, 221.3282012939453 };
        }
        break;
    case 29:
        if (a_1 == 1) {
            return {2543.909912109375, -432.76, 93.12 };
        } else { 
            return {2513.53466796875, -442.848388671875, 113.08879852294922 };
        }
        break;
    case 30:
        return {-553.1763916015625, -2239.876708984375, 121.37039947509766 };
        break;
    case 31:
        if (a_1 == 1) {
            return {987.1599731445312, 108.02, 73.3 };
        } else { 
            return {987.15, 105.88, 74.13 };
        }
        break;
    case 32:
        return {-1048.0, -836.0, 10.5 };
        break;
    case 33:
        return {312.6026, 6606.896484375, 27.883499145507812 };
        break;
    case 34:
        return {37.21, 2871.26, 58.61 };
        break;
    case 35:
        if (a_1 == 1) {
            return {61.91, 3690.51, 38.83 };
        } else { 
            return {59.0, 3692.0, 38.919999999999995 };
        }
        break;
    case 36:
        if (a_1 == 1) {
            return {2933.33, 4617.06982421875, 47.72 };
        } else { 
            return {2934.4990234375, 4617.06689453125, 47.736 };
        }
        break;
    case 37:
        return {57.8218994140625, -1932.120849609375, 20.4939 };
        break;
    case 38:
        return {378.26, 334.3, 45.63 };
        break;
    case 39:
        if (a_1 == 1) {
            return {2673.662353515625, 2793.7021484375, 31.8124 };
        } else { 
            return {2676.04541015625, 2793.249267578125, 39.59339904785156 };
        }
        break;
    case 40:
        return {-1582.2779541015625, 770.3485717773438, 188.19419860839844 };
        break;
    case 41:
        if (a_1 == 1) {
            return {-1641.1390380859375, -1032.815185546875, 4.631649971 };
        } else { 
            return {-1640.54638671875, -1034.128662109375, 4.6074 };
        }
        break;
    case 42:
        if (a_1 == 1) {
            return {151.09, -214.36, 44.73 };
        } else { 
            return {-159.7136993408203, -209.17210388183594, 48.937999999999995 };
        }
        break;
    case 43:
        return {-1276.9862060546875, -2451.88623046875, 72.04810333251953 };
        break;
    case 44:
        if (a_1 == 1) {
            return {-403.5826721191406, 1056.211669921875, 322.8414306640625 };
        } else { 
            return {-402.0, 1053.0, 323.0 };
        }
        break;
    case 45:
        return {2728.986572265625, 1576.38208, 65.58180236816406 };
        break;
    case 46:
        if (a_1 == 1) {
            return {-221.27, 6133.6201171875, 30.48 };
        } else { 
            return {-215.9, 6125.27, 56.278 };
        }
        break;
    case 47:
        return {2092.225341796875, 2492.301513671875, 89.40460205078125 };
        break;
    case 48:
        return {-1124.666015625, -967.161376953125, 5.631899833679199 };
        break;
    case 49:
        if (a_1 == 1) {
            return {-405.5299072265625, 323.4063415527344, 107.72268676757812 };
        } else { 
            return {-405.0, 325.0, 108.7 };
        }
        break;
    case 50:
        return {-1087.31, -2429.3, 13.0 };
        break;
    case 51:
        return {-1042.64453125, 879.7763061523438, 160.2144012451172 };
        break;
    case 52:
        if (a_1 == 1) {
            return {-1081.2288818359375, 678.9454345703125, 141.80563354492188 };
        } else { 
            return {-1078.349853515625, 682.2943725585938, 144.904006958 };
        }
        break;
    case 53:
        return {-402.0679016113281, 1355.0618896484375, 329.8384094238281 };
        break;
    case 54:
        return {153.38760375976562, 713.6583862304688, 207.25509643554688 };
        break;
    case 55:
        return {186.89999999999998, 243.0269012451172, 140.55 };
        break;
    case 56:
        if (a_1 == 1) {
            return {302.01, -3254.449951171875, 4.8 };
        } else { 
            return {304.0, -3259.0, 5.0 };
        }
        break;
    case 57:
        if (a_1 == 1) {
            return {-398.57, -1883.9599609375, 20.54 };
        } else { 
            return {-397.0, -1885.0, 21.5 };
        }
        break;
    case 58:
        return {780.7208251953125, -211.0615997314453, 65.11430358886719 };
        break;
    case 59:
        return {-1755.011474609375, 184.3928985595703, 63.37110137939453 };
        break;
    case 60:
        if (a_1 == 1) {
            return {788.84, 2164.06, 52.1 };
        } else { 
            return {786.013916015625, 2164.95068359375, 52.09809875488281 };
        }
        break;
    case 61:
        return {1707.227783203125, 4920.15576171875, 41.06370162963867 };
        break;
    case 62:
        return {-684.9417114257812, 5793.044921875, 16.331 };
        break;
    case 63:
        return {-2188.0, 4251.0, 48.0 };
        break;
    case 64:
        if (a_1 == 1) {
            return {-1099.0799560546875, 2711.35, 18.11 };
        } else { 
            return {-1103.0, 2715.0, 19.0 };
        }
        break;
    case 65:
        return {581.0, -2805.0, 5.5 };
        break;
    case 66:
        if (a_1 == 1) {
            return {-663.95, -1998.8499755859375, 6.1 };
        } else { 
            return {-665.4315795898438, -2002.039794921875, 7.596799850463867 };
        }
        break;
    case 67:
        return {1442.9049072265625, -1479.7587890625, 62.2244987487793 };
        break;
    case 68:
        if (a_1 == 1) {
            return {-361.92, 141.76, 37.58 };
        } else { 
            return {-356.53240966796875, -145.03590393066406, 41.74129867553711 };
        }
        break;
    case 69:
        return {624.0115966796875, 558.653076171875, 129.24549865722656 };
        break;
    case 70:
        return {2833.0, 2807.0, 56.378501892089844 };
        break;
    case 71:
        if (a_1 == 1) {
            return {92.14449310302734, 6360.181640625, 30.37611961364746 };
        } else { 
            return {94.07689666748047, 6356.9609375, 30.3761 };
        }
        break;
    case 72:
        return {-2231.51416015625, 3477.79150390625, 29.329099655151367 };
        break;
    case 73:
        return {377.0, 3582.0, 32.5 };
        break;
    case 74:
        if (a_1 == 1) {
            return {-2947.469970703125, 445.6, 14.29 };
        } else { 
            return {-2948.0, 441.0, 15.0 };
        }
        break;
    case 75:
        if (a_1 == 1) {
            return {1292.88, -3341.78, 4.9 };
        } else { 
            return {1296.0, -3348.0, 5.2 };
        }
        break;
    case 76:
        if (a_1 == 1) {
            return {-1165.4599609375, -2054.09, 13.2 };
        } else { 
            return {-1165.8831787109375, -2051.0263671875, 13.226799999999999 };
        }
        break;
    case 77:
        if (a_1 == 1) {
            return {1235.5699462890625, -452.01, 65.7 };
        } else { 
            return {1235.0, -450.0, 66.5 };
        }
        break;
    case 78:
        return {-467.0458068847656, -934.8018798828125, 46.98440170288086 };
        break;
    case 79:
        return {226.7, -1761.0, 28.5 };
        break;
    case 80:
        if (a_1 == 1) {
            return {1218.0699462890625, 1898.68994140625, 76.87 };
        } else { 
            return {1221.0, 1898.0, 77.4 };
        }
        break;
    case 81:
        if (a_1 == 1) {
            return {1545.99, 3802.7, 32.419999999999995 };
        } else { 
            return {1535.8291015625, 3798.216552734375, 33.456298828125 };
        }
        break;
    case 82:
        return {756.860107421875, 6462.3291015625, 30.42289924621582 };
        break;
    case 83:
        return {-2319.0, 4124.0, 26.0 };
        break;
    case 84:
        return {-3185.0, 1053.0, 20.2 };
        break;
    case 85:
        return {818.9215087890625, -3188.166748046875, 4.9007 };
        break;
    case 86:
        if (a_1 == 1) {
            return {-451.04998779296875, 2264.24, 6.61 };
        } else { 
            return {-457.3656, -2262.64599609375, 7.52120018 };
        }
        break;
    case 87:
        if (a_1 == 1) {
            return {1409.8599853515625, -757.219970703125, 65.8 };
        } else { 
            return {1410.0909423828125, -752.1060791015625, 66.23619842529297 };
        }
        break;
    case 88:
        return {8.4875, -441.2102966308594, 44.5639 };
        break;
    case 89:
        if (a_1 == 1) {
            return {-935.0399780273438, 387.39, 76.62 };
        } else { 
            return {-937.017578125, 391.544, 80.23770141601562 };
        }
        break;
    case 90:
        if (a_1 == 1) {
            return {2748.49, 3463.02, 54.77 };
        } else { 
            return {2746.5537109375, 3463.525390625, 54.71440124511719 };
        }
        break;
    case 91:
        return {1898.896484375, 4921.974609375, 47.808799743652344 };
        break;
    case 92:
        if (a_1 == 1) {
            return {-315.51, 6310.89013671875, 31.37 };
        } else { 
            return {-315.9772033691406, 6307.38525390625, 31.4906 };
        }
        break;
    case 93:
        return {-1171.0, 4927.0, 224.0 };
        break;
    case 94:
        return {-281.17120361328125, 2528.012451171875, 73.63760375976562 };
        break;
    case 95:
        if (a_1 == 1) {
            return {68.45, 3756.27, 38.74 };
        } else { 
            return {68.453, 3758.966796875, 38.739498138427734 };
        }
        break;
    case 96:
        return {25.288799285888672, -634.263671875, 6.5084 };
        break;
    case 97:
        if (a_1 == 1) {
            return {-1146.67, 4939.10986328125, 221.27 };
        } else { 
            return {-1145.2825927734375, 4940.28564453125, 221.30380249023438 };
        }
        break;
    case 98:
        return {441.64, 5570.3798828125, 780.45 };
        break;
    case 99:
        if (a_1) {
            return {1353.151611328125, 4377.22265625, 43.34159851074219 };
        } else { 
            return {1357.209228515625, 4388.44482421875, 43.872 };
        }
        break;
    case 100:
        return {-102.0671, -968.15380859375, 295.56350708 };
        break;
    case 101:
        return {2492.690185546875, 4963.01416015625, 43.6478 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

void sub_201a() {
    sub_243a(0, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(1, 0.0, 0.0, 24.0, 0, 0);
    sub_243a(2, 0.0, 0.0, 60.0, 1, 1);
    sub_243a(3, 0.0, 0.0, 45.0, 0, 0);
    sub_243a(4, 0.0, 0.0, 55.0, 1, 0);
    sub_243a(5, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(6, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(7, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(8, 0.0, 0.0, 90.0, 1, 1);
    sub_243a(9, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(10, 0.0, 0.0, -112.0, 0, 0);
    sub_243a(11, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(12, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(13, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(14, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(15, 0.0, 0.0, 35.0, 0, 0);
    sub_243a(16, 0.0, 0.0, 13.0, 0, 0);
    sub_243a(17, 0.0, 0.0, 0.0, 0, 1);
    sub_243a(18, 0.0, 0.0, -64.0, 1, 0);
    sub_243a(19, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(20, 0.0, 0.0, -62.4, 1, 0);
    sub_243a(21, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(22, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(23, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(24, 0.0, 0.0, 95.0, 0, 0);
    sub_243a(25, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(26, 0.0, 0.0, -15.0, 1, 0);
    sub_243a(27, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(28, 0.0, 0.0, -5.0, 0, 0);
    sub_243a(29, 5.0, 0.0, -45.0, 0, 0);
    sub_243a(30, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(31, 6.0, 0.0, 51.0, 0, 0);
    sub_243a(32, 0.0, 0.0, -28.0, 0, 0);
    sub_243a(33, 0.0, 0.0, 33.0, 0, 0);
    sub_243a(34, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(35, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(36, 5.0, 0.0, 30.2, 1, 0);
    sub_243a(37, 0.0, 0.0, 0.0, 1, 0);
    sub_243a(38, 0.0, 0.0, 70.5, 1, 1);
    sub_243a(39, 0.0, 0.0, 70.0, 1, 0);
    sub_243a(40, 0.0, 0.0, 45.0, 0, 0);
    sub_243a(41, 0.0, 0.0, -7.0, 1, 0);
    sub_243a(42, 0.0, 0.0, -13.0, 1, 0);
    sub_243a(43, 0.0, 0.0, 44.4, 1, 0);
    sub_243a(44, 0.0, 0.0, 35.0, 0, 0);
    sub_243a(45, 0.0, 0.0, 89.8, 1, 0);
    sub_243a(46, 0.0, 0.0, -166.0, 0, 0);
    sub_243a(47, 0.0, 0.0, 0.0, 0, 0);
    sub_243a(48, 0.0, 0.0, 0.0, 0, 1);
    sub_243a(49, 0.0, 2.0, 90.0, 1, 0);
    sub_243a(50, 0.0, 0.0, 34.0, 0, 0);
    sub_243a(51, 0.0, 0.0, 59.0, 1, 1);
    sub_243a(52, 0.0, 0.0, 5.0, 0, 0);
    sub_243a(53, 0.0, 0.0, 70.0, 0, 0);
    sub_243a(54, 0.0, 0.0, 104.0, 0, 0);
    sub_243a(55, 0.0, 0.0, -85.0, 0, 0);
    sub_243a(56, 0.0, 0.0, 32.0, 0, 0);
    sub_243a(57, 0.0, 0.0, 38.0, 1, 0);
    sub_243a(58, 0.0, 0.0, 100.0, 0, 1);
    sub_243a(59, 0.0, 0.0, 70.0, 1, 0);
    sub_243a(60, 0.0, 0.0, 69.7, 1, 0);
    sub_243a(61, 0.0, 0.0, 100.0, 0, 0);
    sub_243a(62, 0.0, 20.1, 52.5, 1, 0);
    sub_243a(63, 0.0, 0.0, 339.0, 1, 1);
    sub_243a(64, 0.0, 0.0, 61.0, 0, 0);
    sub_243a(65, 0.0, 0.0, 284.0, 1, 1);
    sub_243a(66, 0.0, 0.0, -20.0, 1, 0);
    sub_243a(67, 6.0, 0.0, 0.0, 1, 0);
    sub_243a(68, 6.0, 0.0, -215.0, 1, 0);
    sub_243a(69, -6.0, 0.0, -40.0, 1, 0);
    sub_243a(70, 6.0, 0.0, 140.0, 1, 0);
    sub_243a(71, 6.0, 0.0, -110.0, 1, 0);
    sub_243a(72, -6.0, 0.0, -110.0, 1, 0);
    sub_243a(73, 6.0, 0.0, -7.0, 1, 0);
    sub_243a(74, 6.0, 0.0, 173.0, 1, 0);
    sub_243a(75, 0.0, 0.0, 23.3, 1, 0);
}

void sub_243a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = 0;
    GAMEPLAY::SET_BIT(&v_8, 2);
    GAMEPLAY::SET_BIT(&v_8, 1);
    GAMEPLAY::SET_BIT(&v_8, 8);
    GAMEPLAY::SET_BIT(&v_8, 4);
    if (!a_4) {
        GAMEPLAY::SET_BIT(&v_8, 3);
    }
    l_56[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(${pickup_health_standard}, sub_259f(a_0, 0), a_1, v_8, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_56[a_0/*1*/], 600000);
    if (a_5) {
        INTERIOR::ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(l_56[a_0/*1*/], sub_24b2(a_0));
    }
}

auto sub_24b2(auto a_0) {
    switch (a_0) {
    case 2:
        return "V_25_ControlRm";
        break;
    case 8:
        return "FireDeptRoom";
        break;
    case 15:
        return "Inside Dam";
        break;
    case 17:
        return "V_CarModRoom";
        break;
    case 20:
        return "V_70_Toilet";
        break;
    case 38:
        return "rm_garage";
        break;
    case 48:
        return "GtaMloRoom001";
        break;
    case 51:
        return "v_refit";
        break;
    case 58:
        return "V_39_ShopRm";
        break;
    case 63:
        return "V_FIB03_atr_off1";
        break;
    case 65:
        return "GtaMloRoomTun2";
        break;
    case 67:
        return "V_34_ProcessRm";
        break;
    case 68:
        return "V_34_Ent_office";
        break;
    case 69:
        return "V_34_WareRm";
        break;
    default:
        return "";
        break;
    }
    return "";
}

auto<3> sub_259f(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        return {131.2, 6920.1, 20.8 };
        break;
    case 1:
        if (a_1 == 1) {
            return {-1048.569458, 4917.4140625, 208.4216 };
        } else { 
            return {-1046.2772216796875, 4918.7392578125, 211.53790283203125 };
        }
        break;
    case 2:
        return {-2358.4599609375, 3251.39697265625, 100.55039978027344 };
        break;
    case 3:
        if (a_1 == 1) {
            return {-247.62188720703125, 6331.3408203125, 31.4260196685791 };
        } else { 
            return {-249.9503936767578, 6331.21923828125, 32.7262 };
        }
        break;
    case 4:
        if (a_1 == 1) {
            return {140.89999999999998, -2491.449951171875, 43.45 };
        } else { 
            return {-141.09759521484375, -2498.239013671875, 40.01240158081055 };
        }
        break;
    case 5:
        if (a_1 == 1) {
            return {-2924.69677734375, 46.5028190612793, 10.6036901474 };
        } else { 
            return {2925.7, 47.4, 11.6 };
        }
        break;
    case 6:
        return {-793.1981201171875, -726.4420776367188, 26.28 };
        break;
    case 7:
        if (a_1 == 1) {
            return {124.00924682617188, -673.0096435546875, 41.02729034423828 };
        } else { 
            return {123.5196, -674.2916870117188, 41.49449920654297 };
        }
        break;
    case 8:
        if (a_1 == 1) {
            return {1195.7374267578125, -1481.694458, 33.859500885 };
        } else { 
            return {1194.709228515625, -1482.47229, 33.959400177 };
        }
        break;
    case 9:
        if (a_1 == 1) {
            return {-35.887428283691406, 1945.73779296875, 189.1868133544922 };
        } else { 
            return {-35.52539825439453, 1947.2894287109375, 189.186 };
        }
        break;
    case 10:
        if (a_1) {
            return {753.4578857421875, 4174.99560546875, 39.80110168457031 };
        } else { 
            return {751.719970703125, 4175.14013671875, 40.95 };
        }
        break;
    case 11:
        if (a_1 == 1) {
            return {1791.2564697265625, 4592.3833, 36.682830810546875 };
        } else { 
            return {1789.8, 4592.4, 36.78 };
        }
        break;
    case 12:
        return {341.311, 2618.918212890625, 43.51240158081055 };
        break;
    case 13:
        return {442.37548828125, -223.602005, 55.02149963378906 };
        break;
    case 14:
        if (a_1 == 1) {
            return {1291.02, -1760.93994140625, 51.05 };
        } else { 
            return {1286.5, -1754.4, 52.0 };
        }
        break;
    case 15:
        if (a_1 == 1) {
            return {1659.4376220703125, 5.4271, 165.1175994873047 };
        } else { 
            return {1658.6209716796875, 6.775199890136719, 166.1676025390625 };
        }
        break;
    case 16:
        if (a_1 == 1) {
            return {1645.91, 4866.72021484375, 40.98 };
        } else { 
            return {1647.399169921875, 4865.83935546875, 41.0 };
        }
        break;
    case 17:
        return {-1144.5892333984375, -2004.4522705078125, 12.38029956817627 };
        break;
    case 18:
        if (a_1 == 1) {
            return {-1047.3, 520.6, 35.0 };
        } else { 
            return {-1048.3199462890625, -521.2, 35.14 };
        }
        break;
    case 19:
        if (a_1 == 1) {
            return {-1576.0458984375, -587.8257446289062, 33.97909164428711 };
        } else { 
            return {-1576.816650390625, -586.388671875, 34.85279846191406 };
        }
        break;
    case 20:
        if (a_1 == 1) {
            return {953.44, 123.42, 73.35 };
        } else { 
            return {954.5, 121.34, 74.18 };
        }
        break;
    case 21:
        if (a_1 == 1) {
            return {1134.2, -665.9413452148438, 56.082611083984375 };
        } else { 
            return {1135.4013671875, -663.7874755859375, 56.088 };
        }
        break;
    case 22:
        if (a_1 == 1) {
            return {-2196.197509765625, 248.91229248046875, 173.612 };
        } else { 
            return {-2195.02880859375, 250.42559814453125, 173.60169982910156 };
        }
        break;
    case 23:
        return {29.2, 3635.4, 39.8 };
        break;
    case 24:
        if (a_1 == 1) {
            return {1724.4290771484375, 3299.0234375, 40.2234992980957 };
        } else { 
            return {1721.9595947265625, 3300.46435546875, 40.38349914550781 };
        }
        break;
    case 25:
        if (a_1 == 1) {
            return {2617.320556640625, 3659.451904296875, 100.38672637939453 };
        } else { 
            return {2612.71240234375, 3662.564208984375, 101.1073989868164 };
        }
        break;
    case 26:
        return {-459.9624938964844, 1101.0760498046875, 328.0210876464844 };
        break;
    case 27:
        if (a_1 == 1) {
            return {2432.607177734375, 4994.33349609375, 45.25828170776367 };
        } else { 
            return {2430.906494140625, 4995.56103515625, 45.26850128173828 };
        }
        break;
    case 28:
        if (a_1 == 1) {
            return {3722.45556640625, 4521.8369140625, 20.394559860229492 };
        } else { 
            return {3724.5, 4524.5, 21.6 };
        }
        break;
    case 29:
        if (a_1 == 1) {
            return {-446.90240478515625, 5997.59814453125, 30.3407 };
        } else { 
            return {-446.0450134277344, 6000.8818359375, 31.91629981994629 };
        }
        break;
    case 30:
        return {3291.4, 5192.5, 18.4 };
        break;
    case 31:
        if (a_1 == 1) {
            return {390.81, -1436.0699462890625, 28.45 };
        } else { 
            return {388.7, -1434.3, 29.8 };
        }
        break;
    case 32:
        return {-445.26, 442.49, 32.26 };
        break;
    case 33:
        if (a_1) {
            return {-1501.4599609375, 858.1699829101562, 180.59 };
        } else { 
            return {-1500.0799560546875, 857.59, 180.59 };
        }
        break;
    case 34:
        return {2822.2, -741.4, 1.8 };
        break;
    case 35:
        if (a_1 == 1) {
            return {-3166.978271484375, 1102.6224365234375, 19.8082695 };
        } else { 
            return {-3165.612548828125, 1102.240478515625, 19.892799377441406 };
        }
        break;
    case 36:
        if (a_1 == 1) {
            return {1842.8818359375, 3670.456787109375, 32.68 };
        } else { 
            return {1841.114013671875, 3675.2529296875, 34.08599853515625 };
        }
        break;
    case 37:
        if (a_1 == 1) {
            return {1828.79443359375, 2605.50390625, 44.615821838378906 };
        } else { 
            return {1830.5350341796875, 2603.827880859375, 45.74909973144531 };
        }
        break;
    case 38:
        if (a_1 == 1) {
            return {-32.61, -1089.67, 25.42 };
        } else { 
            return {-40.052799224853516, -1084.0159912109375, 26.6224 };
        }
        break;
    case 39:
        if (a_1 == 1) {
            return {1439.01220703125, 6336.81201171875, 22.96476936340332 };
        } else { 
            return {1445.5439453125, 6334.05712890625, 23.975 };
        }
        break;
    case 40:
        if (a_1 == 1) {
            return {-782.5125732421875, -1352.245361328125, 8.0001 };
        } else { 
            return {-784.485107421875, -1351.364013671875, 8.1 };
        }
        break;
    case 41:
        if (a_1 == 1) {
            return {962.8805541992188, -1826.419189453125, 30.071950912475586 };
        } else { 
            return {963.1672973632812, -1831.1490478515625, 36.205501556396484 };
        }
        break;
    case 42:
        if (a_1 == 1) {
            return {-1246.155029296875, -1531.6470947265625, 3.296200037 };
        } else { 
            return {-1246.4940185546875, -1533.677, 4.526199817657471 };
        }
        break;
    case 43:
        if (a_1 == 1) {
            return {-765.5465698242188, 698.8101196289062, 143.36932373046875 };
        } else { 
            return {-761.1057739257812, 701.9451904296875, 145.05 };
        }
        break;
    case 44:
        if (a_1 == 1) {
            return {-512.1094360351562, 28.863130569458, 43.615299224853516 };
        } else { 
            return {-513.4390869140625, 30.9069, 43.901798248291016 };
        }
        break;
    case 45:
        if (a_1 == 1) {
            return {781.38385, 1292.072998046875, 359.2996520996094 };
        } else { 
            return {780.3878784179688, 1295.7049560546875, 361.694091796875 };
        }
        break;
    case 46:
        return {208.69, 337.76, 104.64 };
        break;
    case 47:
        if (a_1 == 1) {
            return {1889.99, 2078.3798828125, 140.0 };
        } else { 
            return {1890.24, 2073.26, 140.11 };
        }
        break;
    case 48:
        return {153.6156, -3073.998291015625, 4.89620018 };
        break;
    case 49:
        if (a_1) {
            return {-306.2449035644531, -1180.538208, 22.711 };
        } else { 
            return {-304.0893859863281, -1180.885986328125, 23.9493 };
        }
        break;
    case 50:
        return {-2006.986572265625, -556.4998168945312, 11.8813 };
        break;
    case 51:
        if (a_1 == 1) {
            return {-590.2079467773438, -289.8196105957031, 40.686309814453125 };
        } else { 
            return {-588.1934204101562, -290.47821044921875, 43.71 };
        }
        break;
    case 52:
        return {-1795.826171875, -855.7111206054688, 8.20479965209961 };
        break;
    case 53:
        return {-1557.1080322265625, -1155.2464599609375, 2.9158 };
        break;
    case 54:
        if (a_1 == 1) {
            return {-1470.7099609375, -1389.3299560546875, 1.58 };
        } else { 
            return {-1467.4832763671875, -1387.5068359375, 3.1432 };
        }
        break;
    case 55:
        return {-684.8126220703125, -180.6479949951172, 48.02 };
        break;
    case 56:
        if (a_1 == 1) {
            return {-1311.4127197265625, 640.1153564453125, 136.9244384765625 };
        } else { 
            return {-1307.06201171875, 641.4210815429688, 138.05819702148438 };
        }
        break;
    case 57:
        return {2493.685546875, 4963.541015625, 43.735801696777344 };
        break;
    case 58:
        if (a_1 == 1) {
            return {1392.76, 3602.93994140625, 33.98 };
        } else { 
            return {1392.608642578125, 3605.798583984375, 34.9939 };
        }
        break;
    case 59:
        if (a_1 == 1) {
            return {-527.33, 5295.7, 73.17 };
        } else { 
            return {-535.443603515625, 5297.49609375, 76.38909912109375 };
        }
        break;
    case 60:
        if (a_1 == 1) {
            return {-564.26, 5353.1298828125, 69.23 };
        } else { 
            return {-551.5836791992188, 5349.404296875, 75.25299835205078 };
        }
        break;
    case 61:
        if (a_1 == 1) {
            return {3.18, 1827.1, 24.22 };
        } else { 
            return {0.1911, -1825.9046630859375, 24.3295 };
        }
        break;
    case 62:
        if (a_1 == 1) {
            return {62.25, 3681.06, 38.84 };
        } else { 
            return {63.88669967651367, 3683.49, 39.1543 };
        }
        break;
    case 63:
        return {155.384, -741.1790161132812, 258.6518859863281 };
        break;
    case 64:
        if (a_1 == 1) {
            return {126.61, -1206.29, 28.3 };
        } else { 
            return {124.265, -1205.881958, 28.29509925842285 };
        }
        break;
    case 65:
        return {27.449, 625.31, 15.462 };
        break;
    case 66:
        if (a_1 == 1) {
            return {129.04, -662.0399780273438, 39.51 };
        } else { 
            return {-129.0373992919922, -659.2689208984375, 41.0015983581543 };
        }
        break;
    case 67:
        if (a_1) {
            return {1138.62, -1598.56, 33.69 };
        } else { 
            return {1138.63, -1596.6099853515625, 35.07 };
        }
        break;
    case 68:
        if (a_1) {
            return {1149.68, -1525.56, 33.84 };
        } else { 
            return {1147.55, -1527.8299560546875, 36.01 };
        }
        break;
    case 69:
        if (a_1) {
            return {297.48, -1448.79, 28.97 };
        } else { 
            return {296.44, -1450.75, 30.4 };
        }
        break;
    case 70:
        if (a_1) {
            return {324.21, -1392.68, 31.51 };
        } else { 
            return {322.2699890136719, -1393.75, 32.79 };
        }
        break;
    case 71:
        if (a_1) {
            return {293.2, -597.9199829101562, 42.28 };
        } else { 
            return {294.3, 598.1, 43.73 };
        }
        break;
    case 72:
        if (a_1) {
            return {358.0, -592.6599731445312, 27.79 };
        } else { 
            return {357.07, -590.63, 29.08 };
        }
        break;
    case 73:
        if (a_1) {
            return {-495.45, 326.18, 33.5 };
        } else { 
            return {496.4, -324.7, 34.75 };
        }
        break;
    case 74:
        if (a_1) {
            return {-450.91, 351.93, 33.5 };
        } else { 
            return {-449.82, 353.49, 34.75 };
        }
        break;
    case 75:
        return {-2258.833, 323.9413146972656, 184.90150451660156 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

void sub_3377() {
    sub_3435(0, 0.0, 0.0, 0.0, 1);
    sub_3435(1, 0.0, 0.0, 0.0, 1);
    sub_3435(2, 0.0, 0.0, 0.0, 1);
    sub_3435(3, 0.0, 0.0, 0.0, 1);
    sub_3435(4, 0.0, 0.0, 0.0, 1);
    sub_3435(5, 0.0, 0.0, 0.0, 1);
    sub_3435(6, 0.0, 0.0, 0.0, 1);
    sub_3435(7, 0.0, 0.0, 0.0, 1);
    sub_3435(8, 0.0, 0.0, 0.0, 1);
    sub_3435(9, 0.0, 0.0, 0.0, 1);
    sub_3435(10, 0.0, 0.0, 0.0, 1);
    sub_3435(11, 0.0, 0.0, 0.0, 1);
    sub_3435(12, 0.0, 0.0, 0.0, 1);
    sub_3435(13, 0.0, 0.0, 0.0, 1);
    sub_3435(14, 0.0, 0.0, 0.0, 1);
    sub_3435(15, 0.0, 0.0, 0.0, 1);
    sub_3435(16, 0.0, 0.0, 0.0, 1);
    sub_3435(17, 0.0, 0.0, 0.0, 1);
    sub_3435(18, 0.0, 0.0, 0.0, 1);
}

void sub_3435(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = 0;
    GAMEPLAY::SET_BIT(&v_7, 2);
    GAMEPLAY::SET_BIT(&v_7, 4);
    GAMEPLAY::SET_BIT(&v_7, 1);
    GAMEPLAY::SET_BIT(&v_7, 8);
    if (a_4) {
        GAMEPLAY::SET_BIT(&v_7, 3);
    }
    l_42[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(${pickup_weapon_petrolcan}, sub_3496(a_0), a_1, v_7, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_42[a_0/*1*/], 600000);
}

auto<3> sub_3496(auto a_0) {
    switch (a_0) {
    case 0:
        return {818.755126953125, -1027.4293212890625, 25.4043 };
        break;
    case 1:
        return {-1804.56591796875, 794.3649291992188, 137.6855926513672 };
        break;
    case 2:
        return {264.91558837890625, 2606.0126953125, 43.86880111694336 };
        break;
    case 3:
        return {1183.3037109375, -330.2196960449219, 68.1744 };
        break;
    case 4:
        return {289.33599853515625, -1272.1392822265625, 28.440799713134766 };
        break;
    case 5:
        return {-723.63232421875, -936.4893188476562, 18.214099884033203 };
        break;
    case 6:
        return {-70.31539916992188, -1760.288818359375, 28.539 };
        break;
    case 7:
        return {157.897, -1562.5159912109375, 28.2619 };
        break;
    case 8:
        return {172.585205078125, 6601.8208, 30.8682 };
        break;
    case 9:
        return {1195.6463623046875, -1396.040283203125, 34.220699310302734 };
        break;
    case 10:
        return {-1437.5946044921875, -282.29510498046875, 45.3922 };
        break;
    case 11:
        return {-2073.707275390625, -322.7323913574219, 12.3162 };
        break;
    case 12:
        return {-2558.856201171875, 2333.536376953125, 32.25749969482422 };
        break;
    case 13:
        return {1691.2344970703125, 4928.91943359375, 41.2317 };
        break;
    case 14:
        return {43.489898681640625, 2773.51171875, 56.87860107421875 };
        break;
    case 15:
        return {1042.862060546875, 2667.42626953125, 38.7 };
        break;
    case 16:
        return {2668.929443359375, 3260.676025390625, 54.240299224853516 };
        break;
    case 17:
        return {2002.736572265625, 3772.75634765625, 31.405899047851562 };
        break;
    case 18:
        return {1703.2540283203125, 6415.81, 31.7642 };
        break;
    }
    return {0.0, 0.0, 0.0 };
}

void sub_36a9() {
    sub_3935(0, 0.0, 0.0, 6.0, 1, 0, 0);
    sub_3935(1, 0.0, 0.0, 78.0, 1, 0, 0);
    sub_3935(2, 90.0, 0.0, 2.0, 1, 0, 0);
    sub_3935(3, 0.0, 0.0, 330.0, 1, 0, 0);
    sub_3935(4, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(5, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(6, 0.0, 0.0, 6.0, 1, 0, 0);
    sub_3935(7, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(8, 90.0, 0.0, 0.0, 0, 0, 0);
    sub_3935(9, 0.0, 0.0, 46.0, 1, 0, 0);
    sub_3935(10, 90.0, 0.0, 9.0, 1, 0, 0);
    sub_3935(11, 83.56, 0.0, 0.0, 0, 0, 0);
    sub_3935(12, 102.96, 0.0, 0.0, 0, 0, 0);
    sub_3935(13, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(14, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(15, 0.0, 0.0, 78.0, 1, 0, 0);
    sub_3935(16, -90.0, 0.0, 145.39999999999998, 0, 0, 0);
    sub_3935(17, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(18, 0.0, 0.0, 42.0, 1, 0, 0);
    sub_3935(19, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(20, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(21, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(22, 0.0, 0.0, 3.0, 1, 0, 0);
    sub_3935(23, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(24, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(25, 5.0, 0.0, -146.0, 1, 0, 0);
    sub_3935(26, 0.0, 0.0, 108.0, 1, 0, 0);
    sub_3935(27, 0.0, 0.0, 130.0, 1, 0, 0);
    sub_3935(28, -90.0, 0.0, -180.0, 0, 1, 0);
    sub_3935(29, 0.0, 0.0, 14.0, 1, 0, 0);
    sub_3935(30, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(31, 0.0, 0.0, 0.0, 1, 0, 0);
    sub_3935(32, 0.0, 0.0, 5.0, 1, 0, 0);
    sub_3935(33, 0.0, 0.0, 72.0, 1, 0, 0);
    sub_3935(34, 0.0, 0.0, 27.0, 1, 0, 0);
    sub_3935(35, 0.0, 0.0, 7.0, 1, 0, 0);
    sub_3935(36, 0.0, 0.0, 7.0, 1, 0, 0);
    sub_3935(37, 0.0, 0.0, 7.0, 1, 0, 0);
    sub_3935(38, 0.0, 0.0, 7.0, 1, 0, 0);
    sub_3935(39, -90.0, 0.0, -20.0, 0, 1, 0);
    sub_3935(40, -90.0, 0.0, 0.0, 0, 0, 0);
    sub_3935(41, 0.0, 0.0, 7.0, 1, 1, 0);
    sub_3935(42, 0.0, 0.0, 7.0, 1, 0, 0);
    sub_3935(43, -92.0, 0.0, -18.0, 0, 0, 0);
    sub_3935(44, 90.0, 0.0, -108.0, 0, 0, 0);
}

void sub_3935(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = 0;
    GAMEPLAY::SET_BIT(&v_9, 2);
    GAMEPLAY::SET_BIT(&v_9, 4);
    GAMEPLAY::SET_BIT(&v_9, 1);
    if (a_6) {
        GAMEPLAY::SET_BIT(&v_9, 8);
    }
    if (a_4) {
        GAMEPLAY::SET_BIT(&v_9, 3);
    }
    l_14[a_0/*1*/] = OBJECT::CREATE_PICKUP_ROTATE(${pickup_armour_standard}, sub_39fa(a_0, 0), a_1, v_9, -1, 2, 1, 0);
    OBJECT::SET_PICKUP_REGENERATION_TIME(l_14[a_0/*1*/], 600000);
    if (a_5) {
        INTERIOR::ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(l_14[a_0/*1*/], sub_39b1(a_0));
    }
}

auto sub_39b1(auto a_0) {
    switch (a_0) {
    case 28:
        return "PH_LOBBY_ROOM";
        break;
    case 39:
        return "V_FIB03_atr_off2";
        break;
    case 41:
        return "GtaMloRoomTun2";
        break;
    default:
        return "";
        break;
    }
    return "";
}

auto<3> sub_39fa(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        return {473.1828918457031, -2643.183837890625, 4.7209 };
        break;
    case 1:
        if (a_1 == 1) {
            return {291.41, -2090.78, 16.29 };
        } else { 
            return {289.2062072753906, -2091.220947265625, 16.023399353027344 };
        }
        break;
    case 2:
        if (a_1 == 1) {
            return {1173.8392333984375, -1499.78076171875, 33.848751068115234 };
        } else { 
            return {1173.5655517578125, -1495.7628173828125, 34.112098693847656 };
        }
        break;
    case 3:
        if (a_1 == 1) {
            return {-461.71392822265625, -1699.201904296875, 17.851219177246094 };
        } else { 
            return {-462.0, -1701.0, 18.8 };
        }
        break;
    case 4:
        return {-1384.6275634765625, -521.0416259765625, 30.084 };
        break;
    case 5:
        return {-521.5692138671875, -601.753173828125, 29.44820022583 };
        break;
    case 6:
        return {-664.5, 165.4552, 58.38209915161133 };
        break;
    case 7:
        return {329.3609, -190.59860229492188, 53.2262 };
        break;
    case 8:
        if (a_1 == 1) {
            return {-477.44, 1052.99, 39.81 };
        } else { 
            return {-478.7744140625, -1051.0792236328125, 40.93 };
        }
        break;
    case 9:
        return {-1268.0711669921875, -1917.4075927734375, 4.8583 };
        break;
    case 10:
        return {-1221.907958984375, -2771.76220703125, 13.054499626159668 };
        break;
    case 11:
        return {-3088.668212890625, 652.962890625, 0.989 };
        break;
    case 12:
        if (a_1 == 1) {
            return {-629.3048095703125, 2036.066650390625, 157.33070373535156 };
        } else { 
            return {-627.2166137695312, 2035.031982421875, 157.55850219726562 };
        }
        break;
    case 13:
        if (a_1 == 1) {
            return {-2071.902587890625, 3411.504150390625, 30.364139556884766 };
        } else { 
            return {-2048.483154296875, 3406.162353515625, 31.1504 };
        }
        break;
    case 14:
        return {-424.0321044921875, 4012.76708984375, 80.47440338134766 };
        break;
    case 15:
        return {1983.1, 5174.5, 47.6 };
        break;
    case 16:
        if (a_1 == 1) {
            return {2341.1, 2576.0, 45.7 };
        } else { 
            return {2340.169921875, 2573.889892578125, 45.77 };
        }
        break;
    case 17:
        if (a_1 == 1) {
            return {1663.9, -25.919450759887695, 172.77474975585938 };
        } else { 
            return {1663.9599609375, -24.11, 172.7747039794922 };
        }
        break;
    case 18:
        if (a_1 == 1) {
            return {2614.45068359375, 1695.1270751953125, 26.599069595336914 };
        } else { 
            return {2617.729, 1693.416748046875, 30.8743 };
        }
        break;
    case 19:
        if (a_1 == 1) {
            return {187.31, 1545.16, 314.07 };
        } else { 
            return {-187.03379821777344, 1555.6766357421875, 321.24310302734375 };
        }
        break;
    case 20:
        if (a_1 == 1) {
            return {859.5025024414062, 2426.03955078125, 53.1851692199707 };
        } else { 
            return {868.75732421875, 2423.5361328125, 60.89419937133789 };
        }
        break;
    case 21:
        if (a_1 == 1) {
            return {-1822.0750732421875, 805.7813720703125, 137.72650146484375 };
        } else { 
            return {-1822.9666748046875, 803.814697265625, 138.2005 };
        }
        break;
    case 22:
        if (a_1 == 1) {
            return {-1852.922119140625, 2054.419677734375, 139.9840545654297 };
        } else { 
            return {-1851.6282958984375, 2053.8359375, 139.9841 };
        }
        break;
    case 23:
        if (a_1 == 1) {
            return {-1075.514892578125, 4898.49658203125, 213.27674865722656 };
        } else { 
            return {-1070.650634765625, 4898.93359375, 213.27520751953125 };
        }
        break;
    case 24:
        if (a_1 == 1) {
            return {1301.56, 4306.6, 36.39 };
        } else { 
            return {1300.1, 4308.1, 37.3 };
        }
        break;
    case 25:
        if (a_1 == 1) {
            return {-436.44, 5983.5, 30.49 };
        } else { 
            return {-437.94, 5985.04, 31.29 };
        }
        break;
    case 26:
        if (a_1 == 1) {
            return {1840.5687255859375, 3693.770263671875, 33.2668 };
        } else { 
            return {1838.5770263671875, 3692.028076171875, 33.6171989440918 };
        }
        break;
    case 27:
        return {533.1, 23.8, 70.6 };
        break;
    case 28:
        if (a_1 == 1) {
            return {445.8299865722656, -986.47998046875, 29.69 };
        } else { 
            return {446.4, -988.5, 29.77 };
        }
        break;
    case 29:
        return {-1119.4976806640625, -847.3370971679688, 18.6886 };
        break;
    case 30:
        return {391.2, -1603.9, 28.38 };
        break;
    case 31:
        return {890.8, 2386.2, 13.399999999999999 };
        break;
    case 32:
        if (a_1 == 1) {
            return {282.75, 953.0499877929688, 209.95 };
        } else { 
            return {284.7, 954.2, 210.15139770507812 };
        }
        break;
    case 33:
        return {-2003.114501953125, 544.7548828125, 114.50769805908203 };
        break;
    case 34:
        if (a_1 == 1) {
            return {-397.5785827636719, 1127.3531494140625, 321.7291259765625 };
        } else { 
            return {-386.8739013671875, 1142.419677734375, 321.5892028808594 };
        }
        break;
    case 35:
        return {-1521.811279296875, 1560.2010498046875, 106.93920135498047 };
        break;
    case 36:
        return {1391.9453125, 3616.65478515625, 37.925899505615234 };
        break;
    case 37:
        if (a_1 == 1) {
            return {45.37, -1911.449951171875, 20.79 };
        } else { 
            return {40.5177, -1910.72705078125, 20.9706 };
        }
        break;
    case 38:
        if (a_1 == 1) {
            return {68.14, 3749.360107421875, 38.73 };
        } else { 
            return {70.37860107421875, 3755.60546875, 38.74869918823242 };
        }
        break;
    case 39:
        return {119.45, -755.2899780273438, 258.15 };
        break;
    case 40:
        if (a_1 == 1) {
            return {156.35, 1192.1, 28.37 };
        } else { 
            return {160.4134063720703, 1191.6999999999998, 28.87 };
        }
        break;
    case 41:
        return {23.92959976196289, -633.9205932617188, 6.5084 };
        break;
    case 42:
        if (a_1 == 1) {
            return {31.67, 6542.77978515625, 30.44 };
        } else { 
            return {30.9162, 6546.791015625, 30.405799865722656 };
        }
        break;
    case 43:
        if (a_1) {
            return {1333.056640625, 4381.27783203125, 43.3703 };
        } else { 
            return {1331.3548583984375, 4392.88720703125, 44.012 };
        }
        break;
    case 44:
        if (a_1 == 1) {
            return {-1147.31, 4939.27, 221.27 };
        } else { 
            return {-1149.391845703125, 4938.77099609375, 221.36819458 };
        }
        break;
    }
    return {0.0, 0.0, 0.0 };
}

void sub_4189() {
    sub_81e();
    sub_7ec();
    sub_7ba();
    sub_788();
    if (l_114) {
        sub_750();
    }
    if (l_118) {
        sub_719();
    }
    if (l_11B) {
        sub_6e2();
    }
    SCRIPT::TERMINATE_THIS_THREAD();
}