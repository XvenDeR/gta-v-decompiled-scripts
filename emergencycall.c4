// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_14 = "NULL";
    l_15 = 0.0;
    l_19 = -0.0375;
    l_1A = 0.17;
    l_1C = 3;
    l_1F = 80.0;
    l_20 = 140.0;
    l_21 = 180.0;
    l_27 = 1;
    l_28 = 65;
    l_29 = 49;
    l_2A = 64;
    if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(11)) {
        l_2B = 5;
    }
    while (1) {
        SYSTEM::WAIT(0);
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            switch (l_2B) {
            case 0:
                sub_2b7();
                break;
            case 1:
                break;
            case 2:
                sub_2a0();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (GAMEPLAY::CREATE_INCIDENT_WITH_ENTITY(7, PLAYER::PLAYER_PED_ID(), 2, 3.0, &l_31)) {
                        l_30 = GAMEPLAY::GET_GAME_TIMER();
                        l_2B = 5;
                    }
                } else if (GAMEPLAY::CREATE_INCIDENT(7, l_2D, 2, 3.0, &l_31)) {
                    l_30 = GAMEPLAY::GET_GAME_TIMER();
                    l_2B = 5;
                }
                break;
            case 3:
                sub_2a0();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (GAMEPLAY::CREATE_INCIDENT_WITH_ENTITY(5, PLAYER::PLAYER_PED_ID(), 2, 3.0, &l_31)) {
                        l_30 = GAMEPLAY::GET_GAME_TIMER();
                        l_2B = 5;
                    }
                } else if (GAMEPLAY::CREATE_INCIDENT(5, l_2D, 2, 3.0, &l_31)) {
                    l_30 = GAMEPLAY::GET_GAME_TIMER();
                    l_2B = 5;
                }
                break;
            case 4:
                sub_2a0();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (GAMEPLAY::CREATE_INCIDENT_WITH_ENTITY(3, PLAYER::PLAYER_PED_ID(), 4, 3.0, &l_31)) {
                        l_30 = GAMEPLAY::GET_GAME_TIMER();
                        l_2B = 5;
                    }
                } else if (GAMEPLAY::CREATE_INCIDENT(3, l_2D, 4, 3.0, &l_31)) {
                    if ((g_15780._f166 == GAMEPLAY::GET_HASH_KEY("AGENCY_PREP_1")) || ((SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(GAMEPLAY::GET_HASH_KEY("agency_prep1")) > 0) && sub_275(0))) {
                        g_15780._f166 = GAMEPLAY::GET_HASH_KEY("AHP1_TRUCKCALLED");
                    } else if (sub_249(67) && (!sub_249(68))) {
                        g_1573A = 1;
                    }
                    l_30 = GAMEPLAY::GET_GAME_TIMER();
                    l_2B = 5;
                }
                break;
            case 5:
                if ((GAMEPLAY::GET_GAME_TIMER() > (l_30 + 60000)) || (!GAMEPLAY::IS_INCIDENT_VALID(l_31))) {
                    sub_237();
                } else if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                    if (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID())) {
                        if (GAMEPLAY::IS_INCIDENT_VALID(l_31)) {
                            GAMEPLAY::DELETE_INCIDENT(l_31);
                        }
                    }
                }
                break;
            }
        }
    }
}

void sub_237() {
    l_2B = 0;
    l_2C = 0;
    SCRIPT::TERMINATE_THIS_THREAD();
}

auto sub_249(auto a_0) {
    if ((a_0 == 94) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f14A[a_0/*6*/];
}

auto sub_275(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10FBD, 0);
}

void sub_2a0() {
    if (GAMEPLAY::GET_GAME_TIMER() > (l_30 + 30000)) {
        l_2B = 5;
    }
}

void sub_2b7() {
    switch (l_2C) {
    case 0:
        l_2C = 1;
        l_30 = GAMEPLAY::GET_GAME_TIMER();
        break;
    case 1:
        while (!sub_7db()) {
            SYSTEM::WAIT(0);
            if (sub_7d0() == 3) {
                l_2B = 3;
            }
            if (sub_7d0() == 4) {
                l_2B = 4;
            }
            if (sub_7d0() == 5) {
                l_2B = 2;
            }
            if (GAMEPLAY::GET_GAME_TIMER() > (l_30 + 30000)) {
                l_30 = GAMEPLAY::GET_GAME_TIMER();
                sub_66b(0);
            }
        }
        if (l_2B == 0) {
            l_2B = 5;
        }
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            sub_350(PLAYER::PLAYER_PED_ID(), &l_2D, &v_2);
        }
        l_30 = GAMEPLAY::GET_GAME_TIMER();
        break;
    }
}

void sub_350(auto a_0, auto a_1, auto a_2) {
    v_17 = 5.0;
    v_5 = 1;
    v_18 = 0;
    while (v_18 < 2) {
        switch (v_18) {
        case 0:
            PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), v_5, a_1, &v_15, &v_6, 5, 0x40400000, 0);
            PATHFIND::GET_CLOSEST_ROAD(a_1, 1.0, 1, &v_9, &v_C, &v_7, &v_8, &v_12, 0);
            if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), -3044.659912109375, 596.43, 6.58, 1) < 25.0) {
                a_1/*{3}*/ = {-3031.3798828125, 605.32, 6.86 };
            }
            v_F/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1) - ENTITY::GET_ENTITY_COORDS(a_0, 1);
            v_13 = GAMEPLAY::GET_HEADING_FROM_VECTOR_2D(v_F, v_F._f1);
            v_14 = v_15 + 180.0;
            if (v_14 > 360.0) {
                v_14 -= 360.0;
            }
            if (sub_5f6(v_13, v_15, 90.0)) {
                a_2 = v_15;
            } else { 
                a_2 = v_14;
            }
            if (v_12 < 0.0) {
                v_16 = 0.0;
            } else if (PATHFIND::_GET_IS_SLOW_ROAD_FLAG(PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_ID(a_1, 1, 1, 0x40400000, 0))) {
                v_16 = 0.0;
            } else { 
                v_16 = v_17 * __678_$BBDA792448DB5A89(v_6 / 2);
                if (v_16 == 0.0) {
                    v_16 += v_17;
                }
                if (v_6 == 5) {
                    v_16 += v_17;
                }
                if ((GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), 294.0, -895.0, 28.0, 1) < 25.0) || (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), -713.01, -819.64, 22.63, 1) < 25.0)) {
                    v_16 += 5.0;
                } else { 
                    v_16 += 3.75;
                }
                v_16 += v_12 / 2.0;
            }
            if (SYSTEM::VDIST(OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_1, a_2, v_16, 0.0, 0.0), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)) > SYSTEM::VDIST(OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_1, a_2, -v_16, 0.0, 0.0), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1))) {
                v_16 = -v_16;
            }
            a_1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_1, a_2, v_16, 0.0, 0.0);
            v_19 = WORLDPROBE::_CAST_3D_RAY_POINT_TO_POINT(a_1 + ((vector)(a_1._f2 + 4.5)), a_1 + ({0.5, 0.5, 4.5 }), 2.5, 1, 0, 4);
            v_18 += 1;
            break;
        case 1:
            if (v_5 <= 2) {
                if (WORLDPROBE::_GET_RAYCAST_RESULT(v_19, &v_1A, &v_1E, &v_1B, &v_21) == 2) {
                    if (v_1A != 0) {
                        if (v_1E._f2 > (a_1._f2 + 8.5)) {
                            v_18 += 1;
                        } else { 
                            v_5 += 1;
                            v_18 = 0;
                        }
                    } else { 
                        v_18 += 1;
                    }
                } else { }
            } else { 
                v_18 += 1;
            }
            break;
        case 2:
            break;
        }
    }
}

auto sub_5f6(auto a_0, auto a_1, auto a_2) {
    v_6 = a_1 - a_2;
    if (v_6 < 0.0) {
        v_6 += 360.0;
    }
    v_5 = a_1 + a_2;
    if (v_5 >= 360.0) {
        v_5 -= 360.0;
    }
    if (v_5 > v_6) {
        if ((a_0 < v_5) && (a_0 > v_6)) {
            return 1;
        }
    } else if ((a_0 < v_5) || (a_0 > v_6)) {
        return 1;
    }
    return 0;
}

void sub_66b(auto a_0) {
    if (g_38EB) {
        sub_702(0, 0);
    }
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8EC, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D60 = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 30);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 30);
    }
    if (!sub_6db()) {
        current_character._f1 = 3;
    }
}

auto sub_6db() {
    if ((current_character._f1 == 1) || (current_character._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_702(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_776(0)) {
            g_38EB = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_380E);
            }
            g_3805/*{3}*/ = g_3817[g_3816/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    } else if (g_38EB == 1) {
        g_38EB = 0;
        g_3805/*{3}*/ = g_381E[g_3816/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_380E);
        } else { 
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    }
}

auto sub_776(auto a_0) {
    if (a_0 == 1) {
        if (current_character._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (current_character._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

auto sub_7d0() {
    return g_4159;
}

auto sub_7db() {
    if (g_3D60 == 0) {
        return 1;
    } else { 
        return 0;
    }
}