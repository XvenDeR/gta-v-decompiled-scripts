// listener's C4 decompiler

void main() {
    l_2 = 1;
    l_3 = 134;
    l_4 = 134;
    l_5 = 1;
    l_6 = 1;
    l_7 = 1;
    l_8 = 134;
    l_9 = 1;
    l_A = 12;
    l_B = 12;
    l_E = 0.001;
    l_11 = -1;
    l_12 = 3;
    l_13 = "NULL";
    l_16 = 0.0;
    l_1A = -0.0375;
    l_1B = 0.17;
    l_1E = 80.0;
    l_1F = 140.0;
    l_20 = 180.0;
    l_28 = 1;
    l_29 = 65;
    l_2A = 49;
    l_2B = 64;
    l_33 = -0.05;
    l_34 = 0.9200000166893;
    l_35 = 1.94;
    l_36 = 2.99;
    l_37 = 3.7;
    l_60 = (0.05 + 0.275) - 0.009999999999999998;
    l_415 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(8000, 16000);
    l_468 = 0.001;
    l_4DB = 4.0;
    l_4DC = -98.0;
    l_4DD/*{3}*/ = {0.0, 0.0, 0.0 };
    l_88 = l_4FB;
    if (!GAMEPLAY::IS_BIT_SET(g_149411, 1)) {
        if (l_88 == 28) {
            GAMEPLAY::SET_BIT(&g_149411, 1);
        }
    }
    GAMEPLAY::SET_BIT(&g_16416._f514[l_88/*1*/], 16);
    sub_71919();
    sub_718a8(l_88);
    while (!sub_71886()) {
        SYSTEM::WAIT(0);
    }
    sub_715e9();
    sub_7021c(&g_2707D2);
    if (sub_701e0(1)) {
        l_8E = 1;
    }
    while (1) {
        SYSTEM::WAIT(0);
        CONTROLS::_7F4724035FDCA1DD(2);
        CONTROLS::_7F4724035FDCA1DD(0);
        if (l_4F9) {
            sub_6ff9d(1);
            l_4F9 = 0;
        }
        if (sub_6ff8c(l_88)) {
            if (!l_467) {
                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC) && (!PED::IS_PED_INJURED(l_B3._fC))) {
                    ENTITY::SET_ENTITY_CAN_BE_DAMAGED(l_B3._fC, 0);
                    l_467 = 1;
                }
            }
        } else if (l_467) {
            if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC) && (!PED::IS_PED_INJURED(l_B3._fC))) {
                ENTITY::SET_ENTITY_CAN_BE_DAMAGED(l_B3._fC, 1);
                l_467 = 0;
            }
        }
        sub_6ff57(&l_B3._fC);
        if (sub_6ff32(l_88) && (!sub_6fc86(&l_B3, l_88))) {
            if (sub_6fbe9(&l_B3)) {
                sub_6f603(&l_B3, &l_63._f3, 0, 0);
                sub_6ef04(&l_B3, &l_B3._f69);
                if (l_B3._f9) {
                    if (!sub_6eef4(l_B3)) {
                        sub_6ea07(&l_B3, &l_B3._f69, 0);
                    } else { 
                        sub_6e80a();
                    }
                }
                sub_6cdd3();
                sub_6cc69();
                sub_6cb13();
                sub_6ca3e();
                if (l_B3._f7 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    CONTROLS::DISABLE_CONTROL_ACTION(0, 44, 1);
                }
                switch (l_B3._fB) {
                case 0:
                    sub_6bc47();
                    break;
                case 1:
                    sub_6badd(0);
                    if (sub_6ba82(l_B3)) {
                        sub_6a667(l_B3, 0, 0);
                        sub_6a667(l_B3, 0, 1);
                    }
                    sub_6a612();
                    if (l_B3._fB == 2) {
                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            l_427[0/*1*/] = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(4000, 5000));
                            l_427[1/*1*/] = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 0);
                        } else { 
                            l_42A[0/*1*/] = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(4000, 5000);
                            l_42A[1/*1*/] = GAMEPLAY::GET_GAME_TIMER();
                        }
                        l_42F/*{3}*/ = {0.0, 0.0, 0.0 };
                        sub_69bb0();
                    }
                    break;
                case 2:
                    sub_69bb0();
                    sub_69aa5(&l_B3, &l_B3._f69);
                    break;
                case 3:
                    if (sub_6ba82(l_B3)) {
                        sub_6a667(l_B3, 0, 0);
                        sub_6a667(l_B3, 0, 1);
                    }
                    sub_698f1();
                    sub_68747();
                    sub_686bc();
                    break;
                case 4:
                    sub_12f5a();
                    sub_69aa5(&l_B3, &l_B3._f69);
                    break;
                case 5:
                    l_B3._fB = 1;
                    break;
                }
            }
        } else { 
            sub_4e74(0);
        }
        if (sub_4a2d(&l_B3)) {
            sub_4803();
        }
        sub_36f();
    }
}

void sub_36f() {
    if (l_B3._f9 && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        l_67[PLAYER::PLAYER_ID()/*1*/] = g_16416._f514[l_B3/*1*/];
        if (l_B3._f342) {
            if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_B3._f343)) {
                if (!GAMEPLAY::IS_BIT_SET(g_16416._f54F, 26)) {
                    GAMEPLAY::SET_BIT(&g_16416._f54F, 26);
                }
                if (((!GAMEPLAY::IS_BIT_SET(g_16416._f514[l_B3/*1*/], 0)) && (!GAMEPLAY::IS_BIT_SET(g_16416._f514[l_B3/*1*/], 5))) && ((!ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) || PED::IS_PED_INJURED(l_B3._fC))) {
                    for (v_2 = 0; v_2 < 32; v_2 += 1) {
                        if (sub_47bf(PLAYER::INT_TO_PLAYERINDEX(v_2), 1, 1)) {
                            if (GAMEPLAY::IS_BIT_SET(l_67[v_2/*1*/], 5)) {
                                GAMEPLAY::CLEAR_BIT(&g_16416._f54F, 26);
                                GAMEPLAY::SET_BIT(&g_16416._f54F, 28);
                                v_2 = 33;
                            }
                        }
                    }
                } else { 
                    GAMEPLAY::CLEAR_BIT(&g_16416._f54F, 26);
                    GAMEPLAY::SET_BIT(&g_16416._f54F, 28);
                }
                if (g_180237) {
                    v_3/*{3}*/ = sub_42b9(l_B3, 0);
                    v_6 = OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(v_3, 25.0, ${hei_prop_heist_binbag}, 0, 0, 1);
                    if (ENTITY::DOES_ENTITY_EXIST(v_6)) {
                        v_7 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(v_3, sub_3f10(l_B3));
                        v_8 = INTERIOR::GET_INTERIOR_FROM_ENTITY(v_6);
                        if ((v_7 != 0) && (v_7 == v_8)) {
                            GAMEPLAY::CLEAR_BIT(&g_16416._f54F, 26);
                            GAMEPLAY::SET_BIT(&g_16416._f54F, 28);
                        }
                    }
                }
                if (g_258209._f121C) {
                    GAMEPLAY::CLEAR_BIT(&g_16416._f54F, 26);
                    GAMEPLAY::SET_BIT(&g_16416._f54F, 28);
                }
                l_B3._f342 = 0;
            }
        } else { 
            l_B3._f343 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 2000);
            l_B3._f342 = 1;
        }
        if (GAMEPLAY::IS_BIT_SET(g_16416._f54F, 26)) {
            if (!GAMEPLAY::IS_BIT_SET(g_16416._f54F, 27)) {
                if (sub_3741(l_B3)) {
                    sub_5ec(l_B3, 1, 0, 1);
                    GAMEPLAY::SET_BIT(&g_16416._f54F, 27);
                    if (GAMEPLAY::IS_BIT_SET(g_16416._f54F, 28)) {
                        GAMEPLAY::CLEAR_BIT(&g_16416._f54F, 28);
                    }
                }
            } else { }
        } else if (!GAMEPLAY::IS_BIT_SET(g_16416._f54F, 28)) {
            if (sub_3741(l_B3)) {
                sub_5ec(l_B3, 0, 0, 1);
                GAMEPLAY::SET_BIT(&g_16416._f54F, 28);
                if (GAMEPLAY::IS_BIT_SET(g_16416._f54F, 27)) {
                    GAMEPLAY::CLEAR_BIT(&g_16416._f54F, 27);
                }
            }
        }
    } else { }
}

void sub_5ec(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return ;
    }
    if (a_1) {
        v_6 = 1;
        v_7 = 0;
    } else { 
        v_6 = 0;
        v_7 = 1;
    }
    if (a_2) {
        if (a_1) {
            v_6 = 4;
            v_7 = 3;
        } else { 
            v_6 = 3;
            v_7 = 4;
        }
    }
    for (v_8 = 0; v_8 < 2; v_8 += 1) {
        v_9 = sub_32c0(a_0, v_8);
        if (v_9 != 226) {
            v_A/*{7}*/ = sub_6b7(v_9);
            if (!OBJECT::_DOES_DOOR_EXIST(v_A._f5)) {
                OBJECT::ADD_DOOR_TO_SYSTEM(v_A._f5, v_A._f3, v_A, 0, 1, 0);
            }
            if (OBJECT::_DOES_DOOR_EXIST(v_A._f5)) {
                if (NETWORK::NETWORK_HAS_CONTROL_OF_DOOR(v_A._f5)) {
                    if (OBJECT::_160AA1B32F6139B8(v_A._f5) == v_7) {
                        OBJECT::_6BAB9442830C7F53(v_A._f5, v_6, a_3, 1);
                    }
                } else { 
                    NETWORK::NETWORK_REQUEST_CONTROL_OF_DOOR(v_A._f5);
                }
            }
        } else { }
    }
}

auto<7> sub_6b7(auto a_0) {
    switch (a_0) {
    case 0:
        v_3._f3 = ${v_ilev_bs_door};
        v_3/*{3}*/ = {133.0, -1711.0, 29.0 };
        v_3._f5 = 0x6b918ea1;
        break;
    case 1:
        v_3._f3 = ${v_ilev_bs_door};
        v_3/*{3}*/ = {-1287.8568115234375, -1115.7415771484375, 7.1401 };
        v_3._f5 = 0x53a940ab;
        break;
    case 2:
        v_3._f3 = ${v_ilev_bs_door};
        v_3/*{3}*/ = {1932.9517822265625, 3725.153564453125, 32.9944 };
        v_3._f5 = 0x86ef4558;
        break;
    case 3:
        v_3._f3 = ${v_ilev_bs_door};
        v_3/*{3}*/ = {1207.8731689453125, -470.06298828125, 66.358 };
        v_3._f5 = 0x6b1985f9;
        break;
    case 4:
        v_3._f3 = ${v_ilev_bs_door};
        v_3/*{3}*/ = {-29.869199752807617, -148.1571044921875, 57.22650146484375 };
        v_3._f5 = 0x5bb2ed2;
        break;
    case 5:
        v_3._f3 = ${v_ilev_bs_door};
        v_3/*{3}*/ = {-280.78509521484375, 6232.78173828125, 31.8455 };
        v_3._f5 = 0xef3f0b86;
        break;
    case 6:
        v_3._f3 = ${v_ilev_hd_door_l};
        v_3/*{3}*/ = {-824.0, -187.0, 38.0 };
        v_3/*{3}*/ = {-823.2, -187.08309936523438, 37.819 };
        v_3._f5 = 0xaec2a1a;
        break;
    case 7:
        v_3._f3 = ${v_ilev_hd_door_r};
        v_3/*{3}*/ = {-823.0, -188.0, 38.0 };
        v_3/*{3}*/ = {-822.4442138671875, -188.39239501953125, 37.819 };
        v_3._f5 = 0x2d336ea8;
        break;
    case 8:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {82.318603515625, -1392.7518310546875, 29.5261 };
        v_3._f5 = 0xc04458cf;
        break;
    case 9:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {82.318603515625, -1390.47583, 29.5261 };
        v_3._f5 = 0x75554302;
        break;
    case 10:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {1686.983154296875, 4821.74072265625, 42.2131 };
        v_3._f5 = 0x8039a343;
        break;
    case 11:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {1687.28173828125, 4819.484375, 42.2131 };
        v_3._f5 = 0xac597b82;
        break;
    case 12:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {418.6369934082031, -806.4569702148438, 29.6396 };
        v_3._f5 = 0x8bc342ba;
        break;
    case 13:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {418.6369934082031, -808.7329711914062, 29.6396 };
        v_3._f5 = 0x49173d5f;
        break;
    case 14:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {-1096.6612548828125, 2705.4458, 19.25779914855957 };
        v_3._f5 = 0x4104cc95;
        break;
    case 15:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {-1094.9652099609375, 2706.963623046875, 19.25779914855957 };
        v_3._f5 = 0x357c3584;
        break;
    case 16:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {1196.824951171875, 2703.220947265625, 38.3726 };
        v_3._f5 = 0x4152d190;
        break;
    case 17:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {1199.1, 2703.220947265625, 38.3726 };
        v_3._f5 = 0x2fcd2e89;
        break;
    case 18:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {-818.7642211914062, -1079.54443359375, 11.478099822998047 };
        v_3._f5 = 0xf5fc937d;
        break;
    case 19:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {-816.793212890625, -1078.406494140625, 11.478099822998047 };
        v_3._f5 = 0x8c9dc0bd;
        break;
    case 20:
        v_3._f3 = ${v_ilev_cs_door01};
        v_3/*{3}*/ = {-0.0564, 6517.4609375, 32.027801513671875 };
        v_3._f5 = 0x70b93241;
        break;
    case 21:
        v_3._f3 = ${v_ilev_cs_door01_r};
        v_3/*{3}*/ = {1.7253, 6515.91357421875, 32.027801513671875 };
        v_3._f5 = 0x49b4e441;
        break;
    case 22:
        v_3._f3 = ${v_ilev_clothmiddoor};
        v_3/*{3}*/ = {-1201.4349365234375, -776.8566284179688, 17.9918 };
        v_3._f5 = 0x7610bded;
        break;
    case 23:
        v_3._f3 = ${v_ilev_clothmiddoor};
        v_3/*{3}*/ = {617.2457885742188, 2751.022216796875, 42.7578010559082 };
        v_3._f5 = 0x50a152bd;
        break;
    case 24:
        v_3._f3 = ${v_ilev_clothmiddoor};
        v_3/*{3}*/ = {127.82, -211.827392578125, 55.2275 };
        v_3._f5 = 0xde3b10ab;
        break;
    case 25:
        v_3._f3 = ${v_ilev_clothmiddoor};
        v_3/*{3}*/ = {-3167.75, 1055.5357666015625, 21.532899856567383 };
        v_3._f5 = 0x4c93b88a;
        break;
    case 26:
        v_3._f3 = ${v_ilev_ch_glassdoor};
        v_3/*{3}*/ = {-716.6754150390625, 155.42, 37.6749 };
        v_3._f5 = 0xf9b8b5a;
        break;
    case 27:
        v_3._f3 = ${v_ilev_ch_glassdoor};
        v_3/*{3}*/ = {-715.6154174804688, -157.256103515625, 37.6749 };
        v_3._f5 = 0xcf90621;
        break;
    case 28:
        v_3._f3 = ${v_ilev_ch_glassdoor};
        v_3/*{3}*/ = {-157.0924072265625, -306.4413146972656, 39.994 };
        v_3._f5 = 0x6b5b357a;
        break;
    case 29:
        v_3._f3 = ${v_ilev_ch_glassdoor};
        v_3/*{3}*/ = {-156.40220642089844, -304.4366149902344, 39.994 };
        v_3._f5 = 0x817161a6;
        break;
    case 30:
        v_3._f3 = ${v_ilev_ch_glassdoor};
        v_3/*{3}*/ = {-1454.7818603515625, -231.79269409179688, 50.05649948120117 };
        v_3._f5 = 0x4e3e0f3d;
        break;
    case 31:
        v_3._f3 = ${v_ilev_ch_glassdoor};
        v_3/*{3}*/ = {-1456.2, -233.36819458, 50.05649948120117 };
        v_3._f5 = 0xdc882bd3;
        break;
    case 32:
        v_3._f3 = ${v_ilev_ta_door};
        v_3/*{3}*/ = {321.81, 178.36, 103.68 };
        v_3._f5 = 0xf030709f;
        break;
    case 33:
        v_3._f3 = ${v_ilev_ml_door1};
        v_3/*{3}*/ = {1859.89, 3749.79, 33.18 };
        v_3._f5 = 0xb36a7a60;
        break;
    case 34:
        v_3._f3 = ${v_ilev_ml_door1};
        v_3/*{3}*/ = {-289.1752014160156, 6199.1123046875, 31.637 };
        v_3._f5 = 0x1204d709;
        break;
    case 35:
        v_3._f3 = ${v_ilev_ta_door};
        v_3/*{3}*/ = {-1155.4541015625, -1424.0079345703125, 5.0461 };
        v_3._f5 = 0xd75b3ec1;
        break;
    case 36:
        v_3._f3 = ${v_ilev_ta_door};
        v_3/*{3}*/ = {1321.28564453125, -1650.5966796875, 52.36629867553711 };
        v_3._f5 = 0x83a1acac;
        break;
    case 37:
        v_3._f3 = ${v_ilev_ta_door};
        v_3/*{3}*/ = {-3167.788818359375, 1074.766845703125, 20.9209 };
        v_3._f5 = 0xa6cef378;
        break;
    case 38:
        v_3._f3 = ${v_ilev_mm_doorm_l};
        v_3/*{3}*/ = {-817.0, 179.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x8301b653;
        break;
    case 39:
        v_3._f3 = ${v_ilev_mm_doorm_r};
        v_3/*{3}*/ = {-816.0, 178.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x813232b0;
        break;
    case 40:
        v_3._f3 = ${prop_ld_garaged_01};
        v_3/*{3}*/ = {-815.0, 186.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x899722d3;
        v_3._f6 = 6.5;
        break;
    case 41:
        v_3._f3 = ${prop_bh1_48_backdoor_l};
        v_3/*{3}*/ = {-797.0, 177.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x2e413abc;
        break;
    case 42:
        v_3._f3 = ${prop_bh1_48_backdoor_r};
        v_3/*{3}*/ = {-795.0, 178.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x29a1143b;
        break;
    case 43:
        v_3._f3 = ${prop_bh1_48_backdoor_l};
        v_3/*{3}*/ = {-793.0, 181.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x1fe49e03;
        break;
    case 44:
        v_3._f3 = ${prop_bh1_48_backdoor_r};
        v_3/*{3}*/ = {-794.0, 183.0, 73.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x1c4af98f;
        break;
    case 45:
        v_3._f3 = ${prop_bh1_48_gate_1};
        v_3/*{3}*/ = {-849.0, 179.0, 70.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x8a139784;
        break;
    case 46:
        v_3._f3 = ${v_ilev_mm_windowwc};
        v_3/*{3}*/ = {-802.7332763671875, 167.5041046142578, 77.5823974609375 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x9aa652e9;
        break;
    case 47:
        v_3._f3 = ${v_ilev_fa_frontdoor};
        v_3/*{3}*/ = {-14.0, -1441.0, 31.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x249850a4;
        break;
    case 48:
        v_3._f3 = ${v_ilev_fh_frntdoor};
        v_3/*{3}*/ = {-15.0, -1427.0, 31.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0xefc0e6f6;
        break;
    case 49:
        v_3._f3 = ${prop_sc1_21_g_door_01};
        v_3/*{3}*/ = {-25.28, -1431.06, 30.84 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0xc1f88b66;
        break;
    case 50:
        v_3._f3 = ${v_ilev_fh_frontdoor};
        v_3/*{3}*/ = {7.52, 539.53, 176.17999999999998 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x479926fe;
        break;
    case 51:
        v_3._f3 = ${v_ilev_trevtraildr};
        v_3/*{3}*/ = {1973.0, 3815.0, 34.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0x677ec742;
        break;
    case 52:
        v_3._f3 = ${prop_cs4_10_tr_gd_01};
        v_3/*{3}*/ = {1972.787353515625, 3824.5537109375, 32.583099365234375 };
        v_3._f5 = 0x4265a13e;
        v_3._f6 = 12.0;
        break;
    case 53:
        v_3._f3 = ${v_ilev_trev_doorfront};
        v_3/*{3}*/ = {-1150.0, -1521.0, 11.0 };
        GAMEPLAY::SET_BIT(&v_3._f4, 0);
        v_3._f5 = 0xaed75f6a;
        break;
    }
    switch (a_0) {
    case 54:
        v_3._f3 = ${prop_com_ls_door_01};
        v_3/*{3}*/ = {-1145.9, -1991.14, 14.18 };
        v_3._f5 = 0x90799222;
        v_3._f6 = 25.0;
        break;
    case 55:
        v_3._f3 = ${prop_id2_11_gdoor};
        v_3/*{3}*/ = {723.12, -1088.8299560546875, 23.28 };
        v_3._f5 = 0x459f7c6b;
        v_3._f6 = 25.0;
        break;
    case 56:
        v_3._f3 = ${prop_com_ls_door_01};
        v_3/*{3}*/ = {356.09, -134.77, 40.01 };
        v_3._f5 = 0x47e780ff;
        v_3._f6 = 25.0;
        break;
    case 57:
        v_3._f3 = ${v_ilev_carmod3door};
        v_3/*{3}*/ = {108.8501968383789, 6617.87646484375, 32.673 };
        v_3._f5 = 0xc21e9e89;
        v_3._f6 = 25.0;
        break;
    case 58:
        v_3._f3 = ${v_ilev_carmod3door};
        v_3/*{3}*/ = {114.32060241699219, 6623.22607421875, 32.7160987854 };
        v_3._f5 = 0x478da961;
        v_3._f6 = 25.0;
        break;
    case 59:
        v_3._f3 = ${v_ilev_carmod3door};
        v_3/*{3}*/ = {1182.305419921875, 2645.2421875, 38.806999999999995 };
        v_3._f5 = 0x52e90a75;
        v_3._f6 = 25.0;
        break;
    case 60:
        v_3._f3 = ${v_ilev_carmod3door};
        v_3/*{3}*/ = {1174.6541748046875, 2645.2421875, 38.68259811401367 };
        v_3._f5 = 0xe4a12ddf;
        v_3._f6 = 25.0;
        break;
    case 225:
        v_3._f3 = 0xe684e276;
        v_3/*{3}*/ = {-205.7, -1310.691650390625, 30.2957 };
        v_3._f5 = 0xeec9cec1;
        v_3._f6 = 25.0;
        break;
    case 61:
        v_3._f3 = ${v_ilev_janitor_frontdoor};
        v_3/*{3}*/ = {-107.5401, -9.025799751281738, 70.66960144042969 };
        v_3._f5 = 0xf0f6743c;
        break;
    case 62:
        v_3._f3 = ${v_ilev_ss_door8};
        v_3/*{3}*/ = {717.0, -975.0, 25.0 };
        v_3._f5 = 0xcec320e2;
        break;
    case 63:
        v_3._f3 = ${v_ilev_ss_door7};
        v_3/*{3}*/ = {719.0, -975.0, 25.0 };
        v_3._f5 = 0x2d865e67;
        break;
    case 64:
        v_3._f3 = ${v_ilev_ss_door02};
        v_3/*{3}*/ = {709.9813232421875, -963.5311279296875, 30.54529953 };
        v_3._f5 = 0xcbdad417;
        break;
    case 65:
        v_3._f3 = ${v_ilev_ss_door03};
        v_3/*{3}*/ = {709.9893798828125, -960.66748046875, 30.54529953 };
        v_3._f5 = 0xa7bc7a3b;
        break;
    case 66:
        v_3._f3 = ${v_ilev_store_door};
        v_3/*{3}*/ = {707.8046264648438, -962.4564208984375, 30.54529953 };
        v_3._f5 = 0x38968f6d;
        break;
    case 67:
        v_3._f3 = ${v_ilev_ml_door1};
        v_3/*{3}*/ = {1393.0, 3599.0, 35.0 };
        v_3._f5 = 0xca5ce57;
        break;
    case 68:
        v_3._f3 = ${v_ilev_ml_door1};
        v_3/*{3}*/ = {1395.0, 3600.0, 35.0 };
        v_3._f5 = 0xf8762600;
        break;
    case 69:
        v_3._f3 = ${v_ilev_ss_door04};
        v_3/*{3}*/ = {1387.0, 3614.0, 39.0 };
        v_3._f5 = 0x693e01a8;
        break;
    case 70:
        v_3._f3 = ${prop_ron_door_01};
        v_3/*{3}*/ = {1083.547119140625, -1975.4354248046875, 31.6222 };
        v_3._f5 = 0x2f397905;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 71:
        v_3._f3 = ${prop_ron_door_01};
        v_3/*{3}*/ = {1065.237060546875, -2006.0791015625, 32.2328987121582 };
        v_3._f5 = 0x2192ddb8;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 72:
        v_3._f3 = ${prop_ron_door_01};
        v_3/*{3}*/ = {1085.306884765625, -2018.561279296875, 41.62889862060547 };
        v_3._f5 = 0xd4aaf76d;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 73:
        v_3._f3 = ${v_ilev_bank4door02};
        v_3/*{3}*/ = {-111.0, 6464.0, 32.0 };
        v_3._f5 = 0xa9f8b6b;
        break;
    case 74:
        v_3._f3 = ${v_ilev_bank4door01};
        v_3/*{3}*/ = {-110.0, 6462.0, 32.0 };
        v_3._f5 = 0x6e67d2fa;
        break;
    case 75:
        v_3._f3 = ${v_ilev_lester_doorfront};
        v_3/*{3}*/ = {1274.0, -1721.0, 55.0 };
        v_3._f5 = 0xde5262e2;
        break;
    case 76:
        v_3._f3 = ${v_ilev_lester_doorveranda};
        v_3/*{3}*/ = {1271.89, -1707.5699462890625, 53.79 };
        v_3._f5 = 0x621e986a;
        break;
    case 77:
        v_3._f3 = ${v_ilev_lester_doorveranda};
        v_3/*{3}*/ = {1270.77, 1708.1, 53.75 };
        v_3._f5 = 0xc2fec8e;
        break;
    case 78:
        v_3._f3 = ${v_ilev_deviantfrontdoor};
        v_3/*{3}*/ = {-127.5, -1456.18, 37.94 };
        v_3._f5 = 0x7a03d0ca;
        break;
    case 79:
        v_3._f3 = ${prop_com_gar_door_01};
        v_3/*{3}*/ = {483.56, -1316.0799560546875, 32.18 };
        v_3._f5 = 0x548188cd;
        break;
    case 80:
        v_3._f3 = ${v_ilev_cs_door};
        v_3/*{3}*/ = {483.0, -1312.0, 29.0 };
        v_3._f5 = 0xf9a7537e;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 81:
        v_3._f3 = ${prop_strip_door_01};
        v_3/*{3}*/ = {128.0, -1299.0, 29.0 };
        v_3._f5 = 0x6db3f686;
        break;
    case 82:
        v_3._f3 = ${prop_magenta_door};
        v_3/*{3}*/ = {96.0, -1285.0, 29.0 };
        v_3._f5 = 0x526c3ff3;
        break;
    case 83:
        v_3._f3 = ${prop_motel_door_09};
        v_3/*{3}*/ = {549.0, -1773.0, 34.0 };
        v_3._f5 = 0xddc38ef;
        break;
    case 84:
        v_3._f3 = ${v_ilev_gangsafedoor};
        v_3/*{3}*/ = {974.0, -1839.0, 36.0 };
        v_3._f5 = 0x4b88a611;
        GAMEPLAY::SET_BIT(&v_3._f4, 3);
        break;
    case 85:
        v_3._f3 = ${v_ilev_gangsafedoor};
        v_3/*{3}*/ = {977.0, -105.0, 75.0 };
        v_3._f5 = 0x8ebcab6d;
        GAMEPLAY::SET_BIT(&v_3._f4, 3);
        break;
    case 86:
        v_3._f3 = ${v_ilev_ra_door1_l};
        v_3/*{3}*/ = {1391.0, 1163.0, 114.0 };
        v_3._f5 = 0x7bda4229;
        break;
    case 87:
        v_3._f3 = ${v_ilev_ra_door1_r};
        v_3/*{3}*/ = {1391.0, 1161.0, 114.0 };
        v_3._f5 = 0x82b4d16a;
        break;
    case 88:
        v_3._f3 = ${prop_cs6_03_door_l};
        v_3/*{3}*/ = {1396.0, 1143.0, 115.0 };
        v_3._f5 = 0x8e67e744;
        break;
    case 89:
        v_3._f3 = ${prop_cs6_03_door_r};
        v_3/*{3}*/ = {1396.0, 1141.0, 115.0 };
        v_3._f5 = 0x94e375c7;
        break;
    case 90:
        v_3._f3 = ${v_ilev_ra_door1_l};
        v_3/*{3}*/ = {1409.0, 1146.0, 114.0 };
        v_3._f5 = 0xfc4a5de1;
        break;
    case 91:
        v_3._f3 = ${v_ilev_ra_door1_r};
        v_3/*{3}*/ = {1409.0, 1148.0, 114.0 };
        v_3._f5 = 0x990d333d;
        break;
    case 92:
        v_3._f3 = ${v_ilev_ra_door1_l};
        v_3/*{3}*/ = {1408.0, 1159.0, 114.0 };
        v_3._f5 = 0xde752237;
        break;
    case 93:
        v_3._f3 = ${v_ilev_ra_door1_r};
        v_3/*{3}*/ = {1408.0, 1161.0, 114.0 };
        v_3._f5 = 0x75cdecbf;
        break;
    case 94:
        v_3._f3 = ${prop_gar_door_01};
        v_3/*{3}*/ = {-1067.0, -1666.0, 5.0 };
        v_3._f5 = 0x4feeab87;
        break;
    case 95:
        v_3._f3 = ${prop_gar_door_02};
        v_3/*{3}*/ = {-1065.0, -1669.0, 5.0 };
        v_3._f5 = 0x9ec1c92c;
        break;
    case 96:
        v_3._f3 = ${prop_map_door_01};
        v_3/*{3}*/ = {-1104.66, -1638.47998046875, 4.68 };
        v_3._f5 = 0x956610d7;
        break;
    case 97:
        v_3._f3 = ${v_ilev_fib_door1};
        v_3/*{3}*/ = {31.72, -1101.8499755859375, 26.57 };
        v_3._f5 = 0x92d8c222;
        break;
    case 98:
        v_3._f3 = ${v_ilev_tort_door};
        v_3/*{3}*/ = {134.39999999999998, -2204.1, 7.52 };
        v_3._f5 = 0x39739866;
        break;
    case 99:
        v_3._f3 = ${v_ilev_bl_shutter2};
        v_3/*{3}*/ = {3628.0, 3747.0, 28.0 };
        v_3._f5 = 0x69af302c;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 100:
        v_3._f3 = ${v_ilev_bl_shutter2};
        v_3/*{3}*/ = {3621.0, 3752.0, 28.0 };
        v_3._f5 = 0xb099be68;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 101:
        v_3._f3 = ${v_ilev_rc_door3_l};
        v_3/*{3}*/ = {-608.72998046875, -1610.3199462890625, 27.16 };
        v_3._f5 = 0x9402adfe;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 102:
        v_3._f3 = ${v_ilev_rc_door3_r};
        v_3/*{3}*/ = {-611.32, -1610.0899658203125, 27.16 };
        v_3._f5 = 0x5fdfc5b9;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 103:
        v_3._f3 = ${v_ilev_rc_door3_l};
        v_3/*{3}*/ = {-592.94, -1631.5799560546875, 27.16 };
        v_3._f5 = 0xa936772c;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 104:
        v_3._f3 = ${v_ilev_rc_door3_r};
        v_3/*{3}*/ = {-592.71, 1628.99, 27.16 };
        v_3._f5 = 0x3842153d;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 105:
        v_3._f3 = ${v_ilev_ss_door04};
        v_3/*{3}*/ = {1991.0, 3053.0, 47.0 };
        v_3._f5 = 0xfab0f874;
        break;
    case 106:
        v_3._f3 = ${v_ilev_fh_door4};
        v_3/*{3}*/ = {1988.3529052734375, 3054.410888671875, 47.3204 };
        v_3._f5 = 0xc8d61d80;
        break;
    case 107:
        v_3._f3 = ${prop_epsilon_door_l};
        v_3/*{3}*/ = {-700.1699829101562, 47.31, 44.3 };
        v_3._f5 = 0x7733a113;
        break;
    case 108:
        v_3._f3 = ${prop_epsilon_door_r};
        v_3/*{3}*/ = {-697.94, 48.35, 44.3 };
        v_3._f5 = 0x7733a113;
        break;
    case 109:
        v_3._f3 = ${v_ilev_epsstoredoor};
        v_3/*{3}*/ = {241.35740661621094, 361.0487976074219, 105.89630126953125 };
        v_3._f5 = 0x5bb47ebe;
        break;
    case 110:
        v_3._f3 = ${prop_ch2_09c_garage_door};
        v_3/*{3}*/ = {-689.1099853515625, 506.97, 110.64 };
        v_3._f5 = 0xc6a92236;
        break;
    case 111:
        v_3._f3 = ${v_ilev_door_orangesolid};
        v_3/*{3}*/ = {-1055.9599609375, 236.42999999999998, 44.169999999999995 };
        v_3._f5 = 0x965a35f0;
        break;
    case 112:
        v_3._f3 = ${prop_magenta_door};
        v_3/*{3}*/ = {29.0, 3661.0, 41.0 };
        v_3._f5 = 0xfd3c6106;
        break;
    case 113:
        v_3._f3 = ${prop_cs4_05_tdoor};
        v_3/*{3}*/ = {32.0, 3667.0, 41.0 };
        v_3._f5 = 0xeaa4bbd7;
        break;
    case 114:
        v_3._f3 = ${v_ilev_housedoor1};
        v_3/*{3}*/ = {87.0, -1959.0, 21.0 };
        v_3._f5 = 0xb6369857;
        break;
    case 115:
        v_3._f3 = ${v_ilev_fh_frntdoor};
        v_3/*{3}*/ = {0.0, -1823.0, 30.0 };
        v_3._f5 = 0x58a7877f;
        break;
    case 116:
        v_3._f3 = ${p_cut_door_03};
        v_3/*{3}*/ = {23.34, 1897.6, 23.05 };
        v_3._f5 = 0xf42192e5;
        break;
    case 117:
        v_3._f3 = ${p_cut_door_02};
        v_3/*{3}*/ = {524.2, 3081.139892578125, 41.16 };
        v_3._f5 = 0xca87c509;
        break;
    case 118:
        v_3._f3 = ${v_ilev_po_door};
        v_3/*{3}*/ = {-1910.5799560546875, -576.01, 19.25 };
        v_3._f5 = 0xcc794c91;
        break;
    case 119:
        v_3._f3 = ${prop_ss1_10_door_l};
        v_3/*{3}*/ = {-720.39, 256.8599853515625, 80.29 };
        v_3._f5 = 0xf3937748;
        break;
    case 120:
        v_3._f3 = ${prop_ss1_10_door_r};
        v_3/*{3}*/ = {-718.4199829101562, 257.79, 80.29 };
        v_3._f5 = 0xc45498db;
        break;
    case 121:
        v_3._f3 = ${v_ilev_fibl_door02};
        v_3/*{3}*/ = {106.38, -742.7, 46.18 };
        v_3._f5 = 0x2d1d4afb;
        break;
    case 122:
        v_3._f3 = ${v_ilev_fibl_door01};
        v_3/*{3}*/ = {105.76, -746.65, 46.18 };
        v_3._f5 = 0x1c6e29ad;
        break;
    case 123:
        v_3._f3 = ${v_ilev_ct_door01};
        v_3/*{3}*/ = {-2343.53, 3265.3701171875, 32.96 };
        v_3._f5 = 0x7c136b13;
        break;
    case 124:
        v_3._f3 = ${v_ilev_ct_door01};
        v_3/*{3}*/ = {-2342.22998046875, 3267.6201171875, 32.96 };
        v_3._f5 = 0x7c136b13;
        break;
    case 125:
        v_3._f3 = ${ap1_02_door_l};
        v_3/*{3}*/ = {-1041.9326171875, -2748.16748046875, 22.030799865722656 };
        v_3._f5 = 0xa21772d;
        break;
    case 126:
        v_3._f3 = ${ap1_02_door_r};
        v_3/*{3}*/ = {-1044.8408203125, -2746.48876953125, 22.030799865722656 };
        v_3._f5 = 0x128d0804;
        break;
    case 128:
        v_3._f3 = ${v_ilev_fb_doorshortl};
        v_3/*{3}*/ = {-1045.119873046875, -232.00399780273438, 39.4379 };
        v_3._f5 = 0xa2d4904f;
        break;
    case 129:
        v_3._f3 = ${v_ilev_fb_doorshortr};
        v_3/*{3}*/ = {-1046.51611328125, -229.35809326171875, 39.4379 };
        v_3._f5 = 0x2d3fa523;
        break;
    case 130:
        v_3._f3 = ${v_ilev_fb_door01};
        v_3/*{3}*/ = {-1083.6201171875, -260.41668701171875, 38.18669891357422 };
        v_3._f5 = 0xfaf82bb5;
        break;
    case 131:
        v_3._f3 = ${v_ilev_fb_door02};
        v_3/*{3}*/ = {-1080.974365234375, -259.0203857421875, 38.18669891357422 };
        v_3._f5 = 0xe477feb5;
        break;
    case 127:
        v_3._f3 = ${v_ilev_gtdoor};
        v_3/*{3}*/ = {-1042.5699462890625, -240.6, 38.11 };
        v_3._f5 = 0x4b0bd273;
        break;
    case 132:
        v_3._f3 = ${prop_damdoor_01};
        v_3/*{3}*/ = {1385.2578125, -2079.949462890625, 52.76380157470703 };
        v_3._f5 = 0xcb4e72f0;
        break;
    case 133:
        v_3._f3 = ${v_ilev_genbankdoor2};
        v_3/*{3}*/ = {1656.5699462890625, 4849.66015625, 42.35 };
        v_3._f5 = 0xe87d246;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 134:
        v_3._f3 = ${v_ilev_genbankdoor1};
        v_3/*{3}*/ = {1656.25, 4852.240234375, 42.35 };
        v_3._f5 = 0x2a908a2b;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 135:
        v_3._f3 = ${prop_sec_barrier_ld_01a};
        v_3/*{3}*/ = {-1051.40185546875, -474.6846923828125, 36.61989974975586 };
        v_3._f5 = 0x636d4ae0;
        GAMEPLAY::SET_BIT(&v_3._f4, 1);
        break;
    case 136:
        v_3._f3 = ${prop_sec_barrier_ld_01a};
        v_3/*{3}*/ = {-1049.2852783203125, -476.6376037597656, 36.7584 };
        v_3._f5 = 0x5264f117;
        GAMEPLAY::SET_BIT(&v_3._f4, 1);
        break;
    case 137:
        v_3._f3 = ${prop_sec_barrier_ld_02a};
        v_3/*{3}*/ = {-1210.9566650390625, -580.8765258789062, 27.2373 };
        v_3._f5 = 0xc65ff0dc;
        GAMEPLAY::SET_BIT(&v_3._f4, 1);
        break;
    case 138:
        v_3._f3 = ${prop_sec_barrier_ld_02a};
        v_3/*{3}*/ = {-1212.4453125, -578.4401245117188, 27.2373 };
        v_3._f5 = 0x84b160cc;
        GAMEPLAY::SET_BIT(&v_3._f4, 1);
        break;
    case 139:
        v_3._f3 = ${v_ilev_roc_door4};
        v_3/*{3}*/ = {-565.1712036132812, 276.625885, 83.2863 };
        v_3._f5 = 0x99afc840;
        break;
    case 140:
        v_3._f3 = ${v_ilev_roc_door4};
        v_3/*{3}*/ = {-561.2863159179688, 293.5043029785156, 87.777099609375 };
        v_3._f5 = 0x7ff114c7;
        break;
    case 141:
        v_3._f3 = ${p_jewel_door_l};
        v_3/*{3}*/ = {-631.96, -236.33, 38.21 };
        v_3._f5 = 0x6fc17308;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 142:
        v_3._f3 = ${p_jewel_door_r1};
        v_3/*{3}*/ = {630.43, -238.44, 38.21 };
        v_3._f5 = 0x8ae0294d;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 145:
        v_3._f3 = ${prop_ld_bankdoors_01};
        v_3/*{3}*/ = {231.62, 216.23, 106.4 };
        v_3._f5 = 0x74523de8;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 146:
        v_3._f3 = ${prop_ld_bankdoors_01};
        v_3/*{3}*/ = {232.72, 213.88, 106.4 };
        v_3._f5 = 0xe649a1dd;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 143:
        v_3._f3 = ${hei_prop_hei_bankdoor_new};
        v_3/*{3}*/ = {258.32, 203.84, 106.43 };
        v_3._f5 = 0xee7a4b56;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 144:
        v_3._f3 = ${hei_prop_hei_bankdoor_new};
        v_3/*{3}*/ = {260.76, 202.95, 106.43 };
        v_3._f5 = 0xd13290c7;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 148:
        v_3._f3 = ${hei_v_ilev_bk_gate_pris};
        v_3/*{3}*/ = {256.31, 220.66, 106.43 };
        v_3._f5 = 0xea2d16de;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 147:
        v_3._f3 = ${v_ilev_bk_door};
        v_3/*{3}*/ = {266.3599853515625, 217.57, 110.43 };
        v_3._f5 = 0x1a465dd3;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 149:
        v_3._f3 = ${v_ilev_shrf2door};
        v_3/*{3}*/ = {-442.66, 6015.2216796875, 31.8663 };
        v_3._f5 = 0xdcec4675;
        break;
    case 150:
        v_3._f3 = ${v_ilev_shrf2door};
        v_3/*{3}*/ = {-444.4985046386719, 6017.06, 31.8663 };
        v_3._f5 = 0x6c36650b;
        break;
    case 151:
        v_3._f3 = ${v_ilev_shrfdoor};
        v_3/*{3}*/ = {1855.684814453125, 3683.93017578125, 34.5928 };
        v_3._f5 = 0x5029b9a4;
        break;
    case 152:
        v_3._f3 = ${prop_bhhotel_door_l};
        v_3/*{3}*/ = {-1223.3499755859375, -172.41, 39.98 };
        v_3._f5 = 0xecdf96a9;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 153:
        v_3._f3 = ${prop_bhhotel_door_r};
        v_3/*{3}*/ = {-1220.93, 173.67999999999998, 39.98 };
        v_3._f5 = 0x5a1b7123;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 154:
        v_3._f3 = ${prop_bhhotel_door_l};
        v_3/*{3}*/ = {1211.99, -190.57, 39.98 };
        v_3._f5 = 0xa5896609;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 155:
        v_3._f3 = ${prop_bhhotel_door_r};
        v_3/*{3}*/ = {-1213.26, 192.98, 39.98 };
        v_3._f5 = 0xbed718a0;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 156:
        v_3._f3 = ${prop_bhhotel_door_l};
        v_3/*{3}*/ = {-1217.77, 201.54, 39.98 };
        v_3._f5 = 0x715ef4ec;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 157:
        v_3._f3 = ${prop_bhhotel_door_r};
        v_3/*{3}*/ = {-1219.04, 203.95, 39.98 };
        v_3._f5 = 0xe57d5d27;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 158:
        v_3._f3 = ${prop_ch3_04_door_01l};
        v_3/*{3}*/ = {2514.32, 317.34, 93.32 };
        v_3._f5 = 0x18156dfa;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 159:
        v_3._f3 = ${prop_ch3_04_door_01r};
        v_3/*{3}*/ = {2512.419921875, -319.26, 93.32 };
        v_3._f5 = 0xab8314d3;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 160:
        v_3._f3 = ${prop_ch3_01_trlrdoor_l};
        v_3/*{3}*/ = {2333.22998046875, 2574.969970703125, 47.03 };
        v_3._f5 = 0xadfa9e01;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 161:
        v_3._f3 = ${prop_ch3_01_trlrdoor_r};
        v_3/*{3}*/ = {2329.64990234375, 2576.639892578125, 47.03 };
        v_3._f5 = 0x1b447897;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 162:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {16.127899169921875, -1114.60546875, 29.9468994140625 };
        v_3._f5 = 0x3fe1bf2f;
        break;
    case 163:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {18.57200050354, -1115.4951171875, 29.9468994140625 };
        v_3._f5 = 0x81b242d3;
        break;
    case 165:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {1698.17626953125, 3751.505615234375, 34.8553 };
        v_3._f5 = 0xa7477017;
        break;
    case 166:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {1699.9371337890625, 3753.420166015625, 34.8553 };
        v_3._f5 = 0xe187e49b;
        break;
    case 167:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {244.72740173339844, -44.0791015625, 70.91 };
        v_3._f5 = 0xf12f21cd;
        break;
    case 168:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {243.83790588378906, -46.5232, 70.91 };
        v_3._f5 = 0x3af9b555;
        break;
    case 169:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {845.3624267578125, -1024.5390625, 28.3448 };
        v_3._f5 = 0x78891d35;
        break;
    case 170:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {842.7683715820312, -1024.5390625, 23.3448 };
        v_3._f5 = 0x26bb7997;
        break;
    case 171:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {-326.1122131347656, 6075.26953125, 31.6047000885 };
        v_3._f5 = 0x2008eb12;
        break;
    case 172:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {-324.27301025390625, 6077.10888671875, 31.6047000885 };
        v_3._f5 = 0x42d7b0b3;
        break;
    case 173:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {-665.2423706054688, -944.3256225585938, 21.9792 };
        v_3._f5 = 0xaa5350aa;
        break;
    case 174:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {-662.6414184570312, -944.3256225585938, 21.9792 };
        v_3._f5 = 0xc7980b3b;
        break;
    case 175:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {-1313.825927734375, -389.125885, 36.845699310302734 };
        v_3._f5 = 0x70d7184a;
        break;
    case 176:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {-1314.4649658203125, -391.6471862792969, 36.845699310302734 };
        v_3._f5 = 0x19fa6a8e;
        break;
    case 177:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {-1114.0089111328125, 2689.77, 18.704099655151367 };
        v_3._f5 = 0x3889169a;
        break;
    case 178:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {-1112.0708, 2691.504638671875, 18.704099655151367 };
        v_3._f5 = 0x94e84f57;
        break;
    case 179:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {-3164.84521484375, 1081.3917236328125, 20.9887 };
        v_3._f5 = 0xbb245373;
        break;
    case 180:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {-3163.8115234375, 1083.7784423828125, 20.9887 };
        v_3._f5 = 0x2ea3baa4;
        break;
    case 181:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {2570.904541015625, 303.3555908203125, 108.88480377197266 };
        v_3._f5 = 0xb8cdd26f;
        break;
    case 182:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {2568.3037109375, 303.3555908203125, 108.88480377197266 };
        v_3._f5 = 0x810f62f3;
        break;
    case 183:
        v_3._f3 = ${v_ilev_gc_door04};
        v_3/*{3}*/ = {813.1779174804688, -2148.26953125, 29.7689 };
        v_3._f5 = 0x3fe1bf2f;
        break;
    case 184:
        v_3._f3 = ${v_ilev_gc_door03};
        v_3/*{3}*/ = {810.576904296875, -2148.26953125, 29.7689 };
        v_3._f5 = 0x81b242d3;
        break;
    case 164:
        v_3._f3 = ${v_ilev_gc_door01};
        v_3/*{3}*/ = {6.8179, -1098.20947265625, 29.9468994140625 };
        v_3._f5 = 0x58ac90b5;
        GAMEPLAY::SET_BIT(&v_3._f4, 3);
        break;
    case 185:
        v_3._f3 = ${v_ilev_gc_door01};
        v_3/*{3}*/ = {827.5341796875, -2160.49267578125, 29.7688 };
        v_3._f5 = 0x5b2f1453;
        GAMEPLAY::SET_BIT(&v_3._f4, 3);
        break;
    case 186:
        v_3._f3 = ${prop_lrggate_01c_l};
        v_3/*{3}*/ = {-1107.01, 289.38, 64.76 };
        v_3._f5 = 0x35e72bcb;
        break;
    case 187:
        v_3._f3 = ${prop_lrggate_01c_r};
        v_3/*{3}*/ = {1101.62, 290.3599853515625, 64.76 };
        v_3._f5 = 0xd096e0f4;
        break;
    case 188:
        v_3._f3 = ${prop_lrggate_01c_l};
        v_3/*{3}*/ = {-1138.64, 300.82, 67.18 };
        v_3._f5 = 0xa672520a;
        break;
    case 189:
        v_3._f3 = ${prop_lrggate_01c_r};
        v_3/*{3}*/ = {-1137.05, 295.59, 67.18 };
        v_3._f5 = 0x89231774;
        break;
    case 190:
        v_3._f3 = ${v_ilev_bl_doorel_l};
        v_3/*{3}*/ = {-2053.159912109375, 3239.49, 30.5 };
        v_3._f5 = 0xdaf08a77;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 191:
        v_3._f3 = ${v_ilev_bl_doorel_r};
        v_3/*{3}*/ = {-2054.389892578125, 3237.22998046875, 30.5 };
        v_3._f5 = 0x3cb64e01;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 192:
        v_3._f3 = ${v_ilev_cbankcountdoor01};
        v_3/*{3}*/ = {-108.91, 6469.10986328125, 31.91 };
        v_3._f5 = 0x19261549;
        break;
    case 193:
        v_3._f3 = ${prop_fnclink_03gate5};
        v_3/*{3}*/ = {-182.91, 6168.3701171875, 32.14 };
        v_3._f5 = 0xb0a21f8a;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    }
    switch (a_0) {
    case 196:
        v_3._f3 = ${v_ilev_csr_door_l};
        v_3/*{3}*/ = {59.89, -1092.949951171875, 26.88 };
        v_3._f5 = 0xee8704e3;
        break;
    case 197:
        v_3._f3 = ${v_ilev_csr_door_r};
        v_3/*{3}*/ = {60.55, -1094.75, 26.89 };
        v_3._f5 = 0x1e346455;
        break;
    case 194:
        v_3._f3 = ${v_ilev_csr_door_l};
        v_3/*{3}*/ = {-39.13, -1108.219970703125, 26.72 };
        v_3._f5 = 0x592b3b2a;
        break;
    case 195:
        v_3._f3 = ${v_ilev_csr_door_r};
        v_3/*{3}*/ = {-37.33, 1108.87, 26.72 };
        v_3._f5 = 0x90f3aad6;
        break;
    case 198:
        v_3._f3 = ${prop_ron_door_01};
        v_3/*{3}*/ = {1943.72998046875, 3803.6298828125, 32.31 };
        v_3._f5 = 0x87a9d9d8;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 199:
        v_3._f3 = ${v_ilev_genbankdoor2};
        v_3/*{3}*/ = {316.39, 276.49, 54.52 };
        v_3._f5 = 0xfa66ad40;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 200:
        v_3._f3 = ${v_ilev_genbankdoor1};
        v_3/*{3}*/ = {313.96, -275.6, 54.52 };
        v_3._f5 = 0x27cc080e;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 201:
        v_3._f3 = ${v_ilev_genbankdoor2};
        v_3/*{3}*/ = {-2965.7099609375, 484.22, 16.05 };
        v_3._f5 = 0x6fdcb756;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 202:
        v_3._f3 = ${v_ilev_genbankdoor1};
        v_3/*{3}*/ = {-2965.82, 481.63, 16.05 };
        v_3._f5 = 0x82105bad;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 205:
        v_3._f3 = ${v_ilev_abbmaindoor};
        v_3/*{3}*/ = {962.1, -2183.83, 31.06 };
        v_3._f5 = 0x7a01ae56;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 206:
        v_3._f3 = ${v_ilev_abbmaindoor2};
        v_3/*{3}*/ = {961.7899780273438, -2187.08, 31.06 };
        v_3._f5 = 0x48084a64;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 207:
        v_3._f3 = ${prop_ch3_04_door_02};
        v_3/*{3}*/ = {2508.429931640625, -336.63, 115.76 };
        v_3._f5 = 0x76668da5;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 208:
        v_3._f3 = ${prop_ch1_07_door_01l};
        v_3/*{3}*/ = {-2255.18994140625, 322.26, 184.92999999999998 };
        v_3._f5 = 0xd4eaf676;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 209:
        v_3._f3 = ${prop_ch1_07_door_01r};
        v_3/*{3}*/ = {-2254.06, 319.7, 184.92999999999998 };
        v_3._f5 = 0xc2d650a;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 210:
        v_3._f3 = ${prop_ch1_07_door_01l};
        v_3/*{3}*/ = {-2301.1298828125, 336.91, 184.92999999999998 };
        v_3._f5 = 0xeceb0b54;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 211:
        v_3._f3 = ${prop_ch1_07_door_01r};
        v_3/*{3}*/ = {-2298.57, 338.04998779296875, 184.92999999999998 };
        v_3._f5 = 0x3e33904;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 212:
        v_3._f3 = ${prop_ch1_07_door_01l};
        v_3/*{3}*/ = {-2222.32, 305.8599853515625, 184.92999999999998 };
        v_3._f5 = 0xc9297f46;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 213:
        v_3._f3 = ${prop_ch1_07_door_01r};
        v_3/*{3}*/ = {-2221.18994140625, 303.3, 184.92999999999998 };
        v_3._f5 = 0xfc8465ff;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 214:
        v_3._f3 = ${prop_ch1_07_door_01l};
        v_3/*{3}*/ = {-2280.6, 265.43, 184.92999999999998 };
        v_3._f5 = 0x8859d53b;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 215:
        v_3._f3 = ${prop_ch1_07_door_01r};
        v_3/*{3}*/ = {-2278.04, 266.57, 184.92999999999998 };
        v_3._f5 = 0x18f5f685;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 216:
        v_3._f3 = ${prop_gar_door_04};
        v_3/*{3}*/ = {778.31, 1867.49, 30.66 };
        v_3._f5 = 0x64147f59;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 217:
        v_3._f3 = ${prop_gate_tep_01_l};
        v_3/*{3}*/ = {-721.3499755859375, 91.01, 56.68 };
        v_3._f5 = 0x1891a5fc;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 218:
        v_3._f3 = ${prop_gate_tep_01_r};
        v_3/*{3}*/ = {-728.84, 88.64, 56.68 };
        v_3._f5 = 0xc130f73c;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 219:
        v_3._f3 = ${prop_artgallery_02_dr};
        v_3/*{3}*/ = {-2287.6201171875, 363.9, 174.92999999999998 };
        v_3._f5 = 0xfcd07a05;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 220:
        v_3._f3 = ${prop_artgallery_02_dl};
        v_3/*{3}*/ = {-2289.78, 362.91, 174.92999999999998 };
        v_3._f5 = 0x4f829f6c;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 221:
        v_3._f3 = ${prop_artgallery_02_dr};
        v_3/*{3}*/ = {-2289.860107421875, 362.88, 174.92999999999998 };
        v_3._f5 = 0xfd826383;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 222:
        v_3._f3 = ${prop_artgallery_02_dl};
        v_3/*{3}*/ = {-2292.01, 361.89, 174.92999999999998 };
        v_3._f5 = 0x6850b91e;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 223:
        v_3._f3 = ${prop_fnclink_07gate1};
        v_3/*{3}*/ = {1803.93994140625, 3929.01, 33.72 };
        v_3._f5 = 0x630892ae;
        break;
    case 203:
        v_3._f3 = ${v_ilev_genbankdoor2};
        v_3/*{3}*/ = {348.81, 47.26, 49.39 };
        v_3._f5 = 0x81dea14e;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 204:
        v_3._f3 = ${v_ilev_genbankdoor1};
        v_3/*{3}*/ = {-351.26, 46.41, 49.39 };
        v_3._f5 = 0xfb9594be;
        GAMEPLAY::SET_BIT(&v_3._f4, 2);
        break;
    case 224:
        v_3._f3 = ${prop_abat_slide};
        v_3/*{3}*/ = {962.9083862304688, -2105.813720703125, 34.6432 };
        v_3._f5 = 0x9c748513;
        break;
    }
    return v_3;
}

auto sub_32c0(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        if (a_1 == 0) {
            return 6;
        }
        if (a_1 == 1) {
            return 7;
        }
        break;
    case 1:
        if (a_1 == 0) {
            return 0;
        }
        break;
    case 2:
        if (a_1 == 0) {
            return 1;
        }
        break;
    case 3:
        if (a_1 == 0) {
            return 2;
        }
        break;
    case 4:
        if (a_1 == 0) {
            return 3;
        }
        break;
    case 5:
        if (a_1 == 0) {
            return 4;
        }
        break;
    case 6:
        if (a_1 == 0) {
            return 5;
        }
        break;
    case 7:
        if (a_1 == 0) {
            return 8;
        }
        if (a_1 == 1) {
            return 9;
        }
        break;
    case 8:
        if (a_1 == 0) {
            return 10;
        }
        if (a_1 == 1) {
            return 11;
        }
        break;
    case 9:
        if (a_1 == 0) {
            return 12;
        }
        if (a_1 == 1) {
            return 13;
        }
        break;
    case 10:
        if (a_1 == 0) {
            return 14;
        }
        if (a_1 == 1) {
            return 15;
        }
        break;
    case 11:
        if (a_1 == 0) {
            return 16;
        }
        if (a_1 == 1) {
            return 17;
        }
        break;
    case 12:
        if (a_1 == 0) {
            return 18;
        }
        if (a_1 == 1) {
            return 19;
        }
        break;
    case 13:
        if (a_1 == 0) {
            return 20;
        }
        if (a_1 == 1) {
            return 21;
        }
        break;
    case 14:
        if (a_1 == 0) {
            return 22;
        }
        break;
    case 15:
        if (a_1 == 0) {
            return 23;
        }
        break;
    case 16:
        if (a_1 == 0) {
            return 24;
        }
        break;
    case 17:
        if (a_1 == 0) {
            return 25;
        }
        break;
    case 18:
        if (a_1 == 0) {
            return 26;
        }
        if (a_1 == 1) {
            return 27;
        }
        break;
    case 19:
        if (a_1 == 0) {
            return 28;
        }
        if (a_1 == 1) {
            return 29;
        }
        break;
    case 20:
        if (a_1 == 0) {
            return 30;
        }
        if (a_1 == 1) {
            return 31;
        }
        break;
    case 22:
        if (a_1 == 0) {
            return 32;
        }
        break;
    case 23:
        if (a_1 == 0) {
            return 33;
        }
        break;
    case 24:
        if (a_1 == 0) {
            return 34;
        }
        break;
    case 25:
        if (a_1 == 0) {
            return 35;
        }
        break;
    case 26:
        if (a_1 == 0) {
            return 36;
        }
        break;
    case 27:
        if (a_1 == 0) {
            return 37;
        }
        break;
    case 39:
        if (a_1 == 0) {
            return 54;
        }
        break;
    case 40:
        if (a_1 == 0) {
            return 55;
        }
        break;
    case 41:
        if (a_1 == 0) {
            return 56;
        }
        break;
    case 42:
        if (a_1 == 0) {
            return 58;
        }
        if (a_1 == 1) {
            return 57;
        }
        break;
    case 43:
        if (a_1 == 0) {
            return 60;
        }
        if (a_1 == 1) {
            return 59;
        }
        break;
    case 44:
        if (a_1 == 0) {
            return 225;
        }
        break;
    case 28:
        if (a_1 == 0) {
            return 162;
        }
        if (a_1 == 1) {
            return 163;
        }
        break;
    case 29:
        if (a_1 == 0) {
            return 165;
        }
        if (a_1 == 1) {
            return 166;
        }
        break;
    case 30:
        if (a_1 == 0) {
            return 167;
        }
        if (a_1 == 1) {
            return 168;
        }
        break;
    case 31:
        if (a_1 == 0) {
            return 169;
        }
        if (a_1 == 1) {
            return 170;
        }
        break;
    case 32:
        if (a_1 == 0) {
            return 171;
        }
        if (a_1 == 1) {
            return 172;
        }
        break;
    case 33:
        if (a_1 == 0) {
            return 173;
        }
        if (a_1 == 1) {
            return 174;
        }
        break;
    case 34:
        if (a_1 == 0) {
            return 175;
        }
        if (a_1 == 1) {
            return 176;
        }
        break;
    case 35:
        if (a_1 == 0) {
            return 177;
        }
        if (a_1 == 1) {
            return 178;
        }
        break;
    case 36:
        if (a_1 == 0) {
            return 179;
        }
        if (a_1 == 1) {
            return 180;
        }
        break;
    case 37:
        if (a_1 == 0) {
            return 181;
        }
        if (a_1 == 1) {
            return 182;
        }
        break;
    case 38:
        if (a_1 == 0) {
            return 183;
        }
        if (a_1 == 1) {
            return 184;
        }
        break;
    }
    return 226;
}

auto sub_3741(auto a_0) {
    v_3 = 1;
    for (v_5 = 0; v_5 < 2; v_5 += 1) {
        v_4 = sub_378d(a_0, v_5);
        if (v_4 != 0) {
            if (OBJECT::_DOES_DOOR_EXIST(v_4)) {
                if (!NETWORK::NETWORK_HAS_CONTROL_OF_DOOR(v_4)) {
                    NETWORK::NETWORK_REQUEST_CONTROL_OF_DOOR(v_4);
                    v_3 = 0;
                }
            }
        }
    }
    return v_3;
}

auto sub_378d(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xaec2a1a;
            } else if (a_1 == 1) {
                return 0x2d336ea8;
            }
        }
        break;
    case 1:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x6b918ea1;
            }
        }
        break;
    case 2:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x53a940ab;
            }
        }
        break;
    case 3:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x86ef4558;
            }
        }
        break;
    case 4:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x6b1985f9;
            }
        }
        break;
    case 5:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x5bb2ed2;
            }
        }
        break;
    case 6:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xef3f0b86;
            }
        }
        break;
    case 7:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xc04458cf;
            } else if (a_1 == 1) {
                return 0x75554302;
            }
        }
        break;
    case 8:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x8039a343;
            } else if (a_1 == 1) {
                return 0xac597b82;
            }
        }
        break;
    case 9:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x8bc342ba;
            } else if (a_1 == 1) {
                return 0x49173d5f;
            }
        }
        break;
    case 10:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x4104cc95;
            } else if (a_1 == 1) {
                return 0x357c3584;
            }
        }
        break;
    case 11:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x4152d190;
            } else if (a_1 == 1) {
                return 0x2fcd2e89;
            }
        }
        break;
    case 12:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xf5fc937d;
            } else if (a_1 == 1) {
                return 0x8c9dc0bd;
            }
        }
        break;
    case 13:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x70b93241;
            } else if (a_1 == 1) {
                return 0x49b4e441;
            }
        }
        break;
    case 14:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x7610bded;
            }
        }
        break;
    case 15:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x50a152bd;
            }
        }
        break;
    case 16:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xde3b10ab;
            }
        }
        break;
    case 17:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x4c93b88a;
            }
        }
        break;
    case 18:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xf9b8b5a;
            } else if (a_1 == 1) {
                return 0xcf90621;
            }
        }
        break;
    case 19:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x6b5b357a;
            } else if (a_1 == 1) {
                return 0x817161a6;
            }
        }
        break;
    case 20:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x4e3e0f3d;
            } else if (a_1 == 1) {
                return 0xdc882bd3;
            }
        }
        break;
    case 22:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xf030709f;
            }
        }
        break;
    case 23:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xb36a7a60;
            }
        }
        break;
    case 24:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x1204d709;
            }
        }
        break;
    case 25:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xd75b3ec1;
            }
        }
        break;
    case 26:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x83a1acac;
            }
        }
        break;
    case 27:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xa6cef378;
            }
        }
        break;
    case 39:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x90799222;
            }
        } else if (a_1 == 0) {
            return 0x90799222;
        }
        break;
    case 40:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x459f7c6b;
            }
        } else if (a_1 == 0) {
            return 0x459f7c6b;
        }
        break;
    case 41:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x47e780ff;
            }
        } else if (a_1 == 0) {
            return 0x47e780ff;
        }
        break;
    case 42:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x478da961;
            } else if (a_1 == 1) {
                return 0xc21e9e89;
            }
        } else if (a_1 == 0) {
            return 0x478da961;
        } else if (a_1 == 1) {
            return 0xc21e9e89;
        }
        break;
    case 43:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xe4a12ddf;
            } else if (a_1 == 1) {
                return 0x52e90a75;
            }
        } else if (a_1 == 0) {
            return 0xe4a12ddf;
        } else if (a_1 == 1) {
            return 0x52e90a75;
        }
        break;
    case 44:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xeec9cec1;
            }
        } else if (a_1 == 0) {
            return 0xeec9cec1;
        }
        break;
    case 28:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x3fe1bf2f;
            } else if (a_1 == 1) {
                return 0x81b242d3;
            }
        }
        break;
    case 29:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xa7477017;
            } else if (a_1 == 1) {
                return 0xe187e49b;
            }
        }
        break;
    case 30:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xf12f21cd;
            } else if (a_1 == 1) {
                return 0x3af9b555;
            }
        }
        break;
    case 31:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x78891d35;
            } else if (a_1 == 1) {
                return 0x26bb7997;
            }
        }
        break;
    case 32:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x2008eb12;
            } else if (a_1 == 1) {
                return 0x42d7b0b3;
            }
        }
        break;
    case 33:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xaa5350aa;
            } else if (a_1 == 1) {
                return 0xc7980b3b;
            }
        }
        break;
    case 34:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x70d7184a;
            } else if (a_1 == 1) {
                return 0x19fa6a8e;
            }
        }
        break;
    case 35:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0x3889169a;
            } else if (a_1 == 1) {
                return 0x94e84f57;
            }
        }
        break;
    case 36:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xbb245373;
            } else if (a_1 == 1) {
                return 0x2ea3baa4;
            }
        }
        break;
    case 37:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xb8cdd26f;
            } else if (a_1 == 1) {
                return 0x810f62f3;
            }
        }
        break;
    case 38:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_1 == 0) {
                return 0xd7b7d8b1;
            } else if (a_1 == 1) {
                return 0x7e72a634;
            }
        }
        break;
    }
    return 0;
}

auto sub_3f10(auto a_0) {
    switch (a_0) {
    case -1:
        return "";
        break;
    case 0:
        return "v_hairdresser";
        break;
    case 1:
        return "v_barbers";
        break;
    case 2:
        return "v_barbers";
        break;
    case 3:
        return "v_barbers";
        break;
    case 4:
        return "v_barbers";
        break;
    case 5:
        return "v_barbers";
        break;
    case 6:
        return "v_barbers";
        break;
    case 7:
        return "v_clotheslo";
        break;
    case 8:
        return "v_clotheslo";
        break;
    case 9:
        return "v_clotheslo";
        break;
    case 10:
        return "v_clotheslo";
        break;
    case 11:
        return "v_clotheslo";
        break;
    case 12:
        return "v_clotheslo";
        break;
    case 13:
        return "v_clotheslo";
        break;
    case 14:
        return "v_clothesmid";
        break;
    case 15:
        return "v_clothesmid";
        break;
    case 16:
        return "v_clothesmid";
        break;
    case 17:
        return "v_clothesmid";
        break;
    case 18:
        return "v_clotheshi";
        break;
    case 19:
        return "v_clotheshi";
        break;
    case 20:
        return "v_clotheshi";
        break;
    case 21:
        return "";
        break;
    case 22:
        return "v_tattoo";
        break;
    case 23:
        return "v_tattoo2";
        break;
    case 24:
        return "v_tattoo2";
        break;
    case 25:
        return "v_tattoo";
        break;
    case 26:
        return "v_tattoo";
        break;
    case 27:
        return "v_tattoo";
        break;
    case 28:
        return "v_gun";
        break;
    case 29:
        return "v_gun2";
        break;
    case 30:
        return "v_gun2";
        break;
    case 31:
        return "v_gun2";
        break;
    case 32:
        return "v_gun2";
        break;
    case 33:
        return "v_gun2";
        break;
    case 34:
        return "v_gun2";
        break;
    case 35:
        return "v_gun2";
        break;
    case 36:
        return "v_gun2";
        break;
    case 37:
        return "v_gun2";
        break;
    case 38:
        return "v_gun";
        break;
    case 39:
        return "v_carmod";
        break;
    case 40:
        return "v_lockup";
        break;
    case 41:
        return "v_carmod";
        break;
    case 42:
        return "v_carmod3";
        break;
    case 43:
        return "v_carmod3";
        break;
    case 44:
        return "lr_supermod_int";
        break;
    }
    return "";
}

auto<3> sub_42b9(auto a_0, auto a_1) {
    switch (a_0) {
    case -1:
        return {0.0, 0.0, 0.0 };
        break;
    case 0:
        return {-821.99462890625, -187.17759704589844, 36.56890106201172 };
        break;
    case 1:
        return {133.57020568847656, -1710.91796875, 28.29159927368164 };
        break;
    case 2:
        return {-1287.0821533203125, -1116.5576171875, 5.9901 };
        break;
    case 3:
        return {1933.119140625, 3726.0791015625, 31.8444 };
        break;
    case 4:
        return {1208.33349609375, -470.9169921875, 65.208 };
        break;
    case 5:
        return {-30.7448, -148.49209594726562, 56.0765 };
        break;
    case 6:
        return {-280.8164978027344, 6231.7705078125, 30.695499420166016 };
        break;
    case 7:
        return {80.665, -1391.66943359375, 28.3761 };
        break;
    case 8:
        return {1687.8812255859375, 4820.5498046875, 41.00960159301758 };
        break;
    case 9:
        return {419.531, -807.5786743164062, 28.489599227905273 };
        break;
    case 10:
        return {-1094.0487060546875, 2704.170654296875, 18.087299346923828 };
        break;
    case 11:
        return {1197.97216796875, 2704.220458984375, 37.15719985961914 };
        break;
    case 12:
        return {-818.621826171875, -1077.532958984375, 10.3282 };
        break;
    case 13:
        return {-0.2361, 6516.04541015625, 30.8684 };
        break;
    case 14:
        return {-1199.8092041015625, -776.6885986328125, 16.3237 };
        break;
    case 15:
        return {618.1857299804688, 2752.566650390625, 41.0881 };
        break;
    case 16:
        return {126.685302734375, -212.5027, 53.5578 };
        break;
    case 17:
        return {-3168.96630859375, 1055.286865234375, 19.863199234 };
        break;
    case 18:
        return {-715.3598022460938, -155.7742, 36.410499572753906 };
        break;
    case 19:
        return {-158.2198944091797, -304.96630859375, 38.735 };
        break;
    case 20:
        return {-1455.0045166015625, -233.186203, 48.79359817504883 };
        break;
    case 21:
        return {-1335.9730224609375, -1278.554931640625, 3.8598001 };
        break;
    case 22:
        return {321.60980224609375, 179.41650390625, 102.58650207519531 };
        break;
    case 23:
        return {1861.685302734375, 3750.079833984375, 32.03179931640625 };
        break;
    case 24:
        return {-290.1603088378906, 6199.0947265625, 30.4871 };
        break;
    case 25:
        return {-1153.9481201171875, -1425.0185546875, 3.9544 };
        break;
    case 26:
        return {1322.4547119140625, -1651.125244140625, 51.188499450683594 };
        break;
    case 27:
        return {-3169.42041015625, 1074.7271728515625, 19.834299087524414 };
        break;
    case 28:
        return {17.6804, -1114.2879638671875, 28.797000885 };
        break;
    case 29:
        return {1697.978759765625, 3753.2, 33.705299377441406 };
        break;
    case 30:
        return {245.27110290527344, -45.812599182128906, 68.941 };
        break;
    case 31:
        return {844.1248168945312, -1025.5706787109375, 27.194799423217773 };
        break;
    case 32:
        return {-325.8904113769531, 6077.0263671875, 30.45479965209961 };
        break;
    case 33:
        return {-664.2177734375, -943.3646240234375, 20.8292 };
        break;
    case 34:
        return {-1313.948486328125, -390.9637145996094, 35.592 };
        break;
    case 35:
        return {-1111.237548828125, 2688.462646484375, 17.6131 };
        break;
    case 36:
        return {-3165.230712890625, 1082.8551025390625, 19.843799591064453 };
        break;
    case 37:
        return {2569.611572265625, 302.57598876953125, 107.73490142822266 };
        break;
    case 38:
        return {811.869873046875, -2149.1015625, 28.6362991333 };
        break;
    case 39:
        return {-1147.3138427734375, -1992.4344482421875, 12.180299758911133 };
        break;
    case 40:
        return {724.5239868164062, -1089.0810546875, 21.1692 };
        break;
    case 41:
        return {-354.5271911621094, -135.40109252929688, 38.185 };
        break;
    case 42:
        return {113.2614974975586, 6624.2802734375, 30.787099838256836 };
        break;
    case 43:
        return {1174.7073974609375, 2644.44970703125, 36.75519943237305 };
        break;
    case 44:
        if (a_1) {
            return {-211.5, 1324.1999999999998, 30.296 };
        } else { 
            return {-205.6654052734375, -1311.1126708984375, 30.296 };
        }
        break;
    }
    return {1000000.0, 1000000.0, 1000000.0 };
}

auto sub_47bf(auto a_0, auto a_1, auto a_2) {
    v_5 = a_0;
    if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
        if (a_1) {
            if (!PLAYER::IS_PLAYER_PLAYING(a_0)) {
                return 0;
            }
        }
        if (a_2) {
            if (!g_2507F3._f3[v_5/*1*/]) {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_4803() {
    sub_4e74(1);
    sub_4816(&l_B3);
}

void sub_4816(auto a_0) {
    sub_49b5(&a_0._f69);
    sub_48f2(a_0);
    sub_48d7(&a_0._f298);
    sub_4887(&a_0._fAC);
    a_0._f297 = 0;
    for (v_3 = 0; v_3 < 100; v_3 += 1) {
        a_0._fDC._f6A[v_3/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
    }
    for (v_3 = 0; v_3 < a_0._fDC._f65; v_3 += 1) {
        a_0._fDC._f65[v_3/*1*/] = 0;
    }
}

void sub_4887(auto a_0) {
    a_0._f1/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f7/*"16"*/ = "";
    a_0._f1F/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f22 = 0.0;
    a_0._f23/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f26 = 0.0;
    a_0._f27/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f2A/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f2D/*{3}*/ = {0.0, 0.0, 0.0 };
}

void sub_48d7(auto a_0) {
    a_0 = -1;
    a_0._f1 = -1;
    a_0._f2 = 0;
    a_0._f4 = 0;
}

void sub_48f2(auto a_0) {
    a_0 = -1;
    a_0._f2 = 0;
    a_0._f4 = 0;
    a_0._f5 = 0;
    a_0._f7 = 0;
    a_0._f8 = 0;
    a_0._f62 = 0;
    a_0._f9 = 0;
    a_0._fB = 0;
    a_0._f57 = 0;
    a_0._fC._f1 = 0;
    a_0._fC._f2/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._fC._f5 = 0.0;
    a_0._fC._f6/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._fC._f9 = 0.0;
    a_0._fC._fA/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._fC._fD = 0.0;
    a_0._fC._f11 = 0;
    a_0._fC._fE = 0;
    a_0._f1E._f2/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f1E._f5 = 0.0;
    a_0._f1E._f6 = 0;
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        a_0._f26[v_3/*12*/]._fB = 0;
        a_0._f26[v_3/*12*/] = 0;
    }
}

void sub_49b5(auto a_0) {
    a_0 = 0;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0;
    a_0._f4 = 0;
    a_0._f5 = 0;
    a_0._f6 = 0;
    a_0._f8 = 0;
    a_0._f9 = 0;
    a_0._fA = 0;
    a_0._fB/*"16"*/ = "";
    a_0._f1E = 0;
    a_0._fF = 0;
    a_0._f10 = 0;
    a_0._f11 = 0;
    a_0._f12 = 0;
    a_0._f13 = 0;
    a_0._f14 = 0;
    a_0._f15 = 0;
    a_0._f16 = 0;
    a_0._f17 = 0;
    a_0._f1F = 0;
}

auto sub_4a2d(auto a_0) {
    if (a_0._f9) {
        if (sub_4adf(a_0, 10, 1)) {
            return 1;
        }
        if (a_0._f1 == 1) {
            if (sub_4adf(a_0, 19, 1)) {
                return 1;
            }
        }
        if (!g_16416._fF) {
            return 1;
        }
        if (is_in_transition) {
            if (g_1406E8._f4) {
                return 1;
            }
        } else if (a_0._f9 && (a_0._fB != 0)) {
            if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 82.34221649169922, -1310.277587890625, 25.770122528076172, 142.89173889160156, -1274.1536865234375, 46.51248550415039, 62.0, 0, 1, 0)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_4adf(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        return GAMEPLAY::IS_BIT_SET(g_16416._f514[a_0/*1*/], a_1);
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_4e69() == 0) {
            return GAMEPLAY::IS_BIT_SET(sub_4b3f(sub_4bb1(a_0), -1, 0), a_1);
        }
    } else { 
        return GAMEPLAY::IS_BIT_SET(game_state._f29C[a_0/*1*/], a_1);
    }
    return 0;
}

auto sub_4b3f(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    v_5 = g_25A3D6[a_0/*5*/][sub_4b71(a_1)/*1*/];
    if (STATS::STAT_GET_INT(v_5, &v_6, -1)) {
        return v_6;
    }
    return 0;
}

auto sub_4b71(auto a_0) {
    v_3 = a_0;
    if (v_3 == -1) {
        v_4 = sub_4ba5();
        if (v_4 > -1) {
            g_25A2B7 = 0;
            v_3 = v_4;
        } else { 
            v_3 = 0;
            g_25A2B7 = 1;
        }
    }
    return v_3;
}

auto sub_4ba5() {
    return g_1407EA;
}

auto sub_4bb1(auto a_0) {
    switch (a_0) {
    case 0:
        return 817;
        break;
    case 1:
        return 818;
        break;
    case 2:
        return 819;
        break;
    case 3:
        return 820;
        break;
    case 4:
        return 821;
        break;
    case 5:
        return 822;
        break;
    case 6:
        return 823;
        break;
    case 7:
        return 824;
        break;
    case 8:
        return 825;
        break;
    case 9:
        return 826;
        break;
    case 10:
        return 827;
        break;
    case 11:
        return 828;
        break;
    case 12:
        return 829;
        break;
    case 13:
        return 830;
        break;
    case 14:
        return 831;
        break;
    case 15:
        return 833;
        break;
    case 16:
        return 834;
        break;
    case 17:
        return 835;
        break;
    case 18:
        return 836;
        break;
    case 19:
        return 837;
        break;
    case 20:
        return 838;
        break;
    case 21:
        return 839;
        break;
    case 22:
        return 840;
        break;
    case 23:
        return 841;
        break;
    case 24:
        return 842;
        break;
    case 25:
        return 843;
        break;
    case 26:
        return 844;
        break;
    case 27:
        return 845;
        break;
    case 28:
        return 846;
        break;
    case 29:
        return 847;
        break;
    case 30:
        return 848;
        break;
    case 31:
        return 849;
        break;
    case 32:
        return 850;
        break;
    case 33:
        return 851;
        break;
    case 34:
        return 852;
        break;
    case 35:
        return 853;
        break;
    case 36:
        return 854;
        break;
    case 37:
        return 855;
        break;
    case 38:
        return 856;
        break;
    case 39:
        return 857;
        break;
    case 40:
        return 861;
        break;
    case 41:
        return 862;
        break;
    case 42:
        return 863;
        break;
    case 43:
        return 864;
        break;
    case 44:
        return 3693;
        break;
    default:
        break;
    }
    return 3790;
}

auto sub_4e69() {
    return g_621B;
}

void sub_4e74(auto a_0) {
    sub_6badd(1);
    if (l_B3._f69._f13) {
        if (sub_12f49()) {
            g_25204A._f292._f28 = 0;
            sub_12f02();
            g_25204A._f292._f21[0/*1*/] = l_B3._f69._f1;
            g_25204A._f292._f21[1/*1*/] = l_B3._f69._f3;
            g_25204A._f292._f27 = l_B3._f69;
            if (l_B3._f69._f5 == 1) {
                g_25204A._f292._f21[2/*1*/] = l_B3._f69._f2;
                g_25204A._f292._f28 = 1;
            }
        }
    }
    if (l_B3._f3 != -1) {
        sub_12e70(&l_B3._f3);
    }
    sub_12ad9(&l_B3, l_88);
    sub_12aa3(&l_B3._f26);
    if ((!a_0) && (!l_438)) {
        sub_6ff9d(1);
    }
    sub_a108(0, 1);
    GAMEPLAY::_65D2EBB47E1CEC21(0);
    sub_9f84(1, l_B3);
    g_26FCD2 = 0;
    sub_9d85(l_B3);
    if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(l_B2)) && (!a_0)) {
        STREAMING::REMOVE_ANIM_DICT(l_B2);
    }
    AUDIO::RELEASE_SCRIPT_AUDIO_BANK();
    sub_9d6e();
    STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(0xe5ec02c1);
    sub_9d2b();
    g_16416._f1 = 0;
    sub_77f6();
    if (l_B3._fB == 2) {
        if (CAM::DOES_CAM_EXIST(l_B3._f8F._fA)) {
            if (CAM::IS_CAM_ACTIVE(l_B3._f8F._fA)) {
                CAM::SET_CAM_ACTIVE(l_B3._f8F._fA, 0);
            }
            CAM::DESTROY_CAM(l_B3._f8F._fA, 0);
        }
        CAM::RENDER_SCRIPT_CAMS(0, 0, 3000, 1, 0, 0);
        PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), 1, 0);
        sub_757a();
    }
    if (l_B3._f69._f13) {
        v_3 = PLAYER::PLAYER_PED_ID();
        sub_5d12(v_3, 1, 0);
        sub_53d5(&l_B3._f69, 0, 1, 1);
        if (is_in_transition) {
            PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 185, 0);
        }
        CAM::SET_WIDESCREEN_BORDERS(0, 0);
        CAM::RENDER_SCRIPT_CAMS(0, 0, 3000, 1, 0, 0);
        CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0.0);
        CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0.0, 0x3f800000);
        sub_53b4(1);
        sub_757a();
        sub_5383();
        l_453._f13 = 0;
        sub_51ce(&l_453, 1);
    }
    if (!PED::IS_PED_INJURED(l_B3._fC)) {
        if (l_B3._fA) {
            if (sub_51b2(l_88) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            } else { 
                PED::DELETE_PED(&l_B3._fC);
            }
        } else if (a_0) {
            if (sub_51b2(l_88) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            } else { 
                PED::DELETE_PED(&l_B3._fC);
            }
        } else if (sub_51b2(l_88) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        } else { 
            PED::SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(l_B3._fC, 1);
            PED::SET_PED_KEEP_TASK(l_B3._fC, 1);
            ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&l_B3._fC);
        }
    } else { 
        if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) {
            if (ENTITY::IS_ENTITY_DEAD(l_B3._fC)) {
                if (!ENTITY::IS_ENTITY_ON_SCREEN(l_B3._fC)) {
                    if (sub_51b2(l_88) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    } else { 
                        PED::DELETE_PED(&l_B3._fC);
                    }
                } else if (sub_51b2(l_88) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                } else { 
                    ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&l_B3._fC);
                }
            }
        }
        l_B3._fC = 0;
    }
    if (l_A9) {
        PED::REMOVE_RELATIONSHIP_GROUP(l_AA);
        l_A9 = 0;
    }
    if (a_0) {
        sub_5195("Resetting script", -1);
        GAMEPLAY::SET_BIT(&g_16416._f514[l_88/*1*/], 11);
    } else { 
        sub_5195("Terminating script", -1);
        GAMEPLAY::CLEAR_BIT(&g_16416._f514[l_88/*1*/], 16);
        if (GAMEPLAY::IS_BIT_SET(g_149411, 1)) {
            GAMEPLAY::CLEAR_BIT(&g_149411, 1);
        }
        SCRIPT::TERMINATE_THIS_THREAD();
    }
}

void sub_5195(auto a_0, auto a_1) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
        return ;
    }
    if (a_1 == -1) {
    } else { }
}

auto sub_51b2(auto a_0) {
    if (a_0 == -1) {
        return 0;
    }
    return g_16416._f3F[a_0/*1*/];
}

void sub_51ce(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (!a_0._f12) {
            asm .vardef<F> 5, "[{\"offset\":0,\"value\":10}]"
            v_10 = 0;
            v_11 = 0;
            v_10 = PED::GET_PED_NEARBY_PEDS(PLAYER::PLAYER_PED_ID(), &v_5, -1);
            for (v_4 = 0; v_4 < a_0; v_4 += 1) {
                a_0[v_4/*1*/] = 0;
            }
            v_4 = 0;
            for (v_11 = 0; v_11 < v_10; v_11 += 1) {
                if (v_4 < a_0) {
                    if ((ENTITY::DOES_ENTITY_EXIST(v_5[v_11/*1*/]) && (!PED::IS_PED_INJURED(v_5[v_11/*1*/]))) && (!PED::IS_PED_IN_ANY_VEHICLE(v_5[v_11/*1*/], 0))) {
                        if (PED::IS_PED_GROUP_MEMBER(v_5[v_11/*1*/], PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID()))) {
                            a_0[v_4/*1*/] = v_5[v_11/*1*/];
                            a_0._f5[v_4/*3*/]/*{3}*/ = ENTITY::GET_ENTITY_COORDS(v_5[v_11/*1*/], 1);
                            v_4 += 1;
                        }
                    }
                }
            }
            a_0._f12 = 1;
        }
        for (v_4 = 0; v_4 < a_0; v_4 += 1) {
            if ((ENTITY::DOES_ENTITY_EXIST(a_0[v_4/*1*/]) && (!PED::IS_PED_INJURED(a_0[v_4/*1*/]))) && (!PED::IS_PED_IN_ANY_VEHICLE(a_0[v_4/*1*/], 0))) {
                if (a_0._f13) {
                    ENTITY::SET_ENTITY_VISIBLE(a_0[v_4/*1*/], 0, 0);
                    if (a_1) {
                        ENTITY::SET_ENTITY_COLLISION(a_0[v_4/*1*/], 0, 0);
                        ENTITY::FREEZE_ENTITY_POSITION(a_0[v_4/*1*/], 1);
                        ENTITY::SET_ENTITY_COORDS_NO_OFFSET(a_0[v_4/*1*/], a_0._f5[v_4/*3*/], 1, 1, 1);
                    }
                } else if (!ENTITY::IS_ENTITY_VISIBLE(a_0[v_4/*1*/])) {
                    ENTITY::SET_ENTITY_VISIBLE(a_0[v_4/*1*/], 1, 0);
                    if (a_1) {
                        ENTITY::SET_ENTITY_COLLISION(a_0[v_4/*1*/], 1, 0);
                        ENTITY::FREEZE_ENTITY_POSITION(a_0[v_4/*1*/], 0);
                        ENTITY::SET_ENTITY_COORDS_NO_OFFSET(a_0[v_4/*1*/], a_0._f5[v_4/*3*/], 1, 1, 1);
                    }
                }
            }
        }
    }
}

void sub_5383() {
    if (g_16416._f5 && (g_16416._f6 == GAMEPLAY::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()))) {
        UI::CLEAR_HELP(1);
        g_16416._f5 = 0;
    }
}

void sub_53b4(auto a_0) {
    if (a_0) {
        if (is_in_transition) {
            if (NETWORK::NETWORK_IS_IN_MP_CUTSCENE()) {
                NETWORK::NETWORK_SET_IN_MP_CUTSCENE(0, 0);
            }
        }
    }
}

void sub_53d5(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (is_in_transition) {
        sub_5a90();
    }
    if (sub_5a62(1)) {
        if (a_0._f13) {}
        if (is_in_transition) {
            if (a_3) {
                if (!sub_5a3f()) {
                } else if (((!sub_5a2e()) && (!sub_12f49())) && (!STREAMING::IS_NEW_LOAD_SCENE_ACTIVE())) {
                    sub_55f3(PLAYER::PLAYER_ID(), 1, 0);
                } else { 
                    sub_55f3(PLAYER::PLAYER_ID(), 0, 66048);
                }
            }
        } else { 
            PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), 1, 0);
        }
        AI::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
        ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), 1, 0);
    }
    if (a_2) {
        CAM::RENDER_SCRIPT_CAMS(0, 0, 3000, 1, 0, 0);
    }
    if (a_1) {
        CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0.0);
        CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0.0, 0x3f800000);
    }
    a_0._f1E = 1;
    a_0._f1C = GAMEPLAY::GET_GAME_TIMER();
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        a_0._f1D = NETWORK::GET_NETWORK_TIME();
    }
    if (is_in_transition) {
        sub_553c();
        sub_5507();
    }
    if ((a_0._f21 != 0) || (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_0._f22))) {
        a_0._f22/*"16"*/ = "";
        a_0._f21 = 0;
    }
    if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_IS_IN_TUTORIAL_SESSION()) && (a_0._f20 != 0)) {
        if (!NETWORK::_35F0B98A8387274D()) {
            NETWORK::NETWORK_END_TUTORIAL_SESSION();
            a_0._f20 = 0;
        }
    } else { }
}

void sub_5507() {
    if (!g_140739) {
        return ;
    }
    sub_551e();
}

void sub_551e() {
    g_140739 = 0;
    g_140739._f1/*"24"*/ = "";
    g_140739._f7 = 0;
}

void sub_553c() {
    sub_55e2(1);
    sub_5593(4, 0, -1);
    sub_5593(6, 0, -1);
    sub_5593(7, 0, -1);
    sub_5593(3, 0, -1);
    sub_5593(1, 0, -1);
    sub_5593(2, 0, -1);
    sub_5593(11, 0, -1);
    sub_5593(13, 0, -1);
    sub_5593(14, 0, -1);
    sub_5593(16, 0, -1);
}

void sub_5593(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case 5:
        if (a_2 > -1) {
            g_146CF3._f89[a_2/*1*/] = a_1;
        }
        break;
    default:
        if (a_1) {
            GAMEPLAY::SET_BIT(&g_146CF3._f3B3, a_0);
        } else { 
            GAMEPLAY::CLEAR_BIT(&g_146CF3._f3B3, a_0);
        }
        break;
    }
}

void sub_55e2(auto a_0) {
    g_258209._f111F = a_0;
}

void sub_55f3(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        if (SCRIPT::_GET_NO_LOADING_SCREEN()) {
            SCRIPT::SET_NO_LOADING_SCREEN(0);
        }
    }
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_5 = a_2;
        PLAYER::SET_PLAYER_CONTROL(a_0, a_1, v_5);
    } else { 
        v_6 = (a_2 & 2) != 0;
        v_7 = (a_2 & 4) != 0;
        v_8 = (a_2 & 8) != 0;
        v_9 = (a_2 & 16) != 0;
        v_A = (a_2 & 32) != 0;
        v_B = (a_2 & 64) != 0;
        v_C = (a_2 & 128) != 0;
        v_D = (a_2 & 256) != 0;
        v_E = (a_2 & 512) != 0;
        v_F = (a_2 & 1024) != 0;
        v_10 = (a_2 & 2048) != 0;
        v_11 = (a_2 & 4096) != 0;
        v_12 = (a_2 & 8192) != 0;
        v_13 = (a_2 & 16384) != 0;
        v_14 = (a_2 & 32768) != 0;
        v_15 = (a_2 & 65536) != 0;
        v_16 = (a_2 & 131072) != 0;
        v_17 = (a_2 & 262144) != 0;
        v_18 = (a_2 & 524288) != 0;
        v_19 = (a_2 & 0x100000) != 0;
        v_1A = (a_2 & 0x200000) != 0;
        v_1B = (a_2 & 0x400000) != 0;
        v_1C = (a_2 & 0x800000) != 0;
        if (!sub_5a3f()) {
            v_1D = 0;
            if (a_1 == 1) {
                v_1D = 1;
            }
            if ((v_14 == 0) && (!v_19)) {
                v_1D = 1;
            }
            if (v_E == 1) {
                v_1D = 1;
            }
            if (v_1D) {
                return ;
            }
        }
        if (v_16) {}
        if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0) && PLAYER::IS_PLAYER_PLAYING(a_0)) {
            v_1E = PLAYER::GET_PLAYER_PED(a_0);
            if (!v_18) {
                if ((v_17 && (a_1 == 0)) && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    NETWORK::FADE_OUT_LOCAL_PLAYER(1);
                } else { 
                    ENTITY::SET_ENTITY_VISIBLE(v_1E, !v_12, 0);
                }
                if (!v_12) {
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!v_17)) {
                        NETWORK::FADE_OUT_LOCAL_PLAYER(0);
                    }
                    g_24E1AF[a_0/*306*/]._fF0 = 0;
                }
            }
            if (a_1) {
                if ((!sub_59fd(v_1E)) && (!ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(v_1E))) {
                    if (!v_1A) {
                        ENTITY::SET_ENTITY_COLLISION(v_1E, 1, 0);
                    }
                } else { }
                if (!ENTITY::IS_ENTITY_ATTACHED(v_1E)) {
                    if (!v_19) {
                        ENTITY::FREEZE_ENTITY_POSITION(v_1E, 0);
                    } else { }
                    ENTITY::_3910051CCECDB00C(v_1E, 1);
                } else if (!v_19) {
                    ENTITY::FREEZE_ENTITY_POSITION(v_1E, 0);
                } else { }
                PED::SET_PED_CAN_BE_TARGETTED(v_1E, 1);
                PLAYER::SET_PLAYER_INVINCIBLE(a_0, 0);
                PED::_4668D80430D6C299(v_1E);
                PED::SET_PED_CAN_RAGDOLL(v_1E, 1);
                sub_59cf();
                sub_5992();
                if (PLAYER::IS_PLAYER_TELEPORT_ACTIVE()) {
                    if (!v_1B) {}
                }
                if (STREAMING::IS_NEW_LOAD_SCENE_ACTIVE()) {}
                g_24E1AF[a_0/*306*/]._fF1 = 0;
                if (!v_1C) {
                    v_7 = 1;
                }
            } else { 
                if ((!sub_59fd(v_1E)) && (!ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(v_1E))) {
                    if (!v_1A) {
                        ENTITY::SET_ENTITY_COLLISION(v_1E, !v_13, 0);
                    }
                    if (!ENTITY::IS_ENTITY_ATTACHED(v_1E)) {
                        if (!v_19) {
                            ENTITY::FREEZE_ENTITY_POSITION(v_1E, v_14);
                        }
                        if (!v_14) {
                            ENTITY::_3910051CCECDB00C(v_1E, 1);
                        }
                    }
                }
                if (v_E) {
                    PLAYER::SET_PLAYER_INVINCIBLE(a_0, 0);
                } else { 
                    PLAYER::SET_PLAYER_INVINCIBLE(a_0, 1);
                }
                PED::SET_PED_CAN_BE_TARGETTED(v_1E, v_15);
                if (v_7) {
                    if ((!PED::IS_PED_FATALLY_INJURED(v_1E)) && (!PED::IS_PED_IN_ANY_VEHICLE(v_1E, 0))) {
                        AI::CLEAR_PED_TASKS_IMMEDIATELY(v_1E);
                    }
                }
            }
            v_1F = 0;
            if (v_6) {
                v_1F |= 2;
            }
            if (v_7) {
                v_1F |= 4;
            }
            if (v_8) {
                v_1F |= 8;
            }
            if (v_9) {
                v_1F |= 16;
            }
            if (v_A) {
                v_1F |= 32;
            }
            if (v_B) {
                v_1F |= 64;
            }
            if (v_C) {
                v_1F |= 128;
            }
            if (v_D) {
                v_1F |= 256;
            }
            if (v_E) {
                v_1F |= 512;
            }
            if (v_F) {
                v_1F |= 1024;
            }
            if (v_10) {
                v_1F |= 2048;
            }
            if (v_11) {
                v_1F |= 4096;
            }
            PLAYER::SET_PLAYER_CONTROL(a_0, a_1, v_1F);
        }
    }
}

void sub_5992() {
    g_2507F3._f2B3 = 0;
    g_2507F3._f2B4 = 0;
    g_2507F3._f2B5/*{3}*/ = {9999.9, 9999.9, 9999.9 };
    g_24B237._f684/*{2}*/ = v_2;
}

void sub_59cf() {
    g_24B237._f26E = 0;
    g_24B237._f6AD = 0;
    g_24B237._f1E4 = 0;
    g_24E1AF[PLAYER::PLAYER_ID()/*306*/]._fCD = 0;
}

auto sub_59fd(auto a_0) {
    if (PED::IS_PED_IN_ANY_VEHICLE(a_0, 1)) {
        return 1;
    } else { 
        v_3 = AI::GET_SCRIPT_TASK_STATUS(a_0, 0x950b6492);
        if (v_3 == 0) {
            return 1;
        }
    }
    return 0;
}

auto sub_5a2e() {
    return GAMEPLAY::IS_BIT_SET(g_25204A, 2);
}

auto sub_5a3f() {
    if (sub_5a54() == 0) {
        return 1;
    }
    return 0;
}

auto sub_5a54() {
    return g_1406D2._f12;
}

auto sub_5a62(auto a_0) {
    if (is_in_transition) {
        return sub_47bf(PLAYER::PLAYER_ID(), a_0, !sub_701e0(1));
    } else { 
        return !PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID());
    }
}

void sub_5a90() {
    if (g_1406A0._f1 == 1) {
        sub_5abb(0);
        g_1406A0._f1 = 0;
        g_188C6B[PLAYER::PLAYER_ID()/*109*/]._f8 = 0;
    }
}

void sub_5abb(auto a_0) {
    if (sub_5d06()) {
        if (a_0 == 1) {
            if (g_258209._f1097 == -1) {
                g_258209._f1097 = 60000;
            }
            sub_5cc9(&g_258209._f1095, 0, 0);
            if (g_258209._f109A == -1) {
                g_258209._f109A = 10000;
            }
            sub_5cc9(&g_258209._f1098, 0, 0);
        } else { 
            g_1406A0 = 0;
            sub_5bda();
        }
        if (((!NETWORK::NETWORK_IS_ACTIVITY_SESSION()) && (!sub_5bcb())) && (!sub_5b53(PLAYER::PLAYER_ID()))) {
            g_EE5D4 = 0;
        }
        g_188C6B[PLAYER::PLAYER_ID()/*109*/]._f7 = 0;
    }
}

auto sub_5b53(auto a_0) {
    if (sub_5b77(a_0, 1)) {
        if (g_1837E7[a_0/*410*/] != 6) {
            return 1;
        }
    }
    return 0;
}

auto sub_5b77(auto a_0, auto a_1) {
    if (a_1) {
        if (sub_5ba3(a_0)) {
            return 1;
        }
    }
    if (g_1837E7[a_0/*410*/] == -1) {
        return 0;
    }
    return 1;
}

auto sub_5ba3(auto a_0) {
    return sub_5bb1(a_0);
}

auto sub_5bb1(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(g_1837E7[a_0/*410*/]._fD._f1, 0);
}

auto sub_5bcb() {
    return g_25204A._f2C9;
}

void sub_5bda() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (!sub_5d06()) {
            if (sub_47bf(PLAYER::PLAYER_ID(), 1, 0)) {
                PED::SET_PED_CAN_BE_DRAGGED_OUT(PLAYER::PLAYER_PED_ID(), 1);
                PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 342, 0);
                PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 122, 0);
            }
            PLAYER::SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(PLAYER::PLAYER_ID(), 1.0);
            NETWORK::_1B857666604B1A74(0);
            NETWORK::NETWORK_SET_FRIENDLY_FIRE_OPTION(1);
            if ((g_1406A0._f1 == 0) || (g_1406A0._f2 == 1)) {
                g_1406A0._f2 = 0;
                NETWORK::USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(0);
            }
        } else { 
            if (sub_47bf(PLAYER::PLAYER_ID(), 1, 1)) {
                PED::SET_PED_CAN_BE_DRAGGED_OUT(PLAYER::PLAYER_PED_ID(), 0);
                WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
                PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 342, 1);
                PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 122, 1);
                PLAYER::SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(PLAYER::PLAYER_ID(), 0.5);
                if ((g_1406A0._f1 == 0) || (g_1406A0._f2 == 1)) {
                    NETWORK::USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(1);
                }
            }
            NETWORK::_1B857666604B1A74(1);
            NETWORK::NETWORK_SET_FRIENDLY_FIRE_OPTION(0);
        }
    }
}

void sub_5cc9(auto a_0, auto a_1, auto a_2) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_1)) {
        if (!a_2) {
            a_0 = NETWORK::GET_NETWORK_TIME();
        } else { 
            a_0 = NETWORK::_89023FBBF9200E9F();
        }
    } else { 
        a_0 = GAMEPLAY::GET_GAME_TIMER();
    }
    a_0._f1 = 1;
}

auto sub_5d06() {
    return g_1406A0;
}

void sub_5d12(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_7513(a_0);
    if (sub_7507(v_5) && (!PED::IS_PED_INJURED(a_0))) {
        sub_5e73(a_0, &game_state._f6EA._f21B._f12A[v_5/*284*/], a_1);
        for (v_6 = 0; v_6 <= (8 - 1); v_6 += 1) {
            UI::_72C1056D678BB7D8(game_state._f6EA._f21B._f47F[v_6/*4*/][v_5/*1*/]);
            if (a_2) {
                if ((v_6 == game_state._f6EA._f21B._f4A0) || ((game_state._f6EA._f21B._f4A0 == -1) && (v_6 == 4))) {
                    if ((game_state._f6EA._f21B._f47F[v_6/*4*/][v_5/*1*/] != 0) && (game_state._f6EA._f21B._f47F[v_6/*4*/][v_5/*1*/] != ${weapon_molotov})) {
                        if (WEAPON::HAS_PED_GOT_WEAPON(a_0, game_state._f6EA._f21B._f47F[v_6/*4*/][v_5/*1*/], 0)) {
                            WEAPON::SET_CURRENT_PED_WEAPON(a_0, game_state._f6EA._f21B._f47F[v_6/*4*/][v_5/*1*/], 1);
                        }
                    }
                }
            }
        }
        if (v_5 == 0) {
            STATS::STAT_GET_INT(0xc8fd0844, &v_7, -1);
        } else if (v_5 == 1) {
            STATS::STAT_GET_INT(0xd3161861, &v_7, -1);
        } else if (v_5 == 2) {
            STATS::STAT_GET_INT(0xe205ca9b, &v_7, -1);
        }
        PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), v_7);
    }
}

void sub_5e73(auto a_0, auto a_1, auto a_2) {
    if (!PED::IS_PED_INJURED(a_0)) {
        asm .vardef<F> 0x4c, "[{\"offset\":0,\"value\":44}]"
        asm .vardef<F> 0x79, "[{\"offset\":0,\"value\":50}]"
        for (v_C = 0; v_C < 2; v_C += 1) {
            for (v_A = 0; v_A <= (44 - 1); v_A += 1) {
                v_6 = sub_7293(v_A);
                if ((v_6 != 0) && (v_6 != ${slot_unarmed})) {
                    v_7 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(a_0, v_6);
                    if ((v_7 != 0) && (v_7 != ${weapon_unarmed})) {
                        if (sub_7044(v_7)) {
                            if (v_C == 0) {
                                v_4C[v_A/*1*/] = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_7);
                            } else { 
                                WEAPON::SET_PED_AMMO(a_0, v_7, 0);
                                WEAPON::SET_AMMO_IN_CLIP(a_0, v_7, 0);
                            }
                        } else { 
                            v_4C[v_A/*1*/] = 0;
                            WEAPON::SET_PED_AMMO(a_0, v_7, 0);
                            WEAPON::SET_AMMO_IN_CLIP(a_0, v_7, 0);
                        }
                    }
                }
            }
            for (v_D = 0; v_D < DLC1::GET_NUM_DLC_WEAPONS(); v_D += 1) {
                if (DLC1::GET_DLC_WEAPON_DATA(v_D, &v_E)) {
                    if ((!DLC1::_IS_OUTFIT_EMPTY(v_E)) && (!sub_6f00(v_E._f1))) {
                        if (v_C == 0) {
                            v_79[v_D/*1*/] = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_E._f1);
                        } else { 
                            WEAPON::SET_PED_AMMO(a_0, v_E._f1, 0);
                            WEAPON::SET_AMMO_IN_CLIP(a_0, v_E._f1, 0);
                        }
                    } else { 
                        v_79[v_D/*1*/] = 0;
                        WEAPON::SET_PED_AMMO(a_0, v_E._f1, 0);
                        WEAPON::SET_AMMO_IN_CLIP(a_0, v_E._f1, 0);
                    }
                }
            }
        }
        for (v_A = 0; v_A <= (44 - 1); v_A += 1) {
            v_6 = sub_7293(v_A);
            if ((v_6 != 0) && (v_6 != ${slot_unarmed})) {
                v_7 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(a_0, v_6);
                v_8 = a_1[v_A/*3*/];
                v_5 = a_1[v_A/*3*/]._f1;
                if (!sub_7044(v_8)) {
                    a_1[v_A/*3*/] = 0;
                    v_8 = 0;
                }
                if (v_8 != 0) {
                    if (v_8 != ${weapon_unarmed}) {
                        if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                            WEAPON::GIVE_WEAPON_TO_PED(a_0, v_8, 0, 0, 0);
                        }
                        if (WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8) < v_5) {
                            WEAPON::SET_PED_AMMO(a_0, v_8, v_5);
                        }
                        v_B = 20;
                        while (((v_B >= 20) && (v_B < 32)) && (v_8 != ${weapon_petrolcan})) {
                            if (GAMEPLAY::IS_BIT_SET(a_1[v_A/*3*/]._f2, v_B) && WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                                WEAPON::SET_PED_WEAPON_TINT_INDEX(a_0, v_8, v_B - 20);
                                v_B = 0;
                            } else { 
                                v_B += 1;
                            }
                        }
                        v_B = 0;
                        v_9 = sub_64a4(v_8, v_B);
                        while (v_9 != 0) {
                            if (GAMEPLAY::IS_BIT_SET(a_1[v_A/*3*/]._f2, v_B)) {
                                if (!WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_9)) {
                                    WEAPON::GIVE_WEAPON_COMPONENT_TO_PED(a_0, v_8, v_9);
                                }
                            } else if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_9)) {
                                WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(a_0, v_8, v_9);
                            }
                            v_B += 1;
                            v_9 = sub_64a4(v_8, v_B);
                        }
                    }
                } else if (a_2) {
                    if (((v_7 != 0) && (v_7 != ${weapon_unarmed})) && (v_7 != ${object})) {
                        WEAPON::REMOVE_WEAPON_FROM_PED(a_0, v_7);
                        v_B = 0;
                        v_9 = sub_64a4(v_7, v_B);
                        while (v_9 != 0) {
                            if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_7, v_9)) {
                                WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(a_0, v_7, v_9);
                            }
                            v_B += 1;
                            v_9 = sub_64a4(v_7, v_B);
                        }
                    }
                }
                if (!a_2) {
                    if ((v_7 != 0) && (v_7 != ${weapon_unarmed})) {
                        if (WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_7) < v_4C[v_A/*1*/]) {
                            WEAPON::SET_PED_AMMO(a_0, v_7, v_4C[v_A/*1*/]);
                        }
                    }
                }
            }
        }
        for (v_4B = 0; v_4B < a_1._f85; v_4B += 1) {
            v_8 = a_1._f85[v_4B/*3*/];
            v_5 = a_1._f85[v_4B/*3*/]._f1;
            v_D = sub_6469(v_8, &v_E);
            if ((v_D != -1) && (!sub_6f00(v_E._f1))) {
                if (DLC1::_IS_OUTFIT_EMPTY(v_E) || sub_6f00(v_E._f1)) {
                    a_1._f85[v_4B/*3*/] = 0;
                    v_8 = 0;
                }
                if (v_8 != 0) {
                    if (v_8 != ${weapon_unarmed}) {
                        if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                            WEAPON::GIVE_WEAPON_TO_PED(a_0, v_8, 0, 0, 0);
                        }
                        if (WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8) < v_5) {
                            WEAPON::SET_PED_AMMO(a_0, v_8, v_5);
                        }
                        v_B = 20;
                        while ((v_B >= 20) && (v_B < 32)) {
                            if (GAMEPLAY::IS_BIT_SET(a_1._f85[v_4B/*3*/]._f2, v_B) && WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                                WEAPON::SET_PED_WEAPON_TINT_INDEX(a_0, v_8, v_B - 20);
                                v_B = 0;
                            } else { 
                                v_B += 1;
                            }
                        }
                        for (v_B = 0; v_B < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_D); v_B += 1) {
                            if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_D, v_B, &v_35)) {
                                if (GAMEPLAY::IS_BIT_SET(a_1._f85[v_4B/*3*/]._f2, v_B)) {
                                    if (!WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_35._f3)) {
                                        WEAPON::GIVE_WEAPON_COMPONENT_TO_PED(a_0, v_8, v_35._f3);
                                    }
                                } else if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_35._f3)) {
                                    WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(a_0, v_8, v_35._f3);
                                }
                            }
                        }
                    }
                } else if (a_2) {
                    if (((v_7 != 0) && (v_7 != ${weapon_unarmed})) && (v_7 != ${object})) {
                        WEAPON::REMOVE_WEAPON_FROM_PED(a_0, v_7);
                        for (v_B = 0; v_B < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_D); v_B += 1) {
                            if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_D, v_B, &v_35)) {
                                if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_7, v_35._f3)) {
                                    WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(a_0, v_7, v_35._f3);
                                }
                            }
                        }
                    }
                }
                if (!a_2) {
                    if ((v_8 != 0) && (v_8 != ${weapon_unarmed})) {
                        if (WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8) < v_79[v_D/*1*/]) {
                            WEAPON::SET_PED_AMMO(a_0, v_8, v_79[v_D/*1*/]);
                        }
                    }
                }
            }
        }
        if (((WEAPON::GET_CURRENT_PED_WEAPON(a_0, &v_7, 1) && (v_7 != 0)) && (v_7 != ${weapon_unarmed})) && (v_7 != ${object})) {
            v_5 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_7);
            if ((v_5 > 1) && (v_5 > WEAPON::GET_MAX_AMMO_IN_CLIP(a_0, v_7, 1))) {
                WEAPON::SET_PED_AMMO(a_0, v_7, v_5 - WEAPON::GET_MAX_AMMO_IN_CLIP(a_0, v_7, 1));
                WEAPON::SET_AMMO_IN_CLIP(a_0, v_7, WEAPON::GET_MAX_AMMO_IN_CLIP(a_0, v_7, 1));
            }
        }
    }
}

auto sub_6469(auto a_0, auto a_1) {
    v_5 = DLC1::GET_NUM_DLC_WEAPONS();
    for (v_4 = 0; v_4 < v_5; v_4 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_4, a_1)) {
            if (a_1._f1 == a_0) {
                return v_4;
            }
        }
    }
    return -1;
}

auto sub_64a4(auto a_0, auto a_1) {
    v_4 = 0;
    switch (a_0) {
    case ${weapon_pistol}:
        switch (a_1) {
        case 0:
            v_4 = 0xfed0fd71;
            break;
        case 1:
            v_4 = 0xed265a1c;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = 0x65ea7ebb;
            break;
        case 4:
            v_4 = 0xd7391086;
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x721b079;
            break;
        case 1:
            v_4 = 0xd67b4f2d;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0xc6654d72;
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_1) {
        case 0:
            v_4 = 0x31c4b22a;
            break;
        case 1:
            v_4 = 0x249a17d5;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x9b76c72c;
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xcb48aef0;
            break;
        case 1:
            v_4 = 0x10e6ba2b;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x487aae09;
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_1) {
        case 0:
            v_4 = 0x26574997;
            break;
        case 1:
            v_4 = 0x350966fb;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_pi_supp};
            break;
        case 4:
            v_4 = 0x3cc6ba57;
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x27872c90;
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xbe5eea16;
            break;
        case 1:
            v_4 = 0xb1214f9b;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_scope_macro};
            break;
        case 5:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 6:
            v_4 = 0x4ead7533;
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9fbe33ec;
            break;
        case 1:
            v_4 = 0x91109691;
            break;
        case 2:
            v_4 = 0x75414f30;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = ${component_at_ar_flsh};
            break;
        case 5:
            v_4 = ${component_at_scope_medium};
            break;
        case 6:
            v_4 = ${component_at_ar_supp};
            break;
        case 7:
            v_4 = 0xd89b9658;
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0xfa8fa10f;
            break;
        case 1:
            v_4 = 0x8ec1c979;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = 0x377cd377;
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_1) {
        case 0:
            v_4 = 0xf434ef84;
            break;
        case 1:
            v_4 = 0x82158b47;
            break;
        case 2:
            v_4 = 0x3c00afed;
            break;
        case 3:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 4:
            v_4 = 0xd6dababe;
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_1) {
        case 0:
            v_4 = 0xe1ffb34a;
            break;
        case 1:
            v_4 = 0xd6c59cd6;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        case 4:
            v_4 = 0x92feccdd;
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_sr_supp};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = 0xa2d79ddb;
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x94e81bc7;
            break;
        case 1:
            v_4 = 0x86bd7f72;
            break;
        case 2:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 3:
            v_4 = ${component_at_ar_flsh};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_1) {
        case 0:
            v_4 = 0x9bc64089;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x4032b5e7;
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_1) {
        case 0:
            v_4 = 0x476f52f4;
            break;
        case 1:
            v_4 = ${component_at_scope_large};
            break;
        case 2:
            v_4 = ${component_at_scope_max};
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_scope_small};
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_1) {
        case 0:
            v_4 = 0xc8de6f06;
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_1) {
        case 0:
            v_4 = 0x8d1307b0;
            break;
        case 1:
            v_4 = 0xbb46e417;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_macro};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = 0x278c78af;
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_1) {
        case 0:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 1:
            v_4 = ${component_at_ar_flsh};
            break;
        case 2:
            v_4 = ${component_at_ar_supp_02};
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_1) {
        case 0:
            v_4 = 0x2297be19;
            break;
        case 1:
            v_4 = 0xd9d3ac92;
            break;
        case 2:
            v_4 = ${component_at_pi_flsh};
            break;
        case 3:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 4:
            v_4 = 0x77b8ab2f;
            break;
        }
        break;
    case 0xa3d4d34:
        switch (a_1) {
        case 0:
            v_4 = 0x4317f19e;
            break;
        case 1:
            v_4 = 0x334a5203;
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_afgrip};
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_1) {
        case 0:
            v_4 = 0x85a64df9;
            break;
        }
        break;
    case ${weapon_bullpuprifle}:
        switch (a_1) {
        case 0:
            v_4 = ${component_bullpuprifle_clip_01};
            break;
        case 1:
            v_4 = ${component_bullpuprifle_clip_02};
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_small};
            break;
        case 4:
            v_4 = ${component_at_ar_supp};
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0xa857bc78;
            break;
        }
        break;
    case ${weapon_snspistol}:
        switch (a_1) {
        case 0:
            v_4 = ${component_snspistol_clip_01};
            break;
        case 1:
            v_4 = ${component_snspistol_clip_02};
            break;
        case 2:
            v_4 = 0x8033ecaf;
            break;
        }
        break;
    case ${weapon_specialcarbine}:
        switch (a_1) {
        case 0:
            v_4 = ${component_specialcarbine_clip_01};
            break;
        case 1:
            v_4 = ${component_specialcarbine_clip_02};
            break;
        case 2:
            v_4 = ${component_at_ar_flsh};
            break;
        case 3:
            v_4 = ${component_at_scope_medium};
            break;
        case 4:
            v_4 = ${component_at_ar_supp_02};
            break;
        case 5:
            v_4 = ${component_at_ar_afgrip};
            break;
        case 6:
            v_4 = 0x730154f2;
            break;
        }
        break;
    case 0xd8df3c3c:
        switch (a_1) {
        case 0:
            v_4 = 0xc613f685;
            break;
        case 1:
            v_4 = 0xeed9fd63;
            break;
        case 2:
            v_4 = 0x50910c31;
            break;
        case 3:
            v_4 = 0x9761d9dc;
            break;
        case 4:
            v_4 = 0x7decfe30;
            break;
        case 5:
            v_4 = 0x3f4e8aa6;
            break;
        case 6:
            v_4 = 0x8b808bb;
            break;
        case 7:
            v_4 = 0xe28babef;
            break;
        case 8:
            v_4 = 0x7af3f785;
            break;
        }
        break;
    case 0xdb1aa450:
        switch (a_1) {
        case 0:
            v_4 = 0x476e85ff;
            break;
        case 1:
            v_4 = 0xb92c6979;
            break;
        case 2:
            v_4 = ${component_at_pi_supp};
            break;
        }
        break;
    case 0xdfe37640:
        switch (a_1) {
        case 0:
            v_4 = 0x5b3e7db6;
            break;
        case 1:
            v_4 = 0xe7939662;
            break;
        }
        break;
    case 0xc1b3c3d1:
        switch (a_1) {
        case 0:
            v_4 = 0xe9867ce3;
            break;
        case 1:
            v_4 = 0x16ee3040;
            break;
        case 2:
            v_4 = 0x9493b80d;
            break;
        }
        break;
    default:
        if (a_0 != 0) {
            v_5 = sub_6469(a_0, &v_6);
            if (v_5 != -1) {
                if (a_1 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_5)) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_5, a_1, &v_2D)) {
                        return v_2D._f3;
                    }
                }
            }
        }
        break;
    }
    return v_4;
}

auto sub_6f00(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
    } else { 
        switch (a_0) {
        case 0x99aeeb3b:
        case ${weapon_bullpupshotgun}:
        case ${weapon_assaultsmg}:
            return 0;
            break;
        case ${weapon_snspistol}:
        case ${weapon_bottle}:
        case 0x61012683:
            return 0;
            break;
        case ${weapon_specialcarbine}:
        case ${weapon_heavypistol}:
            return 0;
            break;
        case ${weapon_bullpuprifle}:
            return 0;
            break;
        case 0x92a27487:
        case 0x83839c4:
            return 0;
            break;
        case 0xa89cb99e:
        case 0x7f7497e5:
            return 0;
            break;
        case 0xc734385a:
        case 0x3aabbbaa:
            return 0;
            break;
        case 0xab564b93:
        case 0x63ab0442:
            return 0;
            break;
        case 0xd8df3c3c:
        case 0xdc4db296:
        case 0xa3d4d34:
            return 0;
            break;
        case 0x8210d4d5:
        case 0x8bb05fd7:
        case ${weapon_programmablear}:
        case 0xa52e2957:
        case 0xc1b3c3d1:
        case ${weapon_heavyrifle}:
        case ${weapon_rubbergun}:
        case 0xd04c944d:
        case 0xd866acd1:
        case ${weapon_assaultmg}:
        case 0xdfe37640:
        case 0xe232c28c:
        case ${weapon_loudhailer}:
        case 0xef951fbb:
        case 0x787f0bb:
        case ${weapon_assaultsniper}:
        case 0x47757124:
        case 0x624fe830:
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_7044(auto a_0) {
    if (a_0 == 0xfc508e33) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_7282()) {
            return 1;
        } else { 
            return 0;
        }
    }
    if ((a_0 == 0x7f7497e5) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
        return 0;
    }
    switch (a_0) {
    case ${weapon_assaultsmg}:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (!sub_7216(1, 1)) {
                return 0;
            }
        }
        break;
    case ${weapon_sawnoffshotgun}:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (!sub_7216(1, 1)) {
                return 0;
            }
        }
        break;
    case 0x6d544c99:
        if ((!sub_715b()) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 0;
        }
        break;
    case 0xf9dcbf2d:
        if (!sub_715b()) {
            return 0;
        }
        break;
    case 0xd8df3c3c:
    case 0xdc4db296:
        break;
    }
    for (v_3 = 0; v_3 < DLC1::GET_NUM_DLC_WEAPONS(); v_3 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_3, &v_4)) {
            if (v_4._f1 == a_0) {
                if (DLC1::_IS_OUTFIT_EMPTY(v_4) || sub_6f00(v_4._f1)) {
                    return 0;
                }
            }
        }
    }
    return WEAPON::IS_WEAPON_VALID(a_0);
}

auto sub_715b() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        if (NETWORK::_85443FF4C328F53B()) {
            if (NETWORK::_593570C289A77688()) {
                STATS::STAT_GET_INT(0x5da524f8, &v_2, -1);
                GAMEPLAY::SET_BIT(&v_2, 2);
                GAMEPLAY::SET_BIT(&v_2, 4);
                GAMEPLAY::SET_BIT(&v_2, 6);
                GAMEPLAY::SET_BIT(&g_19, 2);
                GAMEPLAY::SET_BIT(&g_19, 4);
                GAMEPLAY::SET_BIT(&g_19, 6);
                STATS::STAT_SET_INT(0x5da524f8, v_2, 1);
                if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
                    v_2 = GAMEPLAY::GET_PROFILE_SETTING(866);
                    GAMEPLAY::SET_BIT(&v_2, 0);
                    STATS::_DAC073C7901F9E15(v_2);
                }
                return 1;
            }
        }
    }
    if (g_21B38 == 2) {
        return 1;
    } else if (g_21B38 == 3) {
        return 0;
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        if (GAMEPLAY::IS_BIT_SET(GAMEPLAY::GET_PROFILE_SETTING(866), 0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_7216(auto a_0, auto a_1) {
    if (a_0) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f29C._f2D4, 2)) {
            return 1;
        }
    }
    if (NETWORK::_67A5589628E0CFF6()) {
        if ((!a_1) || NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
            if ((!GAMEPLAY::IS_PS3_VERSION()) && (!GAMEPLAY::IS_ORBIS_VERSION())) {
                return 1;
            }
        }
    }
    if (a_1) {
        if (NETWORK::_1353F87E89946207()) {
            return 0;
        }
    }
    if (NETWORK::_67A5589628E0CFF6()) {
        return 1;
    }
    return 0;
}

auto sub_7282() {
    return DLC2::IS_DLC_PRESENT(0x9b328228);
}

auto sub_7293(auto a_0) {
    v_3 = 0;
    switch (a_0) {
    case 0:
        v_3 = ${slot_unarmed};
        break;
    case 1:
        v_3 = ${slot_knife};
        break;
    case 2:
        v_3 = ${slot_nightstick};
        break;
    case 3:
        v_3 = ${slot_hammer};
        break;
    case 4:
        v_3 = ${slot_bat};
        break;
    case 5:
        v_3 = ${slot_crowbar};
        break;
    case 6:
        v_3 = ${slot_golfclub};
        break;
    case 7:
        v_3 = ${slot_stungun};
        break;
    case 8:
        v_3 = ${slot_pistol};
        break;
    case 9:
        v_3 = ${slot_combatpistol};
        break;
    case 10:
        v_3 = ${slot_appistol};
        break;
    case 11:
        v_3 = ${slot_microsmg};
        break;
    case 12:
        v_3 = ${slot_smg};
        break;
    case 13:
        v_3 = ${slot_assaultrifle};
        break;
    case 14:
        v_3 = ${slot_carbinerifle};
        break;
    case 15:
        v_3 = ${slot_advancedrifle};
        break;
    case 16:
        v_3 = ${slot_mg};
        break;
    case 17:
        v_3 = ${slot_combatmg};
        break;
    case 18:
        v_3 = ${slot_pumpshotgun};
        break;
    case 19:
        v_3 = ${slot_sawnoffshotgun};
        break;
    case 20:
        v_3 = ${slot_assaultshotgun};
        break;
    case 21:
        v_3 = ${slot_sniperrifle};
        break;
    case 22:
        v_3 = ${slot_heavysniper};
        break;
    case 23:
        v_3 = ${slot_grenadelauncher};
        break;
    case 24:
        v_3 = ${slot_rpg};
        break;
    case 25:
        v_3 = ${slot_minigun};
        break;
    case 26:
        v_3 = ${slot_grenade};
        break;
    case 27:
        v_3 = ${slot_stickybomb};
        break;
    case 28:
        v_3 = ${slot_smokegrenade};
        break;
    case 29:
        v_3 = ${slot_molotov};
        break;
    case 30:
        v_3 = ${slot_fireextinguisher};
        break;
    case 31:
        v_3 = ${slot_petrolcan};
        break;
    case 33:
        v_3 = ${slot_parachute};
        break;
    case 34:
        v_3 = ${slot_digiscanner};
        break;
    case 35:
        v_3 = ${slot_object};
        break;
    case 36:
        v_3 = ${slot_assaultsmg};
        break;
    case 37:
        v_3 = ${slot_bullpupshotgun};
        break;
    case 38:
        v_3 = 0x22541ebe;
        break;
    }
    return v_3;
}

auto sub_7507(auto a_0) {
    return a_0 < 3;
}

auto sub_7513(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
        for (v_3 = 0; v_3 <= 2; v_3 += 1) {
            if (sub_7550(v_3) == v_4) {
                return v_3;
            }
        }
    }
    return 145;
}

auto sub_7550(auto a_0) {
    if (sub_7507(a_0)) {
        return game_state._f7F07[a_0/*29*/];
    } else if (a_0 != 145) {}
    return 0;
}

void sub_757a() {
    CAM::SET_WIDESCREEN_BORDERS(0, -1);
    sub_5383();
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), 0);
        if (!is_in_transition) {
            PLAYER::SET_EVERYONE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 0);
            PED::CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(PLAYER::PLAYER_PED_ID());
        }
    }
    g_169BD = 0;
    sub_75c7(0, 1, 1, 0);
}

void sub_75c7(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0) {
        PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(PLAYER::PLAYER_ID());
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 1);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 1);
        sub_77d3(1);
        UI::_A8FDB297A8D25FBA();
        UI::_FDB423997FA30340();
        if (current_character._f1 > 3) {
            if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
                AUDIO::STOP_SCRIPTED_CONVERSATION(0);
            }
            if (!sub_77ac()) {
                current_character._f1 = 3;
            }
            g_3D60 = 5;
        }
        sub_7779(1, a_3, a_2, 0);
        g_D971 = 1;
        g_10983 = 1;
        g_10EC3 = 1;
    } else { 
        sub_77d3(0);
        UI::_E1CD1E48E025E661();
        g_D971 = 0;
        if (a_1) {
            GRAPHICS::_03FC694AE06C5A20();
        }
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE(PLAYER::PLAYER_ID(), 0);
        PLAYER::SET_POLICE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 0);
        sub_7779(0, a_3, a_2, 0);
        if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (!sub_769a(PLAYER::PLAYER_ID()))) {
            ENTITY::SET_ENTITY_INVINCIBLE(PLAYER::PLAYER_PED_ID(), 0);
        }
        g_10EC3 = 0;
    }
}

auto sub_769a(auto a_0) {
    if (sub_76ed(a_0, 0)) {
        return 1;
    }
    if (sub_76dc()) {
        if (a_0 == PLAYER::PLAYER_ID()) {
            return 1;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_24E1AF[a_0/*306*/]._fC2, 2)) {
        return 1;
    }
    return 0;
}

auto sub_76dc() {
    return GAMEPLAY::IS_BIT_SET(g_240005, 3);
}

auto sub_76ed(auto a_0, auto a_1) {
    if (a_0 == PLAYER::PLAYER_ID()) {
        v_4 = sub_7738(-1, 0) == 8;
    } else { 
        v_4 = g_1837E7[a_0/*410*/]._fC0 == 8;
    }
    if (a_1 == 1) {
        if (NETWORK::NETWORK_IS_PLAYER_ACTIVE(a_0)) {
            v_4 = PLAYER::GET_PLAYER_TEAM(a_0) == 8;
        }
    }
    return v_4;
}

auto sub_7738(auto a_0, auto a_1) {
    v_5 = a_0;
    if (v_5 == -1) {
        v_5 = sub_4ba5();
    }
    if (g_141431[v_5/*1*/] == 1) {
        if (a_1) {}
        v_4 = 8;
    } else { 
        v_4 = g_1407E4[v_5/*1*/];
        if (a_1) {}
    }
    return v_4;
}

auto sub_7779(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0;
    if (GAMEPLAY::IS_PC_VERSION()) {
        if ((CUTSCENE::_A0FE76168A189DDB() != a_0) && a_2) {
            CUTSCENE::_20746F7B1032A3C7(a_0, a_1, 1, a_3);
            v_6 = 1;
        }
    }
    return v_6;
}

auto sub_77ac() {
    if ((current_character._f1 == 1) || (current_character._f1 == 0)) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_77d3(auto a_0) {
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 13);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 13);
    }
}

void sub_77f6() {
    if ((l_4F5 > 0) || l_B3._f69._f19) {
        l_B3._f69._f1A = 90;
        l_B3._f69._f19 = 1;
        sub_7826();
    }
}

auto sub_7826() {
    if (l_B3._f69._f19) {
        switch (l_B3._f69._f1A) {
        case 0:
            for (v_2 = 0; v_2 < l_4F5; v_2 += 1) {
                if (g_270887[v_2/*1*/] == -1) {
                    if (!sub_99f3(0x4a9a0ae, 0x3fa29128, g_27087C[v_2/*1*/], 0x2005d9a9, g_270892[v_2/*1*/], g_27089D[v_2/*1*/], 1, 4, 0, 3)) {
                        l_B3._f69._f1A = 90;
                        return 1;
                    }
                } else if ((!sub_99f3(0x4a9a0ae, 0x92f0dbbf, g_270887[v_2/*1*/], 0x2005d9a9, 1, 0, 1, 4, 0, 3)) || (!sub_99f3(0x4a9a0ae, 0x3fa29128, g_27087C[v_2/*1*/], 0x2005d9a9, g_270892[v_2/*1*/], g_27089D[v_2/*1*/], 1, 4, 0, 3))) {
                    l_B3._f69._f1A = 90;
                    return 1;
                }
            }
            if (sub_9683()) {
                l_B3._f69._f1A = 70;
            } else { 
                l_B3._f69._f1A = 90;
            }
            break;
        case 70:
            if (sub_9621(sub_9649())) {
                if (sub_95fb(sub_9649()) == 2) {
                    l_B3._f69._f1A = 80;
                } else { 
                    l_B3._f69._f1A = 90;
                }
            }
            break;
        case 80:
            l_B3._f69._f19 = 0;
            l_B3._f69._f1A = 0;
            UI::_170F541E1CADD1DE(0);
            UI::_SET_SINGLEPLAYER_HUD_CASH(0, 0);
            for (v_2 = 0; v_2 < l_4F5; v_2 += 1) {
                if (g_270887[v_2/*1*/] == -1) {
                    sub_8094(l_88, 1, 2);
                    sub_7e48(0x89f1aac6, g_27089D[v_2/*1*/] * g_270892[v_2/*1*/]);
                } else { 
                    sub_7e48(0x89f1aac6, g_27089D[v_2/*1*/] * g_270892[v_2/*1*/]);
                    sub_8094(l_88, 1, 0);
                    sub_7cfc(g_270871[v_2/*1*/]);
                    sub_7c83();
                }
            }
            if (l_4F5 != 0) {
                if (sub_7c6f()) {
                    sub_7aca(sub_9649());
                }
            }
            l_4F5 = 0;
            l_4F8 = 0;
            l_4F7 = 0;
            break;
        case 90:
            sub_7aca(sub_9649());
            UI::_170F541E1CADD1DE(0);
            UI::_SET_SINGLEPLAYER_HUD_CASH(0, 0);
            for (v_2 = 0; v_2 < l_4F5; v_2 += 1) {
                if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), g_270871[v_2/*1*/], 0)) {
                    v_3 = WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), g_270871[v_2/*1*/]);
                    if (v_3 >= g_270892[v_2/*1*/]) {
                        v_3 -= g_270892[v_2/*1*/];
                    } else { 
                        v_3 = 0;
                    }
                    WEAPON::SET_PED_AMMO(PLAYER::PLAYER_PED_ID(), g_270871[v_2/*1*/], v_3);
                }
            }
            l_4F5 = 0;
            l_4F8 = 0;
            l_4F7 = 0;
            l_B3._f69._f19 = 0;
            l_B3._f69._f1A = 0;
            l_B3._f69._f15 = 0;
            return 0;
            break;
        }
    }
    return 1;
}

void sub_7aca(auto a_0) {
    v_3 = 0;
    if (!sub_7c6f()) {
        v_3 = 1;
    }
    if (a_0 != -1) {
        if (sub_7c47(a_0)) {
            if (!v_3) {
                __678_$22A86DAAC9EDB234();
            }
        } else if (!v_3) {
            UNK3::_E2A99A9B524BEFFF(g_26FAE6[a_0/*72*/]);
        }
        sub_7b1c(&g_26FAE6[a_0/*72*/]);
    }
}

void sub_7b1c(auto a_0) {
    a_0 = 0;
    a_0 = 0x7fffffff;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0xa10aed30;
    a_0._f4 = 0x83b4a55b;
    a_0._f5 = 0;
    a_0._f6 = 0x492b4a93;
    a_0._f7 = 0xbabfd2a5;
    a_0._f8 = 0;
    a_0._f8._f1 = 0;
    a_0._f8._f2 = 0;
    sub_7bff(&a_0._f8._f3);
    sub_7bff(&a_0._f8._f10);
    a_0._f8._f1D/*"32"*/ = "";
    a_0._f8._f25/*"24"*/ = "";
    a_0._f8._f2B/*"16"*/ = "";
    a_0._f8._f2F/*"16"*/ = "";
    a_0._f8._f33 = 0;
    a_0._f8._f34 = 0;
    a_0._f8._f35 = 0;
    a_0._f8._f36 = 0;
    a_0._f8._f37 = 0;
    a_0._f8._f38 = 0;
    a_0._f41 = 0;
    a_0._f42 = 0;
    a_0._f43 = 0;
    a_0._f44 = 0;
    a_0._f45 = 0;
    a_0._f46 = 0;
    a_0._f47 = 0;
}

void sub_7bff(auto a_0) {
    a_0 = 0;
    a_0._f1 = 0;
    a_0._f2 = 0;
    a_0._f3 = 0;
    a_0._f4 = 0;
    a_0._f5 = 0;
    a_0._f6 = 0;
    a_0._f7 = 0;
    a_0._f8 = 0;
    a_0._f9 = 0;
    a_0._fA = 0;
    a_0._fB = 0;
    a_0._fC = 0;
}

auto sub_7c47(auto a_0) {
    if ((a_0 >= 0) && (a_0 < 5)) {
        return g_26FAE6[a_0/*72*/]._f5 == 1;
    }
    return 0;
}

auto sub_7c6f() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        return 1;
    }
    return 0;
}

void sub_7c83() {
    v_2 = sub_7caf(19);
    g_24C5EA[v_2/*83*/] = 19;
    g_24C5EA[v_2/*83*/]._f12[0/*16*/]/*"64"*/ = "-StraightIntoFreemode";
}

auto sub_7caf(auto a_0) {
    v_3 = 19;
    for (v_4 = 0; v_4 <= 19; v_4 += 1) {
        if (g_24C5EA[v_4/*83*/] == a_0) {
            v_3 = v_4;
            v_4 = 20;
        } else if (g_24C5EA[v_4/*83*/] == 0) {
            v_3 = v_4;
            v_4 = 20;
        }
    }
    return v_3;
}

void sub_7cfc(auto a_0) {
    switch (sub_7d8c(a_0)) {
    case 1:
        sub_7d2f(49, 1);
        break;
    case 2:
        sub_7d2f(50, 1);
        break;
    }
}

void sub_7d2f(auto a_0, auto a_1) {
    if (a_1 < 1) {
        return ;
    }
    if (g_C8CA[a_0/*7*/]._f2) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return ;
    }
    if (g_C8CA[a_0/*7*/]) {
        STATS::STAT_GET_INT(g_C8CA[a_0/*7*/]._f1, &v_4, -1);
        v_4 += a_1;
        STATS::STAT_SET_INT(g_C8CA[a_0/*7*/]._f1, v_4, 1);
    }
}

auto sub_7d8c(auto a_0) {
    switch (a_0) {
    case ${weapon_carbinerifle}:
    case ${weapon_grenadelauncher}:
    case ${weapon_specialcarbine}:
    case ${weapon_assaultshotgun}:
    case ${weapon_heavysniper}:
    case ${weapon_appistol}:
    case ${weapon_smg}:
    case ${weapon_stickybomb}:
    case ${weapon_stungun}:
        return 0;
        break;
    case ${weapon_mg}:
    case ${weapon_advancedrifle}:
    case ${weapon_rpg}:
    case ${weapon_smokegrenade}:
    case ${weapon_microsmg}:
    case ${weapon_pistol}:
    case ${weapon_remotesniper}:
    case ${weapon_sawnoffshotgun}:
        return 1;
        break;
    case ${weapon_grenade}:
    case ${weapon_assaultrifle}:
    case ${weapon_sniperrifle}:
    case ${weapon_pumpshotgun}:
    case ${weapon_minigun}:
    case ${weapon_combatpistol}:
    case ${weapon_combatmg}:
        return 2;
        break;
    default:
        return 3;
        break;
    }
    return 3;
}

void sub_7e48(auto a_0, auto a_1) {
    v_4 = sub_8076(a_0);
    v_4 += a_1;
    if (!sub_7fbd(a_0)) {
        sub_7fa1(a_0, v_4);
    } else { 
        sub_7e7c(a_0, v_4);
    }
}

void sub_7e7c(auto a_0, auto a_1) {
    v_4 = a_0;
    if (v_4 != 0) {
        STATS::STAT_SET_INT(v_4, a_1, 1);
    }
    switch (a_0) {
    case 0x1838e2e9:
        g_148FA5 = a_1;
        break;
    case 0x6388aa41:
        g_148FA7 = a_1;
        break;
    case 0x33a7d8b:
        g_148FA7 = a_1;
        break;
    case 0xcdc93a60:
        g_148FA8 = a_1;
        break;
    case 0xa202d7e4:
        g_148FA9 = a_1;
        break;
    case 0xa9c0cb15:
        g_148FAA = a_1;
        break;
    case 0x9c0d2fae:
        g_148FAB = a_1;
        break;
    case 0x4c579040:
        g_148FAC = a_1;
        break;
    case 0xbea1f4d7:
        g_148FAD = a_1;
        break;
    case 0x70e5595b:
        g_148FAE = a_1;
        break;
    case 0xa2a859d5:
        g_148FAF = a_1;
        break;
    case 0xdafb10f9:
        g_148FB0 = a_1;
        break;
    case 0x3cdb43e2:
        g_148FB1 = a_1;
        break;
    case 0x9c6a0c42:
        g_148FB2 = a_1;
        break;
    case 0x893e1390:
        g_148FB3 = a_1;
        break;
    case 0xe8fb6dd5:
        g_148FB4 = a_1;
        break;
    case 0xf3de4879:
        g_148FB5 = a_1;
        break;
    default:
        break;
    }
}

void sub_7fa1(auto a_0, auto a_1) {
    v_4 = a_0;
    if (v_4 != 0) {
        STATS::STAT_SET_INT(v_4, a_1, 1);
    }
}

auto sub_7fbd(auto a_0) {
    if (g_148FA4) {
        switch (a_0) {
        case 0x893e1390:
        case 0x9c0d2fae:
        case 0x9c6a0c42:
        case 0xa202d7e4:
        case 0xa2a859d5:
        case 0xa9c0cb15:
        case 0xbea1f4d7:
        case 0xcdc93a60:
        case 0xdafb10f9:
        case 0xe8fb6dd5:
        case 0xf3de4879:
        case 0x33a7d8b:
        case 0x1838e2e9:
        case 0x3cdb43e2:
        case 0x4c579040:
        case 0x6388aa41:
        case 0x70e5595b:
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_8076(auto a_0) {
    v_3 = a_0;
    if (STATS::STAT_GET_INT(v_3, &v_4, -1)) {
        return v_4;
    }
    return 0;
}

void sub_8094(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        if (!sub_4adf(a_0, 3, 0)) {
            sub_9593(a_0, 3, 0);
        }
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            switch (sub_932d(a_0)) {
            case 4:
                sub_8977(305, 0, 0);
                break;
            case 1:
                sub_8977(304, 0, 0);
                break;
            case 3:
                sub_8977(308, 0, 0);
                break;
            case 0:
                sub_8977(306, 0, 0);
                break;
            case 2:
                sub_8977(307, 0, 0);
                break;
            }
        }
        if (g_16416._f510 >= 0) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                v_5 = 1;
                if (a_2 == 4) {
                    if (sub_893b(0)) {
                        sub_87f4(0);
                        v_5 = 0;
                    }
                }
                if (a_2 == 6) {
                    if (sub_893b(1)) {
                        sub_87f4(1);
                        v_5 = 0;
                    }
                }
                if (v_5) {
                    v_6 = NETWORKCASH::_76EF28DA05EA395A() > 0;
                    v_7 = NETWORKCASH::_76EF28DA05EA395A() < g_16416._f510;
                    if (sub_7c6f()) {
                        if (sub_87d0(sub_9649()) > 0) {
                            UNK3::_9507D4271988E1AE(sub_87d0(sub_9649()));
                        }
                    }
                    if (g_16416._f510 > 0) {
                        if ((a_2 == 1) && (g_16416._f511 == 0xfc508e33)) {
                            NETWORKCASH::NETWORK_BUY_ITEM(g_16416._f510, GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), 17, g_16416._f512, v_6, &g_16416._f50C, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), g_16416._f511, g_16416._f513, v_7);
                        } else if ((((a_2 == 0) || (a_2 == 7)) || (a_2 == 9)) || (a_2 == 11)) {
                            NETWORKCASH::NETWORK_BUY_ITEM(g_16416._f510, g_16416._f511, a_2, g_16416._f512, v_6, &g_16416._f50C, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), g_16416._f511, g_16416._f513, v_7);
                        } else if (((((a_2 == 1) || (a_2 == 2)) || (a_2 == 8)) || (a_2 == 16)) || (a_2 == 15)) {
                            NETWORKCASH::NETWORK_BUY_ITEM(g_16416._f510, g_16416._f511, a_2, g_16416._f512, v_6, &g_16416._f50C, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), g_16416._f511, g_16416._f513, v_7);
                        } else { 
                            NETWORKCASH::NETWORK_BUY_ITEM(g_16416._f510, GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), a_2, g_16416._f512, v_6, &g_16416._f50C, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), g_16416._f511, g_16416._f513, v_7);
                        }
                    }
                } else { }
            } else if (UI::DOES_TEXT_LABEL_EXIST(&g_16416._f50C)) {
                if ((((a_2 == 0) || (a_2 == 7)) || (a_2 == 9)) || (a_2 == 11)) {
                    if (g_16416._f510 >= 0) {
                        STATS::PLAYSTATS_SHOP_ITEM(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), g_16416._f511, g_16416._f513);
                    }
                } else if (((((a_2 == 1) || (a_2 == 2)) || (a_2 == 8)) || (a_2 == 16)) || (a_2 == 15)) {
                    if (g_16416._f510 >= 0) {
                        STATS::PLAYSTATS_SHOP_ITEM(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), g_16416._f511, g_16416._f513);
                    }
                } else if (g_16416._f510 >= 0) {
                    STATS::PLAYSTATS_SHOP_ITEM(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(a_0)), 0, g_16416._f513);
                }
            }
        }
    } else if (sub_4adf(a_0, 3, 0)) {
        sub_8452(a_0, 3, 0);
    }
}

void sub_8452(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        GAMEPLAY::CLEAR_BIT(&g_16416._f514[a_0/*1*/], a_1);
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_4e69() == 0) {
            v_5 = sub_4b3f(sub_4bb1(a_0), -1, 0);
            GAMEPLAY::CLEAR_BIT(&v_5, a_1);
            sub_84ba(sub_4bb1(a_0), v_5, -1, 1);
        }
    } else { 
        GAMEPLAY::CLEAR_BIT(&game_state._f29C[a_0/*1*/], a_1);
    }
}

void sub_84ba(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = g_25A3D6[a_0/*5*/][sub_4b71(a_2)/*1*/];
    if (v_6 != 0) {
        STATS::STAT_SET_INT(v_6, a_1, a_3);
    }
}

auto sub_84e5(auto a_0) {
    switch (a_0) {
    case -1:
        return "S_N_EM";
        break;
    case 0:
        return "S_H_01";
        break;
    case 1:
        return "S_H_02";
        break;
    case 2:
        return "S_H_03";
        break;
    case 3:
        return "S_H_04";
        break;
    case 4:
        return "S_H_05";
        break;
    case 5:
        return "S_H_06";
        break;
    case 6:
        return "S_H_07";
        break;
    case 7:
        return "S_CL_01";
        break;
    case 8:
        return "S_CL_02";
        break;
    case 9:
        return "S_CL_03";
        break;
    case 10:
        return "S_CL_04";
        break;
    case 11:
        return "S_CL_05";
        break;
    case 12:
        return "S_CL_06";
        break;
    case 13:
        return "S_CL_07";
        break;
    case 14:
        return "S_CM_01";
        break;
    case 15:
        return "S_CM_03";
        break;
    case 16:
        return "S_CM_04";
        break;
    case 17:
        return "S_CM_05";
        break;
    case 18:
        return "S_CH_01";
        break;
    case 19:
        return "S_CH_02";
        break;
    case 20:
        return "S_CH_03";
        break;
    case 21:
        return "S_CA_01";
        break;
    case 22:
        return "S_T_01";
        break;
    case 23:
        return "S_T_02";
        break;
    case 24:
        return "S_T_03";
        break;
    case 25:
        return "S_T_04";
        break;
    case 26:
        return "S_T_05";
        break;
    case 27:
        return "S_T_06";
        break;
    case 28:
        return "S_G_01";
        break;
    case 29:
        return "S_G_02";
        break;
    case 30:
        return "S_G_03";
        break;
    case 31:
        return "S_G_04";
        break;
    case 32:
        return "S_G_05";
        break;
    case 33:
        return "S_G_06";
        break;
    case 34:
        return "S_G_07";
        break;
    case 35:
        return "S_G_08";
        break;
    case 36:
        return "S_G_09";
        break;
    case 37:
        return "S_G_10";
        break;
    case 38:
        return "S_G_11";
        break;
    case 39:
        return "S_MO_01";
        break;
    case 40:
        return "S_MO_05";
        break;
    case 41:
        return "S_MO_06";
        break;
    case 42:
        return "S_MO_07";
        break;
    case 43:
        return "S_MO_08";
        break;
    case 44:
        return "S_MO_09";
        break;
    }
    return "SHOP_NAME_EMPTY";
}

auto sub_87d0(auto a_0) {
    if ((a_0 >= 0) && (a_0 < 5)) {
        return g_26FAE6[a_0/*72*/];
    }
    return -1;
}

void sub_87f4(auto a_0) {
    v_3 = 0;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f61C9._f1D7, a_0)) {
            v_3 = 1;
            GAMEPLAY::CLEAR_BIT(&game_state._f61C9._f1D7, a_0);
        }
    } else if (GAMEPLAY::IS_BIT_SET(game_state._f61C9._f1D7, a_0) || GAMEPLAY::IS_BIT_SET(g_200000[sub_892e()/*10270*/]._f1E12._fA, a_0)) {
        v_3 = 1;
        GAMEPLAY::CLEAR_BIT(&game_state._f61C9._f1D7, a_0);
        GAMEPLAY::CLEAR_BIT(&g_200000[sub_892e()/*10270*/]._f1E12._fA, a_0);
    }
    if (v_3) {
        v_4/*"64"*/ = "CHAR_LIFEINVADER";
        UI::_SET_NOTIFICATION_TEXT_ENTRY("COUP_RED");
        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(sub_88b5(a_0));
        UI::_SET_NOTIFICATION_MESSAGE(&v_4, &v_4, 1, 0, "", 0);
    }
}

auto sub_88b5(auto a_0) {
    switch (a_0) {
    case 0:
        return "COUP_HAIRC";
    case 1:
        return "COUP_TATTOO";
    case 2:
        return "COUP_WARSTOCK";
    case 3:
        return "COUP_MOSPORT";
    case 4:
        return "COUP_ELITAS";
    case 5:
        return "COUP_MEDSPENS";
    case 6:
        return "COUP_SPRUNK";
    case 7:
        return "COUP_RESPRAY";
    }
    return "";
}

auto sub_892e() {
    v_2 = 0;
    return v_2;
}

auto sub_893b(auto a_0) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return GAMEPLAY::IS_BIT_SET(game_state._f61C9._f1D7, a_0);
    } else { 
        return GAMEPLAY::IS_BIT_SET(g_200000[sub_892e()/*10270*/]._f1E12._fA, a_0);
    }
}

void sub_8977(auto a_0, auto a_1, auto a_2) {
    if (a_0 < 0) {}
    if ((a_0 == 321) || (a_0 > 321)) {
    } else { 
        sub_8fe7(891 + a_0, 1, -1, 1);
    }
    v_5 = 1;
    if (game_state._f227C[a_0/*12*/]._f5 == 1) {
        if ((game_state._f227C[a_0/*12*/]._f6 == 11) || (game_state._f227C[a_0/*12*/]._f6 == 12)) {
            v_5 = 0;
        }
    } else { 
        game_state._f227C[a_0/*12*/]._f5 = 1;
        game_state._f227C[a_0/*12*/]._fA = a_1;
        game_state._f227C[a_0/*12*/]._fB = a_2;
        if (a_0 == 287) {
            STATS::_11FF1C80276097ED(0x86267624, 50, 0);
        }
        if (a_0 == 286) {
            STATS::_11FF1C80276097ED(0x52af42b, 50, 0);
        }
        if (a_0 == 299) {
            STATS::_11FF1C80276097ED(0xe99d3d10, 50, 0);
        }
    }
    if (v_5) {
        sub_8a5f();
    }
}

void sub_8a5f() {
    v_2 = 0;
    g_18968 = 0;
    g_18969 = 0;
    g_1896A = 0;
    g_1896B = 0;
    g_1896C = 0;
    g_1896D = 0;
    g_1896E = 0;
    v_3 = 0.0;
    v_4 = 0.0;
    v_5 = 0.0;
    v_6 = 0.0;
    v_7 = 0.0;
    v_8 = 0.0;
    v_9 = 0.0;
    v_A = game_state._f227C._fF0D;
    game_state._f227C._fF0D = 0.0;
    for (; v_2 < 321; v_2 += 1) {
        if (game_state._f227C[v_2/*12*/]._f5 == 1) {
            switch (game_state._f227C[v_2/*12*/]._f6) {
            case 1:
                g_18968 += 1;
                v_3 += game_state._f227C[v_2/*12*/]._f4;
                break;
            case 3:
                g_18969 += 1;
                v_4 += game_state._f227C[v_2/*12*/]._f4;
                break;
            case 5:
                g_1896A += 1;
                v_5 += game_state._f227C[v_2/*12*/]._f4;
                break;
            case 7:
                g_1896B += 1;
                v_6 += game_state._f227C[v_2/*12*/]._f4;
                break;
            case 9:
                g_1896C += 1;
                v_7 += game_state._f227C[v_2/*12*/]._f4 * 4.0;
                break;
            case 11:
                g_1896D += 1;
                v_8 += game_state._f227C[v_2/*12*/]._f4;
                break;
            case 13:
                g_1896E += 1;
                v_9 += game_state._f227C[v_2/*12*/]._f4;
                break;
            default:
                break;
            }
        }
    }
    if (g_18957 > 0) {
        if (g_18968 == g_18957) {
            v_3 = 55.0;
        }
    }
    if (g_18958 > 0) {
        if (g_18969 == g_18958) {
            v_4 = 10.0;
        }
    }
    if (g_18959 > 0) {
        if (g_1896A == g_18959) {
            v_5 = 0.0;
        }
    }
    if (g_1895A > 0) {
        if (g_1896B == g_1895A) {
            v_6 = 10.0;
        }
    }
    if (g_1895B > 0) {
        if ((((g_1896C == g_1895B) || (((g_1895B * 10) / g_1896C) < 41)) || (g_1896C > g_1895E)) || (g_1896C == g_1895E)) {
            if (!GAMEPLAY::IS_BIT_SET(game_state._f227C._fF10, 14)) {
                if (g_1896C == g_1895B) {
                    STATS::_11FF1C80276097ED(0x817b5488, g_1895B, 0);
                    GAMEPLAY::SET_BIT(&game_state._f227C._fF10, 14);
                }
            }
            v_7 = 5.0;
        }
    }
    if (g_1895C > 0) {
        if (g_1896D == g_1895C) {
            v_8 = 15.0;
        }
    }
    if (g_1895D > 0) {
        if (g_1896E == g_1895D) {
            v_9 = 5.0;
        }
    }
    game_state._f227C._fF0D = (((((v_3 + v_4) + v_5) + v_6) + v_7) + v_8) + v_9;
    if ((g_1896C > g_1895E) || (g_1896C == g_1895E)) {
        v_B = g_1895E;
    } else { 
        v_B = g_1896C;
    }
    STATS::STAT_SET_INT(0xc115f6b0, g_18968, 1);
    STATS::STAT_SET_INT(0xe6fb1ebc, g_18957, 1);
    STATS::STAT_SET_INT(0x4f5b53ba, g_18969, 1);
    STATS::STAT_SET_INT(0x2053b0a0, g_18958, 1);
    STATS::STAT_SET_INT(0x5d0e88a9, g_1896A, 1);
    STATS::STAT_SET_INT(0x214a068c, g_18959, 1);
    STATS::STAT_SET_INT(0xcd2d71f9, g_1896B, 1);
    STATS::STAT_SET_INT(0xfec8b0d8, g_1895A, 1);
    STATS::STAT_SET_INT(0x817b5488, v_B, 1);
    STATS::STAT_SET_INT(0xf32498ea, g_1895E, 1);
    STATS::STAT_SET_INT(0xf82362ef, g_1896E + g_1896D, 1);
    STATS::STAT_SET_INT(0x83a486e8, g_1895D + g_1895C, 1);
    g_1896F = (g_18968 * 100) / g_18957;
    g_18971 = ((g_1896A + g_18969) * 100) / (g_18959 + g_18958);
    g_18970 = ((g_1896B + v_B) * 100) / (g_1895A + g_1895E);
    g_18972 = ((g_1896D + g_1896E) * 100) / (g_1895C + g_1895D);
    STATS::STAT_SET_FLOAT(0x486cdcff, game_state._f227C._fF0D, 1);
    STATS::STAT_SET_INT(0x6c11a0fd, g_1896F, 1);
    STATS::STAT_SET_INT(0xb82247ac, g_18970, 1);
    STATS::STAT_SET_INT(0x1ca274fa, g_18971, 1);
    if ((v_A > 0.0) && (SYSTEM::FLOOR(v_A) < SYSTEM::FLOOR(game_state._f227C._fF0D))) {
        sub_8f96(13, SYSTEM::FLOOR(game_state._f227C._fF0D));
    }
    if (!DATAFILE::_BEDB96A7584AA8CF()) {
        if (!is_in_transition) {
            if (((sub_4e69() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
                if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE()) {
                    g_18966 = 0;
                }
                if (!g_D96B) {
                    sub_8f20();
                }
            }
        }
    }
}

auto sub_8f20() {
    if (sub_8f6b(0)) {
        return 0;
    }
    if (g_16409._f8) {
        if (g_16409._fA > 0) {
            return 0;
        }
    } else if (g_16409._fA > 1) {
        return 0;
    }
    g_16409._fA += 1;
    return 1;
}

auto sub_8f6b(auto a_0) {
    if ((!a_0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${benchmark}) > 0)) {
        return 1;
    }
    return GAMEPLAY::IS_BIT_SET(g_10FBD, 0);
}

auto sub_8f96(auto a_0, auto a_1) {
    if (a_0 < 0) {
        return 0;
    }
    if (a_0 > 70) {
        return 0;
    }
    if ((a_1 <= 0) || (a_1 > 100)) {
        return 0;
    }
    v_4 = PLAYER::_1C186837D0619335(a_0);
    if (a_1 > v_4) {
        return PLAYER::_C2AFFFDABBDC2C5C(a_0, a_1);
    } else { }
    return 0;
}

auto sub_8fe7(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == -1) {
        a_2 = sub_4ba5();
    }
    v_6 = 0;
    if ((a_0 >= 0) && (a_0 < 192)) {
        v_8 = STATS::_80C75307B1C42837(a_0 - 0, 0, 1, a_2);
        v_7 = (a_0 - 0) - (STATS::_F4D8E7AC2A27758C(a_0 - 0) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_8, a_1, v_7, a_3);
    } else if ((a_0 >= 192) && (a_0 < 384)) {
        v_9 = STATS::_80C75307B1C42837(a_0 - 192, 1, 1, a_2);
        v_7 = (a_0 - 192) - (STATS::_F4D8E7AC2A27758C(a_0 - 192) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_9, a_1, v_7, a_3);
    } else if ((a_0 >= 513) && (a_0 < 705)) {
        v_A = STATS::_80C75307B1C42837(a_0 - 513, 0, 0, 0);
        v_7 = (a_0 - 513) - (STATS::_F4D8E7AC2A27758C(a_0 - 513) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_A, a_1, v_7, a_3);
    } else if ((a_0 >= 705) && (a_0 < 1281)) {
        v_B = STATS::_80C75307B1C42837(a_0 - 705, 1, 0, 0);
        v_7 = (a_0 - 705) - (STATS::_F4D8E7AC2A27758C(a_0 - 705) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_B, a_1, v_7, a_3);
    } else if ((a_0 >= 3111) && (a_0 < 3879)) {
        v_C = STATS::_C4BB08EE7907471E(a_0 - 3111, 0, 1, a_2);
        v_7 = (a_0 - 3111) - (STATS::_F4D8E7AC2A27758C(a_0 - 3111) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_C, a_1, v_7, a_3);
    } else if ((a_0 >= 2919) && (a_0 < 3111)) {
        v_D = STATS::_C4BB08EE7907471E(a_0 - 2919, 0, 0, 0);
        v_7 = (a_0 - 2919) - (STATS::_F4D8E7AC2A27758C(a_0 - 2919) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_D, a_1, v_7, a_3);
    } else if ((a_0 >= 4207) && (a_0 < 4335)) {
        v_E = STATS::_BA52FF538ED2BC71(a_0 - 4207, 0, 1, a_2, "_NGPSTAT_BOOL");
        v_7 = (a_0 - 4207) - (STATS::_F4D8E7AC2A27758C(a_0 - 4207) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_E, a_1, v_7, a_3);
    } else if ((a_0 >= 4335) && (a_0 < 4399)) {
        v_F = STATS::_BA52FF538ED2BC71(a_0 - 4335, 0, 0, 0, "_NGPSTAT_BOOL");
        v_7 = (a_0 - 4335) - (STATS::_F4D8E7AC2A27758C(a_0 - 4335) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_F, a_1, v_7, a_3);
    } else if ((a_0 >= 6029) && (a_0 < 6413)) {
        v_10 = STATS::_BA52FF538ED2BC71(a_0 - 6029, 0, 1, a_2, "_NGTATPSTAT_BOOL");
        v_7 = (a_0 - 6029) - (STATS::_F4D8E7AC2A27758C(a_0 - 6029) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_10, a_1, v_7, a_3);
    } else if ((a_0 >= 7385) && (a_0 < 7449)) {
        v_11 = STATS::_BA52FF538ED2BC71(a_0 - 7385, 0, 1, a_2, "_NGDLCPSTAT_BOOL");
        v_7 = (a_0 - 7385) - (STATS::_F4D8E7AC2A27758C(a_0 - 7385) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_11, a_1, v_7, a_3);
    } else if ((a_0 >= 7321) && (a_0 < 7385)) {
        v_12 = STATS::_BA52FF538ED2BC71(a_0 - 7321, 0, 0, 0, "_NGDLCPSTAT_BOOL");
        v_7 = (a_0 - 7321) - (STATS::_F4D8E7AC2A27758C(a_0 - 7321) * 64);
        v_6 = STATS::STAT_SET_BOOL_MASKED(v_12, a_1, v_7, a_3);
    }
    return v_6;
}

auto sub_932d(auto a_0) {
    switch (a_0) {
    case -1:
        return 5;
        break;
    case 0:
        return 0;
        break;
    case 1:
        return 0;
        break;
    case 2:
        return 0;
        break;
    case 3:
        return 0;
        break;
    case 4:
        return 0;
        break;
    case 5:
        return 0;
        break;
    case 6:
        return 0;
        break;
    case 7:
        return 1;
        break;
    case 8:
        return 1;
        break;
    case 9:
        return 1;
        break;
    case 10:
        return 1;
        break;
    case 11:
        return 1;
        break;
    case 12:
        return 1;
        break;
    case 13:
        return 1;
        break;
    case 14:
        return 1;
        break;
    case 15:
        return 1;
        break;
    case 16:
        return 1;
        break;
    case 17:
        return 1;
        break;
    case 18:
        return 1;
        break;
    case 19:
        return 1;
        break;
    case 20:
        return 1;
        break;
    case 21:
        return 1;
        break;
    case 22:
        return 2;
        break;
    case 23:
        return 2;
        break;
    case 24:
        return 2;
        break;
    case 25:
        return 2;
        break;
    case 26:
        return 2;
        break;
    case 27:
        return 2;
        break;
    case 28:
        return 3;
        break;
    case 29:
        return 3;
        break;
    case 30:
        return 3;
        break;
    case 31:
        return 3;
        break;
    case 32:
        return 3;
        break;
    case 33:
        return 3;
        break;
    case 34:
        return 3;
        break;
    case 35:
        return 3;
        break;
    case 36:
        return 3;
        break;
    case 37:
        return 3;
        break;
    case 38:
        return 3;
        break;
    case 39:
        return 4;
        break;
    case 40:
        return 4;
        break;
    case 41:
        return 4;
        break;
    case 42:
        return 4;
        break;
    case 43:
        return 4;
        break;
    case 44:
        return 4;
        break;
    }
    return 5;
}

void sub_9593(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        GAMEPLAY::SET_BIT(&g_16416._f514[a_0/*1*/], a_1);
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_4e69() == 0) {
            v_5 = sub_4b3f(sub_4bb1(a_0), -1, 0);
            GAMEPLAY::SET_BIT(&v_5, a_1);
            sub_84ba(sub_4bb1(a_0), v_5, -1, 1);
        }
    } else { 
        GAMEPLAY::SET_BIT(&game_state._f29C[a_0/*1*/], a_1);
    }
}

auto sub_95fb(auto a_0) {
    if ((a_0 >= 0) && (a_0 < 5)) {
        return g_26FAE6[a_0/*72*/]._f2;
    }
    return 0;
}

auto sub_9621(auto a_0) {
    if ((a_0 >= 0) && (a_0 < 5)) {
        return g_26FAE6[a_0/*72*/]._f2 != 1;
    }
    return 0;
}

auto sub_9649() {
    v_2 = 0;
    for (v_2 = 0; v_2 < 5; v_2 += 1) {
        if (sub_87d0(v_2) != 0x7fffffff) {
            if (sub_7c47(v_2)) {
                return v_2;
            }
        }
    }
    return -1;
}

auto sub_9683() {
    v_2 = 0;
    if (!sub_7c6f()) {
        v_2 = 1;
    }
    v_3 = sub_9649();
    if (v_3 == -1) {
        return 0;
    }
    if (!v_2) {
        if ((!UNK3::_B24F0944DA203D9E(sub_4ba5())) || UNK3::_810E8431C0614BF9()) {
            if (sub_9775(g_26FAE6[v_3/*72*/]._f6, g_26FAE6[v_3/*72*/]._f4, g_26FAE6[v_3/*72*/]._f1) == 1) {
                g_26FCCA = 1;
            }
            return 0;
        }
        if (g_254382) {
            if ((g_26FAE6[v_3/*72*/]._f6 == 0x3fa29128) || (g_26FAE6[v_3/*72*/]._f6 == 0xb2491b6e)) {
                g_26FCCB = 1;
                return 0;
            }
        }
    }
    v_4 = sub_87d0(v_3);
    if (v_4 != 0x7fffffff) {
        if (v_2 || UNK3::_39BE7CEA8D9CC8E6(v_4)) {
            if (v_2) {
                g_26FAE6[v_3/*72*/]._f41 = 1;
            }
            g_26FAE6[v_3/*72*/]._f47 = 0;
            g_26FCC2 = 1;
            return 1;
        }
    }
    return 0;
}

auto sub_9775(auto a_0, auto a_1, auto a_2) {
    if ((a_0 == 0xe62a3aa1) || (a_0 == 0x57de404e)) {
        switch (a_1) {
        case 0x73af3590:
            if (a_2 >= 10000) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xfe249573:
            if (a_2 >= 1000) {
                return 1;
            } else { 
                return 2;
            }
            break;
        case 0x862fb02e:
        case 0x89ad02ce:
        case 0x8a91e076:
        case 0x8b70731d:
        case 0x8d682613:
        case 0xa174f633:
        case 0xa87819a3:
        case 0xaca75aae:
        case 0xaec77375:
        case 0xb77dd8b4:
        case 0xb8d124be:
        case 0xb94ddb9b:
        case 0xbcd304b8:
        case 0xbfcbe6b6:
        case 0xc2c5e339:
        case 0xc4f96e65:
        case 0xc84d30cc:
        case 0xccfa5f2d:
        case 0xcf63bf45:
        case 0xd89979ee:
        case 0xeaff75bd:
        case 0xf353df93:
        case 0xf6c6f8d3:
        case 0xf97db87a:
        case 0xfc71898e:
        case 0xfc8d0020:
        case 0xfd389995:
        case 0x16b1cde:
        case 0x6a679fe:
        case 0xc92ecef:
        case 0x129a5b6e:
        case 0x176d9d54:
        case 0x2183c4d7:
        case 0x2195c3d1:
        case 0x21ecda63:
        case 0x267cbc1b:
        case 0x29358006:
        case 0x2ad8ed30:
        case 0x2dc5587f:
        case 0x3530c574:
        case 0x381ae70b:
        case 0x39b3a1a7:
        case 0x3e7aa93e:
        case 0x4cbac3aa:
        case 0x4d8c639e:
        case 0x506a6af5:
        case 0x5841cc24:
        case 0x5a26eaef:
        case 0x5aef7c87:
        case 0x5e0b0a1c:
        case 0x60988977:
        case 0x628502b3:
        case 0x666d4b21:
        case 0x676706d3:
        case 0x67878154:
        case 0x6a22d039:
        case 0x74ec47ce:
        case 0x762d6bf6:
            return 1;
            break;
        case 0x8f9e64e9:
        case 0xb3e76d2c:
        case 0xca5e1b40:
        case 0xcbbc5d1e:
        case 0xd30e80f5:
        case 0xd80064a4:
        case 0xd86d0371:
        case 0xdb72fd6e:
        case 0xe7ba9a2c:
        case 0xf54343ef:
        case 0x40e0f34:
        case 0x10e398b4:
        case 0x11611c06:
        case 0x2a6b291e:
        case 0x3f79e8b3:
        case 0x421452ff:
        case 0x45f48c05:
        case 0x48090eba:
        case 0x5a58e3bd:
        case 0x7323dab3:
        case 0x7f096f7d:
            return 2;
            break;
        default:
            return 0;
            break;
        }
    } else if (((a_0 == 0xbc5b83ba) || (a_0 == 0x372897dd)) || (a_0 == 0xa14400be)) {
        return 0;
    }
    return 1;
}

auto sub_99f3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    v_C = 0;
    if (!sub_7c6f()) {
        v_C = 1;
    }
    if (!v_C) {
        if ((!UNK3::_B24F0944DA203D9E(sub_4ba5())) || UNK3::_810E8431C0614BF9()) {
            g_26FCCA = 1;
            return 0;
        }
        if (g_254382) {
            if ((a_1 == 0x3fa29128) || (a_1 == 0xb2491b6e)) {
                g_26FCCB = 1;
                return 0;
            }
        }
    }
    v_D = sub_9649();
    if (v_D == -1) {
        if (!sub_9b62(&v_D, a_0, a_1, a_3, a_7, a_9)) {
            return 0;
        }
    }
    if (v_D != -1) {
        if ((a_8 != 0) && sub_9af7(a_1)) {
            v_E = a_8;
            v_E._f1 = a_2;
            v_E._f2 = a_5;
            v_E._f3 = a_6;
        } else { 
            v_E = a_2;
            v_E._f1 = a_8;
            v_E._f2 = a_5;
            v_E._f3 = a_6;
        }
        g_26FAE6[v_D/*72*/]._f45 = v_E;
        g_26FAE6[v_D/*72*/]._f46 = v_E._f1;
        if (v_C || UNK3::_F30980718C8ED876(&v_E, a_4)) {
            return 1;
        }
    } else { }
    return 0;
}

auto sub_9af7(auto a_0) {
    switch (a_0) {
    case 0x81855910:
    case 0x85a48ae6:
    case 0x8d08cfa8:
    case 0x94eb09e5:
    case 0xaddf33d9:
    case 0xb6fd233f:
    case 0xe1eb447e:
    case 0xf2c77e1d:
    case 0x15faf63:
    case 0x22a9f688:
    case 0x531cef2d:
    case 0x65679d34:
    case 0x71a98dca:
    case 0x7e349b56:
        return 1;
        break;
    }
    return 0;
}

auto sub_9b62(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = 0;
    if (!sub_7c6f()) {
        v_8 = 1;
    }
    if (!v_8) {
        if ((!UNK3::_B24F0944DA203D9E(sub_4ba5())) || UNK3::_810E8431C0614BF9()) {
            g_26FCCA = 1;
            return 0;
        }
        if (g_254382) {
            if ((a_2 == 0x3fa29128) || (a_2 == 0xb2491b6e)) {
                g_26FCCB = 1;
                return 0;
            }
        }
    }
    v_A = 0;
    for (v_9 = 0; v_9 < 5; v_9 += 1) {
        if (g_26FAE6[v_9/*72*/]._f2 == 0) {
            v_A = 1;
        } else if (g_26FAE6[v_9/*72*/]._f5 == 1) {
            return 0;
        }
    }
    if (!v_A) {
        return 0;
    }
    a_0 = 0;
    if (!v_8) {
        if (UNK3::_A65568121DF2EA26()) {
            __678_$22A86DAAC9EDB234();
        }
    }
    if (v_8 || UNK3::_NETWORK_SHOP_BASKET_START(&v_B, a_2, a_3, a_4)) {
        a_0 = sub_9c57(v_B, a_1, 0x83b4a55b, a_3, a_2, 0, 1, a_4, a_5);
        return 1;
    }
    return 0;
}

auto sub_9c57(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    v_B = 0;
    for (v_B = 0; v_B < 5; v_B += 1) {
        if (g_26FAE6[v_B/*72*/]._f2 == 0) {
            if (!sub_7c6f()) {
                a_0 = v_B + 900;
            }
            g_26FAE6[v_B/*72*/]._f2 = 1;
            g_26FAE6[v_B/*72*/]._f1 = a_5;
            g_26FAE6[v_B/*72*/]._f3 = a_1;
            g_26FAE6[v_B/*72*/]._f4 = a_2;
            g_26FAE6[v_B/*72*/]._f7 = a_3;
            g_26FAE6[v_B/*72*/]._f5 = 0;
            g_26FAE6[v_B/*72*/] = a_0;
            g_26FAE6[v_B/*72*/]._f6 = a_4;
            g_26FAE6[v_B/*72*/]._f44 = a_8;
            g_26FAE6[v_B/*72*/]._f43 = a_7;
            g_26FAE6[v_B/*72*/]._f47 = 0;
            g_26FCC2 = 0;
            if (a_6) {
                g_26FAE6[v_B/*72*/]._f5 = 1;
            }
            return v_B;
        }
    }
    return -1;
}

void sub_9d2b() {
    if (l_4F2) {
        STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_4F2._f1);
        l_4F2 = 0;
    }
    if (ENTITY::DOES_ENTITY_EXIST(l_4F2._f2)) {
        PED::DELETE_PED(&l_4F2._f2);
    }
    if (ENTITY::DOES_ENTITY_EXIST(g_2705AF)) {
        PED::DELETE_PED(&g_2705AF);
    }
}

void sub_9d6e() {
    if (l_8A) {
        NETWORK::_72D0706CD6CCDB58();
        l_8A = 0;
        l_8B = 0;
    }
}

void sub_9d85(auto a_0) {
    v_3/*"64"*/ = sub_9da7(a_0);
    if (GAMEPLAY::GET_HASH_KEY(&v_3) != 0) {
        GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(&v_3);
    }
}

auto sub_9da7(auto a_0) {
    switch (a_0) {
    case 0:
        return "ShopUI_Title_HighEndSalon";
        break;
    case 1:
    case 4:
    case 6:
        return "ShopUI_Title_Barber";
        break;
    case 2:
        return "ShopUI_Title_Barber2";
        break;
    case 3:
        return "ShopUI_Title_Barber3";
        break;
    case 5:
        return "ShopUI_Title_Barber4";
        break;
    case 7:
    case 8:
    case 10:
    case 11:
    case 13:
        return "ShopUI_Title_LowEndFashion";
        break;
    case 9:
    case 12:
        return "ShopUI_Title_LowEndFashion2";
        break;
    case 14:
    case 15:
    case 16:
    case 17:
        return "ShopUI_Title_MidFashion";
        break;
    case 18:
    case 19:
    case 20:
        return "ShopUI_Title_HighEndFashion";
        break;
    case 21:
        return "ShopUI_Title_Movie_Masks";
        break;
    case 22:
        return "ShopUI_Title_Tattoos";
        break;
    case 23:
    case 24:
        return "ShopUI_Title_Tattoos2";
        break;
    case 25:
        return "ShopUI_Title_Tattoos3";
        break;
    case 26:
        return "ShopUI_Title_Tattoos4";
        break;
    case 27:
        return "ShopUI_Title_Tattoos5";
        break;
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
        return "ShopUI_Title_GunClub";
        break;
    case 39:
    case 40:
    case 41:
    case 43:
        return "ShopUI_Title_Carmod";
        break;
    case 42:
        return "ShopUI_Title_Carmod2";
        break;
    case 44:
        return "ShopUI_Title_Supermod";
        break;
    }
    return "";
}

void sub_9f84(auto a_0, auto a_1) {
    if (!sub_a06b(&v_4, 0, a_1)) {
        return ;
    }
    if (g_4369._f1EB1) {
        UI::RESET_HUD_COMPONENT_VALUES(15);
        g_4369._f1EB1 = 0;
    }
    UI::_55598D21339CB998(0.0);
    if (g_4369._f157A[v_4/*1*/]) {
        UI::CLEAR_ADDITIONAL_TEXT(9, 0);
        g_4369._f157A[v_4/*1*/] = 0;
    }
    if (g_4369._f156C[v_4/*1*/]) {
        GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("CommonMenu");
        g_4369._f156C[v_4/*1*/] = 0;
    }
    if (g_4369._f1573[v_4/*1*/]) {
        GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPShopSale");
        g_4369._f1573[v_4/*1*/] = 0;
    }
    if (a_0) {
        sub_a042(&g_4369._f159A[v_4/*10*/]);
        g_4369._f15D7[v_4/*1*/] = 0;
    } else { 
        g_4369._f15D7[v_4/*1*/] = 0;
    }
}

void sub_a042(auto a_0) {
    if (a_0._f9 != 0) {
        if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
            GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(a_0);
        }
        a_0 = 0;
        a_0._f9 = 0;
    }
}

auto sub_a06b(auto a_0, auto a_1, auto a_2) {
    if (a_2 == -1) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()) {
            a_2 = NETWORK::_638A3A81733086DB();
        }
    }
    v_5/*"64"*/ = SCRIPT::GET_THIS_SCRIPT_NAME();
    v_5/*64*/ += a_2;
    v_15 = GAMEPLAY::GET_HASH_KEY(&v_5);
    v_17 = -1;
    for (v_16 = 0; v_16 < 6; v_16 += 1) {
        if (g_4369._f15D7[v_16/*1*/] == v_15) {
            a_0 = v_16;
            return 1;
        } else if (g_4369._f15D7[v_16/*1*/] == 0) {
            v_17 = v_16;
        }
    }
    if (a_1) {
        if (v_17 != -1) {
            g_4369._f15D7[v_17/*1*/] = v_15;
            a_0 = v_17;
            return 1;
        }
    }
    return 0;
}

void sub_a108(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < 20; v_4 += 1) {
        for (v_5 = 0; v_5 < 5; v_5 += 1) {
            if (sub_afc5(l_B3, &g_2707D2, &v_8, v_4, v_5, 0)) {
                if (v_8._f18 == 3) {
                    if (v_5 == 0) {
                        v_7 = ${prop_armour_pickup};
                    } else if (v_5 == 1) {
                        v_7 = ${prop_bodyarmour_02};
                    } else if (v_5 == 2) {
                        v_7 = ${prop_bodyarmour_03};
                    } else if (v_5 == 3) {
                        v_7 = ${prop_bodyarmour_04};
                    } else if (v_5 == 4) {
                        v_7 = ${prop_bodyarmour_05};
                    }
                } else if (v_8._f18 == 4) {
                    v_7 = ${p_parachute_s_shop};
                } else if (v_8._f18 == 7) {
                    v_7 = sub_aefd(&g_2707D2, v_8._f17);
                } else if (v_8._f18 == 6) {
                    v_7 = 0xa6706f73;
                } else if (v_8 == ${weapon_knife}) {
                    v_7 = ${prop_w_me_knife_01};
                } else if (v_8 == ${weapon_bottle}) {
                    v_7 = ${prop_w_me_bottle};
                } else if (v_8 == 0x92a27487) {
                    v_7 = ${prop_w_me_dagger};
                } else if (v_8 == 0xf9dcbf2d) {
                    v_7 = ${prop_w_me_hatchet};
                } else { 
                    v_7 = WEAPON::GET_WEAPONTYPE_MODEL(v_8);
                }
                if (v_7 != 0) {
                    if (a_1) {
                        if (l_8D) {
                            ENTITY::REMOVE_MODEL_HIDE(v_8._f1, l_468, v_7, 0);
                        }
                    } else if (!l_8D) {
                        ENTITY::CREATE_MODEL_HIDE(v_8._f1, l_468, v_7, 1);
                    }
                }
                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_6/*1*/])) {
                    if (a_0) {
                        ENTITY::SET_ENTITY_VISIBLE(l_B3._fDC[v_6/*1*/], 1, 0);
                        ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_B3._fDC[v_6/*1*/], v_8._f1, 0, 0, 1);
                        ENTITY::SET_ENTITY_ROTATION(l_B3._fDC[v_6/*1*/], v_8._f4, 2, 1);
                    } else { 
                        ENTITY::SET_ENTITY_VISIBLE(l_B3._fDC[v_6/*1*/], 1, 0);
                        ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_B3._fDC[v_6/*1*/], v_8._f1 + ({0.0, 0.0, 100.0 }), 0, 0, 1);
                        ENTITY::SET_ENTITY_ROTATION(l_B3._fDC[v_6/*1*/], v_8._f4, 2, 1);
                    }
                    if (v_7 == ${prop_ld_test_01}) {
                        ENTITY::SET_ENTITY_VISIBLE(l_B3._fDC[v_6/*1*/], 0, 0);
                    }
                }
            }
            v_6 += 1;
        }
    }
    if (a_1) {
        if (l_8D) {
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_ilev_gc_weapons}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_ilev_gc_handguns}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${p_parachute_s}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_7_wallhooks}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_22_wallhooks}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_ilev_gc_grenades}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 2.0, ${prop_box_ammo07b}, 0);
            ENTITY::REMOVE_MODEL_HIDE(l_B3._fC._f2, 2.0, ${v_ret_gc_calc}, 0);
            if (ENTITY::DOES_ENTITY_EXIST(l_A6)) {
                sub_aed2(&l_A6);
            }
        }
    } else if (!l_8D) {
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_ilev_gc_weapons}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_ilev_gc_handguns}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${p_parachute_s}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_7_wallhooks}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_22_wallhooks}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 20.0, ${v_ilev_gc_grenades}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 2.0, ${prop_box_ammo07b}, 1);
        ENTITY::CREATE_MODEL_HIDE(l_B3._fC._f2, 2.0, ${v_ret_gc_calc}, 1);
        if (STREAMING::HAS_MODEL_LOADED(0xe5ec02c1)) {
            if (GAMEPLAY::GET_HASH_KEY(sub_3f10(l_B3)) == GAMEPLAY::GET_HASH_KEY("v_gun2")) {
                v_22/*{3}*/ = {-1305.3179931640625, -394.031, 36.51 };
                v_25/*{3}*/ = {0.0, 0.0, -105.0 };
                sub_ae1f(34, l_B3, &v_22);
                sub_a564(34, l_B3, &v_25);
                l_A6 = OBJECT::CREATE_OBJECT_NO_OFFSET(0xe5ec02c1, v_22, 0, 1, 0);
                ENTITY::SET_ENTITY_ROTATION(l_A6, v_25, 2, 1);
            } else { 
                v_22/*{3}*/ = {21.852, -1106.65, 29.61 };
                v_25/*{3}*/ = {0.0, 0.0, -20.0 };
                sub_ae1f(28, l_B3, &v_22);
                sub_a564(28, l_B3, &v_25);
                l_A6 = OBJECT::CREATE_OBJECT_NO_OFFSET(0xe5ec02c1, v_22, 0, 1, 0);
                ENTITY::SET_ENTITY_ROTATION(l_A6, v_25, 2, 1);
            }
        }
    }
    l_8D = !a_1;
}

void sub_a564(auto a_0, auto a_1, auto a_2) {
    sub_a648(a_0, &v_5, &v_8);
    sub_a648(a_1, &v_B, &v_E);
    for (; v_E._f2 > 180.0; v_E._f2 -= 360.0) {}
    for (; v_E._f2 < -180.0; v_E._f2 += 360.0) {}
    for (; v_8._f2 > 180.0; v_8._f2 -= 360.0) {}
    for (; v_8._f2 < -180.0; v_8._f2 += 360.0) {}
    a_2._f2 += v_E._f2 - v_8._f2;
    for (; a_2._f2 > 180.0; a_2._f2 -= 360.0) {}
    for (; a_2._f2 < -180.0; a_2._f2 += 360.0) {}
}

auto sub_a648(auto a_0, auto a_1, auto a_2) {
    a_1/*{3}*/ = {0.0, 0.0, 0.0 };
    a_2/*{3}*/ = {0.0, 0.0, 0.0 };
    switch (a_0) {
    case -1:
        break;
    case 0:
        a_1/*{3}*/ = {-821.6099853515625, 183.79, 37.43 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(2.6) };
        break;
    case 1:
        a_1/*{3}*/ = {133.97, -1708.3, 29.48 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(3.84) };
        break;
    case 2:
        a_1/*{3}*/ = {-1284.88, -1115.0899658203125, 7.18 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-4.71) };
        break;
    case 3:
        a_1/*{3}*/ = {1930.9, 3727.409912109375, 33.03 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(2.62) };
        break;
    case 4:
        a_1/*{3}*/ = {1210.92, 470.18, 66.39 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(4.97) };
        break;
    case 5:
        a_1/*{3}*/ = {-30.28, 151.17999999999998, 57.26 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(0.35) };
        break;
    case 6:
        a_1/*{3}*/ = {278.21, 6231.14990234375, 31.88 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(5.49) };
        break;
    case 7:
        a_1/*{3}*/ = {74.6, -1392.0899658203125, 29.53 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-1.57) };
        break;
    case 8:
        a_1/*{3}*/ = {1694.87, 4822.10986328125, 42.22 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(4.58) };
        break;
    case 9:
        a_1/*{3}*/ = {426.35, 807.12, 29.65 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-4.71) };
        break;
    case 10:
        a_1/*{3}*/ = {-1101.41, 2711.75, 19.26 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-2.41) };
        break;
    case 11:
        a_1/*{3}*/ = {1197.49, 2711.0, 38.38 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-3.14) };
        break;
    case 12:
        a_1/*{3}*/ = {822.1, -1072.43994140625, 11.479999999999999 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(2.62) };
        break;
    case 13:
        a_1/*{3}*/ = {4.75, 6511.2998046875, 32.03 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(5.54) };
        break;
    case 14:
        a_1/*{3}*/ = {-1193.51, -767.469970703125, 17.33 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-2.5) };
        break;
    case 15:
        a_1/*{3}*/ = {613.6, 2762.76, 42.1 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-1.5) };
        break;
    case 16:
        a_1/*{3}*/ = {126.36, 224.03, 54.57 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.22) };
        break;
    case 17:
        a_1/*{3}*/ = {-3170.0, 1043.449951171875, 20.87 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.16) };
        break;
    case 18:
        a_1/*{3}*/ = {-708.59, -152.21, 37.09 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.05) };
        break;
    case 19:
        a_1/*{3}*/ = {-164.82, -302.45, 39.41 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.24) };
        break;
    case 20:
        a_1/*{3}*/ = {-1449.22998046875, -238.49, 49.49 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(2.3) };
        break;
    case 21:
        break;
    case 22:
        a_1/*{3}*/ = {320.59, 181.42999999999998, 103.79 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.92) };
        break;
    case 23:
        a_1/*{3}*/ = {1861.29, 3748.57, 33.24 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-5.67) };
        break;
    case 24:
        a_1/*{3}*/ = {-290.8299865722656, 6199.93017578125, 31.69 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(2.27) };
        break;
    case 25:
        a_1/*{3}*/ = {1152.24, -1424.77, 5.16 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(4.1) };
        break;
    case 26:
        a_1/*{3}*/ = {1324.43994140625, 1650.99, 52.47 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-4.03) };
        break;
    case 27:
        a_1/*{3}*/ = {-3170.919921875, 1073.8399658203125, 21.04 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(0.41) };
        break;
    case 28:
        a_1/*{3}*/ = {23.686199188232422, -1106.461181640625, 29.9158992767334 };
        a_2/*{3}*/ = {0.0, 0.0, 160.0 };
        break;
    case 29:
        a_1/*{3}*/ = {1693.5723876953125, 3761.60083, 34.82419967651367 };
        a_2/*{3}*/ = {0.0, 0.0, -132.60809326171875 };
        break;
    case 30:
        a_1/*{3}*/ = {252.85830688476562, -51.62839889526367, 70.06 };
        a_2/*{3}*/ = {0.0, 0.0, 70 };
        break;
    case 31:
        a_1/*{3}*/ = {841.056396484375, -1034.7615966796875, 28.31369972229 };
        a_2/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 32:
        a_1/*{3}*/ = {-330.290802, 6085.5478515625, 31.5737 };
        a_2/*{3}*/ = {0.0, 0.0, -135.00010681152344 };
        break;
    case 33:
        a_1/*{3}*/ = {-660.9293823242188, -934.1030883789062, 21.94809913635254 };
        a_2/*{3}*/ = {0.0, 0.0, 180.0 };
        break;
    case 34:
        a_1/*{3}*/ = {-1304.9764404296875, -395.818115234375, 36.814701080322266 };
        a_2/*{3}*/ = {0.0, 0.0, 75.7782974243164 };
        break;
    case 35:
        a_1/*{3}*/ = {-1117.6121826171875, 2700.263916015625, 18.673 };
        a_2/*{3}*/ = {0.0, 0.0, -138.1728973388672 };
        break;
    case 36:
        a_1/*{3}*/ = {-3172.511474609375, 1089.4124755859375, 20.957599639892578 };
        a_2/*{3}*/ = {0.0, 0.0, -113.418701171875 };
        break;
    case 37:
        a_1/*{3}*/ = {2566.591796875, 293.1332092285156, 108.85379791259766 };
        a_2/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 38:
        a_1/*{3}*/ = {808.8609, -2158.5078125, 29.737899780273438 };
        a_2/*{3}*/ = {0.0, 0.0, 0.0 };
        break;
    case 39:
        a_1/*{3}*/ = {-1148.15, -2003.8599853515625, 13.89 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(2.36) };
        break;
    case 40:
        a_1/*{3}*/ = {730.72998046875, -1073.13, 23.02 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.57) };
        break;
    case 41:
        a_1/*{3}*/ = {343.62, -131.44, 39.71 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(1.92) };
        break;
    case 42:
        a_1/*{3}*/ = {106.42, 6623.02, 33.52 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(0.78) };
        break;
    case 43:
        a_1/*{3}*/ = {1180.449951171875, 2639.85, 39.48 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-3.14) };
        break;
    case 44:
        a_1/*{3}*/ = {202.98, -1312.5799560546875, 29.89 };
        a_2/*{3}*/ = {0.0, 0.0, sub_ae0f(-1.57) };
        break;
    }
    if (sub_adc8(a_1, 0.0, 0.0, 0.0, 0) && sub_adc8(a_2, 0.0, 0.0, 0.0, 0)) {
        return 0;
    }
    return 1;
}

auto sub_adc8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_6) {
        return (a_0 == a_3) && (a_0._f1 == a_3._f1);
    } else { 
        return ((a_0 == a_3) && (a_0._f1 == a_3._f1)) && (a_0._f2 == a_3._f2);
    }
}

auto sub_ae0f(auto a_0) {
    return a_0 * 57.295780181884766;
}

void sub_ae1f(auto a_0, auto a_1, auto a_2) {
    if (sub_adc8(a_2, 0.0, 0.0, 0.0, 0)) {
        return ;
    }
    sub_a648(a_0, &v_5, &v_8);
    sub_a648(a_1, &v_B, &v_E);
    v_11/*{3}*/ = a_2 - v_5;
    v_11/*{3}*/ = sub_ae8e(v_11, -v_8._f2);
    v_11/*{3}*/ = sub_ae8e(v_11, v_E._f2);
    a_2/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(v_B, 0.0, v_11);
}

auto<3> sub_ae8e(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_9 = SYSTEM::SIN(a_3);
    v_A = SYSTEM::COS(a_3);
    v_6 = (a_0 * v_A) - (a_0._f1 * v_9);
    v_6._f1 = (a_0 * v_9) + (a_0._f1 * v_A);
    v_6._f2 = a_0._f2;
    return v_6;
}

void sub_aed2(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(a_0)) {
            ENTITY::DETACH_ENTITY(a_0, 1, 1);
        }
        OBJECT::DELETE_OBJECT(a_0);
    }
}

auto sub_aefd(auto a_0, auto a_1) {
    if (a_1 == -1) {
        return ${prop_ld_test_01};
    }
    v_4 = GAMEPLAY::GET_HASH_KEY(NETWORK::_662635855957C411(a_0._f1B[a_1/*1*/]));
    if (v_4 == 0x99aeeb3b) {
        return ${v_ilev_gunsign_pistol50};
    } else if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && (v_4 == ${weapon_assaultsmg})) {
        return ${v_ilev_gunsign_asssmg};
    } else if (v_4 == ${weapon_heavyrifle}) {
        return ${v_ilev_gunsign_hvyrif};
    } else if (v_4 == ${weapon_assaultmg}) {
        return ${v_ilev_gunsign_assmg};
    } else if (v_4 == ${weapon_bullpupshotgun}) {
        return ${v_ilev_gunsign_bull};
    } else if (v_4 == ${weapon_assaultsniper}) {
        return ${v_ilev_gunsign_asssniper};
    } else if (v_4 == ${weapon_programmablear}) {
        return ${v_ilev_gunsign_progar};
    }
    return ${prop_ld_test_01};
}

auto sub_afc5(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    sub_12a57(a_2, 8, 0, 0, -1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    v_8 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_9 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_A = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_0));
    l_38 = 0;
    if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && (sub_1256b(0xf9dcbf2d) == 1)) {
        l_38 = 1;
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (sub_715b() || WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), 0xf9dcbf2d, 0))) {
        l_38 = 1;
    }
    switch (a_3) {
    case 0:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 4, 0, ${gadget_parachute}, 1, 19.7012, -1103.267822265625, 31.3153, -10.75, 0.0, -200.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 1:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, ${ammo_smg}, ${weapon_microsmg}, 16, 19.52, -1103.05, 30.8, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_smg}, ${weapon_smg}, 30, 19.54, -1103.05, 30.36, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 2:
        switch (a_4) {
        case 0:
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                sub_12a57(a_2, 0, ${ammo_smg}, ${weapon_assaultsmg}, 30, 20.755, -1103.490966796875, 31.425, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            } else { 
                sub_12a57(a_2, 0, ${ammo_shotgun}, ${weapon_sawnoffshotgun}, 8, 20.53, -1103.41, 31.4, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            }
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_shotgun}, ${weapon_pumpshotgun}, 8, 20.48, -1103.4, 30.9, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 0, ${ammo_shotgun}, ${weapon_assaultshotgun}, 8, 20.62, -1103.43994140625, 30.43, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 3:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, ${ammo_rifle}, ${weapon_assaultrifle}, 30, 21.65, -1103.79, 31.37, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_rifle}, ${weapon_carbinerifle}, 30, 21.7, -1103.81, 30.89, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 0, ${ammo_rifle}, ${weapon_advancedrifle}, 30, 21.7, -1103.81, 30.41, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 4:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, ${ammo_sniper}, ${weapon_sniperrifle}, 10, 22.61, -1104.16, 30.9, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_sniper}, ${weapon_heavysniper}, 6, 22.56, -1104.14, 30.42, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 5:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, ${ammo_mg}, ${weapon_mg}, 54, 23.99, -1104.7099609375, 31.17, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_mg}, ${weapon_combatmg}, 100, 24.08, -1104.77, 30.58, 0.0, 0.0, -20.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 6:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, ${ammo_rpg}, ${weapon_rpg}, 1, 25.6, -1105.3499755859375, 31.35, 0.0, 0.0, -20.0, -0.5, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_grenadelauncher}, ${weapon_grenadelauncher}, 10, 25.38, -1105.219970703125, 30.96, 0.0, 0.0, -20.0, -0.5, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 0, ${ammo_minigun}, ${weapon_minigun}, 50, 25.28, -1105.25, 30.47, 0.0, 0.0, -20.0, -0.5, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 7:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 1, 0, ${weapon_knife}, 1, 19.647, -1105.1209716796875, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            break;
        case 1:
            if (l_38) {
                sub_12a57(a_2, 1, 0, ${weapon_nightstick}, 1, 20.121, -1105.426025390625, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            } else { 
                sub_12a57(a_2, 1, 0, ${weapon_nightstick}, 1, 20.191, -1105.4560546875, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            }
            break;
        case 2:
            if ((!l_38) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
                sub_12a57(a_2, 1, 0, ${weapon_hammer}, 1, 20.601, -1105.595947265625, 29.54, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            } else { 
                sub_12a57(a_2, 1, 0, ${weapon_hammer}, 1, 20.711, -1105.676025390625, 29.5603, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            }
            break;
        case 3:
            sub_12a57(a_2, 1, 0, ${weapon_bottle}, 1, 21.077, -1105.8409423828125, 29.5603, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            break;
        case 4:
            sub_12a57(a_2, 1, 0, 0xd8df3c3c, 1, 20.177, -1105.1710205078125, 29.5603, -2.5, 95.0, 168.0, 0.0, 0.0, 0.475, 265.0, 210.0, 30.0);
            break;
        }
        break;
    case 8:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, 0, ${weapon_stungun}, 1, 21.885, -1105.8349609375, 29.5454, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_pistol}, ${weapon_appistol}, 18, 22.07, -1106.116943359375, 29.5387, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 0, ${ammo_pistol}, ${weapon_combatpistol}, 12, 22.319, -1105.968994140625, 29.5407, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 0, ${ammo_pistol}, ${weapon_pistol}, 12, 22.454, -1106.261962890625, 29.54159927368164, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 4:
            sub_12a57(a_2, 0, ${ammo_pistol}, 0x99aeeb3b, 24, 22.814, -1106.381958, 29.54159927368164, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        }
        break;
    case 9:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 2, ${ammo_smokegrenade}, ${weapon_smokegrenade}, 1, 23.26759910583496, -1107.3509521484375, 29.64539909362793, 0.0, 0.0, 245.0, 0.0, 0.0, 0.475, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 2, 0xcc9094f, ${weapon_grenade}, 1, 23.0382, -1108.0045166015625, 29.587799072265625, 0.0, 0.0, 245.0, 0.0, 0.0, 0.475, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 2, ${ammo_stickybomb}, ${weapon_stickybomb}, 1, 22.79, -1108.4420166015625, 29.587799072265625, 0.0, 0.0, 25.0, 0.0, 0.0, 0.475, 90.0, 0.0, -135.0);
            break;
        case 3:
            sub_12a57(a_2, 2, 0xaf2208a7, 0xab564b93, 1, 22.93, -1108.281982421875, 29.557, 0.0, 0.0, 25.0, 0.0, 0.0, 0.475, 90.0, 0.0, -135.0);
            break;
        }
        break;
    case 10:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 5, 0, ${weapon_petrolcan}, 5000, 22.973899841308594, -1109.1806640625, 29.6053, 90.0, 0.0, 115.0, 0.278, 0.073, 0.693, -90.0, 0.0, 0.0);
            break;
        }
        break;
    case 11:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 7, 0, a_1[0/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 7, 0, a_1[1/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 7, 0, a_1[2/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 7, 0, a_1[3/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 12:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 7, 0, a_1[4/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 7, 0, a_1[5/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 7, 0, a_1[7/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 7, 0, a_1[6/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 13:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 7, 0, a_1[8/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 7, 0, a_1[9/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 7, 0, a_1[10/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 7, 0, a_1[11/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 14:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 7, 0, a_1[12/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 7, 0, a_1[13/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 7, 0, a_1[14/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 7, 0, a_1[15/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 15:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 7, 0, a_1[16/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 7, 0, a_1[17/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 7, 0, a_1[18/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 7, 0, a_1[19/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 16:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 3, 0, ${weapon_unarmed}, 20, 16.25469970703125, -1110.0875244140625, 30.7311, 0.0, 0.0, 70.0, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 3, 0, ${weapon_unarmed}, 40, 16.46929931640625, -1109.497802734375, 30.7311, 0.0, 0.0, 70.0, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 3, 0, ${weapon_unarmed}, 60, 16.6786, -1108.9228515625, 30.7311, 0.0, 0.0, 70.0, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 3, 0, ${weapon_unarmed}, 80, 16.3512, -1109.8221435546875, 29.946199417114258, 0.0, 0.0, 70.0, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
            break;
        case 4:
            sub_12a57(a_2, 3, 0, ${weapon_unarmed}, 100, 16.5802, -1109.1932373046875, 29.946199417114258, 0.0, 0.0, 70.0, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    case 17:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 1, 0, 0xdd5df8d9, 1, 20.937, -1105.791015625, 29.5603, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 1, 0, 0x92a27487, 1, 19.727, -1105.260986328125, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 1, 0, 0xdfe37640, 1, 19.8568, -1105.4014892578125, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            break;
        case 3:
            if (l_38) {
                sub_12a57(a_2, 1, 0, 0x8bb05fd7, 1, 20.331, -1105.426025390625, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            } else { 
                sub_12a57(a_2, 1, 0, 0x8bb05fd7, 1, 20.501, -1105.5360107421875, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            }
            break;
        case 4:
            sub_12a57(a_2, 1, 0, 0xf9dcbf2d, 1, 20.471, -1105.5059814453125, 29.5403, -89.9802017211914, 65.0, 0.0, 0.0, 0.0, 0.475, 75.0, -20.0, 0.0);
            break;
        }
        break;
    case 18:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 0, ${ammo_pistol}, ${weapon_snspistol}, 12, 22.674, -1106.10205078125, 29.54159927368164, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 0, ${ammo_pistol}, ${weapon_heavypistol}, 36, 21.714, -1105.991943359375, 29.562, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 0, ${ammo_pistol}, 0x83839c4, 14, 22.994, -1106.2220458984375, 29.54159927368164, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 0, 0x45f0e965, 0x47757124, 2, 21.885, -1105.8349609375, 29.5454, -90.0, 0.0, -20.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
            break;
        }
        break;
    case 19:
        switch (a_4) {
        case 0:
            sub_12a57(a_2, 7, 0, a_1[20/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 1:
            sub_12a57(a_2, 7, 0, a_1[21/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 2:
            sub_12a57(a_2, 7, 0, a_1[22/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        case 3:
            sub_12a57(a_2, 7, 0, a_1[23/*1*/], 1, 25.573, -1106.4150390625, 32.0, 0.0, 0.0, -120.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
            break;
        }
        break;
    }
    if (((((a_3 == 11) || (a_3 == 12)) || (a_3 == 13)) || (a_3 == 14)) || (a_3 == 15)) {
        switch (a_4) {
        case 0:
            a_2._f1._f2 = 31.365;
            break;
        case 1:
            a_2._f1._f2 = 31.017;
            break;
        case 2:
            a_2._f1._f2 = 30.681;
            break;
        case 3:
            a_2._f1._f2 = 30.265;
            break;
        }
    }
    if (a_2 == 0xa89cb99e) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, -0.15, 0.0, 0.0);
    }
    if (a_2 == 0x7f7497e5) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.245, 0.0, 0.0);
    }
    if (a_2 == ${weapon_specialcarbine}) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, -0.05, 0.0, 0.0);
    }
    if (a_2 == 0x63ab0442) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.4, 0.0, 0.0);
    }
    if (a_2 == ${weapon_bullpupshotgun}) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, -0.05, 0.0, 0.0);
    }
    if (a_2 == 0x3aabbbaa) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.009999999999999998, 0.0, 0.0);
    }
    if (a_2 == 0xa3d4d34) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.05, 0.0, 0.0);
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        l_33 = -0.05;
        l_34 = 0.9200000166893;
        l_35 = 1.94;
        l_36 = 2.99;
        l_37 = 3.7;
    } else { 
        l_33 = -0.05;
        l_34 = 0.99;
        l_35 = 2.18;
        l_36 = 3.34;
        l_37 = 3.7;
    }
    if (a_3 == 11) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_33, 0.0, 0.0 }));
    } else if (a_3 == 12) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_34, 0.0, 0.0 }));
    } else if (a_3 == 13) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_35, 0.0, 0.0 }));
    } else if (a_3 == 14) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_36, 0.0, 0.0 }));
    } else if (a_3 == 15) {
        a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_37, 0.0, 0.0 }));
    }
    if (v_A == v_9) {
        switch (a_3) {
        case 0:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${gadget_parachute}, 1689.08154296875, 3759.160888671875, 36.22359848022461, 0.0, 0.0, -132.0, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 1:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_microsmg}, 1688.8, 3759.09, 35.7, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_smg}, 1688.8199462890625, 3759.1, 35.27, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 2:
            switch (a_4) {
            case 0:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    sub_12531(a_2, ${weapon_assaultsmg}, 1689.6929931640625, 3760.031, 36.327999999999996, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                } else { 
                    sub_12531(a_2, ${weapon_sawnoffshotgun}, 1689.51, 3759.85, 36.3, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                }
                break;
            case 1:
                sub_12531(a_2, ${weapon_pumpshotgun}, 1689.51, 3759.83, 35.8, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12531(a_2, ${weapon_assaultshotgun}, 1689.56, 3759.909912109375, 35.34, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 3:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_assaultrifle}, 1690.3199462890625, 3760.76, 36.27, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_carbinerifle}, 1690.3599853515625, 3760.8, 35.79, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12531(a_2, ${weapon_advancedrifle}, 1690.3499755859375, 3760.8, 35.32, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 4:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_sniperrifle}, 1691.02, 3761.51, 35.81, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_heavysniper}, 1690.99, 3761.469970703125, 35.32, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 5:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_mg}, 1692.06, 3762.57, 36.08, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_combatmg}, 1692.15, 3762.6298828125, 35.49, 0.0, 0.0, 47.39189910888672, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 6:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_rpg}, 1693.26, 3763.82, 36.26, 0.0, 0.0, 47.39189910888672, -0.5, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_grenadelauncher}, 1693.12, 3763.719970703125, 35.88, 0.0, 0.0, 47.39189910888672, -0.5, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12531(a_2, ${weapon_minigun}, 1693.06, 3763.56, 35.39, 0.0, 0.0, 47.39189910888672, -0.5, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 7:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_knife}, 1690.77294921875, 3758.39697265625, 34.449, -90.0, 0.0, 0.0, 0.0, 0.0, 0.475, 35.0, 0.0, 0.0);
                break;
            case 1:
                if (l_38) {
                    sub_12531(a_2, ${weapon_nightstick}, 1691.2230224609375, 3758.6669921875, 34.442501068115234, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                } else { 
                    sub_12531(a_2, ${weapon_nightstick}, 1691.322998046875, 3758.76708984375, 34.442501068115234, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                }
                break;
            case 2:
                if ((!l_38) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
                    sub_12531(a_2, ${weapon_hammer}, 1691.60302734375, 3759.10693359375, 34.443, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                } else { 
                    sub_12531(a_2, ${weapon_hammer}, 1691.6999999999998, 3759.14990234375, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                }
                break;
            case 3:
                sub_12531(a_2, ${weapon_bottle}, 1692.0030517578125, 3759.447021484375, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                break;
            case 4:
                sub_12531(a_2, 0xd8df3c3c, 1691.032958984375, 3758.826904296875, 34.449, -182.0, 96.00029754638672, 41.0, 0.0, 0.0, 0.475, 90.0, 0.0, 0.0);
                break;
            }
            break;
        case 8:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_stungun}, 1692.2769775390625, 3760.18505859375, 34.45370101928711, -90.0, -47.0, 0.0, 0.0, 0.0, 0.475, 90.0, 47.0, 45.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_appistol}, 1692.6219482421875, 3760.2451171875, 34.446998596191406, -90.0, -47.0, 0.0, 0.0, 0.0, 0.475, 90.0, 47.0, 45.0);
                break;
            case 2:
                sub_12531(a_2, ${weapon_combatpistol}, 1692.592041015625, 3760.55908203125, 34.449, -90.0, -47.0, 0.0, 0.0, 0.0, 0.475, 90.0, 47.0, 45.0);
                break;
            case 3:
                sub_12531(a_2, ${weapon_pistol}, 1692.8890380859375, 3760.528076171875, 34.44990158081055, -90.0, -46.5, 0.0, 0.0, 0.0, 0.475, 90.0, 46.5, 45.0);
                break;
            case 4:
                sub_12531(a_2, 0x99aeeb3b, 1693.1390380859375, 3760.818115234375, 34.44990158081055, -90.0, -46.5, 0.0, 0.0, 0.0, 0.475, 90.0, 46.5, 45.0);
                break;
            }
            break;
        case 9:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_smokegrenade}, 1694.223876953125, 3760.8857421875, 34.5536994934082, 0.0, 0.0, 310.0, 0.0, 0.0, 0.475, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_grenade}, 1694.7391357421875, 3760.422607421875, 34.49610137939453, 0.0, 0.0, 310.0, 0.0, 0.0, 0.475, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12531(a_2, ${weapon_stickybomb}, 1695.0684814453125, 3760.04931640625, 34.46549987792969, 0.0, 0.0, 90.0, 0.0, 0.0, 0.475, 90.0, 0.0, -135.0);
                break;
            case 3:
                sub_12531(a_2, 0xab564b93, 1694.927978515625, 3760.18896484375, 34.46549987792969, 0.0, 0.0, 90.0, 0.0, 0.0, 0.475, 90.0, 0.0, -135.0);
                break;
            }
            break;
        case 10:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 5, 0, ${weapon_petrolcan}, 5000, 1695.8040771484375, 3759.918212890625, 34.51359939575195, -90.0, 0.0, 2.5, 0.278, 0.073, 0.693, 90.0, 0.0, -2.5);
                break;
            }
            break;
        case 11:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 7, 0, a_1[0/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12a57(a_2, 7, 0, a_1[1/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12a57(a_2, 7, 0, a_1[2/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12a57(a_2, 7, 0, a_1[3/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 12:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 7, 0, a_1[4/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12a57(a_2, 7, 0, a_1[5/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12a57(a_2, 7, 0, a_1[7/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12a57(a_2, 7, 0, a_1[6/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 13:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 7, 0, a_1[8/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12a57(a_2, 7, 0, a_1[9/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12a57(a_2, 7, 0, a_1[10/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12a57(a_2, 7, 0, a_1[11/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 14:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 7, 0, a_1[12/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12a57(a_2, 7, 0, a_1[13/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12a57(a_2, 7, 0, a_1[14/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12a57(a_2, 7, 0, a_1[15/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 15:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 7, 0, a_1[16/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12a57(a_2, 7, 0, a_1[17/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12a57(a_2, 7, 0, a_1[18/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12a57(a_2, 7, 0, a_1[19/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 16:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_unarmed}, 1694.0452880859375, 3753.343505859375, 35.64580154418945, 0.0, 0.0, 137.39199829101562, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_unarmed}, 1693.58349609375, 3753.768310546875, 35.64580154418945, 0.0, 0.0, 137.39199829101562, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12531(a_2, ${weapon_unarmed}, 1693.1331787109375, 3754.1826171875, 35.64580154418945, 0.0, 0.0, 137.39199829101562, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12531(a_2, ${weapon_unarmed}, 1693.8375244140625, 3753.53466796875, 34.860801696777344, 0.0, 0.0, 137.39199829101562, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
                break;
            case 4:
                sub_12531(a_2, ${weapon_unarmed}, 1693.344970703125, 3753.98779296875, 34.860801696777344, 0.0, 0.0, 137.39199829101562, 0.0, 0.565, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        case 17:
            switch (a_4) {
            case 0:
                sub_12531(a_2, 0xdd5df8d9, 1691.89501953125, 3759.35, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                break;
            case 1:
                sub_12531(a_2, 0x92a27487, 1690.9329833984375, 3758.427, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                break;
            case 2:
                sub_12531(a_2, 0xdfe37640, 1691.093017578125, 3758.47705078125, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                break;
            case 3:
                if (l_38) {
                    sub_12531(a_2, 0x8bb05fd7, 1691.322998046875, 3758.89697265625, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                } else { 
                    sub_12531(a_2, 0x8bb05fd7, 1691.5030517578125, 3759.00708, 34.442501068115234, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                }
                break;
            case 4:
                sub_12531(a_2, 0xf9dcbf2d, 1691.4630126953125, 3759.0, 34.449, -89.9656982421875, -2.391930103302, 0.0, 0.0, 0.0, 0.475, 45.0, 0.0, 0.0);
                break;
            }
            break;
        case 18:
            switch (a_4) {
            case 0:
                sub_12531(a_2, ${weapon_snspistol}, 1692.859, 3760.837890625, 34.44990158081055, -90.0, -46.0, 0.0, 0.0, 0.0, 0.475, 90.0, 46.0, 45.0);
                break;
            case 1:
                sub_12531(a_2, ${weapon_heavypistol}, 1692.3370361328125, 3759.945068359375, 34.446998596191406, -90.0, -47.0, 0.0, 0.0, 0.0, 0.475, 90.0, 47.0, 45.0);
                break;
            case 2:
                sub_12531(a_2, 0x83839c4, 1693.109, 3761.10791015625, 34.45370101928711, -90.0, -46.5, 0.0, 0.0, 0.0, 0.475, 90.0, 46.5, 45.0);
                break;
            case 3:
                sub_12531(a_2, 0x47757124, 1692.2769775390625, 3760.18505859375, 34.45370101928711, -90.0, -47.0, 0.0, 0.0, 0.0, 0.475, 90.0, 47.0, 45.0);
                break;
            }
            break;
        case 19:
            switch (a_4) {
            case 0:
                sub_12a57(a_2, 7, 0, a_1[20/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 1:
                sub_12a57(a_2, 7, 0, a_1[21/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 2:
                sub_12a57(a_2, 7, 0, a_1[22/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            case 3:
                sub_12a57(a_2, 7, 0, a_1[23/*1*/], 1, 1694.282958984375, 3763.6220703125, 37.06, 0.0, 0.0, -42.608, 0.0, 0.755, 0.0, 0.0, 0.0, 0.0);
                break;
            }
            break;
        }
        if (((((a_3 == 11) || (a_3 == 12)) || (a_3 == 13)) || (a_3 == 14)) || (a_3 == 15)) {
            a_2._f1._f2 -= 0.15;
            switch (a_4) {
            case 0:
                a_2._f1._f2 = 36.275;
                break;
            case 1:
                a_2._f1._f2 = 35.929;
                break;
            case 2:
                a_2._f1._f2 = 35.59299850463867;
                break;
            case 3:
                a_2._f1._f2 = 35.176998138427734;
                break;
            }
        }
        if (a_2 == 0xa89cb99e) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, -0.15, 0.0, 0.0);
        }
        if (a_2 == 0x7f7497e5) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.245, 0.0, 0.0);
        }
        if (a_2 == ${weapon_specialcarbine}) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, -0.05, 0.0, 0.0);
        }
        if (a_2 == 0x63ab0442) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.4, 0.0, 0.0);
        }
        if (a_2 == ${weapon_bullpupshotgun}) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, -0.05, 0.0, 0.0);
        }
        if (a_2 == 0x3aabbbaa) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.009999999999999998, 0.0, 0.0);
        }
        if (a_2 == 0xa3d4d34) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, 0.05, 0.0, 0.0);
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            l_33 = -0.05;
            l_34 = 0.9200000166893;
            l_35 = 1.94;
            l_36 = 2.99;
            l_37 = 3.7;
        } else { 
            l_33 = -0.05;
            l_34 = 0.99;
            l_35 = 2.18;
            l_36 = 3.34;
            l_37 = 3.7;
        }
        if (a_3 == 11) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_33, 0.0, 0.0 }));
        } else if (a_3 == 12) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_34, 0.0, 0.0 }));
        } else if (a_3 == 13) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_35, 0.0, 0.0 }));
        } else if (a_3 == 14) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_36, 0.0, 0.0 }));
        } else if (a_3 == 15) {
            a_2._f1/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, ({-0.4, 0.0, 0.0 }) + ({l_37, 0.0, 0.0 }));
        }
    }
    if (a_5) {
        if (a_2 == ${weapon_unarmed}) {
            sub_dc8b(a_2, &a_2._f13, &a_2._f14, &a_2._f15, a_4);
        } else { 
            sub_dc8b(a_2, &a_2._f13, &a_2._f14, &a_2._f15, 0);
        }
    }
    if (v_A == v_8) {
        v_B = 28;
    } else if (v_A == v_9) {
        v_B = 29;
    }
    sub_ae1f(v_B, a_0, &a_2._f1);
    sub_a564(v_B, a_0, &a_2._f4);
    if (a_2._f18 == 7) {
        if (a_2 == ${object}) {
            for (v_C = 0; v_C < 25; v_C += 1) {
                if ((a_1._f50[v_C/*1*/] == a_3) && (a_1._f36[v_C/*1*/] == a_4)) {
                    a_2._f17 = v_C;
                }
            }
        } else if (a_2 != 0) {
            if (a_2 == 0xfc508e33) {
                a_2._f18 = 6;
            } else if (a_2 == 0xd8df3c3c) {
                a_2._f18 = 1;
            } else { 
                sub_dbdd(a_2, a_2);
                switch (WEAPON::GET_WEAPONTYPE_GROUP(a_2)) {
                case ${group_heavy}:
                case ${group_sniper}:
                case ${group_smg}:
                case 0x54c7ffc:
                case ${group_pistol}:
                case ${group_stungun}:
                case ${group_shotgun}:
                case ${group_rifle}:
                case ${group_mg}:
                    a_2._f18 = 0;
                    break;
                case ${group_nightvision}:
                case ${group_digiscanner}:
                case ${group_melee}:
                case ${group_fireextinguisher}:
                case ${group_parachute}:
                case 0x1e3deed0:
                case ${group_petrolcan}:
                    a_2._f18 = 1;
                    break;
                case ${group_thrown}:
                    a_2._f18 = 2;
                    break;
                }
            }
        }
    }
    return a_2 != 0;
}

void sub_dbdd(auto a_0, auto a_1) {
    switch (a_1) {
    case ${weapon_assaultsmg}:
        sub_dc77(a_0, ${ammo_smg}, 30);
        break;
    case ${weapon_bullpupshotgun}:
        sub_dc77(a_0, ${ammo_shotgun}, 8);
        break;
    case 0x99aeeb3b:
        sub_dc77(a_0, ${ammo_pistol}, 12);
        break;
    case ${weapon_sawnoffshotgun}:
        sub_dc77(a_0, ${ammo_shotgun}, 8);
        break;
    case 0xdb1aa450:
        sub_dc77(a_0, ${ammo_smg}, 18);
        break;
    default:
        if (sub_6469(a_1, &v_4) != -1) {
            sub_dc77(a_0, v_4._f5, v_4._f6);
        }
        break;
    }
}

void sub_dc77(auto a_0, auto a_1, auto a_2) {
    a_0._f19 = a_1;
    a_0._f16 = a_2;
}

auto sub_dc8b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_1 = 0;
    a_2 = 0;
    a_3 = 0;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        switch (a_0) {
        case ${weapon_unarmed}:
            if (a_4 == 0) {
                a_1 = 500;
                a_2 = 500;
            } else if (a_4 == 1) {
                a_1 = 1000;
                a_2 = 1000;
            } else if (a_4 == 2) {
                a_1 = 1500;
                a_2 = 1500;
            } else if (a_4 == 3) {
                a_1 = 2000;
                a_2 = 2000;
            } else if (a_4 == 4) {
                a_1 = 2500;
                a_2 = 2500;
            }
            break;
        case ${gadget_parachute}:
            a_1 = 100;
            a_2 = 100;
            break;
        case ${weapon_microsmg}:
            a_1 = 850;
            a_2 = 20;
            break;
        case ${weapon_smg}:
            a_1 = 1300;
            a_2 = 38;
            break;
        case ${weapon_sawnoffshotgun}:
            a_1 = 300;
            a_2 = 8;
            break;
        case ${weapon_pumpshotgun}:
            a_1 = 550;
            a_2 = 8;
            break;
        case ${weapon_assaultshotgun}:
            a_1 = 1500;
            a_2 = 8;
            break;
        case ${weapon_assaultrifle}:
            a_1 = 1400;
            a_2 = 36;
            break;
        case ${weapon_carbinerifle}:
            a_1 = 2100;
            a_2 = 36;
            break;
        case ${weapon_advancedrifle}:
            a_1 = 3500;
            a_2 = 36;
            break;
        case ${weapon_sniperrifle}:
            a_1 = 5000;
            a_2 = 48;
            break;
        case ${weapon_heavysniper}:
            a_1 = 9500;
            a_2 = 29;
            break;
        case ${weapon_mg}:
            a_1 = 3000;
            a_2 = 50;
            break;
        case ${weapon_combatmg}:
            a_1 = 3700;
            a_2 = 92;
            break;
        case ${weapon_rpg}:
            a_1 = 6500;
            a_2 = 100;
            break;
        case ${weapon_grenadelauncher}:
            a_1 = 8100;
            a_2 = 50;
            break;
        case ${weapon_minigun}:
            a_1 = 15000;
            a_2 = 50;
            break;
        case ${weapon_knife}:
            a_1 = 100;
            a_2 = 100;
            break;
        case ${weapon_nightstick}:
            a_1 = 100;
            a_2 = 100;
            break;
        case ${weapon_stungun}:
            a_1 = 100;
            a_2 = 50;
            break;
        case ${weapon_appistol}:
            a_1 = 1000;
            a_2 = 25;
            break;
        case ${weapon_combatpistol}:
            a_1 = 600;
            a_2 = 19;
            break;
        case ${weapon_pistol}:
            a_1 = 350;
            a_2 = 19;
            break;
        case ${weapon_smokegrenade}:
            a_1 = 150;
            a_2 = 150;
            break;
        case ${weapon_grenade}:
            a_1 = 150;
            a_2 = 150;
            break;
        case ${weapon_stickybomb}:
            a_1 = 400;
            a_2 = 400;
            break;
        case ${weapon_petrolcan}:
            a_1 = 25;
            a_2 = 25;
            break;
        case ${weapon_assaultsmg}:
            a_1 = 0;
            a_2 = 38;
            break;
        case ${weapon_bullpupshotgun}:
            a_1 = 1250;
            a_2 = 8;
            break;
        case 0x99aeeb3b:
            a_1 = 4000;
            a_2 = 19;
            break;
        case ${weapon_hammer}:
            a_1 = 500;
            a_2 = 0;
            break;
        case ${weapon_specialcarbine}:
            a_1 = 14750;
            a_2 = 108;
            break;
        case ${weapon_bullpuprifle}:
            a_1 = 14500;
            a_2 = 108;
            break;
        case 0x6d544c99:
            a_1 = 250000;
            a_2 = 100;
            break;
        case 0xf9dcbf2d:
            a_1 = 750;
            a_2 = 0;
            break;
        case 0x63ab0442:
            a_1 = 15500;
            a_2 = 400;
            break;
        case 0xab564b93:
            a_1 = 750;
            a_2 = 750;
            break;
        case 0xd8df3c3c:
            a_1 = 7500;
            a_2 = 0;
            break;
        case 0xdc4db296:
            a_1 = 4350;
            a_2 = 5;
            break;
        case 0xa3d4d34:
            a_1 = 11750;
            a_2 = 113;
            break;
        case 0xdd5df8d9:
            a_1 = 8900;
            a_2 = 0;
            break;
        case 0xdb1aa450:
            a_1 = 6250;
            a_2 = 85;
            break;
        case 0xc1b3c3d1:
            a_1 = g_40001._f1B43;
            a_2 = g_40001._f1B44;
            break;
        case 0xdfe37640:
            a_1 = g_40001._f1B45;
            a_2 = 0;
            break;
        default:
            if (sub_6469(a_0, &v_7) != -1) {
                a_1 = v_7._f3;
                a_2 = v_7._f4;
            }
            break;
        }
        if (((a_0 == ${weapon_bullpupshotgun}) || (a_0 == 0x99aeeb3b)) || (a_0 == ${weapon_hammer})) {
            if (sub_715b() && (sub_12460() || sub_1230c())) {
                a_1 = 0;
            }
        }
        v_2E = a_2;
        switch (a_0) {
        case ${weapon_appistol}:
            v_2E = 25;
            break;
        case ${weapon_snspistol}:
            v_2E = 10;
            break;
        case ${weapon_heavypistol}:
            v_2E = 100;
            break;
        case 0x83839c4:
            v_2E = 10;
            break;
        case ${weapon_microsmg}:
            v_2E = 20;
            break;
        case ${weapon_specialcarbine}:
            v_2E = 108;
            break;
        case ${weapon_bullpuprifle}:
            v_2E = 108;
            break;
        case ${weapon_mg}:
            v_2E = 50;
            break;
        case 0x61012683:
            v_2E = 108;
            break;
        case 0x3aabbbaa:
            v_2E = 18;
            break;
        case 0xa89cb99e:
            v_2E = 15;
            break;
        case ${weapon_heavysniper}:
            v_2E = 29;
            break;
        case 0xc734385a:
            v_2E = 87;
            break;
        }
        if (a_2 != v_2E) {
            a_2 = v_2E;
        }
    } else { 
        v_2F = -1;
        switch (a_0) {
        case ${weapon_unarmed}:
            if (a_4 == 0) {
                a_1 = 100;
                a_2 = 100;
            } else if (a_4 == 1) {
                a_1 = 200;
                a_2 = 200;
            } else if (a_4 == 2) {
                a_1 = 300;
                a_2 = 300;
            } else if (a_4 == 3) {
                a_1 = 400;
                a_2 = 400;
            } else if (a_4 == 4) {
                a_1 = 500;
                a_2 = 500;
            }
            if (a_4 == 0) {
                a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._fAFC);
                a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._fAFC);
            } else if (a_4 == 1) {
                a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._fAFD);
                a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._fAFD);
            } else if (a_4 == 2) {
                a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._fAFE);
                a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._fAFE);
            } else if (a_4 == 3) {
                a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._fAFF);
                a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._fAFF);
            } else if (a_4 == 4) {
                a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._fB00);
                a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._fB00);
            }
            v_2F = 16;
            break;
        case ${gadget_parachute}:
            a_1 = 500;
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._fA61);
            a_2 = 500;
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._fA61);
            v_2F = 99;
            break;
        case ${weapon_microsmg}:
            if (g_40001._f927 == -1) {
                a_1 = 3750;
            } else { 
                a_1 = g_40001._f927;
            }
            if (g_40001._f944 == -1) {
                a_2 = 60;
            } else { 
                a_2 = g_40001._f944;
            }
            v_2F = 1;
            break;
        case ${weapon_smg}:
            if (g_40001._f928 == -1) {
                a_1 = 7500;
            } else { 
                a_1 = g_40001._f928;
            }
            if (g_40001._f945 == -1) {
                a_2 = 113;
            } else { 
                a_2 = g_40001._f945;
            }
            v_2F = 1;
            break;
        case ${weapon_sawnoffshotgun}:
            if (g_40001._f932 == -1) {
                a_1 = 0;
            } else { 
                a_1 = g_40001._f932;
            }
            if (g_40001._f94F == -1) {
                a_2 = 24;
            } else { 
                a_2 = g_40001._f94F;
            }
            v_2F = 2;
            break;
        case ${weapon_pumpshotgun}:
            if (g_40001._f931 == -1) {
                a_1 = 3500;
            } else { 
                a_1 = g_40001._f931;
            }
            if (g_40001._f94E == -1) {
                a_2 = 24;
            } else { 
                a_2 = g_40001._f94E;
            }
            v_2F = 2;
            break;
        case ${weapon_assaultshotgun}:
            if (g_40001._f934 == -1) {
                a_1 = 10000;
            } else { 
                a_1 = g_40001._f934;
            }
            if (g_40001._f951 == -1) {
                a_2 = 24;
            } else { 
                a_2 = g_40001._f951;
            }
            v_2F = 2;
            break;
        case ${weapon_assaultrifle}:
            if (g_40001._f92A == -1) {
                a_1 = 8550;
            } else { 
                a_1 = g_40001._f92A;
            }
            if (g_40001._f947 == -1) {
                a_2 = 108;
            } else { 
                a_2 = g_40001._f947;
            }
            v_2F = 3;
            break;
        case ${weapon_carbinerifle}:
            if (g_40001._f92B == -1) {
                a_1 = 13000;
            } else { 
                a_1 = g_40001._f92B;
            }
            if (g_40001._f948 == -1) {
                a_2 = 108;
            } else { 
                a_2 = g_40001._f948;
            }
            v_2F = 3;
            break;
        case ${weapon_advancedrifle}:
            if (g_40001._f92D == -1) {
                a_1 = 14250;
            } else { 
                a_1 = g_40001._f92D;
            }
            if (g_40001._f94A == -1) {
                a_2 = 108;
            } else { 
                a_2 = g_40001._f94A;
            }
            v_2F = 3;
            break;
        case ${weapon_sniperrifle}:
            if (g_40001._f937 == -1) {
                a_1 = 20000;
            } else { 
                a_1 = g_40001._f937;
            }
            if (g_40001._f954 == -1) {
                a_2 = 145;
            } else { 
                a_2 = g_40001._f954;
            }
            v_2F = 4;
            break;
        case ${weapon_heavysniper}:
            if (g_40001._f935 == -1) {
                a_1 = 38150;
            } else { 
                a_1 = g_40001._f935;
            }
            if (g_40001._f952 == -1) {
                a_2 = 87;
            } else { 
                a_2 = g_40001._f952;
            }
            v_2F = 4;
            break;
        case ${weapon_mg}:
            if (g_40001._f92E == -1) {
                a_1 = 13500;
            } else { 
                a_1 = g_40001._f92E;
            }
            if (g_40001._f94B == -1) {
                a_2 = 150;
            } else { 
                a_2 = g_40001._f94B;
            }
            v_2F = 5;
            break;
        case ${weapon_combatmg}:
            if (g_40001._f92F == -1) {
                a_1 = 14800;
            } else { 
                a_1 = g_40001._f92F;
            }
            if (g_40001._f94C == -1) {
                a_2 = 277;
            } else { 
                a_2 = g_40001._f94C;
            }
            v_2F = 5;
            break;
        case ${weapon_rpg}:
            if (g_40001._f93A == -1) {
                a_1 = 26250;
            } else { 
                a_1 = g_40001._f93A;
            }
            if (g_40001._f957 == -1) {
                a_2 = 1000;
            } else { 
                a_2 = g_40001._f957;
            }
            v_2F = 6;
            break;
        case ${weapon_grenadelauncher}:
            if (g_40001._f939 == -1) {
                a_1 = 32400;
            } else { 
                a_1 = g_40001._f939;
            }
            if (g_40001._f956 == -1) {
                a_2 = 5000;
            } else { 
                a_2 = g_40001._f956;
            }
            v_2F = 6;
            break;
        case ${weapon_minigun}:
            if (g_40001._f93B == -1) {
                a_1 = 50000;
            } else { 
                a_1 = g_40001._f93B;
            }
            if (g_40001._f958 == -1) {
                a_2 = 150;
            } else { 
                a_2 = g_40001._f958;
            }
            v_2F = 6;
            break;
        case ${weapon_knife}:
            if (g_40001._f95C == -1) {
                a_1 = 400;
            } else { 
                a_1 = g_40001._f95C;
            }
            if (g_40001._f961 == -1) {
                a_2 = 100;
            } else { 
                a_2 = g_40001._f961;
            }
            v_2F = 7;
            break;
        case ${weapon_nightstick}:
            if (g_40001._f95D == -1) {
                a_1 = 400;
            } else { 
                a_1 = g_40001._f95D;
            }
            if (g_40001._f962 == -1) {
                a_2 = 100;
            } else { 
                a_2 = g_40001._f962;
            }
            v_2F = 7;
            break;
        case 0x92a27487:
            if (g_40001._f15E4 == -1) {
                a_1 = 400;
            } else { 
                a_1 = g_40001._f15E4;
            }
            if (g_40001._f15E6 == -1) {
                a_2 = 85;
            } else { 
                a_2 = g_40001._f15E6;
            }
            v_2F = 7;
            break;
        case ${weapon_stungun}:
            a_1 = 100;
            a_2 = 50;
            break;
        case ${weapon_appistol}:
            if (g_40001._f926 == -1) {
                a_1 = 5000;
            } else { 
                a_1 = g_40001._f926;
            }
            if (g_40001._f943 == -1) {
                a_2 = 85;
            } else { 
                a_2 = g_40001._f943;
            }
            v_2F = 8;
            break;
        case ${weapon_combatpistol}:
            if (g_40001._f924 == -1) {
                a_1 = 3200;
            } else { 
                a_1 = g_40001._f924;
            }
            if (g_40001._f941 == -1) {
                a_2 = 57;
            } else { 
                a_2 = g_40001._f941;
            }
            v_2F = 8;
            break;
        case ${weapon_pistol}:
            if (g_40001._f923 == -1) {
                a_1 = 2500;
            } else { 
                a_1 = g_40001._f923;
            }
            if (g_40001._f940 == -1) {
                a_2 = 57;
            } else { 
                a_2 = g_40001._f940;
            }
            v_2F = 8;
            break;
        case ${weapon_smokegrenade}:
            if (g_40001._f93C == -1) {
                a_1 = 150;
            } else { 
                a_1 = g_40001._f93C;
            }
            if (g_40001._f960 == -1) {
                a_2 = 150;
            } else { 
                a_2 = g_40001._f960;
            }
            v_2F = 9;
            break;
        case ${weapon_grenade}:
            if (g_40001._f95A == -1) {
                a_1 = 250;
            } else { 
                a_1 = g_40001._f95A;
            }
            if (g_40001._f95F == -1) {
                a_2 = 250;
            } else { 
                a_2 = g_40001._f95F;
            }
            v_2F = 9;
            break;
        case ${weapon_stickybomb}:
            if (g_40001._f959 == -1) {
                a_1 = 600;
            } else { 
                a_1 = g_40001._f959;
            }
            if (g_40001._f95E == -1) {
                a_2 = 600;
            } else { 
                a_2 = g_40001._f95E;
            }
            v_2F = 9;
            break;
        case ${weapon_petrolcan}:
            if (g_40001._f93D == -1) {
                a_1 = 100;
            } else { 
                a_1 = g_40001._f93D;
            }
            a_2 = g_40001._f24E0;
            v_2F = 10;
            break;
        case ${weapon_assaultsmg}:
            if (g_40001._f929 == -1) {
                a_1 = 12550;
            } else { 
                a_1 = g_40001._f929;
            }
            if (g_40001._f946 == -1) {
                a_2 = 113;
            } else { 
                a_2 = g_40001._f946;
            }
            v_2F = 1;
            break;
        case ${weapon_bullpupshotgun}:
            if (g_40001._f933 == -1) {
                a_1 = 8000;
            } else { 
                a_1 = g_40001._f933;
            }
            if (g_40001._f950 == -1) {
                a_2 = 24;
            } else { 
                a_2 = g_40001._f950;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                a_1 = 0;
            }
            v_2F = 2;
            break;
        case 0x99aeeb3b:
            if (g_40001._f925 == -1) {
                a_1 = 3900;
            } else { 
                a_1 = g_40001._f925;
            }
            if (g_40001._f942 == -1) {
                a_2 = 57;
            } else { 
                a_2 = g_40001._f942;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                a_1 = 0;
            }
            v_2F = 8;
            break;
        case ${weapon_hammer}:
            if (g_40001._f93F == -1) {
                a_1 = 500;
            } else { 
                a_1 = g_40001._f93F;
            }
            a_2 = 0;
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                a_1 = 0;
            }
            v_2F = 7;
            break;
        case ${weapon_snspistol}:
            a_1 = g_40001._f15DF;
            a_2 = g_40001._f15DA;
            v_2F = 8;
            break;
        case ${weapon_bottle}:
            a_1 = g_40001._f15DE;
            a_2 = 0;
            v_2F = 7;
            break;
        case 0x61012683:
            a_1 = g_40001._f1383;
            a_2 = g_40001._f1389;
            v_2F = 3;
            break;
        case ${weapon_heavypistol}:
            a_1 = g_40001._f15E0;
            a_2 = g_40001._f15DC;
            v_2F = 8;
            break;
        case ${weapon_specialcarbine}:
            a_1 = g_40001._f15E1;
            a_2 = g_40001._f15DB;
            v_2F = 3;
            break;
        case ${weapon_bullpuprifle}:
            a_1 = g_40001._f15E2;
            a_2 = g_40001._f15DD;
            v_2F = 3;
            break;
        case 0x83839c4:
            a_1 = g_40001._f15E3;
            a_2 = g_40001._f15E5;
            v_2F = 8;
            break;
        case 0xa89cb99e:
            a_1 = g_40001._f183B;
            a_2 = g_40001._f183C;
            v_2F = 4;
            break;
        case 0x7f7497e5:
            a_1 = g_40001._f183D;
            a_2 = g_40001._f183E;
            v_2F = 6;
            break;
        case 0x3aabbbaa:
            a_1 = g_40001._f1A3C;
            a_2 = g_40001._f1A41;
            v_2F = 2;
            break;
        case 0xc734385a:
            a_1 = g_40001._f1A42;
            a_2 = g_40001._f1A49;
            v_2F = 4;
            break;
        case 0xf9dcbf2d:
            a_1 = g_40001._f1B83;
            a_2 = 0;
            v_2F = 7;
            break;
        case 0x47757124:
            a_1 = g_40001._f1B37;
            a_2 = g_40001._f1B38;
            v_2F = 6;
            break;
        case 0xab564b93:
            a_1 = g_40001._f1C5A;
            a_2 = g_40001._f1C5A;
            v_2F = 9;
            break;
        case 0xd8df3c3c:
            a_1 = g_40001._f1B39;
            a_2 = g_40001._f1B3A;
            v_2F = 7;
            break;
        case 0xdc4db296:
            a_1 = g_40001._f1B3B;
            a_2 = g_40001._f1B3C;
            v_2F = 8;
            break;
        case 0xa3d4d34:
            a_1 = g_40001._f214A;
            a_2 = g_40001._f214B;
            v_2F = 1;
            break;
        case 0x63ab0442:
            a_1 = g_40001._f1C58;
            a_2 = g_40001._f1C59;
            v_2F = 6;
            break;
        case 0xdd5df8d9:
            a_1 = g_40001._f2679;
            v_2F = 7;
            break;
        case 0xdb1aa450:
            a_1 = g_40001._f2678;
            a_2 = g_40001._f267A;
            v_2F = 8;
            break;
        case 0x8bb05fd7:
            a_1 = g_40001._f271A;
            v_2F = 7;
            break;
        case 0xc1b3c3d1:
            a_1 = g_40001._f1B43;
            a_2 = g_40001._f1B44;
            v_2F = 8;
            break;
        case 0xdfe37640:
            a_1 = g_40001._f1B45;
            v_2F = 7;
            break;
        case 0xef951fbb:
            a_1 = g_40001._f2DA5;
            a_2 = g_40001._f2DA6;
            v_2F = 2;
            break;
        case 0x624fe830:
            a_1 = g_40001._f2DA2;
            a_2 = g_40001._f2DA3;
            v_2F = 3;
            break;
        default:
            if (sub_6469(a_0, &v_30) != -1) {
                a_1 = v_30._f3;
                a_2 = v_30._f4;
            }
            break;
        }
        switch (v_2F) {
        case 0:
            break;
        case 1:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 2:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 3:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 4:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 5:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 6:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 7:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f6);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f6);
            break;
        case 8:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f4);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f4);
            break;
        case 9:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 10:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f2);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f2);
            break;
        case 11:
            break;
        case 12:
            break;
        case 13:
            break;
        case 14:
            break;
        case 15:
            break;
        case 16:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3);
            break;
        case 17:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f6);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f6);
            break;
        case 18:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f4);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f4);
            break;
        case 99:
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_42DD3._f7);
            a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_42DD3._f7);
            break;
        }
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_122ef()) {
        v_67/*"16"*/ = sub_1199f(a_0, 0);
        v_6C = 0;
        sub_11842(a_0, &v_6B, &v_6C);
        if (sub_715b() && (sub_1230c() || sub_12460())) {
            if (((a_0 == ${weapon_hammer}) || (a_0 == 0x99aeeb3b)) || (a_0 == ${weapon_bullpupshotgun})) {
                v_6C = 1;
            }
        }
        sub_11379(&v_57, v_67, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, v_6B, v_6C, -1, -1);
        if (MOBILE::_BD4D7EAF8A30F637(&v_57)) {
            a_1 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_57), 0x92f0dbbf, 1);
        }
        if (sub_11086(a_0, &v_6D)) {
            sub_10e6d(v_6D, 2, &v_67, 0);
            sub_11379(&v_57, v_67, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 0, sub_10a67(a_0), -1, -1);
            if (MOBILE::_BD4D7EAF8A30F637(&v_57)) {
                a_2 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_57), 0x3fa29128, 1);
                switch (a_0) {
                case ${weapon_grenadelauncher}:
                case ${weapon_rpg}:
                case 0x63ab0442:
                case 0x7f7497e5:
                    a_3 = 1;
                    break;
                }
            }
        } else if ((((a_0 == ${weapon_grenade}) || (a_0 == ${weapon_smokegrenade})) || (a_0 == ${weapon_stickybomb})) || (a_0 == 0xab564b93)) {
            switch (a_0) {
            case ${weapon_grenade}:
                v_57/*"64"*/ = "WP_WT_GNADE_t2_v1";
                break;
            case ${weapon_smokegrenade}:
                v_57/*"64"*/ = "WP_WT_GNADE_SMK_t2_v1";
                break;
            case ${weapon_stickybomb}:
                v_57/*"64"*/ = "WP_WT_GNADE_STK_t2_v1";
                break;
            case 0xab564b93:
                v_57/*"64"*/ = "WP_WT_PRXMINE_t2_v1";
                break;
            }
            if (MOBILE::_BD4D7EAF8A30F637(&v_57)) {
                a_2 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_57), 0x3fa29128, 1);
            }
        }
    }
    v_6E = sub_f3a4(a_0, a_1, a_2);
    if (v_6E != 1.0) {}
    return a_1 != 0;
}

auto sub_f3a4(auto a_0, auto a_1, auto a_2) {
    v_6 = 0.0;
    v_7 = 0.0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_122ef()) {
        return 1.0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_5 = sub_105c7(a_0);
        if (v_5 == 3) {
            v_7 += 0.05;
        } else if (v_5 == 2) {
            v_7 += 0.1;
        } else if (v_5 == 1) {
            v_7 += 0.15;
        }
        if (v_8 >= 100.0) {
            v_7 += 0.1;
        } else if (v_8 >= 80.0) {
            v_7 += 0.08;
        } else if (v_8 >= 60.0) {
            v_7 += 0.06;
        } else if (v_8 >= 40.0) {
            v_7 += 0.04;
        } else if (v_8 >= 20.0) {
            v_7 += 0.02;
        }
        v_7 += sub_10453(a_0);
        v_7 += sub_103fd();
        v_7 += sub_10015();
        if (l_32 == 1) {
            v_7 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
        }
        if (l_32 == 0) {
            if (sub_f594()) {
                v_7 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
                l_32 = 1;
            } else { 
                l_32 = -1;
            }
        }
        v_6 = 1.0 - v_7;
        a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * v_6);
        a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._f4C);
        a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * g_40001._f4C);
        return v_6;
    } else { 
        v_5 = sub_105c7(a_0);
        if (v_5 == 3) {
            v_7 += 0.1;
        } else if (v_5 == 2) {
            v_7 += 0.15;
        } else if (v_5 == 1) {
            v_7 += 0.25;
        }
        v_6 = 1.0 - v_7;
        a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * v_6);
        a_2 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_2) * v_6);
        return v_6;
    }
}

auto sub_f594() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        return 0;
    }
    if (sub_ffd3()) {
        if (sub_f6cc()) {
            v_2 = sub_f60e();
            v_3 = sub_f5f2();
            v_4 = (__678_$BBDA792448DB5A89(v_3) / __678_$BBDA792448DB5A89(v_2)) * 100.0;
            if ((v_4 > ((float)g_40001._f75)) && (v_2 >= 8)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_f5f2() {
    v_2 += g_148FB0;
    v_2 += g_148FB3;
    return v_2;
}

auto sub_f60e() {
    v_2 += g_148FB1;
    v_2 += g_148FB2;
    v_2 += g_148FB0;
    v_2 += g_148FB3;
    v_2 += g_148FB5;
    v_2 += g_148FB4;
    v_2 += sub_8076(0x9f79ba0b);
    v_2 += sub_8076(0x62eb8c5a);
    v_2 += sub_8076(0xe7072cd);
    v_2 += sub_8076(0xaa238ff0);
    v_2 += sub_8076(0x3511a79);
    v_2 += sub_8076(0x3b566d5c);
    v_2 += sub_8076(0x368f6fd9);
    v_2 += sub_8076(0xc2a0aad8);
    v_2 += sub_8076(0x738d415f);
    return v_2;
}

auto sub_f6cc() {
    TIME::GET_POSIX_TIME(&v_2, &v_2._f1, &v_2._f2, &v_2._f3, &v_2._f4, &v_2._f5);
    v_9/*{7}*/ = sub_ffaf(0xfb63ebdd);
    if (sub_f710(v_9, v_2, 7)) {
        return 1;
    }
    return 0;
}

auto sub_f710(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14) {
    v_11 = sub_fe74(a_7);
    v_12 = sub_fa69(a_0, a_E);
    if (v_12 == -15) {
        return 0;
    }
    if (sub_f74b(v_11, v_12) == 1) {
        return 1;
    }
    return 0;
}

auto sub_f74b(auto a_0, auto a_1) {
    if ((!sub_f8eb(a_1)) || (!sub_f8eb(a_0))) {
        return 1;
    }
    v_4 = sub_f8af(a_0);
    v_5 = sub_f8af(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_f8a2(a_0);
    v_5 = sub_f8a2(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_f890(a_0);
    v_5 = sub_f890(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_f87d(a_0);
    v_5 = sub_f87d(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_f86a(a_0);
    v_5 = sub_f86a(a_1);
    if (v_4 > v_5) {
        return 1;
    } else if (v_4 < v_5) {
        return 0;
    }
    v_4 = sub_f857(a_0);
    v_5 = sub_f857(a_1);
    if (v_4 > v_5) {
        return 1;
    }
    return 0;
}

auto sub_f857(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 20) & 63;
}

auto sub_f86a(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 14) & 63;
}

auto sub_f87d(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 9) & 31;
}

auto sub_f890(auto a_0) {
    return SYSTEM::SHIFT_RIGHT(a_0, 4) & 31;
}

auto sub_f8a2(auto a_0) {
    return a_0 & 15;
}

auto sub_f8af(auto a_0) {
    return ((SYSTEM::SHIFT_RIGHT(a_0, 26) & 31) * sub_f8d4(GAMEPLAY::IS_BIT_SET(a_0, 31), -1, 1)) + 2011;
}

auto sub_f8d4(auto a_0, auto a_1, auto a_2) {
    if (a_0) {
        return a_1;
    } else { 
        return a_2;
    }
}

auto sub_f8eb(auto a_0) {
    if (a_0 == -15) {
        return 0;
    }
    v_3 = sub_f857(a_0);
    if ((v_3 < 0) || (v_3 >= 60)) {
        return 0;
    }
    v_4 = sub_f86a(a_0);
    if ((v_4 < 0) || (v_4 >= 60)) {
        return 0;
    }
    v_5 = sub_f87d(a_0);
    if ((v_5 < 0) || (v_5 > 23)) {
        return 0;
    }
    v_6 = sub_f8af(a_0);
    if (((v_6 <= 0) || (v_6 > 2043)) || (v_6 < 1979)) {
        return 0;
    }
    v_7 = sub_f8a2(a_0);
    if ((v_7 < 0) || (v_7 > 11)) {
        return 0;
    }
    v_8 = sub_f890(a_0);
    if ((v_8 < 1) || (v_8 > sub_f9c7(v_7, v_6))) {
        return 0;
    }
    return 1;
}

auto sub_f9c7(auto a_0, auto a_1) {
    if (a_1 < 0) {
        a_1 = 0;
    }
    switch (a_0) {
    case 0:
    case 2:
    case 4:
    case 6:
    case 7:
    case 9:
    case 11:
        return 31;
        break;
    case 3:
    case 5:
    case 8:
    case 10:
        return 30;
        break;
    case 1:
        if ((a_1 % 4) == 0) {
            if ((a_1 % 100) != 0) {
                return 29;
            } else if ((a_1 % 400) == 0) {
                return 29;
            }
        }
        return 28;
        break;
    }
    return 30;
}

auto sub_fa69(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (sub_fe1e(a_0) == 0) {
        v_A = sub_fe74(a_0);
        v_B = v_A;
        sub_faa9(&v_B, 0, 0, 0, a_7, 0, 0);
        if (a_7 == 0) {
            v_B = v_A;
        }
        return v_B;
    }
    return v_C;
}

void sub_faa9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = sub_f8af(a_0);
    v_A = sub_f8a2(a_0);
    v_B = sub_f890(a_0);
    v_C = sub_f87d(a_0);
    v_D = sub_f86a(a_0);
    v_E = sub_f857(a_0);
    if ((((((a_6 == 0) && (a_5 == 0)) && (a_4 == 0)) && (a_3 == 0)) && (a_2 == 0)) && (a_1 == 0)) {
        return ;
    }
    if (a_1 < 0) {
        return ;
    }
    if (a_2 < 0) {
        return ;
    }
    if (a_3 < 0) {
        return ;
    }
    if (a_4 < 0) {
        return ;
    }
    if (a_5 < 0) {
        return ;
    }
    if (a_6 < 0) {
        return ;
    }
    v_E += a_1;
    for (; v_E >= 60; v_E -= 60) {
        a_2 += 1;
    }
    v_D += a_2;
    for (; v_D >= 60; v_D -= 60) {
        a_3 += 1;
    }
    v_C += a_3;
    for (; v_C >= 24; v_C -= 24) {
        a_4 += 1;
    }
    v_B += a_4;
    v_F = sub_f9c7(v_A, v_9);
    while (v_B > v_F) {
        v_A += 1;
        v_B -= v_F;
        if (v_A > 11) {
            v_9 += 1;
            v_A -= 12;
        }
        v_F = sub_f9c7(v_A, v_9);
    }
    v_A += a_5;
    for (; v_A > 11; v_A -= 12) {
        a_6 += 1;
    }
    v_9 += a_6;
    sub_fc2b(a_0, v_E, v_D, v_C, v_B, v_A, v_9);
}

void sub_fc2b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_fde2(a_0, a_1);
    sub_fda7(a_0, a_2);
    sub_fd6d(a_0, a_3);
    sub_fd3a(a_0, a_5);
    sub_fce9(a_0, a_4);
    sub_fc63(a_0, a_6);
}

void sub_fc63(auto a_0, auto a_1) {
    if (a_1 <= 0) {
        return ;
    }
    if ((a_1 > 2043) || (a_1 < 1979)) {
        return ;
    }
    a_0 -= a_0 & 0x7c000000;
    if (a_1 < 2011) {
        a_0 |= SYSTEM::SHIFT_LEFT(2011 - a_1, 26);
        a_0 |= 0x80000000;
    } else { 
        a_0 |= SYSTEM::SHIFT_LEFT(a_1 - 2011, 26);
        a_0 -= a_0 & 0x80000000;
    }
}

void sub_fce9(auto a_0, auto a_1) {
    v_4 = sub_f8a2(a_0);
    v_5 = sub_f8af(a_0);
    if ((a_1 < 1) || (a_1 > sub_f9c7(v_4, v_5))) {
        return ;
    }
    a_0 -= a_0 & 496;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 4);
}

void sub_fd3a(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 11)) {
        return ;
    }
    a_0 -= a_0 & 15;
    a_0 |= a_1;
}

void sub_fd6d(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 > 24)) {
        return ;
    }
    a_0 -= a_0 & 15872;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 9);
}

void sub_fda7(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0xfc000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 14);
}

void sub_fde2(auto a_0, auto a_1) {
    if ((a_1 < 0) || (a_1 >= 60)) {
        return ;
    }
    a_0 -= a_0 & 0x3f00000;
    a_0 |= SYSTEM::SHIFT_LEFT(a_1, 20);
}

auto sub_fe1e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (((((((a_0 == 0) && (a_0._f1 == 0)) && (a_0._f2 == 0)) && (a_0._f3 == 0)) && (a_0._f4 == 0)) && (a_0._f5 == 0)) && (a_0._f6 == 0)) {
        return 1;
    }
    return 0;
}

auto sub_fe74(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_0 > 0) {
        sub_fc63(&v_9, a_0);
    }
    if (a_0._f1 > 0) {
        sub_fd3a(&v_9, sub_feea(a_0._f1));
    }
    if (a_0._f2 > 0) {
        sub_fce9(&v_9, a_0._f2);
    }
    if (a_0._f3 > 0) {
        sub_fd6d(&v_9, a_0._f3);
    }
    if (a_0._f4 > 0) {
        sub_fda7(&v_9, a_0._f4);
    }
    if (a_0._f5 > 0) {
        sub_fde2(&v_9, a_0._f5);
    }
    return v_9;
}

auto sub_feea(auto a_0) {
    if (a_0 < 1) {
        return 0;
    }
    if (a_0 > 12) {
        return 0;
    }
    switch (a_0) {
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 4;
        break;
    case 6:
        return 5;
        break;
    case 7:
        return 6;
        break;
    case 8:
        return 7;
        break;
    case 9:
        return 8;
        break;
    case 10:
        return 9;
        break;
    case 11:
        return 10;
        break;
    case 12:
        return 11;
        break;
    }
    return 0;
}

auto<7> sub_ffaf(auto a_0) {
    v_3 = a_0;
    if (STATS::STAT_GET_DATE(v_3, &v_B, 7, -1)) {
        return v_B;
    }
    return v_4;
}

auto sub_ffd3() {
    if (sub_10003() && sub_fff1(0)) {
        return 1;
    }
    return 0;
}

auto sub_fff1(auto a_0) {
    return g_140671[a_0/*1*/];
}

auto sub_10003() {
    return sub_fff1(sub_4ba5() + 1);
}

auto sub_10015() {
    if (sub_1031f(12)) {
        return 0.04;
    } else if (sub_10241(12)) {
        return 0.03;
    } else if (sub_10163(12)) {
        return 0.02;
    } else if (sub_1006b(12)) {
        return 0.009999999999999998;
    }
    return 0.0;
}

auto sub_1006b(auto a_0) {
    v_3 = sub_10098(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_1008b(auto a_0) {
    return a_0 % 32;
}

auto sub_10098(auto a_0) {
    switch (sub_100fc(a_0)) {
    case 777:
        return g_148FE7[sub_4b71(-1)/*1*/];
    case 778:
        return g_148FED[sub_4b71(-1)/*1*/];
    case 779:
        return g_148FF3[sub_4b71(-1)/*1*/];
    case 780:
        return g_148FF3[sub_4b71(-1)/*1*/];
    }
    return 0;
}

auto sub_100fc(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    switch (v_4) {
    case 0:
        return 777;
        break;
    case 1:
        return 778;
        break;
    case 2:
        return 779;
        break;
    case 3:
        return 780;
        break;
    }
    return 3790;
}

auto sub_10156(auto a_0) {
    return a_0 / 32;
}

auto sub_10163(auto a_0) {
    v_3 = sub_10183(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_10183(auto a_0) {
    switch (sub_101e7(a_0)) {
    case 767:
        return g_148FCF[sub_4b71(-1)/*1*/];
    case 768:
        return g_148FD5[sub_4b71(-1)/*1*/];
    case 769:
        return g_148FDB[sub_4b71(-1)/*1*/];
    case 770:
        return g_148FDB[sub_4b71(-1)/*1*/];
    }
    return 0;
}

auto sub_101e7(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    switch (v_4) {
    case 0:
        return 767;
        break;
    case 1:
        return 768;
        break;
    case 2:
        return 769;
        break;
    case 3:
        return 770;
        break;
    }
    return 3790;
}

auto sub_10241(auto a_0) {
    v_3 = sub_10261(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_10261(auto a_0) {
    switch (sub_102c5(a_0)) {
    case 757:
        return g_148FB7[sub_4b71(-1)/*1*/];
    case 758:
        return g_148FBD[sub_4b71(-1)/*1*/];
    case 759:
        return g_148FC3[sub_4b71(-1)/*1*/];
    case 760:
        return g_148FC3[sub_4b71(-1)/*1*/];
    }
    return 0;
}

auto sub_102c5(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    switch (v_4) {
    case 0:
        return 757;
        break;
    case 1:
        return 758;
        break;
    case 2:
        return 759;
        break;
    case 3:
        return 760;
        break;
    }
    return 3790;
}

auto sub_1031f(auto a_0) {
    v_3 = sub_1033f(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_1033f(auto a_0) {
    switch (sub_103a3(a_0)) {
    case 747:
        return g_148FFF[sub_4b71(-1)/*1*/];
    case 748:
        return g_149005[sub_4b71(-1)/*1*/];
    case 749:
        return g_14900B[sub_4b71(-1)/*1*/];
    case 750:
        return g_14900B[sub_4b71(-1)/*1*/];
    }
    return 0;
}

auto sub_103a3(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    switch (v_4) {
    case 0:
        return 747;
        break;
    case 1:
        return 748;
        break;
    case 2:
        return 749;
        break;
    case 3:
        return 750;
        break;
    }
    return 3790;
}

auto sub_103fd() {
    if (sub_1031f(9)) {
        return 0.04;
    } else if (sub_10241(9)) {
        return 0.03;
    } else if (sub_10163(9)) {
        return 0.02;
    } else if (sub_1006b(9)) {
        return 0.009999999999999998;
    }
    return 0.0;
}

auto sub_10453(auto a_0) {
    if (a_0 == 0) {
        return 0.0;
    }
    v_3 = 12;
    switch (a_0) {
    case ${weapon_microsmg}:
        v_3 = 5;
        break;
    case ${weapon_smg}:
        v_3 = 5;
        break;
    case ${weapon_sawnoffshotgun}:
        v_3 = 4;
        break;
    case ${weapon_pumpshotgun}:
        v_3 = 4;
        break;
    case ${weapon_assaultshotgun}:
        v_3 = 4;
        break;
    case ${weapon_assaultrifle}:
        v_3 = 25;
        break;
    case ${weapon_carbinerifle}:
        v_3 = 25;
        break;
    case ${weapon_advancedrifle}:
        v_3 = 25;
        break;
    case ${weapon_sniperrifle}:
        v_3 = 2;
        break;
    case ${weapon_heavysniper}:
        v_3 = 2;
        break;
    case ${weapon_mg}:
        v_3 = 26;
        break;
    case ${weapon_combatmg}:
        v_3 = 26;
        break;
    case ${weapon_rpg}:
        v_3 = 6;
        break;
    case ${weapon_grenadelauncher}:
        v_3 = 3;
        break;
    case ${weapon_knife}:
        v_3 = 8;
        break;
    case ${weapon_appistol}:
        v_3 = 1;
        break;
    case ${weapon_combatpistol}:
        v_3 = 1;
        break;
    case ${weapon_pistol}:
        v_3 = 1;
        break;
    case ${weapon_smokegrenade}:
        v_3 = 3;
        break;
    case ${weapon_grenade}:
        v_3 = 3;
        break;
    case ${weapon_stickybomb}:
        v_3 = 7;
        break;
    }
    if (v_3 != 12) {
        if (sub_1031f(v_3)) {
            return 0.08;
        } else if (sub_10241(v_3)) {
            return 0.06;
        } else if (sub_10163(v_3)) {
            return 0.04;
        } else if (sub_1006b(v_3)) {
            return 0.02;
        }
    }
    return 0.0;
}

auto sub_105c7(auto a_0) {
    v_3 = sub_10943();
    if ((a_0 == 0) || (!sub_7507(v_3))) {
        return -1;
    }
    v_4 = 7;
    switch (a_0) {
    case ${weapon_unarmed}:
        break;
    case ${gadget_parachute}:
        break;
    case ${weapon_microsmg}:
        v_4 = 1;
        break;
    case ${weapon_smg}:
        v_4 = 1;
        break;
    case ${weapon_sawnoffshotgun}:
        v_4 = 3;
        break;
    case ${weapon_pumpshotgun}:
        v_4 = 3;
        break;
    case ${weapon_assaultshotgun}:
        v_4 = 3;
        break;
    case ${weapon_assaultrifle}:
        v_4 = 2;
        break;
    case ${weapon_carbinerifle}:
        v_4 = 2;
        break;
    case ${weapon_advancedrifle}:
        v_4 = 2;
        break;
    case ${weapon_sniperrifle}:
        break;
    case ${weapon_heavysniper}:
        break;
    case ${weapon_mg}:
        v_4 = 4;
        break;
    case ${weapon_combatmg}:
        v_4 = 4;
        break;
    case ${weapon_rpg}:
        break;
    case ${weapon_grenadelauncher}:
        break;
    case ${weapon_minigun}:
        v_4 = 5;
        break;
    case ${weapon_knife}:
        break;
    case ${weapon_nightstick}:
        break;
    case ${weapon_petrolcan}:
        break;
    case ${weapon_stungun}:
        break;
    case ${weapon_appistol}:
        v_4 = 0;
        break;
    case ${weapon_combatpistol}:
        v_4 = 0;
        break;
    case ${weapon_pistol}:
        v_4 = 0;
        break;
    case ${weapon_smokegrenade}:
        break;
    case ${weapon_grenade}:
        break;
    case ${weapon_stickybomb}:
        break;
    }
    if (v_4 != 7) {
        switch (sub_10823(v_4, v_3)) {
        case 1:
            return 3;
            break;
        case 2:
            return 2;
            break;
        case 3:
            return 1;
            break;
        }
    } else { 
        asm .vardef<F> 6, "[{\"offset\":0,\"value\":6}]"
        v_6[0/*1*/] = sub_10823(1, v_3);
        v_6[1/*1*/] = sub_10823(3, v_3);
        v_6[2/*1*/] = sub_10823(2, v_3);
        v_6[3/*1*/] = sub_10823(4, v_3);
        v_6[4/*1*/] = sub_10823(5, v_3);
        v_6[5/*1*/] = sub_10823(0, v_3);
        v_D = 0;
        for (v_5 = 0; v_5 < 6; v_5 += 1) {
            if (v_6[v_5/*1*/] < 3) {
                v_D = 1;
            }
        }
        if (!v_D) {
            return 1;
        }
        v_D = 0;
        for (v_5 = 0; v_5 < 6; v_5 += 1) {
            if (v_6[v_5/*1*/] < 2) {
                v_D = 1;
            }
        }
        if (!v_D) {
            return 2;
        }
        v_D = 0;
        for (v_5 = 0; v_5 < 6; v_5 += 1) {
            if (v_6[v_5/*1*/] < 1) {
                v_D = 1;
            }
        }
        if (!v_D) {
            return 3;
        }
    }
    return -1;
}

auto sub_10823(auto a_0, auto a_1) {
    if (a_0 == 0) {
        v_4 = 0;
        v_5 = 1;
        v_6 = 2;
        v_7 = -1;
    } else if (a_0 == 1) {
        v_4 = 3;
        v_5 = 4;
        v_6 = 5;
        v_7 = -1;
    } else if (a_0 == 2) {
        v_4 = 9;
        v_5 = 10;
        v_6 = 11;
        v_7 = -1;
    } else if (a_0 == 3) {
        v_4 = 6;
        v_5 = 7;
        v_6 = 8;
        v_7 = -1;
    } else if (a_0 == 4) {
        v_4 = 12;
        v_5 = 13;
        v_6 = 14;
        v_7 = -1;
    } else if (a_0 == 5) {
        v_4 = 15;
        v_5 = 16;
        v_6 = 17;
        v_7 = -1;
    } else if (a_0 == 6) {
        v_4 = 18;
        v_5 = 19;
        v_6 = 20;
        v_7 = 21;
    } else { 
        return 0;
    }
    v_8 = sub_10927(v_4, a_1);
    if (sub_10927(v_5, a_1) < v_8) {
        v_8 = sub_10927(v_5, a_1);
    }
    if (sub_10927(v_6, a_1) < v_8) {
        v_8 = sub_10927(v_6, a_1);
    }
    if (v_7 != -1) {
        if (sub_10927(v_7, a_1) < v_8) {
            v_8 = sub_10927(v_7, a_1);
        }
    }
    return v_8;
}

auto sub_10927(auto a_0, auto a_1) {
    return game_state._f4575[a_1/*271*/]._f3[a_0/*12*/]._f3;
}

auto sub_10943() {
    sub_1095c();
    return game_state._f6EA._f21B._fDDD;
}

void sub_1095c() {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID())) {
        if (sub_7550(game_state._f6EA._f21B._fDDD) != ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID())) {
            v_2 = sub_7513(PLAYER::PLAYER_PED_ID());
            if (sub_7507(v_2) && ((!sub_10a59(14)) || g_18658)) {
                if ((game_state._f6EA._f21B._fDDD != v_2) && sub_7507(game_state._f6EA._f21B._fDDD)) {
                    game_state._f6EA._f21B._fDDE = game_state._f6EA._f21B._fDDD;
                }
                game_state._f6EA._f21B._fDDF = v_2;
                game_state._f6EA._f21B._fDDD = v_2;
                return ;
            }
        } else { 
            if (game_state._f6EA._f21B._fDDD != 145) {
                game_state._f6EA._f21B._fDDF = game_state._f6EA._f21B._fDDD;
            }
            return ;
        }
    }
    game_state._f6EA._f21B._fDDD = 145;
}

auto sub_10a59(auto a_0) {
    return g_8B74 == a_0;
}

auto sub_10a67(auto a_0) {
    return sub_10a75(a_0);
}

auto sub_10a75(auto a_0) {
    switch (a_0) {
    case ${weapon_unarmed}:
        return 0;
        break;
    case ${weapon_pistol}:
        return 1;
        break;
    case ${weapon_combatpistol}:
        return 2;
        break;
    case ${weapon_appistol}:
        return 3;
        break;
    case 0x99aeeb3b:
        return 4;
        break;
    case ${weapon_smg}:
        return 5;
        break;
    case ${weapon_assaultsmg}:
        return 6;
        break;
    case ${weapon_microsmg}:
        return 7;
        break;
    case ${weapon_assaultrifle}:
        return 8;
        break;
    case ${weapon_carbinerifle}:
        return 9;
        break;
    case ${weapon_heavyrifle}:
        return 10;
        break;
    case ${weapon_advancedrifle}:
        return 11;
        break;
    case ${weapon_mg}:
        return 12;
        break;
    case ${weapon_combatmg}:
        return 13;
        break;
    case ${weapon_assaultmg}:
        return 14;
        break;
    case ${weapon_stickybomb}:
        return 15;
        break;
    case ${weapon_grenade}:
        return 16;
        break;
    case ${weapon_smokegrenade}:
        return 17;
        break;
    case ${weapon_remotesniper}:
        return 18;
        break;
    case ${weapon_assaultsniper}:
        return 19;
        break;
    case ${weapon_sniperrifle}:
        return 20;
        break;
    case ${weapon_heavysniper}:
        return 21;
        break;
    case ${weapon_pumpshotgun}:
        return 22;
        break;
    case ${weapon_bullpupshotgun}:
        return 23;
        break;
    case ${weapon_assaultshotgun}:
        return 24;
        break;
    case ${weapon_sawnoffshotgun}:
        return 25;
        break;
    case ${weapon_grenadelauncher}:
        return 26;
        break;
    case ${weapon_rpg}:
        return 27;
        break;
    case ${weapon_minigun}:
        return 28;
        break;
    case ${weapon_loudhailer}:
        return 29;
        break;
    case ${weapon_programmablear}:
        return 30;
        break;
    case ${weapon_stungun}:
        return 31;
        break;
    case ${weapon_rubbergun}:
        return 32;
        break;
    case ${gadget_parachute}:
        return 33;
        break;
    case ${weapon_knife}:
        return 34;
        break;
    case ${weapon_nightstick}:
        return 35;
        break;
    case ${weapon_hammer}:
        return 36;
        break;
    case ${weapon_bat}:
        return 37;
        break;
    case ${weapon_crowbar}:
        return 38;
        break;
    case ${weapon_golfclub}:
        return 39;
        break;
    case ${weapon_grenadelauncher_smoke}:
        return 40;
        break;
    case ${weapon_molotov}:
        return 41;
        break;
    case ${weapon_fireextinguisher}:
        return 42;
        break;
    case ${weapon_petrolcan}:
        return 43;
        break;
    case ${weapon_digiscanner}:
        return 44;
        break;
    case ${weapon_bottle}:
        return 45;
        break;
    case ${weapon_specialcarbine}:
        return 46;
        break;
    case ${weapon_snspistol}:
        return 47;
        break;
    case ${weapon_heavypistol}:
        return 49;
        break;
    case ${weapon_bullpuprifle}:
        return 48;
        break;
    case 0x61012683:
        return 50;
        break;
    case 0x92a27487:
        return 51;
        break;
    case 0x83839c4:
        return 52;
        break;
    case 0x47757124:
        return 57;
        break;
    case 0xa89cb99e:
        return 53;
        break;
    case 0x7f7497e5:
        return 54;
        break;
    case 0xc734385a:
        return 56;
        break;
    case 0x3aabbbaa:
        return 55;
        break;
    case 0xab564b93:
        return 60;
        break;
    case 0x63ab0442:
        return 61;
        break;
    case 0xf9dcbf2d:
        return 58;
        break;
    case 0x6d544c99:
        return 59;
        break;
    case 0xa3d4d34:
        return 64;
        break;
    case 0xd8df3c3c:
        return 62;
        break;
    case 0xdc4db296:
        return 63;
        break;
    case 0xdd5df8d9:
        return 65;
        break;
    case 0xdb1aa450:
        return 68;
        break;
    case 0xef951fbb:
        return 66;
        break;
    case 0x624fe830:
        return 67;
        break;
    case 0x8bb05fd7:
        return 69;
        break;
    case 0xc1b3c3d1:
        return 70;
        break;
    case 0xdfe37640:
        return 71;
        break;
    }
    return 0;
}

auto sub_10e6d(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_3)) {
        a_2/*"16"*/ = a_3;
    } else { 
        a_2/*"16"*/ = "GSA";
    }
    if (a_0 == ${ammo_pistol}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_smg}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_rifle}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_mg}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == 0x90bcbf49) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_sniper}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_sniper_remote}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_minigun}) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == 0xcbe9549b) {
        a_2/*16*/ += "_TYPE_R";
    } else if (a_0 == ${ammo_shotgun}) {
        a_2/*16*/ += "_TYPE_C";
    } else if (a_0 == ${ammo_stungun}) {
        a_2/*16*/ += "_TYPE_CH";
    } else if (a_0 == ${ammo_grenadelauncher}) {
        a_2/*16*/ += "_TYPE_G";
    } else if (a_0 == ${ammo_grenadelauncher_smoke}) {
        a_2/*16*/ += "_TYPE_G";
    } else if (a_0 == ${ammo_smokegrenade}) {
        a_2/*16*/ += "_TYPE_G";
    } else if (a_0 == 0xcc9094f) {
        a_2/*16*/ += "_TYPE_G";
    } else if (a_0 == ${ammo_stickybomb}) {
        a_2/*16*/ += "_TYPE_B";
    } else if (a_0 == ${ammo_rpg}) {
        a_2/*16*/ += "_TYPE_RO";
    } else if (a_0 == 0x45f0e965) {
        a_2/*16*/ += "_TYPE_F";
    } else if (a_0 == 0xaf23ee0f) {
        a_2/*16*/ += "_TYPE_FW";
    } else if (a_0 == 0x99150e2d) {
        a_2/*16*/ += "_TYPE_RO";
    } else if (a_0 == 0xaf2208a7) {
        a_2/*16*/ += "_TYPE_M";
    } else if (a_0 == 0x794446fd) {
        a_2/*16*/ += "_TYPE_R";
    } else { 
        return 0;
    }
    if ((a_1 == 1) && (a_0 != 0xaf23ee0f)) {
        a_2/*16*/ += "1";
    }
    return GAMEPLAY::GET_HASH_KEY(a_2) != 0;
}

auto sub_11086(auto a_0, auto a_1) {
    a_1 = -1;
    switch (a_0) {
    case ${weapon_pistol}:
        a_1 = ${ammo_pistol};
        break;
    case ${weapon_combatpistol}:
        a_1 = ${ammo_pistol};
        break;
    case ${weapon_appistol}:
        a_1 = ${ammo_pistol};
        break;
    case 0x99aeeb3b:
        a_1 = ${ammo_pistol};
        break;
    case ${weapon_snspistol}:
        a_1 = ${ammo_pistol};
        break;
    case ${weapon_heavypistol}:
        a_1 = ${ammo_pistol};
        break;
    case 0x83839c4:
        a_1 = ${ammo_pistol};
        break;
    case ${weapon_microsmg}:
        a_1 = ${ammo_smg};
        break;
    case ${weapon_smg}:
        a_1 = ${ammo_smg};
        break;
    case ${weapon_assaultsmg}:
        a_1 = ${ammo_smg};
        break;
    case 0xa3d4d34:
        a_1 = ${ammo_smg};
        break;
    case ${weapon_assaultrifle}:
        a_1 = ${ammo_rifle};
        break;
    case ${weapon_carbinerifle}:
        a_1 = ${ammo_rifle};
        break;
    case ${weapon_advancedrifle}:
        a_1 = ${ammo_rifle};
        break;
    case ${weapon_specialcarbine}:
        a_1 = ${ammo_rifle};
        break;
    case ${weapon_heavyrifle}:
        a_1 = ${ammo_rifle};
        break;
    case ${weapon_bullpuprifle}:
        a_1 = ${ammo_rifle};
        break;
    case ${weapon_mg}:
        a_1 = ${ammo_mg};
        break;
    case ${weapon_combatmg}:
        a_1 = ${ammo_mg};
        break;
    case ${weapon_assaultmg}:
        a_1 = ${ammo_mg};
        break;
    case 0x61012683:
        a_1 = ${ammo_mg};
        break;
    case ${weapon_pumpshotgun}:
        a_1 = ${ammo_shotgun};
        break;
    case ${weapon_sawnoffshotgun}:
        a_1 = ${ammo_shotgun};
        break;
    case ${weapon_assaultshotgun}:
        a_1 = ${ammo_shotgun};
        break;
    case ${weapon_bullpupshotgun}:
        a_1 = ${ammo_shotgun};
        break;
    case 0x3aabbbaa:
        a_1 = ${ammo_shotgun};
        break;
    case ${weapon_sniperrifle}:
        a_1 = ${ammo_sniper};
        break;
    case ${weapon_heavysniper}:
        a_1 = ${ammo_sniper};
        break;
    case 0xa89cb99e:
        a_1 = ${ammo_shotgun};
        break;
    case 0xc734385a:
        a_1 = ${ammo_sniper};
        break;
    case ${weapon_grenadelauncher}:
        a_1 = ${ammo_grenadelauncher};
        break;
    case ${weapon_rpg}:
        a_1 = ${ammo_rpg};
        break;
    case ${weapon_minigun}:
        a_1 = ${ammo_minigun};
        break;
    case 0x7f7497e5:
        a_1 = 0xaf23ee0f;
        break;
    case 0x47757124:
        a_1 = 0x45f0e965;
        break;
    case 0x63ab0442:
        a_1 = 0x99150e2d;
        break;
    case 0xab564b93:
        a_1 = 0xaf2208a7;
        break;
    case 0x6d544c99:
        a_1 = 0x794446fd;
        break;
    case 0xdc4db296:
        a_1 = ${ammo_pistol};
        break;
    case 0xdb1aa450:
        a_1 = ${ammo_smg};
        break;
    case 0xc1b3c3d1:
        a_1 = ${ammo_pistol};
        break;
    case 0xef951fbb:
        a_1 = ${ammo_shotgun};
        break;
    case 0x624fe830:
        a_1 = ${ammo_rifle};
        break;
    }
    return a_1 != -1;
}

void sub_11379(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    switch (GAMEPLAY::GET_HASH_KEY(&a_1)) {
    case 0x87d34dd3:
    case 0x3db7a89:
        a_1/*"16"*/ = "GSA_TYPE_R";
        break;
    case 0xb550a881:
    case 0xe74ac9c9:
        a_1/*"16"*/ = "GSA_TYPE_C";
        break;
    case 0xbd4a6d50:
    case 0x140afe8f:
        a_1/*"16"*/ = "GSA_TYPE_RO";
        break;
    case 0xd7eeab1d:
    case 0x1fac7333:
        a_1/*"16"*/ = "GSA_TYPE_CH";
        break;
    case 0x23d285cf:
    case 0x3da36410:
        a_1/*"16"*/ = "GSA_TYPE_G";
        break;
    case 0xcccbd777:
    case 0xf2f4da8d:
        a_1/*"16"*/ = "GSA_TYPE_B";
        break;
    case 0x4e402cb:
    case 0x6a117e27:
        a_1/*"16"*/ = "GSA_TYPE_FW";
        break;
    }
    a_0/*"64"*/ = "";
    switch (a_6) {
    case 0:
        if (a_5 == ${mp_m_freemode_01}) {
            a_0/*"64"*/ = "M";
        } else if (a_5 == ${mp_f_freemode_01}) {
            a_0/*"64"*/ = "F";
        }
        a_0/*64*/ += "_HA_";
        a_0/*64*/ += a_1;
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 1:
        if (a_5 == ${mp_m_freemode_01}) {
            a_0/*"64"*/ = "M";
        } else if (a_5 == ${mp_f_freemode_01}) {
            a_0/*"64"*/ = "F";
        }
        a_0/*64*/ += "_CL_";
        if (a_7 == 12) {
            a_0/*64*/ += "OUTFIT_";
        }
        a_0/*64*/ += a_1;
        if (a_9 != -1) {
            a_0/*64*/ += "_n";
            a_0/*64*/ += a_9;
        }
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 2:
        if (a_5 == ${mp_m_freemode_01}) {
            a_0/*"64"*/ = "M";
        } else if (a_5 == ${mp_f_freemode_01}) {
            a_0/*"64"*/ = "F";
        }
        a_0/*64*/ += "_TA_";
        a_0/*64*/ += a_1;
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 3:
        a_0/*64*/ += "WP_";
        a_0/*64*/ += a_1;
        a_0/*64*/ += "_t";
        a_0/*64*/ += a_7;
        a_0/*64*/ += "_v";
        a_0/*64*/ += a_8;
        break;
    case 4:
        if (a_5 == g_1096F) {
            a_0/*"64"*/ = "VE_BIG_YACHT_t0_v0";
        } else if (a_5 == 0) {
            a_0/*64*/ += "VEM_";
            if ((a_7 == 24) || (a_7 == 25)) {
                if (a_9 == 1) {
                    a_0/*64*/ += "COLOUR_1_";
                } else if (a_9 == 2) {
                    a_0/*64*/ += "COLOUR_2_";
                } else if (a_9 == 3) {
                    a_0/*64*/ += "COLOUR_EXTRA_1_";
                }
                if (a_A == 5) {
                    a_0/*64*/ += "MCT_CHROME_";
                } else if (a_A == 1) {
                    a_0/*64*/ += "MCT_CLASSIC_";
                } else if (a_A == 0) {
                    a_0/*64*/ += "MCT_METALLIC_";
                } else if (a_A == 4) {
                    a_0/*64*/ += "MCT_METALS_";
                } else if (a_A == 3) {
                    a_0/*64*/ += "MCT_MATTE_";
                } else if (a_A == 2) {
                    a_0/*64*/ += "MCT_PEARLESCENT_";
                } else if (a_A == 6) {
                    a_0/*64*/ += "MCT_NONE_";
                }
                a_9 = -1;
            } else if (a_7 == 38) {
                a_0/*64*/ += "COLOUR_5_";
            } else if (a_7 == 65) {
                a_0/*64*/ += "COLOUR_6_";
            }
            a_0/*64*/ += a_1;
            if (a_9 != -1) {
                a_0/*64*/ += "_n";
                a_0/*64*/ += a_9;
            }
            a_0/*64*/ += "_t";
            a_0/*64*/ += a_7;
            a_0/*64*/ += "_v";
            a_0/*64*/ += a_8;
        } else if (a_7 == 22) {
            a_1/*"16"*/ = VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(a_5);
            if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_1) || (GAMEPLAY::GET_HASH_KEY(&a_1) == 0xe149b5e8)) {
                return ;
            }
            a_0/*64*/ += "VEM_INSURANCE_";
            a_0/*64*/ += a_1;
            switch (a_5) {
            case ${emperor2}:
            case ${cavalcade2}:
            case ${mesa2}:
            case ${dubsta2}:
            case ${rapidgt2}:
                a_0/*64*/ += "2";
                break;
            case ${mesa3}:
            case ${burrito3}:
            case ${emperor3}:
                a_0/*64*/ += "3";
                break;
            case ${tornado4}:
                a_0/*64*/ += "4";
                break;
            }
        } else if (a_7 == 40) {
            a_1/*"16"*/ = VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(a_5);
            if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&a_1)) {
                return ;
            }
            a_0/*64*/ += "VEU_";
            a_0/*64*/ += a_1;
            a_0/*64*/ += "_t0_v";
            a_0/*64*/ += a_8;
        } else { 
            a_0/*64*/ += "VE_";
            a_0/*64*/ += a_1;
            switch (a_5) {
            case ${emperor2}:
            case ${cavalcade2}:
            case ${mesa2}:
            case ${dubsta2}:
            case ${rapidgt2}:
                a_0/*64*/ += "2";
                break;
            case ${mesa3}:
            case ${burrito3}:
            case ${emperor3}:
                a_0/*64*/ += "3";
                break;
            case ${tornado4}:
                a_0/*64*/ += "4";
                break;
            }
            a_0/*64*/ += "_t";
            a_0/*64*/ += a_7;
            a_0/*64*/ += "_v";
            a_0/*64*/ += a_8;
        }
        break;
    }
}

void sub_11842(auto a_0, auto a_1, auto a_2) {
    a_2 = 0;
    if (a_0 == ${weapon_petrolcan}) {
        a_1 = 5;
    } else if (a_0 == ${gadget_parachute}) {
        a_1 = 4;
    } else if (a_0 == ${weapon_unarmed}) {
        a_1 = 3;
    } else if (((((a_0 == 0x99aeeb3b) || (a_0 == ${weapon_snspistol})) || (a_0 == ${weapon_heavypistol})) || (a_0 == 0x83839c4)) || (a_0 == 0x47757124)) {
        a_1 = 0;
    } else if ((((((((((a_0 == ${weapon_bottle}) || (a_0 == 0x92a27487)) || (a_0 == ${weapon_hammer})) || (a_0 == 0xf9dcbf2d)) || (a_0 == ${weapon_knife})) || (a_0 == ${weapon_nightstick})) || (a_0 == 0x8bb05fd7)) || (a_0 == 0xdfe37640)) || (a_0 == 0xd8df3c3c)) || (a_0 == 0xdd5df8d9)) {
        a_1 = 1;
    } else if ((((a_0 == ${weapon_grenade}) || (a_0 == ${weapon_smokegrenade})) || (a_0 == ${weapon_stickybomb})) || (a_0 == 0xab564b93)) {
        a_1 = 2;
        a_2 = 1;
    } else { 
        a_1 = 0;
    }
}

auto sub_1199f(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        if (a_1) {
            return "WTU_INVALID";
        } else { 
            return "WT_INVALID";
        }
        break;
    case ${weapon_unarmed}:
        if (a_1) {
            return "WTU_UNARMED";
        } else { 
            return "WT_UNARMED";
        }
        break;
    case ${weapon_pistol}:
        if (a_1) {
            return "WTU_PIST";
        } else { 
            return "WT_PIST";
        }
        break;
    case ${weapon_combatpistol}:
        if (a_1) {
            return "WTU_PIST_CBT";
        } else { 
            return "WT_PIST_CBT";
        }
        break;
    case ${weapon_appistol}:
        if (a_1) {
            return "WTU_PIST_AP";
        } else { 
            return "WT_PIST_AP";
        }
        break;
    case ${weapon_smg}:
        if (a_1) {
            return "WTU_SMG";
        } else { 
            return "WT_SMG";
        }
        break;
    case ${weapon_microsmg}:
        if (a_1) {
            return "WTU_SMG_MCR";
        } else { 
            return "WT_SMG_MCR";
        }
        break;
    case ${weapon_assaultrifle}:
        if (a_1) {
            return "WTU_RIFLE_ASL";
        } else { 
            return "WT_RIFLE_ASL";
        }
        break;
    case ${weapon_carbinerifle}:
        if (a_1) {
            return "WTU_RIFLE_CBN";
        } else { 
            return "WT_RIFLE_CBN";
        }
        break;
    case ${weapon_advancedrifle}:
        if (a_1) {
            return "WTU_RIFLE_ADV";
        } else { 
            return "WT_RIFLE_ADV";
        }
        break;
    case ${weapon_mg}:
        if (a_1) {
            return "WTU_MG";
        } else { 
            return "WT_MG";
        }
        break;
    case ${weapon_combatmg}:
        if (a_1) {
            return "WTU_MG_CBT";
        } else { 
            return "WT_MG_CBT";
        }
        break;
    case ${weapon_pumpshotgun}:
        if (a_1) {
            return "WTU_SG_PMP";
        } else { 
            return "WT_SG_PMP";
        }
        break;
    case ${weapon_sawnoffshotgun}:
        if (a_1) {
            return "WTU_SG_SOF";
        } else { 
            return "WT_SG_SOF";
        }
        break;
    case ${weapon_assaultshotgun}:
        if (a_1) {
            return "WTU_SG_ASL";
        } else { 
            return "WT_SG_ASL";
        }
        break;
    case ${weapon_heavysniper}:
        if (a_1) {
            return "WTU_SNIP_HVY";
        } else { 
            return "WT_SNIP_HVY";
        }
        break;
    case ${weapon_remotesniper}:
        if (a_1) {
            return "WTU_SNIP_RMT";
        } else { 
            return "WT_SNIP_RMT";
        }
        break;
    case ${weapon_sniperrifle}:
        if (a_1) {
            return "WTU_SNIP_RIF";
        } else { 
            return "WT_SNIP_RIF";
        }
        break;
    case ${weapon_grenadelauncher}:
        if (a_1) {
            return "WTU_GL";
        } else { 
            return "WT_GL";
        }
        break;
    case ${weapon_rpg}:
        if (a_1) {
            return "WTU_RPG";
        } else { 
            return "WT_RPG";
        }
        break;
    case ${weapon_minigun}:
        if (a_1) {
            return "WTU_MINIGUN";
        } else { 
            return "WT_MINIGUN";
        }
        break;
    case ${weapon_grenade}:
        if (a_1) {
            return "WTU_GNADE";
        } else { 
            return "WT_GNADE";
        }
        break;
    case ${weapon_smokegrenade}:
        if (a_1) {
            return "WTU_GNADE_SMK";
        } else { 
            return "WT_GNADE_SMK";
        }
        break;
    case ${weapon_stickybomb}:
        if (a_1) {
            return "WTU_GNADE_STK";
        } else { 
            return "WT_GNADE_STK";
        }
        break;
    case ${weapon_molotov}:
        if (a_1) {
            return "WTU_MOLOTOV";
        } else { 
            return "WT_MOLOTOV";
        }
        break;
    case ${weapon_stungun}:
        if (a_1) {
            return "WTU_STUN";
        } else { 
            return "WT_STUN";
        }
        break;
    case ${weapon_petrolcan}:
        if (a_1) {
            return "WTU_PETROL";
        } else { 
            return "WT_PETROL";
        }
        break;
    case ${weapon_electric_fence}:
        if (a_1) {
            return "WTU_ELCFEN";
        } else { 
            return "WT_ELCFEN";
        }
        break;
    case ${vehicle_weapon_tank}:
        if (a_1) {
            return "WTU_V_TANK";
        } else { 
            return "WT_V_TANK";
        }
        break;
    case ${vehicle_weapon_space_rocket}:
        if (a_1) {
            return "WTU_V_SPACERKT";
        } else { 
            return "WT_V_SPACERKT";
        }
        break;
    case ${vehicle_weapon_player_laser}:
        if (a_1) {
            return "WTU_V_PLRLSR";
        } else { 
            return "WT_V_PLRLSR";
        }
        break;
    case ${object}:
        if (a_1) {
            return "WTU_OBJECT";
        } else { 
            return "WT_OBJECT";
        }
        break;
    case ${gadget_parachute}:
        if (a_1) {
            return "WTU_PARA";
        } else { 
            return "WT_PARA";
        }
        break;
    case ${ammo_rpg}:
        if (a_1) {
            return "WTU_A_RPG";
        } else { 
            return "WT_A_RPG";
        }
        break;
    case ${ammo_tank}:
        if (a_1) {
            return "WTU_A_TANK";
        } else { 
            return "WT_A_TANK";
        }
        break;
    case ${ammo_space_rocket}:
        if (a_1) {
            return "WTU_A_SPACERKT";
        } else { 
            return "WT_A_SPACERKT";
        }
        break;
    case ${ammo_player_laser}:
        if (a_1) {
            return "WTU_A_PLRLSR";
        } else { 
            return "WT_A_PLRLSR";
        }
        break;
    case ${ammo_enemy_laser}:
        if (a_1) {
            return "WTU_A_ENMYLSR";
        } else { 
            return "WT_A_ENMYLSR";
        }
        break;
    case ${weapon_knife}:
        if (a_1) {
            return "WTU_KNIFE";
        } else { 
            return "WT_KNIFE";
        }
        break;
    case ${weapon_nightstick}:
        if (a_1) {
            return "WTU_NGTSTK";
        } else { 
            return "WT_NGTSTK";
        }
        break;
    case ${weapon_hammer}:
        if (a_1) {
            return "WTU_HAMMER";
        } else { 
            return "WT_HAMMER";
        }
        break;
    case ${weapon_bat}:
        if (a_1) {
            return "WTU_BAT";
        } else { 
            return "WT_BAT";
        }
        break;
    case ${weapon_crowbar}:
        if (a_1) {
            return "WTU_CROWBAR";
        } else { 
            return "WT_CROWBAR";
        }
        break;
    case ${weapon_golfclub}:
        if (a_1) {
            return "WTU_GOLFCLUB";
        } else { 
            return "WT_GOLFCLUB";
        }
        break;
    case ${weapon_rammed_by_car}:
        if (a_1) {
            return "WTU_PIST";
        } else { 
            return "WT_PIST";
        }
        break;
    case ${weapon_run_over_by_car}:
        if (a_1) {
            return "WTU_PIST";
        } else { 
            return "WT_PIST";
        }
        break;
    case ${weapon_assaultsmg}:
        if (a_1) {
            return "WTU_SMG_ASL";
        } else { 
            return "WT_SMG_ASL";
        }
        break;
    case ${weapon_bullpupshotgun}:
        if (a_1) {
            return "WTU_SG_BLP";
        } else { 
            return "WT_SG_BLP";
        }
        break;
    case 0x99aeeb3b:
        if (a_1) {
            return "WTU_PIST_50";
        } else { 
            return "WT_PIST_50";
        }
        break;
    case ${weapon_bottle}:
        if (a_1) {
            return "WTU_BOTTLE";
        } else { 
            return "WT_BOTTLE";
        }
        break;
    case 0x61012683:
        if (a_1) {
            return "WTU_GUSENBERG";
        } else { 
            return "WT_GUSENBERG";
        }
        break;
    case ${weapon_snspistol}:
        if (a_1) {
            return "WTU_SNSPISTOL";
        } else { 
            return "WT_SNSPISTOL";
        }
        break;
    case 0x83839c4:
        if (a_1) {
            return "WTU_VPISTOL";
        } else { 
            return "WT_VPISTOL";
        }
        break;
    case 0x92a27487:
        if (a_1) {
            return "WTU_DAGGER";
        } else { 
            return "WT_DAGGER";
        }
        break;
    case 0x47757124:
        if (a_1) {
            return "WTU_FLAREGUN";
        } else { 
            return "WT_FLAREGUN";
        }
        break;
    case ${weapon_heavypistol}:
        if (a_1) {
            return "WTU_HEAVYPSTL";
        } else { 
            return "WT_HEAVYPSTL";
        }
        break;
    case ${weapon_specialcarbine}:
        if (a_1) {
            return "WTU_RIFLE_SCBN";
        } else { 
            return "WT_RIFLE_SCBN";
        }
        break;
    case 0xa89cb99e:
        if (a_1) {
            return "WTU_MUSKET";
        } else { 
            return "WT_MUSKET";
        }
        break;
    case 0x7f7497e5:
        if (a_1) {
            return "WTU_FWRKLNCHR";
        } else { 
            return "WT_FWRKLNCHR";
        }
        break;
    case 0xc734385a:
        if (a_1) {
            return "WTU_MKRIFLE";
        } else { 
            return "WT_MKRIFLE";
        }
        break;
    case 0x3aabbbaa:
        if (a_1) {
            return "WTU_HVYSHOT";
        } else { 
            return "WT_HVYSHOT";
        }
        break;
    case 0xab564b93:
        if (a_1) {
            return "WTU_PRXMINE";
        } else { 
            return "WT_PRXMINE";
        }
        break;
    case 0x63ab0442:
        if (a_1) {
            return "WTU_HOMLNCH";
        } else { 
            return "WT_HOMLNCH";
        }
        break;
    case 0xf9dcbf2d:
        if (a_1) {
            return "WTU_HATCHET";
        } else { 
            return "WT_HATCHET";
        }
        break;
    case 0xa3d4d34:
        if (a_1) {
            return "WTU_COMBATPDW";
        } else { 
            return "WT_COMBATPDW";
        }
        break;
    case 0xd8df3c3c:
        if (a_1) {
            return "WTU_KNUCKLE";
        } else { 
            return "WT_KNUCKLE";
        }
        break;
    case 0xdc4db296:
        if (a_1) {
            return "WTU_MKPISTOL";
        } else { 
            return "WT_MKPISTOL";
        }
        break;
    case 0xdd5df8d9:
        if (a_1) {
            return "WTU_MACHETE";
        } else { 
            return "WT_MACHETE";
        }
        break;
    case 0xdb1aa450:
        if (a_1) {
            return "WTU_MCHPIST";
        } else { 
            return "WT_MCHPIST";
        }
        break;
    case 0x8bb05fd7:
        if (a_1) {
            return "WTU_FLASHLIGHT";
        } else { 
            return "WT_FLASHLIGHT";
        }
        break;
    case 0xef951fbb:
        if (a_1) {
            return "WTU_DBSHGN";
        } else { 
            return "WT_DBSHGN";
        }
        break;
    case 0x624fe830:
        if (a_1) {
            return "WTU_CMPRIFLE";
        } else { 
            return "WT_CMPRIFLE";
        }
        break;
    case 0xdfe37640:
        if (a_1) {
            return "WTU_SWBLADE";
        } else { 
            return "WT_SWBLADE";
        }
        break;
    case 0xc1b3c3d1:
        if (a_1) {
            return "WTU_REVOLVER";
        } else { 
            return "WT_REVOLVER";
        }
        break;
    case ${weapon_cougar}:
        return "WT_RAGE";
        break;
    default:
        if (sub_6469(a_0, &v_4) != -1) {
            if (a_1) {
                return sub_122e5(&v_4._f1F);
            } else { 
                return sub_122e5(&v_4._f7);
            }
        }
        break;
    }
    return "WT_INVALID";
}

auto sub_122e5(auto a_0) {
    return a_0;
}

auto sub_122ef() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_7c6f()) {
        return 1;
    }
    return 0;
}

auto sub_1230c() {
    if (GAMEPLAY::IS_BIT_SET(g_19, 5)) {
        if (GAMEPLAY::IS_BIT_SET(g_19, 1) || GAMEPLAY::IS_BIT_SET(g_19, 3)) {
            return 1;
        } else { 
            return 0;
        }
    }
    if (STATS::STAT_GET_INT(0x5da524f8, &v_2, -1)) {
        if (GAMEPLAY::IS_BIT_SET(v_2, 5)) {
            if (GAMEPLAY::IS_BIT_SET(v_2, 1) || GAMEPLAY::IS_BIT_SET(v_2, 3)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    if (STATS::STAT_SLOT_IS_LOADED(0)) {
        if (g_21B39._f3) {
            v_4 = 0x3db2bf9e;
            if (STATS::STAT_GET_INT(v_4, &v_3, -1)) {
                if (GAMEPLAY::IS_BIT_SET(v_3, 5)) {
                    return 1;
                }
            }
        }
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        v_5 = GAMEPLAY::GET_PROFILE_SETTING(866);
        if (GAMEPLAY::IS_BIT_SET(v_5, 1) || GAMEPLAY::IS_BIT_SET(v_5, 3)) {
            return 1;
        }
    }
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        if (NETWORK::_85443FF4C328F53B()) {
            if (NETWORK::_91B87C55093DE351()) {
                STATS::STAT_GET_INT(0x5da524f8, &v_6, -1);
                GAMEPLAY::SET_BIT(&v_6, 1);
                GAMEPLAY::SET_BIT(&v_6, 3);
                GAMEPLAY::SET_BIT(&v_6, 5);
                GAMEPLAY::SET_BIT(&g_19, 1);
                GAMEPLAY::SET_BIT(&g_19, 3);
                GAMEPLAY::SET_BIT(&g_19, 5);
                STATS::STAT_SET_INT(0x5da524f8, v_6, 1);
                if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
                    v_6 = GAMEPLAY::GET_PROFILE_SETTING(866);
                    GAMEPLAY::SET_BIT(&v_6, 1);
                    GAMEPLAY::SET_BIT(&v_6, 3);
                    STATS::_DAC073C7901F9E15(v_6);
                }
                return 1;
            }
        }
    }
    return 0;
}

auto sub_12460() {
    if (GAMEPLAY::IS_BIT_SET(g_19, 6)) {
        if (GAMEPLAY::IS_BIT_SET(g_19, 2) || GAMEPLAY::IS_BIT_SET(g_19, 4)) {
            return 1;
        } else { 
            return 0;
        }
    }
    if (STATS::STAT_GET_INT(0x5da524f8, &v_2, -1)) {
        if (GAMEPLAY::IS_BIT_SET(v_2, 6)) {
            if (GAMEPLAY::IS_BIT_SET(v_2, 2) || GAMEPLAY::IS_BIT_SET(v_2, 4)) {
                return 1;
            } else { 
                return 0;
            }
        }
    }
    if (STATS::STAT_SLOT_IS_LOADED(0)) {
        if (g_21B39._f3) {
            v_4 = 0x3db2bf9e;
            if (STATS::STAT_GET_INT(v_4, &v_3, -1)) {
                if (GAMEPLAY::IS_BIT_SET(v_3, 8)) {
                    return 1;
                }
            }
        }
    }
    if (GAMEPLAY::_5AA3BEFA29F03AD4()) {
        v_5 = GAMEPLAY::GET_PROFILE_SETTING(866);
        if (GAMEPLAY::IS_BIT_SET(v_5, 2) || GAMEPLAY::IS_BIT_SET(v_5, 4)) {
            return 1;
        }
    }
    return 0;
}

void sub_12531(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13) {
    a_0 = a_1;
    a_0._f1/*{3}*/ = a_2;
    a_0._f4/*{3}*/ = a_5;
    a_0._f7/*{3}*/ = a_8;
    a_0._fA/*{3}*/ = a_B;
    a_0._f17 = -1;
}

auto sub_1256b(auto a_0) {
    if (a_0 == 0) {
        return 0;
    }
    if (a_0 == ${object}) {
        return 1;
    }
    if (a_0 == 0xfc508e33) {
        return 1;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (((((((((a_0 == ${weapon_assaultmg}) || (a_0 == ${weapon_assaultsniper})) || (a_0 == ${weapon_bullpupshotgun})) || (a_0 == ${weapon_heavyrifle})) || (a_0 == ${weapon_loudhailer})) || (a_0 == 0x99aeeb3b)) || (a_0 == ${weapon_programmablear})) || (a_0 == ${weapon_rubbergun})) || (a_0 == ${weapon_hammer})) {
            return 1;
        }
        if (a_0 == 0xf9dcbf2d) {
            if (sub_715b()) {
                return 1;
            } else { 
                return 0;
            }
        }
    } else { 
        switch (a_0) {
        case 0xf9dcbf2d:
            if (sub_715b()) {
                if (game_state._f1E27._f14A[62/*6*/]) {
                    return 1;
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
            break;
        case 0x6d544c99:
            if (sub_715b()) {
                if (game_state._f1E27._f14A[14/*6*/]) {
                    return 1;
                } else { 
                    return 0;
                }
            } else { 
                return 0;
            }
            break;
        case ${weapon_bottle}:
        case ${weapon_hammer}:
            if (game_state._f1E27._f14A[1/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case ${weapon_snspistol}:
            if ((game_state._f1E27._f14A[1/*6*/] || game_state._f1E27._f14A[43/*6*/]) || game_state._f1E27._f14A[19/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case ${weapon_specialcarbine}:
            if (game_state._f1E27._f14A[90/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0x92a27487:
        case 0x83839c4:
            if (game_state._f1E27._f14A[62/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case ${weapon_heavypistol}:
            if (game_state._f1E27._f14A[29/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case ${weapon_bullpupshotgun}:
            if (game_state._f1E27._f14A[74/*6*/] || game_state._f1E27._f14A[38/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xa89cb99e:
        case 0xdc4db296:
            if (game_state._f1E27._f14A[59/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0x61012683:
            if (game_state._f1E27._f14A[28/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0x99aeeb3b:
            if (game_state._f1E27._f14A[39/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case ${weapon_bullpuprifle}:
            if (game_state._f1E27._f14A[84/*6*/] || game_state._f1E27._f14A[85/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xc734385a:
            if (game_state._f1E27._f14A[93/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0x3aabbbaa:
            if (game_state._f1E27._f14A[39/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0x7f7497e5:
            if (game_state._f1E27._f14A[28/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xab564b93:
            if (game_state._f1E27._f14A[64/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0x63ab0442:
            if (game_state._f1E27._f14A[14/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xd8df3c3c:
            if (game_state._f1E27._f14A[2/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xa3d4d34:
            if (game_state._f1E27._f14A[92/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xdd5df8d9:
            if (game_state._f1E27._f14A[63/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        case 0xdb1aa450:
            if (game_state._f1E27._f14A[41/*6*/]) {
                return 1;
            } else { 
                return 0;
            }
            break;
        }
        if ((((((((((a_0 == ${weapon_assaultmg}) || (a_0 == ${weapon_assaultsmg})) || (a_0 == ${weapon_assaultsniper})) || (a_0 == ${weapon_bullpupshotgun})) || (a_0 == ${weapon_heavyrifle})) || (a_0 == ${weapon_loudhailer})) || (a_0 == 0x99aeeb3b)) || (a_0 == ${weapon_programmablear})) || (a_0 == ${weapon_rubbergun})) || (a_0 == ${weapon_hammer})) {
            return 1;
        }
    }
    return -1;
}

void sub_12a57(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13, auto a_14, auto a_15, auto a_16) {
    a_0 = a_3;
    a_0._f18 = a_1;
    a_0._f19 = a_2;
    a_0._f16 = a_4;
    a_0._f1/*{3}*/ = a_5;
    a_0._f4/*{3}*/ = a_8;
    a_0._f7/*{3}*/ = a_B;
    a_0._fA/*{3}*/ = a_E;
    a_0._f17 = -1;
}

void sub_12aa3(auto a_0) {
    for (v_3 = 0; v_3 <= (a_0 - 1); v_3 += 1) {
        if (CAM::DOES_CAM_EXIST(a_0[v_3/*12*/])) {
            CAM::DESTROY_CAM(a_0[v_3/*12*/], 0);
        }
    }
}

void sub_12ad9(auto a_0, auto a_1) {
    if ((a_0 == a_1) && a_0._f7) {
        sub_5195("Unable to lock shop doors as player is inside the shop.", -1);
    } else { 
        sub_6a667(a_1, 1, 0);
    }
    sub_12df9(a_1, 0);
    sub_12d79(a_1, 0);
    sub_8452(a_1, 1, 1);
    sub_8452(a_1, 10, 1);
    sub_8452(a_1, 11, 1);
    sub_8452(a_1, 12, 1);
    sub_8452(a_1, 13, 1);
    sub_8452(a_1, 22, 1);
    sub_8452(a_1, 25, 1);
    if (a_0._f1 == 1) {
        sub_8452(a_1, 19, 1);
    }
    if (!sub_6ff32(a_1)) {
        sub_5195("Letting shop controller know to relaunch when in range.", -1);
        sub_9593(a_1, 17, 1);
    }
    sub_12d5f(a_1);
    sub_12c61(a_1);
    sub_12c26(PLAYER::PLAYER_ID(), a_1);
    sub_5383();
    if (sub_51b2(a_1)) {
        if (ENTITY::DOES_ENTITY_EXIST(a_0._fC) && (!PED::IS_PED_INJURED(a_0._fC))) {
            if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(a_0._fC)) {
                PED::SET_PED_KEEP_TASK(a_0._fC, 1);
            }
        }
    } else { 
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            PED::CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(PLAYER::PLAYER_PED_ID());
        }
        if (sub_6fc86(a_0, a_1)) {
            if (ENTITY::DOES_ENTITY_EXIST(a_0._fC)) {
                PED::DELETE_PED(&a_0._fC);
            }
        } else if (ENTITY::DOES_ENTITY_EXIST(a_0._fC)) {
            ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&a_0._fC);
        }
    }
}

void sub_12c26(auto a_0, auto a_1) {
    if (a_1 == -1) {}
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (g_1837E7[a_0/*410*/]._fBC) {
            g_1837E7[a_0/*410*/]._fBC = 0;
            g_1837E7[a_0/*410*/]._fBD = 0;
        }
    }
}

void sub_12c61(auto a_0) {
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        sub_12c83(a_0, v_3);
    }
}

void sub_12c83(auto a_0, auto a_1) {
    if ((a_0 != -1) && (a_1 != 0)) {
        if (g_16416._f12A[sub_12d01(a_0)/*5*/][a_1/*1*/] == 2) {
            g_16416._f12A[sub_12d01(a_0)/*5*/][a_1/*1*/] = 4;
        } else { 
            g_16416._f12A[sub_12d01(a_0)/*5*/][a_1/*1*/] = 0;
        }
        if (g_16416._f14E[sub_12d01(a_0)/*1*/] == a_1) {
            g_16416._f14E[sub_12d01(a_0)/*1*/] = 0;
        }
    }
}

auto sub_12d01(auto a_0) {
    switch (a_0) {
    case 39:
        return 1;
        break;
    case 40:
        return 2;
        break;
    case 41:
        return 3;
        break;
    case 42:
        return 4;
        break;
    case 43:
        return 5;
        break;
    case 44:
        return 6;
        break;
    }
    return 0;
}

void sub_12d5f(auto a_0) {
    g_16416._f9C[a_0/*1*/] = 1;
    g_16416._f9B = 1;
}

void sub_12d79(auto a_0, auto a_1) {
    if (a_1) {
        PLAYER::SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(PLAYER::PLAYER_ID());
        if (!sub_4adf(a_0, 6, 1)) {
            sub_9593(a_0, 6, 1);
            g_16416._f129 += 1;
            if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                PLAYER::FORCE_CLEANUP(8);
            }
        }
    } else if (sub_4adf(a_0, 6, 1)) {
        sub_8452(a_0, 6, 1);
        if (g_16416._f129 > 0) {
            g_16416._f129 -= 1;
        }
        BRAIN::_6D6840CEE8845831("act_cinema");
    }
}

void sub_12df9(auto a_0, auto a_1) {
    if (a_1) {
        g_16416._f17C = a_0;
        if (!sub_4adf(a_0, 5, 1)) {
            sub_9593(a_0, 5, 1);
            sub_12d5f(a_0);
            g_16416._f128 += 1;
        }
    } else if (sub_4adf(a_0, 5, 1)) {
        sub_8452(a_0, 5, 1);
        sub_12d5f(a_0);
        if (g_16416._f128 > 0) {
            g_16416._f128 -= 1;
        }
    }
}

void sub_12e70(auto a_0) {
    if (a_0 == -1) {
        return ;
    }
    v_3 = sub_12ec7(a_0);
    if (v_3 == -1) {
        a_0 = -1;
        return ;
    }
    if ((v_3 > -1) && (v_3 < 6)) {
        if (g_8E30[v_3/*19*/]) {
            g_8E30[v_3/*19*/]._f7 = 1;
            a_0 = -1;
            return ;
        }
    }
    a_0 = -1;
}

auto sub_12ec7(auto a_0) {
    if (a_0 < 0) {
        return -1;
    }
    v_3 = 0;
    for (v_3 = 0; v_3 < 6; v_3 += 1) {
        if (g_8E30[v_3/*19*/]._f1 == a_0) {
            return v_3;
        }
    }
    return -1;
}

void sub_12f02() {
    g_25204A._f292._f1C = 1;
    g_25204A._f292._f20 = 0;
    g_25204A._f292._f1F = GAMEPLAY::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
    sub_12f3c(&g_25204A._f292._f1D);
}

void sub_12f3c(auto a_0) {
    a_0._f1 = 0;
}

auto sub_12f49() {
    return g_25204A._f292._f5;
}

void sub_12f5a() {
    if (sub_701e0(1)) {
        if (sub_47bf(PLAYER::PLAYER_ID(), 0, 1)) {
            sub_686aa();
            sub_68698();
        } else if (!sub_68687()) {
            sub_68698();
        }
        return ;
    }
    l_425 = (((((!UI::IS_PAUSE_MENU_ACTIVE()) && (!PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED())) && (!UI::_E18B138FABC53103())) && (!l_43E)) && (!g_16416._f548)) && (!NETWORK::_NETWORK_IS_TEXT_CHAT_ACTIVE());
    l_426 = 1;
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_2, 1);
        if ((WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), g_16416._f1, 0) && (l_B3._f69._f1F == 2)) && (g_16416._f1 != ${gadget_parachute})) {
            v_3 = g_16416._f1;
        } else { 
            v_3 = ${weapon_unarmed};
        }
        if (v_2 != v_3) {
            if (v_3 == ${gadget_parachute}) {
                WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), v_3, 0);
            } else { 
                WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), v_3, 1);
            }
            WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), 1);
            WEAPON::SET_PED_CURRENT_WEAPON_VISIBLE(PLAYER::PLAYER_PED_ID(), 0, 0, 1, 0);
        }
        if (((v_3 != 0) && (v_3 != ${weapon_unarmed})) && (v_3 != ${gadget_parachute})) {
            l_426 = 0;
        }
    }
    if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) && (!PED::IS_PED_INJURED(l_B3._fC))) {
        NETWORK::SET_ENTITY_LOCALLY_VISIBLE(l_B3._fC);
    }
    sub_68502(&l_B3);
    sub_67d37(&l_B3, &l_B3._f69);
    if (l_B3._f69._f1F > 1) {
        sub_67c7c(0, l_426, 1);
    }
    sub_67b16();
    switch (l_B3._f69._f1F) {
    case 0:
        sub_67955(&l_B3._f69);
        if (VEHICLE::IS_ANY_VEHICLE_NEAR_POINT(l_B3._fAC._f1F, 7.0) && (!is_in_transition)) {
            sub_67281(&l_B3);
        }
        l_453._f13 = 0;
        l_453._f12 = 0;
        GAMEPLAY::_65D2EBB47E1CEC21(1);
        sub_670e9("GUN_MNU", l_B3, 1);
        g_26FCD2 = 1;
        sub_670bc(l_B3);
        sub_67057();
        AUDIO::REQUEST_SCRIPT_AUDIO_BANK("HUD_AMMO_SHOP", 0);
        sub_67015();
        v_4 = 1;
        if (!sub_6681c(5)) {
            sub_5195("Waiting for weapons to load", -1);
            v_4 = 0;
        }
        if (!sub_670e9("GUN_MNU", l_B3, 1)) {
            sub_5195("Waiting for menu assets to load", -1);
            v_4 = 0;
        }
        if (!sub_670bc(l_B3)) {
            sub_5195("Waiting for intro assets to load", -1);
            v_4 = 0;
        }
        if (!sub_67057()) {}
        if (v_4) {
            l_B3._f69._f1F = 1;
            l_B3._f69._f5 = 0;
        } else if (SYSTEM::TIMERA() > 25000) {
            l_B3._f69._f1F = 8;
        } else if ((!l_B3._f7) || (!l_B3._f8)) {
            l_B3._f69._f1F = 8;
        }
        break;
    case 1:
        switch (l_B3._f69._f5) {
        case 0:
            l_B3._f69._f13 = 1;
            sub_667b7(0, 1, l_B3._fC, 0, 0, 0, 1, 0, 0, 0);
            sub_67955(&l_B3._f69);
            sub_666fe(&l_B3, 0x40400000);
            l_418 = 0;
            l_41A = 1;
            l_419 = 1;
            l_41B = 1;
            l_43A = 0;
            l_41D = 0;
            l_469 = 0;
            l_41C = GAMEPLAY::GET_GAME_TIMER();
            l_B3._f69._f1 = 0;
            l_B3._f69._f2 = -1;
            l_B3._f69._f3 = 0;
            l_B3._f69._f4 = 0;
            l_B3._f69._f9 = 0;
            l_B3._f69._fA = 1;
            l_B3._f69._f5 = 0;
            l_B3._f69._f10 = 0;
            l_B3._f69._f11 = 0;
            l_B3._f69._f17 = 0;
            l_B3._f69._fB/*"16"*/ = "";
            l_4D6 = 0;
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                UI::_C2D15BEF167E27BC();
                UI::SET_MULTIPLAYER_BANK_CASH();
            }
            if (!is_in_transition) {
                l_453._f13 = 1;
            }
            sub_a108(1, 0);
            sub_66585(l_B3, l_B3._f69, &l_B3._f69._f1, &l_B3._f69._f3, &v_5);
            if (!sub_6651b(v_5, v_5._f18, 0)) {
                sub_664b4(l_B3, &l_B3._f69._f1, l_B3._f69._f3, &v_5);
            }
            sub_6635a(v_5);
            sub_658ab();
            sub_61f65();
            if (sub_afc5(l_B3, &g_2707D2, &v_5, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                sub_6198a(&l_B3, &l_B3._f69, &v_5, 0);
            } else { 
                sub_610e3(&l_B3, l_B3._f69._f4, l_B3._f69._f3);
            }
            sub_60f33(&l_B3._f26[l_B3._f69._f4/*12*/]);
            if (!is_in_transition) {
                if (sub_5a62(1)) {
                    ENTITY::SET_ENTITY_VISIBLE(PLAYER::PLAYER_PED_ID(), 0, 0);
                }
            } else if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
                PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 185, 1);
            }
            l_8E = 0;
            l_4D8 = 0;
            l_4DA = 0;
            l_4D9 = 0;
            l_B3._f69._f1F = 2;
            break;
        }
        break;
    case 2:
        if (!l_435) {
            sub_6681c(11);
        }
        if (CONTROLS::_6CD79468A1E595C6(2)) {
            sub_61f65();
        }
        sub_67057();
        sub_2d7c0();
        sub_2c206();
        sub_2bd71();
        sub_2b58e();
        sub_13c93();
        break;
    case 6:
        sub_5383();
        l_B3._f69._f1F = 7;
        break;
    case 7:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            UI::_95CF81BD06EE1887();
            UI::REMOVE_MULTIPLAYER_BANK_CASH();
        }
        sub_53b4(1);
        l_453._f13 = 0;
        if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) {
            AI::TASK_LOOK_AT_ENTITY(l_B3._fC, PLAYER::PLAYER_PED_ID(), -1, 0, 2);
        }
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            AI::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
            if (is_in_transition) {
                PED::SET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 185, 0);
            }
        }
        sub_13c5d(&l_B3._f26);
        CAM::RENDER_SCRIPT_CAMS(0, 0, 3000, 1, 0, 0);
        sub_a108(0, 1);
        GAMEPLAY::_65D2EBB47E1CEC21(0);
        sub_9d2b();
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
            WEAPON::SET_PED_CURRENT_WEAPON_VISIBLE(PLAYER::PLAYER_PED_ID(), 1, 1, 1, 0);
            WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), 0);
        }
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            sub_13906(PLAYER::PLAYER_PED_ID(), 0);
        }
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (l_41D) {
                if (!game_state._f29C._f2D6) {
                    sub_135f4("AM_H_ARMR", 2, 0, 1000, 10000, 7, 0, 0, 0);
                    game_state._f29C._f2D6 = 0;
                }
                l_41D = 0;
            }
        }
        sub_757a();
        g_16416._f1 = 0;
        sub_53d5(&l_B3._f69, 0, 1, 1);
        sub_9f84(1, l_B3);
        g_26FCD2 = 0;
        l_B3._f69._f13 = 0;
        l_B3._fB = 3;
        break;
    case 8:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            UI::_95CF81BD06EE1887();
            UI::REMOVE_MULTIPLAYER_BANK_CASH();
        }
        sub_13c5d(&l_B3._f26);
        CAM::RENDER_SCRIPT_CAMS(0, 0, 3000, 1, 0, 0);
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
            WEAPON::SET_PED_CURRENT_WEAPON_VISIBLE(PLAYER::PLAYER_PED_ID(), 1, 1, 1, 0);
            WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), 0);
        }
        sub_a108(0, 1);
        GAMEPLAY::_65D2EBB47E1CEC21(0);
        sub_9f84(1, l_B3);
        g_26FCD2 = 0;
        sub_9d85(l_B3);
        AUDIO::RELEASE_SCRIPT_AUDIO_BANK();
        sub_9d6e();
        sub_9d2b();
        sub_53d5(&l_B3._f69, 0, 1, 1);
        sub_53b4(1);
        sub_757a();
        l_453._f13 = 0;
        g_16416._f1 = 0;
        sub_77f6();
        l_B3._f69._f13 = 0;
        l_B3._fB = 3;
        break;
    }
    sub_51ce(&l_453, 0);
}

void sub_135f4(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    sub_13614(a_0, "", a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8);
}

void sub_13614(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "")) {
        return ;
    }
    if (a_3 < 0) {
        return ;
    }
    if ((a_5 < 500) && (a_5 != -1)) {
        return ;
    }
    if ((a_4 < 0) && (a_4 != -1)) {
        return ;
    }
    if ((a_6 < 1) || (a_6 > 7)) {
        return ;
    }
    if (a_7 == 235) {
        return ;
    }
    if (a_8 == 235) {
        return ;
    }
    for (v_C = 0; v_C < game_state._f612F._f91; v_C += 1) {
        if (GAMEPLAY::ARE_STRINGS_EQUAL(&game_state._f612F[v_C/*16*/], a_0)) {
            return ;
        }
    }
    if (game_state._f612F._f91 < 9) {
        game_state._f612F[game_state._f612F._f91/*16*/]/*"16"*/ = a_0;
        game_state._f612F[game_state._f612F._f91/*16*/]._f4/*"16"*/ = a_1;
        game_state._f612F[game_state._f612F._f91/*16*/]._f8 = GAMEPLAY::GET_GAME_TIMER() + a_3;
        game_state._f612F[game_state._f612F._f91/*16*/]._f9 = a_5;
        game_state._f612F[game_state._f612F._f91/*16*/]._fB = a_6;
        game_state._f612F[game_state._f612F._f91/*16*/]._fC = a_2;
        game_state._f612F[game_state._f612F._f91/*16*/]._fD = a_7;
        game_state._f612F[game_state._f612F._f91/*16*/]._fE = a_8;
        game_state._f612F[game_state._f612F._f91/*16*/]._fF = a_9;
        if (a_4 != -1) {
            game_state._f612F[game_state._f612F._f91/*16*/]._fA = (GAMEPLAY::GET_GAME_TIMER() + a_3) + a_4;
        } else { 
            game_state._f612F[game_state._f612F._f91/*16*/]._fA = -1;
        }
        game_state._f612F._f91 += 1;
        sub_137e6();
    } else { }
}

void sub_137e6() {
    for (v_2 = 0; v_2 < 3; v_2 += 1) {
        game_state._f612F._f92[v_2/*1*/] = 0;
    }
    for (v_2 = 0; v_2 < game_state._f612F._f91; v_2 += 1) {
        if (GAMEPLAY::IS_BIT_SET(game_state._f612F[v_2/*16*/]._fB, 0)) {
            if (game_state._f612F[v_2/*16*/]._fC > game_state._f612F._f92[0/*1*/]) {
                game_state._f612F._f92[0/*1*/] = game_state._f612F[v_2/*16*/]._fC;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(game_state._f612F[v_2/*16*/]._fB, 1)) {
            if (game_state._f612F[v_2/*16*/]._fC > game_state._f612F._f92[1/*1*/]) {
                game_state._f612F._f92[1/*1*/] = game_state._f612F[v_2/*16*/]._fC;
            }
        }
        if (GAMEPLAY::IS_BIT_SET(game_state._f612F[v_2/*16*/]._fB, 2)) {
            if (game_state._f612F[v_2/*16*/]._fC > game_state._f612F._f92[2/*1*/]) {
                game_state._f612F._f92[2/*1*/] = game_state._f612F[v_2/*16*/]._fC;
            }
        }
    }
}

void sub_13906(auto a_0, auto a_1) {
    v_4 = sub_7513(a_0);
    if (sub_7507(v_4) && (!PED::IS_PED_INJURED(a_0))) {
        if (a_0 == PLAYER::PLAYER_PED_ID()) {
            sub_139f9(a_0, &game_state._f6EA._f21B._f12A[v_4/*284*/]);
            for (v_6 = 0; v_6 <= (8 - 1); v_6 += 1) {
                game_state._f6EA._f21B._f47F[v_6/*4*/][v_4/*1*/] = UI::_A13E93403F26C812(v_6);
                if (a_1) {
                    v_5 = UI::_A48931185F0536FE();
                    if (game_state._f6EA._f21B._f47F[v_6/*4*/][v_4/*1*/] == v_5) {
                        game_state._f6EA._f21B._f4A0 = v_6;
                    }
                }
            }
            PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), &v_7);
            if (v_4 == 0) {
                STATS::STAT_SET_INT(0xc8fd0844, v_7, 1);
            } else if (v_4 == 1) {
                STATS::STAT_SET_INT(0xd3161861, v_7, 1);
            } else if (v_4 == 2) {
                STATS::STAT_SET_INT(0xe205ca9b, v_7, 1);
            }
        }
    }
}

void sub_139f9(auto a_0, auto a_1) {
    if (!PED::IS_PED_INJURED(a_0)) {
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            a_1[v_4/*3*/]._f1 = 0;
        }
        for (v_4 = 0; v_4 <= (44 - 1); v_4 += 1) {
            v_7 = sub_7293(v_4);
            if (v_7 != 0) {
                v_8 = WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(a_0, sub_7293(v_4));
                v_8._f1 = 0;
                v_8._f2 = 0;
                if ((v_8 != 0) && (v_8 != ${weapon_unarmed})) {
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (v_8 == ${gadget_parachute}) {
                        v_8._f1 = 1;
                    }
                    GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1[v_4/*3*/]._f1 = v_8._f1;
                    v_5 = 0;
                    v_6 = sub_64a4(v_8, v_5);
                    while (v_6 != 0) {
                        if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_6)) {
                            GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                        }
                        v_5 += 1;
                        v_6 = sub_64a4(v_8, v_5);
                    }
                }
                a_1[v_4/*3*/]/*{3}*/ = v_8;
            }
        }
        for (v_4 = 0; v_4 <= (50 - 1); v_4 += 1) {
            a_1._f85[v_4/*3*/]._f1 = 0;
        }
        v_C = DLC1::GET_NUM_DLC_WEAPONS();
        for (v_B = 0; v_B < v_C; v_B += 1) {
            if ((DLC1::GET_DLC_WEAPON_DATA(v_B, &v_D) && (!sub_6f00(v_D._f1))) && (v_4A < 50)) {
                if (!DLC1::_IS_OUTFIT_EMPTY(v_D)) {
                    v_8 = v_D._f1;
                    v_8._f1 = 0;
                    v_8._f2 = 0;
                    v_8._f1 = WEAPON::GET_AMMO_IN_PED_WEAPON(a_0, v_8);
                    if (WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        GAMEPLAY::SET_BIT(&v_8._f2, 20 + WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, v_8));
                    } else { 
                        GAMEPLAY::SET_BIT(&v_8._f2, 20);
                    }
                    if (v_8._f1 == -1) {
                        if (!WEAPON::GET_MAX_AMMO(a_0, v_8, &v_8._f1)) {
                            v_8._f1 = 0;
                        }
                    }
                    a_1._f85[v_4A/*3*/]._f1 = v_8._f1;
                    for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_B); v_5 += 1) {
                        if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_B, v_5, &v_34)) {
                            if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, v_8, v_34._f3)) {
                                GAMEPLAY::SET_BIT(&v_8._f2, v_5);
                            }
                        }
                    }
                }
                if (v_8 != 0) {
                    if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, v_8, 0)) {
                        v_8 = 0;
                        v_8._f1 = 0;
                    }
                }
                a_1._f85[v_4A/*3*/]/*{3}*/ = v_8;
                v_4A += 1;
            }
        }
    }
}

void sub_13c5d(auto a_0) {
    for (v_3 = 0; v_3 <= (a_0 - 1); v_3 += 1) {
        if (CAM::DOES_CAM_EXIST(a_0[v_3/*12*/])) {
            CAM::SET_CAM_ACTIVE(a_0[v_3/*12*/], 0);
        }
    }
}

void sub_13c93() {
    if (l_424 && (!l_B3._f69._f19)) {
        if ((l_B3._f69._f5 == 1) && (l_B3._f69._f2 == -1)) {
            if (sub_afc5(l_B3, &g_2707D2, &v_2, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                if ((v_2._f18 == 0) && (v_2._f19 != 0)) {
                    l_B3._f69._f2 = 0;
                } else if (sub_2b554(v_2, &l_B3._f69._f2)) {
                    l_B3._f69._f2 += 1;
                } else if (sub_2b303(v_2, &l_B3._f69._f2)) {
                    l_B3._f69._f2 += 21;
                } else { 
                    l_B3._f69._f2 = -1;
                }
            }
            if (v_2 == ${gadget_parachute}) {
                PLAYER::GET_PLAYER_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), &l_41F);
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    l_422 = sub_4b3f(2029, -1, 0);
                }
                l_421 = sub_2b1be();
                if (PLAYER::GET_PLAYER_HAS_RESERVE_PARACHUTE(PLAYER::PLAYER_ID())) {
                    PLAYER::GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), &l_420);
                } else { 
                    l_420 = -1;
                }
            } else if (v_2 == 0xfc508e33) {
            } else { 
                l_41F = WEAPON::GET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_2);
                if (sub_2b17c(&l_4E1, v_2, 0x395e9926)) {
                    if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_2, sub_2b129(&l_4E1, v_2, 0x395e9926, 0)) || WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_2, sub_2b129(&l_4E1, v_2, 0x395e9926, 1))) {
                        if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(l_B3._fDC[(l_B3._f69._f3 * 5) + l_B3._f69._f1/*1*/], sub_2b129(&l_4E1, v_2, 0x395e9926, 0)) || WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(l_B3._fDC[(l_B3._f69._f3 * 5) + l_B3._f69._f1/*1*/], sub_2b129(&l_4E1, v_2, 0x395e9926, 1))) {
                            l_41F = -1;
                        }
                    }
                }
            }
            l_423 = l_B3._f69._f2;
        }
        sub_658ab();
        sub_61f65();
        l_424 = 0;
    }
    UI::SHOW_HUD_COMPONENT_THIS_FRAME(3);
    UI::SHOW_HUD_COMPONENT_THIS_FRAME(4);
    UI::SHOW_HUD_COMPONENT_THIS_FRAME(5);
    UI::SHOW_HUD_COMPONENT_THIS_FRAME(13);
    if (!l_426) {
        UI::SHOW_HUD_COMPONENT_THIS_FRAME(2);
    }
    if (l_B3._f69._f10) {
        if (GAMEPLAY::GET_HASH_KEY(&l_B3._f69._fB) == 0x3ecc7899) {
            if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                sub_2b0c4(&l_B3._f69._fB, 0, 0);
            } else if (g_16416._f1 == ${weapon_bottle}) {
                sub_2b0c4("SHOP_UNLOCKDLC", 0, 0);
                sub_2b063("SHOP_CONTENT_1");
            } else if (g_16416._f1 == ${weapon_snspistol}) {
                if (l_B3._f69._f2 == (sub_2b020(&l_4E1, g_16416._f1, 0x395e9926) + 1)) {
                    sub_2b0c4("SHOP_UNLOCKDLC6", 0, 0);
                    sub_2b063("SHOP_CONTENT_15");
                } else { 
                    sub_2b0c4("SHOP_UNLOCKDLC", 0, 0);
                    sub_2b063("SHOP_CONTENT_1");
                }
            } else if (g_16416._f1 == 0x61012683) {
                sub_2b0c4("SHOP_UNLOCKDLC", 0, 0);
                sub_2b063("SHOP_CONTENT_4");
            } else if (g_16416._f1 == ${weapon_heavypistol}) {
                sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                sub_2b063("SHOP_CONTENT_2");
            } else if (g_16416._f1 == ${weapon_specialcarbine}) {
                if (l_B3._f69._f2 == (sub_2b020(&l_4E1, g_16416._f1, 0x395e9926) + 1)) {
                    sub_2b0c4("SHOP_UNLOCKDLC6", 0, 0);
                    sub_2b063("SHOP_CONTENT_15");
                } else { 
                    sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                    sub_2b063("SHOP_CONTENT_2");
                }
            } else if (g_16416._f1 == ${weapon_bullpuprifle}) {
                if (l_B3._f69._f2 == (sub_2b020(&l_4E1, g_16416._f1, 0x395e9926) + 1)) {
                    sub_2b0c4("SHOP_UNLOCKDLC6", 0, 0);
                    sub_2b063("SHOP_CONTENT_15");
                } else { 
                    sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                    sub_2b063("SHOP_CONTENT_5");
                }
            } else if ((g_16416._f1 == 0x92a27487) || (g_16416._f1 == 0x83839c4)) {
                sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                sub_2b063("SHOP_CONTENT_6b");
            } else if (g_16416._f1 == 0xa3d4d34) {
                sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                sub_2b063("SHOP_CONTENT_12");
            } else if ((g_16416._f1 == 0xd8df3c3c) || (g_16416._f1 == 0xdc4db296)) {
                sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                sub_2b063("SHOP_CONTENT_14");
            } else if (g_16416._f1 == 0xa89cb99e) {
                sub_2b0c4("SHOP_UNLOCKDLC3", 0, 0);
                sub_2b063("SHOP_CONTENT_8");
            } else if ((g_16416._f1 == 0x63ab0442) || (g_16416._f1 == 0xab564b93)) {
                sub_2b0c4("SHOP_UNLOCKDLC4", 0, 0);
                sub_2b063("SHOP_CONTENT_3");
            } else if (g_16416._f1 == 0x8bb05fd7) {
                sub_2b0c4("SHOP_UNLOCKDLC4", 0, 0);
                sub_2b063("SHOP_CONTENT_16");
            } else if ((g_16416._f1 == 0xdb1aa450) || (g_16416._f1 == 0xdd5df8d9)) {
                sub_2b0c4("SHOP_UNLOCKDLC6", 0, 0);
                sub_2b063("SHOP_CONTENT_15");
            } else if (g_16416._f1 == ${gadget_parachute}) {
                if (sub_afc5(l_B3, &g_2707D2, &v_2, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                    if (sub_27537(&l_4E7, v_2, sub_2afad(v_2, l_B3._f69._f2 - 21), 0)) {
                        if ((l_4E7._fA == 1) && (l_4E7._f9 > 46)) {
                            sub_2b0c4("SHOP_UNLOCKDLC4", 0, 0);
                            sub_2b063("SHOP_CONTENT_3");
                        } else if ((l_4E7._fA == 1) && (l_4E7._f9 > 26)) {
                            sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                            sub_2b063("SHOP_CONTENT_10b");
                        } else if ((((l_4E7._fA == 1) && (l_4E7._f9 > 0)) || ((l_4E7._fA == 2) && (l_4E7._f9 >= 8))) || ((l_4E7._fA == 3) && (l_4E7._f9 >= 8))) {
                            sub_2b0c4("SHOP_UNLOCKDLC2", 0, 0);
                            sub_2b063("SHOP_CONTENT_9b");
                        } else { 
                            sub_2b0c4(&l_B3._f69._fB, 0, 0);
                        }
                    }
                }
            } else { 
                sub_2b0c4(&l_B3._f69._fB, 0, 0);
            }
        } else { 
            sub_2b0c4(&l_B3._f69._fB, 0, 0);
            if (GAMEPLAY::GET_HASH_KEY(&l_B3._f69._fB) == 0x30d335f2) {
                if (!sub_273c7(238)) {
                    sub_2632d(sub_2638c(238));
                } else if (!sub_273c7(239)) {
                    sub_2632d(sub_2638c(239));
                } else if (!sub_273c7(240)) {
                    sub_2632d(sub_2638c(240));
                } else if (!sub_273c7(241)) {
                    sub_2632d(sub_2638c(241));
                } else if (!sub_273c7(242)) {
                    sub_2632d(sub_2638c(242));
                } else if (!sub_273c7(243)) {
                    sub_2632d(sub_2638c(243));
                } else if (!sub_273c7(244)) {
                    sub_2632d(sub_2638c(244));
                } else if (!sub_273c7(245)) {
                    sub_2632d(sub_2638c(245));
                } else if (!sub_273c7(246)) {
                    sub_2632d(sub_2638c(246));
                } else if (!sub_273c7(247)) {
                    sub_2632d(sub_2638c(247));
                }
            }
        }
        if (l_97) {
            sub_262c8("GSHOP_SALE", 0, 0);
        } else { 
            v_1C = 0;
            v_1D = 0;
            v_1E = 1.0 - sub_f3a4(v_2, &v_1C, &v_1D);
            if (v_1E != 0.0) {
                sub_262c8("GSHOP_DISC", 0, 0);
                sub_26269(SYSTEM::ROUND(v_1E * 100.0));
            }
        }
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_B3._f69._f7)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_B3._f69._f6) > 0))) {
            l_B3._f69._f10 = 0;
        }
    }
    if (!l_B3._f69._f10) {
        v_1F = 0;
        if (sub_afc5(l_B3, &g_2707D2, &v_2, l_B3._f69._f3, l_B3._f69._f1, 0)) {
            if (l_B3._f69._f5 == 0) {
                if (v_2._f18 == 7) {
                    if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
                        sub_2b0c4("GSM_DLC1", 0, 0);
                        v_1F = 1;
                    } else if (GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) {
                        sub_2b0c4("GSM_DLC2", 0, 0);
                        v_1F = 1;
                    }
                } else if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 7)) {
                    if (is_in_transition) {
                        if (v_2._f18 == 4) {
                            sub_2b0c4("GS_STOCK2", 0, 0);
                            sub_2632d(sub_2638c(1));
                        } else if (v_2._f18 == 3) {
                            if (l_B3._f69._f1 == 0) {
                                sub_2b0c4("GS_STOCK2", 0, 0);
                                sub_2632d(sub_2638c(156));
                            } else if (l_B3._f69._f1 == 1) {
                                sub_2b0c4("GS_STOCK2", 0, 0);
                                sub_2632d(sub_2638c(157));
                            } else if (l_B3._f69._f1 == 2) {
                                sub_2b0c4("GS_STOCK2", 0, 0);
                                sub_2632d(sub_2638c(158));
                            } else if (l_B3._f69._f1 == 3) {
                                sub_2b0c4("GS_STOCK2", 0, 0);
                                sub_2632d(sub_2638c(159));
                            } else if (l_B3._f69._f1 == 4) {
                                sub_2b0c4("GS_STOCK2", 0, 0);
                                sub_2632d(sub_2638c(160));
                            } else { 
                                sub_2b0c4("GS_STOCK", 0, 0);
                            }
                        } else if ((((v_2._f18 == 0) || (v_2._f18 == 1)) || (v_2._f18 == 2)) || (v_2._f18 == 5)) {
                            if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!sub_7216(1, 1))) && (v_2 == ${weapon_sawnoffshotgun})) {
                                sub_2b0c4("GSM_LOCK_SCLUB", 0, 0);
                            } else { 
                                sub_2b0c4("GS_STOCK2", 0, 0);
                                sub_2632d(sub_260a5(v_2));
                            }
                        } else { 
                            sub_2b0c4("GS_STOCK", 0, 0);
                        }
                        v_1F = 1;
                    } else { 
                        sub_2b0c4("GS_STOCK", 0, 0);
                        v_1F = 1;
                    }
                } else { 
                    if ((v_2._f18 == 3) && is_in_transition) {
                        if (l_B3._f69._f1 == 0) {
                            v_28 = 156;
                        } else if (l_B3._f69._f1 == 1) {
                            v_28 = 157;
                        } else if (l_B3._f69._f1 == 2) {
                            v_28 = 158;
                        } else if (l_B3._f69._f1 == 3) {
                            v_28 = 159;
                        } else if (l_B3._f69._f1 == 4) {
                            v_28 = 160;
                        }
                        if (sub_26032(sub_10943(), v_28)) {
                            sub_2553b(sub_10943(), v_28);
                            sub_254cf(&l_B3._f69, "GSM_UNLOCK_N", 3000);
                        } else { 
                            sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_20, &v_24);
                            if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_24)) && UI::DOES_TEXT_LABEL_EXIST(&v_24)) {
                                sub_2b0c4(&v_24, 0, 0);
                                v_1F = 1;
                            }
                        }
                    } else { 
                        v_29 = 0;
                        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            switch (v_2) {
                            case ${weapon_bottle}:
                                v_24/*"16"*/ = "WTD2_Bottle";
                                v_29 = 1;
                                break;
                            case ${weapon_snspistol}:
                                v_24/*"16"*/ = "WTD2_SNSPistol";
                                v_29 = 1;
                                break;
                            case 0x61012683:
                                v_24/*"16"*/ = "WTD2_GUSNBRG";
                                v_29 = 1;
                                break;
                            case ${weapon_heavypistol}:
                                v_24/*"16"*/ = "WTD2_HvyPistol";
                                v_29 = 1;
                                break;
                            case ${weapon_specialcarbine}:
                                v_24/*"16"*/ = "WTD2_SpCarbine";
                                v_29 = 1;
                                break;
                            case ${weapon_bullpuprifle}:
                                v_24/*"16"*/ = "WTD2_BullRifle";
                                v_29 = 1;
                                break;
                            case 0x92a27487:
                                v_24/*"16"*/ = "WTD2_DAGGER";
                                v_29 = 1;
                                break;
                            case 0x83839c4:
                                v_24/*"16"*/ = "WTD2_VPISTOL";
                                v_29 = 1;
                                break;
                            case 0x7f7497e5:
                                v_24/*"16"*/ = "WTD2_FIREWRK";
                                v_29 = 1;
                                break;
                            case 0xa89cb99e:
                                v_24/*"16"*/ = "WTD2_MUSKET";
                                v_29 = 1;
                                break;
                            case 0xc734385a:
                                v_24/*"16"*/ = "WTD2_MKRIFLE";
                                v_29 = 1;
                                break;
                            case 0x3aabbbaa:
                                v_24/*"16"*/ = "WTD2_HVYSHGN";
                                v_29 = 1;
                                break;
                            case 0x63ab0442:
                                v_24/*"16"*/ = "WTD2_HOMLNCH";
                                v_29 = 1;
                                break;
                            case 0xab564b93:
                                v_24/*"16"*/ = "WTD2_PRXMINE";
                                v_29 = 1;
                                break;
                            case 0xa3d4d34:
                                v_24/*"16"*/ = "WTD2_COMBATPDW";
                                v_29 = 1;
                                break;
                            case 0xd8df3c3c:
                                v_24/*"16"*/ = "WTD2_KNUCKLE";
                                v_29 = 1;
                                break;
                            case 0xdc4db296:
                                v_24/*"16"*/ = "WTD2_MKPISTOL";
                                v_29 = 1;
                                break;
                            }
                        }
                        if (v_29) {
                            sub_2b0c4(&v_24, 0, 0);
                            v_1F = 1;
                        } else { 
                            sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_20, &v_24);
                            if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_24)) && UI::DOES_TEXT_LABEL_EXIST(&v_24)) {
                                sub_2b0c4(&v_24, 0, 0);
                                v_1F = 1;
                            }
                        }
                    }
                    if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) {
                        if (l_97) {
                            sub_262c8("GSHOP_SALE", 0, 0);
                        } else { 
                            v_2A = 0;
                            v_2B = 0;
                            v_2C = 1.0 - sub_f3a4(v_2, &v_2A, &v_2B);
                            if (v_2C != 0.0) {
                                sub_262c8("GSHOP_DISC", 0, 0);
                                sub_26269(SYSTEM::ROUND(v_2C * 100.0));
                            }
                        }
                    }
                }
            } else if (l_B3._f69._f5 == 1) {
                if (l_4D4) {
                    if (l_4D5 == 0) {
                        sub_2b0c4("GS_PARA_M0", 0, 0);
                        v_1F = 1;
                    } else if (l_4D5 == 1) {
                        sub_2b0c4("GS_PARA_M1", 0, 0);
                        v_1F = 1;
                    } else if (l_4D5 == 2) {
                        sub_2b0c4("GS_PARA_M2", 0, 0);
                        v_1F = 1;
                    } else if (l_4D5 == 3) {
                        sub_2b0c4("GS_PARA_M3", 0, 0);
                        v_1F = 1;
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 10)) {
                    if (sub_21a3b(&l_4E1, v_2, l_B3._f69._f2 - 1, 0)) {
                        if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 8)) {
                            if (is_in_transition) {
                                if (sub_219f1(l_4E1)) {
                                } else { 
                                    sub_2b0c4("GS_STOCK2", 0, 0);
                                }
                                sub_2632d(sub_215bf(l_4E1._f4, v_2));
                                v_1F = 1;
                            } else { 
                                sub_2b0c4("GS_STOCK", 0, 0);
                                v_1F = 1;
                            }
                        } else { 
                            sub_1f9b4(v_2, l_B3._f69._f2 - 1, &v_20, &v_24);
                            if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&v_24)) && UI::DOES_TEXT_LABEL_EXIST(&v_24)) {
                                sub_2b0c4(&v_24, 0, 0);
                                v_1F = 1;
                            }
                            v_2D = 0;
                            if (sub_1e99a(l_4E1, v_2, &v_2D) || l_4E1._f1) {
                                if (v_2D) {
                                    sub_2b0c4("GSM_OWN_EQUIP", 0, 0);
                                    v_1F = 1;
                                } else { 
                                    sub_2b0c4("GSM_TICK", 0, 0);
                                    v_1F = 1;
                                }
                            } else if (l_97) {
                                sub_262c8("GSHOP_SALE", 0, 0);
                            } else { 
                                v_30 = 1.0 - sub_f3a4(v_2, &v_2E, &v_2F);
                                if (v_30 != 0.0) {
                                    sub_262c8("GSHOP_DISC", 0, 0);
                                    sub_26269(SYSTEM::ROUND(v_30 * 100.0));
                                }
                            }
                        }
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 11)) {
                    if (sub_27537(&l_4E7, v_2, sub_2afad(v_2, l_B3._f69._f2 - 21), 0)) {
                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            if (!sub_1e2cd(v_2, l_4E7._f9, l_4E7._fA)) {
                                if (sub_1de6b(v_2, l_4E7._f9, &v_24, &v_31, &v_32)) {
                                    if (GAMEPLAY::GET_HASH_KEY(&v_24) == GAMEPLAY::GET_HASH_KEY("GSM_TINT_CASH")) {
                                        if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
                                            v_24/*16*/ += "1";
                                        } else if ((GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) || GAMEPLAY::IS_PC_VERSION()) {
                                            v_24/*16*/ += "2";
                                        }
                                    } else if (GAMEPLAY::GET_HASH_KEY(&v_24) == GAMEPLAY::GET_HASH_KEY("GSM_TINT_KILL")) {
                                        v_31 -= sub_1db51(v_2);
                                    }
                                    sub_2b0c4(&v_24, 0, 0);
                                    if (v_31 != -1) {
                                        sub_2632d(v_31);
                                    }
                                    if (v_32) {
                                        sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_20, &v_24);
                                        sub_2b063(sub_1d864(v_2));
                                    }
                                    v_1F = 1;
                                    if (v_2 == ${gadget_parachute}) {
                                        v_33 = sub_1be7f(v_2, l_4E7._f9, l_4E7._fA);
                                        if (v_33 != 0) {
                                            sub_2b0c4("GS_STOCK2", 0, 0);
                                            sub_2632d(sub_2638c(v_33));
                                            v_1F = 1;
                                        }
                                    }
                                }
                                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                    if (((v_2 == ${gadget_parachute}) && (l_4E7._fA == 4)) && (l_4E7._f9 == 6)) {
                                        if (!sub_1be22()) {
                                            sub_2b0c4("GSM_LOCK_CREW", 0, 0);
                                            v_1F = 1;
                                        } else if (!sub_1bdbd(6)) {
                                            if (sub_1bda4(PLAYER::PLAYER_ID())) {
                                                sub_2b0c4("GSM_LOCK_RNK", 0, 0);
                                            } else { 
                                                sub_2b0c4("GSM_LOCK_RNKT", 0, 0);
                                            }
                                            v_1F = 1;
                                        }
                                    }
                                }
                            } else { 
                                v_34 = 0;
                                if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&l_4E7._f4)) && UI::DOES_TEXT_LABEL_EXIST(&l_4E7._f4)) {
                                    sub_2b0c4(&l_4E7._f4, 0, 0);
                                    v_1F = 1;
                                    v_34 = 1;
                                }
                                v_35 = 0;
                                if (l_4E7._fA != 5) {
                                    v_36 = l_41F;
                                    if (l_4E7._fA == 1) {
                                        v_36 = l_422;
                                    } else if (l_4E7._fA == 4) {
                                        v_36 = l_421;
                                    } else if (l_4E7._fA == 2) {
                                        v_36 = l_41F;
                                    } else if (l_4E7._fA == 3) {
                                        v_36 = l_420;
                                    }
                                    if (sub_19fbd(v_2, l_4E7._f9, l_4E7._fA, v_36, &v_35)) {
                                        if (v_35) {
                                            sub_2b0c4("GSM_OWN_EQUIP", 0, 0);
                                            v_1F = 1;
                                            v_34 = 0;
                                        } else { 
                                            sub_2b0c4("GSM_TICK", 0, 0);
                                            v_1F = 1;
                                            v_34 = 0;
                                        }
                                    }
                                }
                                if (l_97) {
                                    sub_262c8("GSHOP_SALE", 0, 0);
                                } else if (v_34) {
                                    v_37 = l_4E7._f8;
                                    v_38 = 1.0 - sub_19e62(v_2, &v_37);
                                    if (v_38 != 0.0) {
                                        sub_262c8("GSHOP_DISC", 0, 0);
                                        sub_26269(SYSTEM::ROUND(v_38 * 100.0));
                                    }
                                }
                            }
                        } else { 
                            v_39 = 0;
                            if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&l_4E7._f4)) && UI::DOES_TEXT_LABEL_EXIST(&l_4E7._f4)) {
                                sub_2b0c4(&l_4E7._f4, 0, 0);
                                v_1F = 1;
                                v_39 = 1;
                            }
                            v_3A = 0;
                            if (l_4E7._fA != 5) {
                                v_3B = l_41F;
                                if (l_4E7._fA == 1) {
                                    v_3B = l_422;
                                } else if (l_4E7._fA == 4) {
                                    v_3B = l_421;
                                } else if (l_4E7._fA == 2) {
                                    v_3B = l_41F;
                                } else if (l_4E7._fA == 3) {
                                    v_3B = l_420;
                                }
                                if (sub_19fbd(v_2, l_4E7._f9, l_4E7._fA, v_3B, &v_3A)) {
                                    if (v_3A) {
                                        sub_2b0c4("GSM_OWN_EQUIP", 0, 0);
                                        v_1F = 1;
                                        v_39 = 0;
                                    } else { 
                                        sub_2b0c4("GSM_TICK", 0, 0);
                                        v_1F = 1;
                                        v_39 = 0;
                                    }
                                }
                            }
                            if (v_39) {
                                v_3C = l_4E7._f8;
                                v_3D = 1.0 - sub_19e62(v_2, &v_3C);
                                if (v_3D != 0.0) {
                                    sub_262c8("GSHOP_DISC", 0, 0);
                                    sub_26269(SYSTEM::ROUND(v_3D * 100.0));
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!v_1F) {
            sub_2b0c4("", 0, 0);
        }
    }
    if (l_43E) {
        if (l_43D == 0) {
            l_43D += 1;
        } else if (l_43D == 1) {
            v_3E = 0;
            v_3F = 0;
            v_40 = 0;
            v_41 = 0;
            if (sub_19e56()) {
                if (NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
                    if (NETWORK::NETWORK_IS_ACTIVITY_SESSION()) {
                        v_42 = 2;
                        UI::_SET_WARNING_MESSAGE_2("GLOBAL_ALERT_DEFAULT", "STORE_UNAVAIL", v_42, 0, 0, -1, 0, 0, 1);
                        if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201)) {
                            v_3F = 1;
                        }
                    } else if (!NETWORK::_59328EB08C5CEB2B()) {
                        v_43 = 2;
                        if (GAMEPLAY::IS_DURANGO_VERSION()) {
                            UI::_SET_WARNING_MESSAGE_2("GLOBAL_ALERT_DEFAULT", "HUD_STORE_PERMISSIONS", v_43, 0, 0, -1, 0, 0, 1);
                        } else { 
                            UI::_SET_WARNING_MESSAGE_2("GLOBAL_ALERT_DEFAULT", "HUD_PERM", v_43, 0, 0, -1, 0, 0, 1);
                        }
                        if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201)) {
                            v_3F = 1;
                        }
                    } else if (!NETWORK::_883D79C4071E18B3()) {
                        v_44 = 2;
                        UI::_SET_WARNING_MESSAGE_2("GLOBAL_ALERT_DEFAULT", "STORE_UNAVAIL", v_44, 0, 0, -1, 0, 0, 1);
                        if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201)) {
                            v_3F = 1;
                        }
                    } else { 
                        v_3E = 1;
                    }
                } else { 
                    v_40 = 1;
                }
            } else { 
                v_41 = 1;
            }
            if (v_41) {
                l_43D = 0;
                l_43E = 0;
                l_452 = 1;
            } else if (v_40) {
                l_43D = 3;
            } else if (v_3E) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    g_25444A = 1;
                    g_25444B = 1;
                }
                AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV", "HUD_AMMO_SHOP_SOUNDSET", 1);
                NETWORK::_FAE628F1E9ADB239(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                NETWORK::_58C21165F6545892(&l_43F, "", 3);
                l_8C = 1;
                l_43D += 1;
            } else if (v_3F) {
                l_43D += 1;
            }
        } else if (l_43D == 2) {
            if (!NETWORK::_2EAC52B4019E2782()) {
                l_43D = 0;
                l_43E = 0;
            }
        } else if (l_43D == 3) {
            if (sub_197b1(&l_43C, 1)) {
                if (NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        g_25444A = 1;
                        g_25444B = 1;
                    }
                    if (NETWORK::_883D79C4071E18B3()) {
                        NETWORK::_FAE628F1E9ADB239(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                        NETWORK::_58C21165F6545892(&l_43F, "", 3);
                        l_8C = 1;
                    }
                }
                l_43D = 2;
            }
        }
    } else if (l_43A) {
    } else if (((l_451 && (!sub_19e56())) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) || l_452) {
        l_452 = 1;
        v_45 = 2;
        UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "STORE_CON_ONL", v_45, 0, 0, -1, 0, 0, 1);
        if (CONTROLS::IS_CONTROL_PRESSED(2, 201)) {
            l_451 = sub_19e56();
            l_452 = 0;
        }
    } else if (((l_44F && (!NETWORK::NETWORK_IS_SIGNED_ONLINE())) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) || l_450) {
        l_450 = 1;
        v_46 = 2;
        UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "STORE_SGN_ONL2", v_46, 0, 0, -1, 0, 0, 1);
        if (CONTROLS::IS_CONTROL_PRESSED(2, 201)) {
            l_44F = NETWORK::NETWORK_IS_SIGNED_ONLINE();
            l_450 = 0;
        }
    } else { 
        sub_15f40(1, l_B3, SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${lamar1}) == 0, 0, 1, 0xbf800000, 0, 0);
        if (sub_15e5c(0, 0)) {
            if (sub_afc5(l_B3, &g_2707D2, &v_2, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                if (((v_2._f18 == 0) || (v_2._f18 == 2)) || (v_2._f18 == 5)) {
                    asm .vardef<F> 0x5a, "[{\"offset\":0,\"value\":4}]"
                    if (l_B3._f69._f5 == 1) {
                        while (sub_21a3b(&l_4E1, v_2, v_63, 0)) {
                            if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(l_B3._fDC[(l_B3._f69._f3 * 5) + l_B3._f69._f1/*1*/], l_4E1)) {
                                if (WEAPON::GET_WEAPON_COMPONENT_HUD_STATS(l_4E1, &v_4C)) {
                                    if ((v_63 != (l_B3._f69._f2 - 1)) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 6)) {
                                        v_5F += v_4C;
                                        v_60 += v_4C._f1;
                                        v_61 += v_4C._f3;
                                        v_62 += v_4C._f4;
                                    }
                                }
                            }
                            v_63 += 1;
                        }
                    }
                    if (WEAPON::GET_WEAPON_HUD_STATS(v_2, &v_47)) {
                        v_4C = 0;
                        v_4C._f1 = 0;
                        v_4C._f3 = 0;
                        v_4C._f4 = 0;
                        if (l_B3._f69._f5 == 1) {
                            if (sub_21a3b(&l_4E1, v_2, l_B3._f69._f2 - 1, 0)) {
                                if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 6)) {
                                    WEAPON::GET_WEAPON_COMPONENT_HUD_STATS(l_4E1, &v_4C);
                                }
                            }
                        }
                        v_64 = (sub_15e4e() - GRAPHICS::GET_SAFE_ZONE_SIZE()) + (0.0013888799585402012 * 76.0);
                        v_65 = 125.0 - 8.0;
                        GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 66);
                        GRAPHICS::_F5A2C681787E579D(0.0, 0.0, 0.0, 0.0);
                        UI::GET_HUD_COLOUR(140, &v_51, &v_52, &v_53, &v_54);
                        sub_15e1f(0.0, v_64, g_4368, 0.0013888799585402012 * 108.0, v_51, v_52, v_53, v_54);
                        v_55 = 0.0046875;
                        v_56 = (0.0013888799585402012 * 108.0) + (0.0013888799585402012 * 42.0);
                        v_57 = v_64;
                        sub_159fe(0, 1, 0, 0, 0, 0);
                        UI::_SET_TEXT_ENTRY("PM_DAMAGE");
                        UI::_DRAW_TEXT(v_55, v_56 + v_57, 0);
                        v_57 += 0.034722;
                        sub_159fe(0, 1, 0, 0, 0, 0);
                        UI::_SET_TEXT_ENTRY("PM_FIRERATE");
                        UI::_DRAW_TEXT(v_55, v_56 + v_57, 0);
                        v_57 += 0.034722;
                        sub_159fe(0, 1, 0, 0, 0, 0);
                        UI::_SET_TEXT_ENTRY("PM_ACCURACY");
                        UI::_DRAW_TEXT(v_55, v_56 + v_57, 0);
                        v_57 += 0.034722;
                        sub_159fe(0, 1, 0, 0, 0, 0);
                        UI::_SET_TEXT_ENTRY("PM_RANGE");
                        UI::_DRAW_TEXT(v_55, v_56 + v_57, 0);
                        v_57 += 0.034722;
                        UI::GET_HUD_COLOUR(1, &v_51, &v_52, &v_53, &v_54);
                        v_54 = 76;
                        v_58 = 0.0013888799585402012 * -89.0;
                        v_59 = v_64;
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, 0.00078125 * v_65, 0.0013888799585402012 * 6.0, v_51, v_52, v_53, v_54);
                        v_59 += 0.034722;
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, 0.00078125 * v_65, 0.0013888799585402012 * 6.0, v_51, v_52, v_53, v_54);
                        v_59 += 0.034722;
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, 0.00078125 * v_65, 0.0013888799585402012 * 6.0, v_51, v_52, v_53, v_54);
                        v_59 += 0.034722;
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, 0.00078125 * v_65, 0.0013888799585402012 * 6.0, v_51, v_52, v_53, v_54);
                        v_59 += 0.034722;
                        v_58 = 0.0013888799585402012 * -89.0;
                        v_59 = v_64;
                        v_5A[0/*1*/] = 0.00078125 * ((v_65 / 100.0) * __678_$BBDA792448DB5A89(v_47));
                        v_5A[0/*1*/] += v_5A[0/*1*/] * (__678_$BBDA792448DB5A89(v_5F) / 100.0);
                        if (l_B3._f69._f5 == 1) {
                            if (v_4C >= 0) {
                                UI::GET_HUD_COLOUR(9, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[0/*1*/] + (v_5A[0/*1*/] * (__678_$BBDA792448DB5A89(v_4C) / 100.0)), 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                            } else { 
                                UI::GET_HUD_COLOUR(6, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[0/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                                v_5A[0/*1*/] += v_5A[0/*1*/] * (__678_$BBDA792448DB5A89(v_4C) / 100.0);
                            }
                        }
                        UI::GET_HUD_COLOUR(1, &v_51, &v_52, &v_53, &v_54);
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[0/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                        v_59 += 0.034722;
                        v_5A[1/*1*/] = 0.00078125 * ((v_65 / 100.0) * __678_$BBDA792448DB5A89(v_47._f1));
                        v_5A[1/*1*/] += v_5A[1/*1*/] * (__678_$BBDA792448DB5A89(v_60) / 100.0);
                        if (l_B3._f69._f5 == 1) {
                            if (v_4C._f1 >= 0) {
                                UI::GET_HUD_COLOUR(9, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[1/*1*/] + (v_5A[1/*1*/] * (__678_$BBDA792448DB5A89(v_4C._f1) / 100.0)), 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                            } else { 
                                UI::GET_HUD_COLOUR(6, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[1/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                                v_5A[1/*1*/] += v_5A[1/*1*/] * (__678_$BBDA792448DB5A89(v_4C._f1) / 100.0);
                            }
                        }
                        UI::GET_HUD_COLOUR(1, &v_51, &v_52, &v_53, &v_54);
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[1/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                        v_59 += 0.034722;
                        v_5A[2/*1*/] = 0.00078125 * ((v_65 / 100.0) * __678_$BBDA792448DB5A89(v_47._f3));
                        v_5A[2/*1*/] += v_5A[2/*1*/] * (__678_$BBDA792448DB5A89(v_61) / 100.0);
                        if (l_B3._f69._f5 == 1) {
                            if (v_4C._f3 >= 0) {
                                UI::GET_HUD_COLOUR(9, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[2/*1*/] + (v_5A[2/*1*/] * (__678_$BBDA792448DB5A89(v_4C._f3) / 100.0)), 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                            } else { 
                                UI::GET_HUD_COLOUR(6, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[2/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                                v_5A[2/*1*/] += v_5A[2/*1*/] * (__678_$BBDA792448DB5A89(v_4C._f3) / 100.0);
                            }
                        }
                        UI::GET_HUD_COLOUR(1, &v_51, &v_52, &v_53, &v_54);
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[2/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                        v_59 += 0.034722;
                        v_5A[3/*1*/] = 0.00078125 * ((v_65 / 100.0) * __678_$BBDA792448DB5A89(v_47._f4));
                        v_5A[3/*1*/] += v_5A[3/*1*/] * (__678_$BBDA792448DB5A89(v_62) / 100.0);
                        if (l_B3._f69._f5 == 1) {
                            if (v_4C._f4 >= 0) {
                                UI::GET_HUD_COLOUR(9, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[3/*1*/] + (v_5A[3/*1*/] * (__678_$BBDA792448DB5A89(v_4C._f4) / 100.0)), 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                            } else { 
                                UI::GET_HUD_COLOUR(6, &v_51, &v_52, &v_53, &v_54);
                                sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[3/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                                v_5A[3/*1*/] += v_5A[3/*1*/] * (__678_$BBDA792448DB5A89(v_4C._f4) / 100.0);
                            }
                        }
                        UI::GET_HUD_COLOUR(1, &v_51, &v_52, &v_53, &v_54);
                        sub_15948(g_4368 - (0.00078125 * 150.0), v_58 + v_59, v_5A[3/*1*/], 0.0013888799585402012 * 6.0, v_51, v_52, v_53, 255);
                        v_59 += 0.034722;
                        GRAPHICS::_E3A3DB414A373DAB();
                    }
                }
            }
        }
    }
}

void sub_15948(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    v_A = (125.0 - 8.0) * 0.00078125;
    v_B = 125.0 * 0.00078125;
    v_C = a_0;
    for (v_D = 0; v_D < 5; v_D += 1) {
        if (a_2 > ((v_A / 100.0) * 20.0)) {
            sub_15e1f(v_C, a_1, (v_A / 100.0) * 20.0, a_3, a_4, a_5, a_6, a_7);
        } else if (a_2 > 0.0) {
            sub_15e1f(v_C, a_1, a_2, a_3, a_4, a_5, a_6, a_7);
        }
        a_2 -= (v_A / 100.0) * 20.0;
        v_C += (v_B / 100.0) * 20.0;
    }
}

void sub_159fe(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_2) {
        if (a_3) {
            sub_15b95(g_4369._f16F6[a_4/*1*/], &v_8, &v_9, &v_A);
            if (((v_8 < 20) && (v_9 < 20)) && (v_A < 20)) {
                if (a_0 == 0) {
                    UI::GET_HUD_COLOUR(1, &v_8, &v_9, &v_A, &v_B);
                }
            } else if (((v_8 > 230) && (v_9 > 230)) && (v_A > 230)) {
                if (a_0) {
                    v_8 = 0;
                    v_9 = 0;
                    v_A = 0;
                }
            }
            UI::SET_TEXT_COLOUR(v_8, v_9, v_A, 255);
        } else if (a_1) {
            if (a_0) {
                UI::GET_HUD_COLOUR(14, &v_8, &v_9, &v_A, &v_B);
                UI::SET_TEXT_COLOUR(v_8, v_9, v_A, 255);
            } else { 
                UI::GET_HUD_COLOUR(12, &v_8, &v_9, &v_A, &v_B);
                UI::SET_TEXT_COLOUR(v_8, v_9, v_A, 255);
            }
        } else if (a_0) {
            UI::SET_TEXT_COLOUR(155, 155, 155, 255);
        } else { 
            UI::SET_TEXT_COLOUR(155, 155, 155, 255);
        }
    } else if (a_1) {
        if (a_0) {
            UI::SET_TEXT_COLOUR(0, 0, 0, SYSTEM::FLOOR(255.0 * 0.8));
        } else { 
            UI::GET_HUD_COLOUR(1, &v_8, &v_9, &v_A, &v_B);
            UI::SET_TEXT_COLOUR(v_8, v_9, v_A, v_B);
        }
    } else if (a_0) {
        UI::SET_TEXT_COLOUR(155, 155, 155, 255);
    } else { 
        UI::SET_TEXT_COLOUR(155, 155, 155, 255);
    }
    UI::SET_TEXT_SCALE(0.0, 0.35);
    UI::SET_TEXT_JUSTIFICATION(1);
    if (a_5) {
        UI::SET_TEXT_SCALE(0.0, 0.425);
        UI::SET_TEXT_FONT(4);
    } else { 
        UI::SET_TEXT_FONT(0);
    }
    UI::SET_TEXT_WRAP(0.0, 1.0);
    UI::SET_TEXT_CENTRE(0);
    UI::SET_TEXT_DROPSHADOW(0, 0, 0, 0, 0);
    UI::SET_TEXT_EDGE(0, 0, 0, 0, 0);
}

void sub_15b95(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_0) {
    case 0:
        a_1 = 8;
        a_2 = 8;
        a_3 = 8;
        break;
    case 1:
        a_1 = 37;
        a_2 = 37;
        a_3 = 39;
        break;
    case 22:
        a_1 = 140;
        a_2 = 146;
        a_3 = 154;
        break;
    case 23:
        a_1 = 91;
        a_2 = 93;
        a_3 = 94;
        break;
    case 6:
        a_1 = 81;
        a_2 = 84;
        a_3 = 89;
        break;
    case 111:
        a_1 = 240;
        a_2 = 240;
        a_3 = 240;
        break;
    case 28:
        a_1 = 150;
        a_2 = 8;
        a_3 = 0;
        break;
    case 34:
        a_1 = 38;
        a_2 = 3;
        a_3 = 6;
        break;
    case 88:
        a_1 = 245;
        a_2 = 137;
        a_3 = 15;
        break;
    case 45:
        a_1 = 74;
        a_2 = 22;
        a_3 = 7;
        break;
    case 56:
        a_1 = 45;
        a_2 = 58;
        a_3 = 53;
        break;
    case 58:
        a_1 = 71;
        a_2 = 120;
        a_3 = 60;
        break;
    case 54:
        a_1 = 77;
        a_2 = 98;
        a_3 = 104;
        break;
    case 73:
        a_1 = 14;
        a_2 = 49;
        a_3 = 109;
        break;
    case 68:
        a_1 = 22;
        a_2 = 34;
        a_3 = 72;
        break;
    case 140:
        a_1 = 0;
        a_2 = 174;
        a_3 = 239;
        break;
    case 131:
        a_1 = 255;
        a_2 = 183;
        a_3 = 0;
        break;
    case 90:
        a_1 = 142;
        a_2 = 140;
        a_3 = 70;
        break;
    case 97:
        a_1 = 156;
        a_2 = 141;
        a_3 = 113;
        break;
    case 89:
        a_1 = 145;
        a_2 = 115;
        a_3 = 71;
        break;
    case 105:
        a_1 = 98;
        a_2 = 68;
        a_3 = 40;
        break;
    case 100:
        a_1 = 124;
        a_2 = 27;
        a_3 = 68;
        break;
    case 99:
        a_1 = 114;
        a_2 = 42;
        a_3 = 63;
        break;
    case 136:
        a_1 = 246;
        a_2 = 151;
        a_3 = 153;
        break;
    case 49:
        a_1 = 32;
        a_2 = 32;
        a_3 = 44;
        break;
    case 146:
        a_1 = 26;
        a_2 = 1;
        a_3 = 23;
        break;
    default:
        a_1 = 255;
        a_2 = 255;
        a_3 = 255;
        break;
    }
}

void sub_15e1f(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    GRAPHICS::DRAW_RECT(a_0 + (a_2 * 0.5), a_1 + (a_3 * 0.5), a_2, a_3, a_4, a_5, a_6, a_7, 0);
}

auto sub_15e4e() {
    return g_4369._f166F;
}

auto sub_15e5c(auto a_0, auto a_1) {
    if (g_2507F3._f52D._f2B0 != 0) {
        return 1;
    }
    if (((((((((!CAM::IS_SCREEN_FADED_IN()) || (sub_15f05(8, -1) && (sub_15ef9() != 64))) || ((UI::GET_PAUSE_MENU_STATE() != 0) && (!a_1))) || (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS() && (!a_0))) || NETWORK::_2EAC52B4019E2782()) || g_10FC9) || g_4369._f1EB0) || UI::_E18B138FABC53103()) || g_16416._f548) {
        return 0;
    }
    return 1;
}

auto sub_15ef9() {
    return g_141404;
}

auto sub_15f05(auto a_0, auto a_1) {
    switch (a_0) {
    case 5:
        if (a_1 > -1) {
            return g_146CF3._fCB[a_1/*1*/];
        } else { }
        break;
    }
    return GAMEPLAY::IS_BIT_SET(g_146CF3._f3B5, a_0);
}

void sub_15f40(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (!sub_a06b(&v_A, 0, a_1)) {
        return ;
    }
    if (v_A == -1) {}
    if (!sub_15e5c(0, a_6)) {
        return ;
    }
    GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 84);
    GRAPHICS::_F5A2C681787E579D(-0.05, -0.05, 0.0, 0.0);
    v_41 = 0.0;
    if (g_4369) {
        if (sub_19596(29, 1, 1, &v_2D, &v_2E, a_7)) {
            v_41 = v_2E;
            v_41 += 0.0;
        } else { 
            g_4369 = 0;
        }
    }
    if (GAMEPLAY::GET_HASH_KEY(&g_4369._f1) == GAMEPLAY::GET_HASH_KEY("HIDE")) {
        v_42 = g_4367;
    } else { 
        v_42 = ((g_4367 + v_41) + 0.034722) + 0.0;
    }
    if (a_5 == -1.0) {
        a_5 = g_4368;
    }
    v_45 = 1.0;
    if (a_7) {
        GRAPHICS::_GET_SCREEN_ACTIVE_RESOLUTION(&v_43, &v_44);
        v_46 = GRAPHICS::_GET_SCREEN_ASPECT_RATIO(0);
        if (sub_19564()) {
            v_43 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_44) * v_46);
        }
        v_47 = __678_$BBDA792448DB5A89(v_43) / __678_$BBDA792448DB5A89(v_44);
        v_45 = v_47 / v_46;
        if (sub_19564()) {
            v_45 = 1.0;
        }
        v_43 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_43) / v_45);
        v_44 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_44) / v_45);
    } else { 
        GRAPHICS::GET_SCREEN_RESOLUTION(&v_43, &v_44);
    }
    for (v_F = 0; v_F < 2; v_F += 1) {
        if ((v_F == 1) && g_4369._f15DE) {
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f1) == GAMEPLAY::GET_HASH_KEY("HIDE")) {
                v_3B = g_4367;
            } else { 
                if (g_4369) {
                    GRAPHICS::DRAW_SPRITE(sub_19527(29), sub_19124(29, 1), g_4366 + (a_5 * 0.5), g_4367 + ((v_41 - 0.0) * 0.5), a_5, v_41 - 0.0, 0.0, 255, 255, 255, 255, 0);
                }
                if (g_4369._f1E93) {
                    v_B = g_4369._f1E8F;
                    v_C = g_4369._f1E90;
                    v_D = g_4369._f1E91;
                    v_E = g_4369._f1E92;
                } else { 
                    v_B = 0;
                    v_C = 0;
                    v_D = 0;
                    v_E = 255;
                }
                sub_15e1f(g_4366, g_4367 + v_41, a_5, 0.034722, v_B, v_C, v_D, v_E);
                v_3B = ((g_4367 + v_41) + 0.034722) + 0.0;
                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f1) != 0) {
                    sub_1909a();
                    UI::_SET_TEXT_ENTRY(&g_4369._f1);
                    v_19 = 0;
                    v_1A = 0;
                    v_1B = 0;
                    v_1C = 0;
                    for (v_18 = 0; v_18 < g_4369._f44; v_18 += 1) {
                        if (g_4369._f5[v_18/*1*/] == 2) {
                            UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._fA[v_19/*1*/]);
                            v_19 += 1;
                        } else if (g_4369._f5[v_18/*1*/] == 3) {
                            UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._fE[v_1A/*1*/], g_4369._f12[v_1A/*1*/]);
                            v_1A += 1;
                        } else if (g_4369._f5[v_18/*1*/] == 1) {
                            UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f16[v_1B/*4*/]);
                            v_1B += 1;
                        } else if (g_4369._f5[v_18/*1*/] == 8) {
                            UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f16[v_1B/*4*/]);
                            v_1B += 1;
                        } else if (g_4369._f5[v_18/*1*/] == 5) {
                            UI::_ADD_TEXT_COMPONENT_STRING(&g_4369._f23[v_1C/*16*/]);
                            v_1C += 1;
                        } else if (g_4369._f5[v_18/*1*/] == 6) {
                            UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f23[v_1C/*16*/]);
                            v_1C += 1;
                        } else if (g_4369._f5[v_18/*1*/] == 7) {
                            UI::_ADD_TEXT_COMPONENT_STRING(&g_4369._f23[v_1C/*16*/]);
                            v_1C += 1;
                        }
                    }
                    UI::_DRAW_TEXT(g_4366 + 0.00390625, (g_4367 + v_41) + 0.0041666398756206036, 0);
                }
                if (g_4369._f15E1 > g_4369._f13E7) {
                    if (g_4369._f15E4 != 0) {
                        sub_1909a();
                        sub_19035(((g_4366 + a_5) - 0.00390625) - sub_19058("CM_ITEM_COUNT", g_4369._f15E4, g_4369._f15E3), (g_4367 + v_41) + 0.0041666398756206036, "CM_ITEM_COUNT", g_4369._f15E4, g_4369._f15E3);
                    }
                }
            }
            v_10 = g_4369._f15E5;
            v_13 = 0;
            v_48 = v_3B;
            if (g_4369._f1E9D) {
                v_B = g_4369._f1E99;
                v_C = g_4369._f1E9A;
                v_D = g_4369._f1E9B;
                v_E = g_4369._f1E9C;
            } else { 
                UI::GET_HUD_COLOUR(140, &v_B, &v_C, &v_D, &v_E);
            }
            while ((v_13 < g_4369._f13E7) && (v_10 <= g_4369._f13E0)) {
                if (v_10 >= 0) {
                    if (g_4369._f14EB[v_10/*1*/]) {
                        if (g_4369._f146A[v_10/*1*/] && (v_10 != g_4369._f15E5)) {
                            v_3B += 0.0027777599170804024;
                        }
                        v_40 = 0.034722;
                        if (g_4369._f15EC[v_10/*1*/] != 0.0) {
                            v_40 = g_4369._f15EC[v_10/*1*/];
                        }
                        v_3B += v_40;
                        v_13 += 1;
                    }
                }
                v_10 += 1;
            }
            if (a_3) {
                if (v_13 <= 1) {
                    v_40 = 0.034722;
                    v_3B += v_40;
                    v_13 += 1;
                    if (g_4369._f13E0 <= 1) {
                        g_4369._f13E0 += 1;
                    }
                    v_3E = 1;
                }
            }
            GRAPHICS::DRAW_SPRITE("CommonMenu", "Gradient_Bgd", g_4366 + (a_5 * 0.5), (v_48 + ((v_3B - v_48) * 0.5)) - 0.0013888799585402012, a_5, v_3B - v_48, 0.0, 255, 255, 255, 255, 0);
            if (g_4369._f15E1 > g_4369._f13E7) {
                if (g_4369._f1EA2) {
                    v_B = g_4369._f1E9E;
                    v_C = g_4369._f1E9F;
                    v_D = g_4369._f1EA0;
                    v_E = g_4369._f1EA1;
                } else { 
                    v_B = 0;
                    v_C = 0;
                    v_D = 0;
                    v_E = 204;
                }
                sub_15e1f(g_4366, v_3B + 0.0, a_5, 0.034722, v_B, v_C, v_D, v_E);
                v_2F/*{3}*/ = GRAPHICS::GET_TEXTURE_RESOLUTION("CommonMenu", "shop_arrows_upANDdown");
                v_2F *= 0.5 / v_45;
                v_2F._f1 *= 0.5 / v_45;
                if (g_4369._f1EAF) {
                    v_B = 0;
                    v_C = 0;
                    v_D = 0;
                    v_E = 255;
                } else { 
                    UI::GET_HUD_COLOUR(1, &v_B, &v_C, &v_D, &v_E);
                }
                GRAPHICS::DRAW_SPRITE("CommonMenu", "shop_arrows_upANDdown", g_4366 + (a_5 * 0.5), (v_3B + 0.0) + (0.034722 * 0.5), (v_2F / 1280.0) * v_45, (v_2F._f1 / 720.0) * v_45, 0.0, v_B, v_C, v_D, v_E, 0);
                v_3B += 0.0 + 0.034722;
            }
            if ((GAMEPLAY::GET_HASH_KEY(&g_4369._f11D2) != 0) && (g_4369._f121C != -1)) {
                v_3B += 0.0027777599170804024 * 2.0;
                v_33 = g_4366 + 0.0046875;
                if (g_4369._f121E != 0) {
                    sub_19596(g_4369._f121E, 1, 1, &v_2D, &v_2E, a_7);
                    v_33 = ((g_4366 + v_2D) + (0.00078125 * 4.0)) - (0.00078125 * 1.0);
                }
                sub_18fd6(v_33);
                UI::_SET_TEXT_GXT_ENTRY(&g_4369._f11D2);
                v_19 = 0;
                v_1A = 0;
                v_1B = 0;
                for (v_18 = 0; v_18 < g_4369._f1218; v_18 += 1) {
                    if (g_4369._f11D6[v_18/*1*/] == 2) {
                        UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._f11DB[v_19/*1*/]);
                        v_19 += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 3) {
                        UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._f11DF[v_1A/*1*/], g_4369._f11E3[v_1A/*1*/]);
                        v_1A += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 1) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 5) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 6) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 7) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    }
                }
                v_10 = UI::_9040DFB09BE75706(v_33, v_3B + 0.0027777599170804024);
                UI::GET_HUD_COLOUR(2, &v_B, &v_C, &v_D, &v_E);
                sub_15e1f(g_4366, v_3B - 0.0027777599170804024, a_5, 0.0027777599170804024, v_B, v_C, v_D, v_E);
                if (g_4369._f1EA7) {
                    v_B = g_4369._f1EA3;
                    v_C = g_4369._f1EA4;
                    v_D = g_4369._f1EA5;
                    v_E = g_4369._f1EA6;
                } else { 
                    UI::GET_HUD_COLOUR(140, &v_B, &v_C, &v_D, &v_E);
                }
                GRAPHICS::DRAW_SPRITE("CommonMenu", "Gradient_Bgd", g_4366 + (a_5 * 0.5), (v_3B + ((((UI::_DB88A37483346780(0.35, 0) * ((float)v_10)) + (0.0013888799585402012 * 13.0)) + ((0.0013888799585402012 * 5.0) * ((float)(v_10 - 1)))) * 0.5)) - 0.0013888799585402012, a_5, ((UI::_DB88A37483346780(0.35, 0) * ((float)v_10)) + (0.0013888799585402012 * 13.0)) + ((0.0013888799585402012 * 5.0) * ((float)(v_10 - 1))), 0.0, v_B, v_C, v_D, v_E, 0);
                sub_18fd6(v_33);
                UI::_SET_TEXT_ENTRY(&g_4369._f11D2);
                v_19 = 0;
                v_1A = 0;
                v_1B = 0;
                for (v_18 = 0; v_18 < g_4369._f1218; v_18 += 1) {
                    if (g_4369._f11D6[v_18/*1*/] == 2) {
                        UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._f11DB[v_19/*1*/]);
                        v_19 += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 3) {
                        UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._f11DF[v_1A/*1*/], g_4369._f11E3[v_1A/*1*/]);
                        v_1A += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 1) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 5) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 6) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 7) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    } else if (g_4369._f11D6[v_18/*1*/] == 8) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f11E7[v_1B/*16*/]);
                        v_1B += 1;
                    }
                }
                UI::_DRAW_TEXT(v_33, v_3B + 0.0027777599170804024, 0);
                if (g_4369._f121E != 0) {
                    sub_19596(g_4369._f121E, 1, 1, &v_2D, &v_2E, a_7);
                    sub_18f1c(g_4369._f121E, 1, &v_38, &v_39, &v_3A);
                    GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f121E), sub_19124(g_4369._f121E, 1), (g_4366 + (v_2D * 0.5)) + (0.00078125 * 2.0), (v_3B + (v_2E * 0.5)) - (0.0013888799585402012 * 4.0), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                }
                v_3B += ((UI::_DB88A37483346780(0.35, 0) * ((float)v_10)) + (0.0013888799585402012 * 13.0)) + ((0.0013888799585402012 * 5.0) * ((float)(v_10 - 1)));
                if (g_4369._f121C > 0) {
                    if ((GAMEPLAY::GET_GAME_TIMER() - g_4369._f121D) > g_4369._f121C) {
                        g_4369._f11D2/*"16"*/ = "";
                        g_4369._f121C = -1;
                    }
                }
            }
            if ((GAMEPLAY::GET_HASH_KEY(&g_2708AA._f15) != 0) && (g_2708AA._f41 != -1)) {
                v_3B += 0.0027777599170804024 * 2.0;
                v_33 = g_4366 + 0.0046875;
                if (g_2708AA._f43 != 0) {
                    sub_19596(g_2708AA._f43, 1, 1, &v_2D, &v_2E, a_7);
                    v_33 = ((g_4366 + v_2D) + (0.00078125 * 4.0)) - (0.00078125 * 1.0);
                }
                sub_18fd6(v_33);
                UI::_SET_TEXT_GXT_ENTRY(&g_2708AA._f15);
                v_19 = 0;
                v_1A = 0;
                v_1B = 0;
                for (v_18 = 0; v_18 < g_2708AA._f3D; v_18 += 1) {
                    if (g_2708AA._f19[v_18/*1*/] == 2) {
                        UI::ADD_TEXT_COMPONENT_INTEGER(g_2708AA._f1E[v_19/*1*/]);
                        v_19 += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 3) {
                        UI::ADD_TEXT_COMPONENT_FLOAT(g_2708AA._f22[v_1A/*1*/], g_2708AA._f26[v_1A/*1*/]);
                        v_1A += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 1) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 5) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 6) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 7) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 8) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    }
                }
                v_10 = UI::_9040DFB09BE75706(v_33, v_3B + 0.0027777599170804024);
                UI::GET_HUD_COLOUR(2, &v_B, &v_C, &v_D, &v_E);
                sub_15e1f(g_4366, v_3B - 0.0027777599170804024, a_5, 0.0027777599170804024, v_B, v_C, v_D, v_E);
                if (g_4369._f1EA7) {
                    v_B = g_4369._f1EA3;
                    v_C = g_4369._f1EA4;
                    v_D = g_4369._f1EA5;
                    v_E = g_4369._f1EA6;
                } else { 
                    UI::GET_HUD_COLOUR(140, &v_B, &v_C, &v_D, &v_E);
                }
                GRAPHICS::DRAW_SPRITE("CommonMenu", "Gradient_Bgd", g_4366 + (a_5 * 0.5), (v_3B + ((((UI::_DB88A37483346780(0.35, 0) * ((float)v_10)) + (0.0013888799585402012 * 13.0)) + ((0.0013888799585402012 * 5.0) * ((float)(v_10 - 1)))) * 0.5)) - 0.0013888799585402012, a_5, ((UI::_DB88A37483346780(0.35, 0) * ((float)v_10)) + (0.0013888799585402012 * 13.0)) + ((0.0013888799585402012 * 5.0) * ((float)(v_10 - 1))), 0.0, v_B, v_C, v_D, v_E, 0);
                sub_18fd6(v_33);
                UI::_SET_TEXT_ENTRY(&g_2708AA._f15);
                v_19 = 0;
                v_1A = 0;
                v_1B = 0;
                for (v_18 = 0; v_18 < g_2708AA._f3D; v_18 += 1) {
                    if (g_2708AA._f19[v_18/*1*/] == 2) {
                        UI::ADD_TEXT_COMPONENT_INTEGER(g_2708AA._f1E[v_19/*1*/]);
                        v_19 += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 3) {
                        UI::ADD_TEXT_COMPONENT_FLOAT(g_2708AA._f22[v_1A/*1*/], g_2708AA._f26[v_1A/*1*/]);
                        v_1A += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 1) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 8) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 5) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 6) {
                        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    } else if (g_2708AA._f19[v_18/*1*/] == 7) {
                        UI::_ADD_TEXT_COMPONENT_STRING(&g_2708AA._f2A[v_1B/*6*/]);
                        v_1B += 1;
                    }
                }
                UI::_DRAW_TEXT(v_33, v_3B + 0.0027777599170804024, 0);
                if (g_2708AA._f43 != 0) {
                    sub_19596(g_2708AA._f43, 1, 1, &v_2D, &v_2E, a_7);
                    sub_18f1c(g_2708AA._f43, 1, &v_38, &v_39, &v_3A);
                    GRAPHICS::DRAW_SPRITE(sub_19527(g_2708AA._f43), sub_19124(g_2708AA._f43, 1), (g_4366 + (v_2D * 0.5)) + (0.00078125 * 2.0), (v_3B + (v_2E * 0.5)) - (0.0013888799585402012 * 4.0), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                }
                v_3B += ((UI::_DB88A37483346780(0.35, 0) * ((float)v_10)) + (0.0013888799585402012 * 13.0)) + ((0.0013888799585402012 * 5.0) * ((float)(v_10 - 1)));
                if (g_2708AA._f41 > 0) {
                    if ((GAMEPLAY::GET_GAME_TIMER() - g_2708AA._f42) > g_2708AA._f41) {
                        g_2708AA._f15/*"16"*/ = "";
                        g_2708AA._f41 = -1;
                    }
                }
            }
            sub_1899a(v_43, a_1, 0, 0, 0, 0, a_4, 1, 0);
            GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 84);
            GRAPHICS::_F5A2C681787E579D(-0.05, -0.05, 0.0, 0.0);
        }
        if ((v_F == 1) || (!g_4369._f15DE)) {
            v_1D = 0;
            v_21 = 0;
            v_1E = 0;
            v_1F = 0;
            v_20 = 0;
            v_13 = 0;
            v_14 = 0;
            v_15 = 0;
            v_16 = 0;
            v_17 = 0;
            v_49 = g_4369._f13E0;
            if (g_4369._f15DF) {
                v_49 = g_4369._f15E2 - 1;
            }
            v_4A = 0.0;
            v_4B = 0.0;
            for (v_11 = 0; v_11 <= v_49; v_11 += 1) {
                v_40 = 0.034722;
                if (g_4369._f15EC[v_10/*1*/] != 0.0) {
                    v_40 = g_4369._f15EC[v_10/*1*/];
                }
                if (g_4369._f15DF) {
                    v_10 = g_4369._f1D3B[v_11/*1*/];
                } else { 
                    v_10 = v_11;
                }
                v_16 = v_17;
                v_2A = 0;
                if ((v_10 >= g_4369._f15E5) && (v_13 < g_4369._f13E7)) {
                    v_2A = 1;
                    if (g_4369._f15E6 == v_10) {
                        v_4B = v_4A;
                    }
                    if (g_4369._f146A[v_10/*1*/]) {
                        v_16 += 1;
                    }
                    v_2C = ((v_42 + v_4A) + (0.0027777599170804024 * ((float)v_16))) + 0.0027777599170804024;
                }
                g_4369._f1672[v_10/*1*/] = v_2C;
                v_2B = g_4366 + 0.0046875;
                v_32 = 0;
                v_29 = g_4369._f15E6 == v_10;
                if ((v_29 && (v_F == 1)) && v_2A) {
                    v_4C = 255;
                    v_4D = 255;
                    v_4E = 255;
                    v_4F = 255;
                    if (g_4369._f1EA9) {
                        UI::GET_HUD_COLOUR(g_4369._f1EA8, &v_4C, &v_4D, &v_4E, &v_4F);
                    } else { 
                        UI::GET_HUD_COLOUR(1, &v_4C, &v_4D, &v_4E, &v_4F);
                    }
                    GRAPHICS::DRAW_SPRITE("CommonMenu", "Gradient_Nav", g_4366 + (a_5 * 0.5), ((v_42 + v_4B) + (0.0027777599170804024 * ((float)v_16))) + (v_40 * 0.5), a_5, v_40, 0.0, v_4C, v_4D, v_4E, v_4F, 0);
                    g_4369._f1670 = v_2C;
                }
                if (v_3E && (v_11 == v_49)) {
                    sub_159fe(v_29, 1, 0, 0, 0, 0);
                    UI::_SET_TEXT_ENTRY("DFLT_MNU_OPT");
                    UI::_DRAW_TEXT(v_2B, v_2C, 0);
                    v_32 = 1;
                } else { 
                    for (v_12 = 0; v_12 < g_4369._f13E8; v_12 += 1) {
                        if (GAMEPLAY::IS_BIT_SET(g_4369._f135F[v_10/*1*/], v_12) || (g_4369._f133E[v_12/*1*/] == 5)) {
                            if (g_4369._f15DF) {
                                v_1D = g_4369._f1D46[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                v_1E = g_4369._f1D6F[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                v_1F = g_4369._f1D98[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                v_20 = g_4369._f1DC1[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                v_21 = g_4369._f1DEA[(v_13 * g_4369._f13E8) + v_12/*1*/];
                            } else { 
                                g_4369._f1D46[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_1D;
                                g_4369._f1D6F[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_1E;
                                g_4369._f1D98[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_1F;
                                g_4369._f1DC1[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_20;
                                g_4369._f1DEA[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_21;
                            }
                            v_50 = 0;
                            v_3F = 0;
                            if (g_4369._f16F6[0/*1*/] != -1) {
                                if (((v_10 * 5) + v_12) == g_4369._f16F3[0/*1*/]) {
                                    v_3F = 1;
                                    v_50 = 0;
                                }
                            }
                            if (g_4369._f16F6[1/*1*/] != -1) {
                                if (((v_10 * 5) + v_12) == g_4369._f16F3[1/*1*/]) {
                                    v_3F = 1;
                                    v_50 = 1;
                                }
                            }
                            if (g_4369._f1344[v_12/*1*/] != -1.0) {
                                v_2B = (g_4366 + 0.0046875) + g_4369._f1344[v_12/*1*/];
                            }
                            if (((v_12 < 4) && (g_4369._f1344[v_12 + 1/*1*/] != -1.0)) && (v_2B < g_4369._f1344[v_12 + 1/*1*/])) {
                                v_37 = g_4369._f1344[v_12 + 1/*1*/] - v_2B;
                            } else { 
                                v_37 = ((g_4366 + g_4368) - 0.0046875) - v_2B;
                            }
                            if ((g_4369._f1351[v_12/*1*/] && g_4369._f166D) && v_29) {
                                v_3D = 1;
                            } else { 
                                v_3D = 0;
                            }
                            switch (g_4369._f133E[v_12/*1*/]) {
                            case 0:
                                break;
                            case 1:
                                v_22 = v_1D;
                                if ((v_F == 1) && v_2A) {
                                    if (!g_4369._f15DF) {
                                        v_34 = 0.0;
                                        v_35 = 0.0;
                                        v_23 = 0;
                                        v_24 = 0;
                                        v_25 = 0;
                                        v_26 = 0;
                                        v_27 = 0;
                                        if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                            v_3C = 0;
                                            for (v_18 = 0; v_18 < 4; v_18 += 1) {
                                                if ((g_4369._f84C[v_22/*5*/][v_18/*1*/] == 5) || (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 8)) {
                                                    v_3C = 1;
                                                }
                                            }
                                            sub_159fe(v_29, g_4369._f64A[v_22/*1*/], g_4369._f74B[v_22/*1*/], v_3F, v_50, v_3C);
                                            UI::_SET_TEXT_ENTRY_FOR_WIDTH(&g_4369._f49[v_22/*6*/]);
                                        }
                                        for (v_18 = 0; v_18 < 4; v_18 += 1) {
                                            if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 1) {
                                                v_23 += 1;
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f49[v_22 + v_23/*6*/]);
                                                }
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 8) {
                                                v_23 += 1;
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f49[v_22 + v_23/*6*/]);
                                                }
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 5) {
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::_ADD_TEXT_COMPONENT_STRING(&g_254115[v_21 + v_27/*16*/]);
                                                }
                                                v_27 += 1;
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 6) {
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_254115[v_21 + v_27/*16*/]);
                                                }
                                                v_27 += 1;
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 7) {
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::_ADD_TEXT_COMPONENT_STRING(&g_254115[v_21 + v_27/*16*/]);
                                                }
                                                v_27 += 1;
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 2) {
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._fF4E[v_1E + v_24/*1*/]);
                                                }
                                                v_24 += 1;
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 3) {
                                                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                    UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._f104F[v_1F + v_25/*1*/], g_4369._f10D0[v_1F + v_25/*1*/]);
                                                }
                                                v_25 += 1;
                                            } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 4) {
                                                v_26 += 1;
                                            }
                                        }
                                        if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                            v_34 = UI::_GET_TEXT_SCREEN_WIDTH(1);
                                        }
                                        if (v_26 > 0) {
                                            for (v_18 = 0; v_18 < v_26; v_18 += 1) {
                                                if (sub_19596(g_4369._f1151[v_20 + v_18/*1*/], v_29, 0, &v_2D, &v_2E, a_7)) {
                                                    v_35 += v_2D;
                                                    if (v_18 > 0) {
                                                        v_35 -= 0.00078125 * 4.0;
                                                    }
                                                    if ((g_4369._f1151[v_20 + v_18/*1*/] == 2) || (g_4369._f1151[v_20 + v_18/*1*/] == 48)) {
                                                        v_35 -= 0.00078125 * 5.0;
                                                    }
                                                }
                                            }
                                        }
                                        v_33 = 0.0;
                                        if (g_4369._f1359[v_12/*1*/] == 2) {
                                            v_33 += (v_37 - (v_34 + v_35)) + (0.00078125 * 1.0);
                                        } else if (g_4369._f1359[v_12/*1*/] == 0) {
                                            v_33 += ((v_37 - v_2B) * 0.5) - ((v_34 + v_35) * 0.5);
                                        }
                                        g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_33;
                                        g_4369._f1E3C[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_34;
                                        g_4369._f1E65[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_35;
                                    } else { 
                                        v_33 = g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                        v_34 = g_4369._f1E3C[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                        v_35 = g_4369._f1E65[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                    }
                                    if (v_3D) {
                                        if (sub_19596(26, 1, 0, &v_2D, &v_2E, a_7)) {
                                            if (g_4369._f1359[v_12/*1*/] == 2) {
                                                v_33 -= v_2D * 2.0;
                                            }
                                            v_36 = v_2D * 0.5;
                                            if (sub_19596(26, 1, 1, &v_2D, &v_2E, a_7)) {
                                                sub_18f1c(26, 1, &v_38, &v_39, &v_3A);
                                                GRAPHICS::DRAW_SPRITE(sub_19527(26), sub_19124(26, 1), (v_2B + v_33) + v_36, (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                            }
                                        }
                                        if (sub_19596(27, 1, 0, &v_2D, &v_2E, a_7)) {
                                            v_33 += v_2D;
                                            v_36 = v_2D * 0.5;
                                            if (sub_19596(27, 1, 1, &v_2D, &v_2E, a_7)) {
                                                sub_18f1c(27, 1, &v_38, &v_39, &v_3A);
                                                GRAPHICS::DRAW_SPRITE(sub_19527(27), sub_19124(27, 1), ((v_2B + v_33) + v_36) + (v_34 + v_35), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                            }
                                        }
                                    }
                                    v_23 = 0;
                                    v_24 = 0;
                                    v_25 = 0;
                                    v_26 = 0;
                                    v_27 = 0;
                                    v_28 = 0;
                                    if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                        v_3C = 0;
                                        for (v_18 = 0; v_18 < 4; v_18 += 1) {
                                            if ((g_4369._f84C[v_22/*5*/][v_18/*1*/] == 5) || (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 8)) {
                                                v_3C = 1;
                                            }
                                        }
                                        sub_159fe(v_29, g_4369._f64A[v_22/*1*/], g_4369._f74B[v_22/*1*/], v_3F, 0, v_3C);
                                        if (g_4369._f1EAD && (g_4369._f1EAE == v_10)) {
                                            sub_18954(v_29);
                                        }
                                        UI::_SET_TEXT_ENTRY(&g_4369._f49[v_22/*6*/]);
                                    }
                                    for (v_18 = 0; v_18 < 4; v_18 += 1) {
                                        if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 1) {
                                            v_23 += 1;
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f49[v_22 + v_23/*6*/]);
                                            }
                                            v_28 = 1;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 8) {
                                            v_23 += 1;
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f49[v_22 + v_23/*6*/]);
                                            }
                                            v_28 = 8;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 5) {
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::_ADD_TEXT_COMPONENT_STRING(&g_254115[v_21 + v_27/*16*/]);
                                            }
                                            v_27 += 1;
                                            v_28 = 5;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 6) {
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_254115[v_21 + v_27/*16*/]);
                                            }
                                            v_27 += 1;
                                            v_28 = 6;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 7) {
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::_ADD_TEXT_COMPONENT_STRING(&g_254115[v_21 + v_27/*16*/]);
                                            }
                                            v_27 += 1;
                                            v_28 = 6;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 2) {
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._fF4E[v_1E + v_24/*1*/]);
                                            }
                                            v_24 += 1;
                                            v_28 = 2;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 3) {
                                            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                                UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._f104F[v_1F + v_25/*1*/], g_4369._f10D0[v_1F + v_25/*1*/]);
                                            }
                                            v_25 += 1;
                                            v_28 = 3;
                                        } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 4) {
                                            if ((g_4369._f1151[v_20 + v_26/*1*/] == 2) || (g_4369._f1151[v_20 + v_26/*1*/] == 48)) {
                                                if (sub_19596(g_4369._f1151[v_20 + v_26/*1*/], v_29, 0, &v_2D, &v_2E, a_7)) {
                                                    v_33 += v_2D * 0.5;
                                                    if (sub_19596(g_4369._f1151[v_20 + v_26/*1*/], v_29, 1, &v_2D, &v_2E, a_7)) {
                                                        sub_18f1c(g_4369._f1151[v_20 + v_26/*1*/], v_29, &v_38, &v_39, &v_3A);
                                                        if (g_4369._f1359[v_12/*1*/] == 2) {
                                                            GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f1151[v_20 + v_26/*1*/]), sub_19124(g_4369._f1151[v_20 + v_26/*1*/], v_29), ((v_2B + v_33) - (0.00078125 * 8.0)) + (0.00078125 * 4.0), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                        } else { 
                                                            GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f1151[v_20 + v_26/*1*/]), sub_19124(g_4369._f1151[v_20 + v_26/*1*/], v_29), (v_2B + v_33) - (0.00078125 * 8.0), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                        }
                                                        v_33 += 0.00078125 * 3.0;
                                                    }
                                                }
                                            }
                                            v_26 += 1;
                                            v_28 = 4;
                                        }
                                    }
                                    if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[v_22/*6*/]) != 0) {
                                        if ((v_28 == 4) && (g_4369._f1359[v_12/*1*/] == 2)) {
                                            UI::_DRAW_TEXT((v_2B + v_33) + (0.00078125 * 7.0), v_2C, 0);
                                        } else { 
                                            UI::_DRAW_TEXT(v_2B + v_33, v_2C, 0);
                                        }
                                    }
                                    if (v_26 > 0) {
                                        v_33 += 6.0 * 0.00078125;
                                        for (v_18 = 0; v_18 < v_26; v_18 += 1) {
                                            if ((g_4369._f1151[v_20 + v_18/*1*/] != 2) && (g_4369._f1151[v_20 + v_18/*1*/] != 48)) {
                                                if (sub_19596(g_4369._f1151[v_20 + v_18/*1*/], v_29, 0, &v_2D, &v_2E, a_7)) {
                                                    v_33 += v_2D * 0.5;
                                                    if (sub_19596(g_4369._f1151[v_20 + v_18/*1*/], v_29, 1, &v_2D, &v_2E, a_7)) {
                                                        sub_18f1c(g_4369._f1151[v_20 + v_18/*1*/], v_29, &v_38, &v_39, &v_3A);
                                                        if (g_4369._f1151[v_20 + v_18/*1*/] == 30) {
                                                            GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f1151[v_20 + v_18/*1*/]), sub_19124(g_4369._f1151[v_20 + v_18/*1*/], v_29), g_4366 + (v_2D * 0.5), ((v_2C + 0.0027777599170804024) + (v_2E * 0.5)) - (0.00078125 * 11.0), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                        } else if (g_4369._f1359[v_12/*1*/] == 2) {
                                                            GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f1151[v_20 + v_18/*1*/]), sub_19124(g_4369._f1151[v_20 + v_18/*1*/], v_29), (((v_2B + v_33) + v_34) - (0.00078125 * 8.0)) + (0.00078125 * 4.0), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                        } else { 
                                                            GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f1151[v_20 + v_18/*1*/]), sub_19124(g_4369._f1151[v_20 + v_18/*1*/], v_29), ((v_2B + v_33) + v_34) - (0.00078125 * 12.0), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                        }
                                                    }
                                                    v_33 += 12.0 * 0.00078125;
                                                }
                                            }
                                        }
                                    }
                                }
                                v_32 = 1;
                                v_1D += 1;
                                for (v_18 = 0; v_18 < 4; v_18 += 1) {
                                    if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 1) {
                                        v_1D += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 8) {
                                        v_1D += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 2) {
                                        v_1E += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 3) {
                                        v_1F += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 4) {
                                        v_20 += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 5) {
                                        v_21 += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 6) {
                                        v_21 += 1;
                                    } else if (g_4369._f84C[v_22/*5*/][v_18/*1*/] == 7) {
                                        v_21 += 1;
                                    }
                                }
                                break;
                            case 2:
                                if ((v_F == 1) && v_2A) {
                                    if (!g_4369._f15DF) {
                                        sub_159fe(v_29, g_4369._f64A[v_22/*1*/], g_4369._f74B[v_22/*1*/], v_3F, 0, 0);
                                        if (g_4369._f1EAD && (g_4369._f1EAE == v_10)) {
                                            sub_18954(v_29);
                                        }
                                        UI::_SET_TEXT_ENTRY_FOR_WIDTH("NUMBER");
                                        UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._fF4E[v_1E/*1*/]);
                                        v_34 = UI::_GET_TEXT_SCREEN_WIDTH(1);
                                        v_33 = 0.0;
                                        if (g_4369._f1359[v_12/*1*/] == 2) {
                                            v_33 += (v_37 - v_34) + (0.00078125 * 1.0);
                                        } else if (g_4369._f1359[v_12/*1*/] == 0) {
                                            v_33 += ((v_37 - v_2B) * 0.5) - (v_34 * 0.5);
                                        }
                                        g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_33;
                                        g_4369._f1E3C[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_34;
                                    } else { 
                                        v_33 = g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                        v_34 = g_4369._f1E3C[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                    }
                                    if (v_3D) {
                                        if (sub_19596(26, 1, 0, &v_2D, &v_2E, a_7)) {
                                            if (g_4369._f1359[v_12/*1*/] == 2) {
                                                v_33 -= v_2D * 2.0;
                                            }
                                            v_36 = v_2D * 0.5;
                                            if (sub_19596(26, 1, 1, &v_2D, &v_2E, a_7)) {
                                                sub_18f1c(26, 1, &v_38, &v_39, &v_3A);
                                                GRAPHICS::DRAW_SPRITE(sub_19527(26), sub_19124(26, 1), (v_2B + v_33) + v_36, (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                            }
                                        }
                                        if (sub_19596(27, 1, 0, &v_2D, &v_2E, a_7)) {
                                            v_33 += v_2D;
                                            v_36 = v_2D * 0.5;
                                            if (sub_19596(27, 1, 1, &v_2D, &v_2E, a_7)) {
                                                sub_18f1c(27, 1, &v_38, &v_39, &v_3A);
                                                GRAPHICS::DRAW_SPRITE(sub_19527(27), sub_19124(27, 1), ((v_2B + v_33) + v_36) + (v_34 + v_35), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                            }
                                        }
                                    }
                                    sub_159fe(v_29, g_4369._f64A[v_22/*1*/], g_4369._f74B[v_22/*1*/], v_3F, 0, 0);
                                    sub_18936(v_2B + v_33, v_2C, "NUMBER", g_4369._fF4E[v_1E/*1*/], 0);
                                }
                                v_32 = 1;
                                v_1E += 1;
                                break;
                            case 3:
                                if ((v_F == 1) && v_2A) {
                                    if (!g_4369._f15DF) {
                                        sub_159fe(v_29, g_4369._f64A[v_22/*1*/], g_4369._f74B[v_22/*1*/], v_3F, 0, 0);
                                        if (g_4369._f1EAD && (g_4369._f1EAE == v_10)) {
                                            sub_18954(v_29);
                                        }
                                        UI::_SET_TEXT_ENTRY_FOR_WIDTH("NUMBER");
                                        UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._f104F[v_1F/*1*/], g_4369._f10D0[v_1F/*1*/]);
                                        v_34 = UI::_GET_TEXT_SCREEN_WIDTH(1);
                                        v_33 = 0.0;
                                        if (g_4369._f1359[v_12/*1*/] == 2) {
                                            v_33 += (v_37 - v_34) + (0.00078125 * 1.0);
                                        } else if (g_4369._f1359[v_12/*1*/] == 0) {
                                            v_33 += ((v_37 - v_2B) * 0.5) - (v_34 * 0.5);
                                        }
                                        g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_33;
                                        g_4369._f1E3C[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_34;
                                    } else { 
                                        v_33 = g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                        v_34 = g_4369._f1E3C[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                    }
                                    if (v_3D) {
                                        if (sub_19596(26, 1, 0, &v_2D, &v_2E, 0)) {
                                            if (g_4369._f1359[v_12/*1*/] == 2) {
                                                v_33 -= v_2D * 2.0;
                                            }
                                            v_36 = v_2D * 0.5;
                                            if (sub_19596(26, 1, 1, &v_2D, &v_2E, a_7)) {
                                                sub_18f1c(26, 1, &v_38, &v_39, &v_3A);
                                                GRAPHICS::DRAW_SPRITE(sub_19527(26), sub_19124(26, 1), (v_2B + v_33) + v_36, (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                            }
                                        }
                                        if (sub_19596(27, 1, 0, &v_2D, &v_2E, a_7)) {
                                            v_33 += v_2D;
                                            v_36 = v_2D * 0.5;
                                            if (sub_19596(27, 1, 1, &v_2D, &v_2E, a_7)) {
                                                sub_18f1c(27, 1, &v_38, &v_39, &v_3A);
                                                GRAPHICS::DRAW_SPRITE(sub_19527(27), sub_19124(27, 1), ((v_2B + v_33) + v_36) + (v_34 + v_35), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                            }
                                        }
                                    }
                                    sub_159fe(v_29, g_4369._f64A[v_22/*1*/], g_4369._f74B[v_22/*1*/], v_3F, 0, 0);
                                    sub_18917(v_2B + v_33, v_2C, "NUMBER", g_4369._f104F[v_1F/*1*/], g_4369._f10D0[v_1F/*1*/]);
                                }
                                v_32 = 1;
                                v_1F += 1;
                                break;
                            case 4:
                                if ((v_F == 1) && v_2A) {
                                    if (sub_19596(g_4369._f1151[v_20/*1*/], v_29, 0, &v_2D, &v_2E, a_7)) {
                                        if (!g_4369._f15DF) {
                                            v_35 = v_2D;
                                            v_33 = 0.0;
                                            if (g_4369._f1359[v_12/*1*/] == 2) {
                                                v_33 += (v_37 - v_35) + (0.00078125 * 1.0);
                                            } else if (g_4369._f1359[v_12/*1*/] == 0) {
                                                v_33 += ((v_37 - v_2B) * 0.5) - (v_35 * 0.5);
                                            }
                                            g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_33;
                                            g_4369._f1E65[(v_13 * g_4369._f13E8) + v_12/*1*/] = v_35;
                                        } else { 
                                            v_33 = g_4369._f1E13[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                            v_35 = g_4369._f1E65[(v_13 * g_4369._f13E8) + v_12/*1*/];
                                        }
                                        if (v_3D) {
                                            if (sub_19596(26, 1, 0, &v_2D, &v_2E, a_7)) {
                                                if (g_4369._f1359[v_12/*1*/] == 2) {
                                                    v_33 -= v_2D * 2.0;
                                                }
                                                v_36 = v_2D * 0.5;
                                                if (sub_19596(26, 1, 1, &v_2D, &v_2E, a_7)) {
                                                    sub_18f1c(26, 1, &v_38, &v_39, &v_3A);
                                                    GRAPHICS::DRAW_SPRITE(sub_19527(26), sub_19124(26, 1), (v_2B + v_33) + v_36, (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                }
                                            }
                                            if (sub_19596(27, 1, 0, &v_2D, &v_2E, a_7)) {
                                                v_33 += v_2D;
                                                v_36 = v_2D * 0.5;
                                                if (sub_19596(27, 1, 1, &v_2D, &v_2E, a_7)) {
                                                    sub_18f1c(27, 1, &v_38, &v_39, &v_3A);
                                                    GRAPHICS::DRAW_SPRITE(sub_19527(27), sub_19124(27, 1), ((v_2B + v_33) + v_36) + (v_34 + v_35), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D, v_2E, 0.0, v_38, v_39, v_3A, 255, 0);
                                                }
                                            }
                                        }
                                        if (sub_19596(g_4369._f1151[v_20/*1*/], v_29, 1, &v_2D, &v_2E, a_7)) {
                                            sub_18f1c(g_4369._f1151[v_20/*1*/], v_29, &v_38, &v_39, &v_3A);
                                            GRAPHICS::DRAW_SPRITE(sub_19527(g_4369._f1151[v_20/*1*/]), sub_19124(g_4369._f1151[v_20/*1*/], v_29), (v_2B + v_33) + (v_2D * 0.5), (v_2C - 0.0027777599170804024) + (v_40 * 0.5), v_2D * sub_188ae(g_4369._f1151[v_20/*1*/]), v_2E * sub_188ae(g_4369._f1151[v_20/*1*/]), 0.0, v_38, v_39, v_3A, 255, 0);
                                        }
                                    }
                                }
                                v_32 = 1;
                                v_20 += 1;
                                break;
                            case 5:
                                v_32 = 1;
                                break;
                            }
                            if (g_4369._f133E[v_12/*1*/] == 5) {
                                if (g_4369._f134A[v_12/*1*/] > 0.05) {
                                    v_2B += g_4369._f134A[v_12/*1*/];
                                } else { 
                                    v_2B += 0.05;
                                }
                            } else { 
                                v_2B += g_4369._f134A[v_12/*1*/];
                                if (g_4369._f1351[v_12/*1*/]) {
                                    if (sub_19596(26, 1, 1, &v_2D, &v_2E, a_7)) {
                                        v_2B -= v_2D;
                                    }
                                }
                            }
                        } else { 
                            v_2B += g_4369._f134A[v_12/*1*/];
                        }
                    }
                }
                if (v_32) {
                    if (v_2A) {
                        g_4369._f1D3B[v_13/*1*/] = v_10;
                        g_4369._f15E7 = v_10;
                        v_13 += 1;
                        if (g_4369._f146A[v_10/*1*/]) {
                            v_17 += 1;
                        }
                        if (g_4369._f15EC[v_10/*1*/] != 0.0) {
                            v_4A += g_4369._f15EC[v_10/*1*/];
                        } else { 
                            v_4A += 0.034722;
                        }
                    }
                    if (!g_4369._f15DE) {
                        g_4369._f14EB[v_10/*1*/] = 1;
                        if (g_4369._f13E9[v_10/*1*/]) {
                            if (v_29) {
                                g_4369._f15E4 = 0;
                            }
                        } else { 
                            v_15 += 1;
                            if (v_29) {
                                g_4369._f15E4 = v_15;
                            }
                        }
                        v_14 += 1;
                    }
                }
            }
            if (!g_4369._f15DE) {
                g_4369._f15E0 = (v_42 + v_4A) + (0.0027777599170804024 * ((float)v_16));
                g_4369._f15E3 = v_15;
                g_4369._f15E1 = v_14;
                g_4369._f15DE = 1;
            }
        }
    }
    if (!g_4369._f15DF) {
        g_4369._f15E2 = v_13;
        g_4369._f15DF = 1;
    }
    g_4369._f166F = v_3B;
    g_4369._f1671 = GAMEPLAY::GET_GAME_TIMER();
    UI::_55598D21339CB998(g_4369._f166F);
    if (!g_4369._f1E8E) {
        sub_67b16();
    }
    g_4369._f1E8E = 0;
    if (a_2) {
        UI::HIDE_HUD_COMPONENT_THIS_FRAME(10);
    }
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(6);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(7);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(9);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(8);
    if (a_0) {
        sub_1889d(1);
    }
    GRAPHICS::_E3A3DB414A373DAB();
}

void sub_1889d(auto a_0) {
    g_147219._f3A4 = a_0;
}

auto sub_188ae(auto a_0) {
    switch (a_0) {
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
        return 0.85;
        break;
    }
    return 1.0;
}

void sub_18917(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    UI::_SET_TEXT_ENTRY(a_2);
    UI::ADD_TEXT_COMPONENT_FLOAT(a_3, a_4);
    UI::_DRAW_TEXT(a_0, a_1, 0);
}

void sub_18936(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    UI::_SET_TEXT_ENTRY(a_2);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_3);
    UI::_DRAW_TEXT(a_0, a_1, a_4);
}

void sub_18954(auto a_0) {
    if (a_0) {
        UI::GET_HUD_COLOUR(g_4369._f1EAA[0/*1*/], &v_3, &v_4, &v_5, &v_6);
    } else { 
        UI::GET_HUD_COLOUR(g_4369._f1EAA[1/*1*/], &v_3, &v_4, &v_5, &v_6);
    }
    UI::SET_TEXT_COLOUR(v_3, v_4, v_5, 255);
}

void sub_1899a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    if (!sub_a06b(&v_B, 0, a_1)) {
        return ;
    }
    a_0 = a_0;
    if (a_3 && (!sub_15e5c(a_4, a_8))) {
        return ;
    }
    if (sub_18e94()) {
        return ;
    }
    if (NETWORK::_NETWORK_IS_TEXT_CHAT_ACTIVE()) {
        return ;
    }
    if (a_7 == 0) {
        if (sub_76ed(PLAYER::PLAYER_ID(), 0)) {
            return ;
        }
    }
    if (GAMEPLAY::IS_PC_VERSION()) {
        if ((GAMEPLAY::UPDATE_ONSCREEN_KEYBOARD() == 0) || NETWORK::_NETWORK_IS_TEXT_CHAT_ACTIVE()) {
            return ;
        }
    }
    if (g_4369._f121F != 0) {
        if (CONTROLS::_6CD79468A1E595C6(2)) {
            for (v_C = 0; v_C < g_4369._f121F; v_C += 1) {
                if (g_4369._f1320[v_C/*1*/] != 344) {
                    g_4369._f1221[v_C/*16*/]/*"64"*/ = CONTROLS::_GET_CONTROL_ACTION_NAME(2, g_4369._f1320[v_C/*1*/], 1);
                } else if (g_4369._f132D[v_C/*1*/] != 31) {
                    g_4369._f1221[v_C/*16*/]/*"64"*/ = CONTROLS::_80C2FD58D720C801(2, g_4369._f132D[v_C/*1*/], 1);
                }
            }
            g_4369._f1220 = 0;
        }
        if (!g_4369._f1220) {
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "CLEAR_ALL");
            GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "SET_MAX_WIDTH");
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT(1.0 - (g_4369._f1357 / 100.0));
            GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            if (GAMEPLAY::IS_PC_VERSION()) {
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "TOGGLE_MOUSE_BUTTONS");
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(1);
                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            }
            for (v_C = 0; v_C < g_4369._f121F; v_C += 1) {
                if (GAMEPLAY::GET_HASH_KEY(&g_4369._f12E2[v_C/*4*/]) != GAMEPLAY::GET_HASH_KEY("PREV")) {
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "SET_DATA_SLOT");
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_C);
                    sub_18e86(&g_4369._f1221[v_C/*16*/]);
                    v_D = v_C + 1;
                    while ((v_D < 12) && (GAMEPLAY::GET_HASH_KEY(&g_4369._f12E2[v_D/*4*/]) == GAMEPLAY::GET_HASH_KEY("PREV"))) {
                        sub_18e86(&g_4369._f1221[v_D/*16*/]);
                        v_D += 1;
                    }
                    if (g_4369._f1313[v_C/*1*/] == -1) {
                        sub_18e74(&g_4369._f12E2[v_C/*4*/]);
                    } else { 
                        GRAPHICS::_BEGIN_TEXT_COMPONENT(&g_4369._f12E2[v_C/*4*/]);
                        if (a_5) {
                            UI::ADD_TEXT_COMPONENT_SUBSTRING_TIME(a_2, 70);
                        } else { 
                            UI::ADD_TEXT_COMPONENT_INTEGER(a_2);
                        }
                        GRAPHICS::_END_TEXT_COMPONENT();
                    }
                    if (GAMEPLAY::IS_PC_VERSION()) {
                        if ((g_4369._f1320[v_C/*1*/] != 344) && GAMEPLAY::IS_BIT_SET(g_4369._f133A, v_C)) {
                            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(1);
                            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_4369._f1320[v_C/*1*/]);
                        } else { 
                            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(0);
                            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(344);
                        }
                    }
                    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                }
            }
            if (GAMEPLAY::GET_HASH_KEY(&g_2708AA._f10) != GAMEPLAY::GET_HASH_KEY("")) {
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "SET_DATA_SLOT");
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(g_4369._f121F);
                sub_18e86(&g_2708AA);
                if (g_2708AA._f14 == -1) {
                    sub_18e74(&g_2708AA._f10);
                } else { 
                    GRAPHICS::_BEGIN_TEXT_COMPONENT(&g_2708AA._f10);
                    if (a_5) {
                        UI::ADD_TEXT_COMPONENT_SUBSTRING_TIME(a_2, 70);
                    } else { 
                        UI::ADD_TEXT_COMPONENT_INTEGER(a_2);
                    }
                    GRAPHICS::_END_TEXT_COMPONENT();
                }
                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            }
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "SET_BACKGROUND_COLOUR");
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(80);
            GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "DRAW_INSTRUCTIONAL_BUTTONS");
            if (g_4369._f1358) {
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(1);
            } else { 
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
            }
            GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            g_4369._f1220 = 1;
        }
        for (v_C = 0; v_C < g_4369._f121F; v_C += 1) {
            if (g_4369._f1313[v_C/*1*/] != -1) {
                if (a_2 > 0) {
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "OVERRIDE_RESPAWN_TEXT");
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_C);
                    GRAPHICS::_BEGIN_TEXT_COMPONENT(&g_4369._f12E2[v_C/*4*/]);
                    if (a_5) {
                        UI::ADD_TEXT_COMPONENT_SUBSTRING_TIME(a_2, 70);
                    } else { 
                        UI::ADD_TEXT_COMPONENT_INTEGER(a_2);
                    }
                    GRAPHICS::_END_TEXT_COMPONENT();
                    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                }
            }
        }
        if (g_2708AA._f14 != -1) {
            if (a_2 > 0) {
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(g_4369._f159A[v_B/*10*/], "OVERRIDE_RESPAWN_TEXT");
                GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(v_C);
                GRAPHICS::_BEGIN_TEXT_COMPONENT(&g_2708AA._f10);
                if (a_5) {
                    UI::ADD_TEXT_COMPONENT_SUBSTRING_TIME(a_2, 70);
                } else { 
                    UI::ADD_TEXT_COMPONENT_INTEGER(a_2);
                }
                GRAPHICS::_END_TEXT_COMPONENT();
                GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
            }
        }
        GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 66);
        GRAPHICS::_F5A2C681787E579D(0.0, 0.0, 0.0, 0.0);
        if (a_6) {
            if (!g_4369._f1EB1) {
                UI::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
                g_4369._f1EB1 = 1;
            }
        } else if (g_4369._f1EB1) {
            UI::RESET_HUD_COMPONENT_VALUES(15);
            g_4369._f1EB1 = 0;
        }
        GRAPHICS::_E3A3DB414A373DAB();
        if (g_4369._f133D) {
            GRAPHICS::_SET_SCREEN_DRAW_POSITION(82, 66);
            GRAPHICS::_F5A2C681787E579D(0.0, 0.0, 0.0, 0.0);
            GRAPHICS::DRAW_SCALEFORM_MOVIE(g_4369._f159A[v_B/*10*/], g_4369._f133B, g_4369._f133C, 1.0, 1.0, 255, 255, 255, 255, 0);
            GRAPHICS::_E3A3DB414A373DAB();
        } else { 
            GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(g_4369._f159A[v_B/*10*/], 255, 255, 255, 255, 0);
        }
    }
}

void sub_18e74(auto a_0) {
    GRAPHICS::_BEGIN_TEXT_COMPONENT(a_0);
    GRAPHICS::_END_TEXT_COMPONENT();
}

void sub_18e86(auto a_0) {
    GRAPHICS::_E83A3E3557A56640(a_0);
}

auto sub_18e94() {
    if (current_character._f1 > 3) {
        return 1;
    } else if (sub_18f02()) {
        v_2/*{3}*/ = {0.0, -500.0, 0.0 };
        MOBILE::GET_MOBILE_PHONE_POSITION(&v_2);
        if (g_3816 == 0) {
            if (v_2._f1 > -119.0) {
                return 1;
            } else { 
                return 0;
            }
        } else if (v_2._f1 > -101.0) {
            return 1;
        } else { 
            return 0;
        }
    } else { 
        return 0;
    }
}

auto sub_18f02() {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
        return 1;
    }
    return 0;
}

void sub_18f1c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    UI::GET_HUD_COLOUR(1, a_2, a_3, a_4, &v_7);
    switch (a_0) {
    case 28:
        a_2 = 194;
        a_3 = 80;
        a_4 = 80;
        break;
    case 4:
    case 15:
    case 16:
    case 26:
    case 27:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 49:
        if (a_1) {
            a_2 = 0;
            a_3 = 0;
            a_4 = 0;
        }
        break;
    }
}

void sub_18fd6(auto a_0) {
    UI::GET_HUD_COLOUR(1, &v_3, &v_4, &v_5, &v_6);
    UI::SET_TEXT_FONT(0);
    UI::SET_TEXT_SCALE(0.0, 0.35);
    UI::SET_TEXT_LEADING(2);
    UI::SET_TEXT_COLOUR(v_3, v_4, v_5, v_6);
    UI::SET_TEXT_WRAP(a_0, (g_4366 + g_4368) - 0.0046875);
    UI::SET_TEXT_CENTRE(0);
    UI::SET_TEXT_DROPSHADOW(0, 0, 0, 0, 0);
    UI::SET_TEXT_EDGE(0, 0, 0, 0, 0);
}

void sub_19035(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    UI::_SET_TEXT_ENTRY(a_2);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_3);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_4);
    UI::_DRAW_TEXT(a_0, a_1, 0);
}

auto sub_19058(auto a_0, auto a_1, auto a_2) {
    if (!GAMEPLAY::IS_STRING_NULL(a_0)) {
        if (GAMEPLAY::GET_HASH_KEY(a_0) == 0) {
            return 0.0;
        }
    } else { 
        return 0.0;
    }
    sub_1909a();
    UI::_SET_TEXT_ENTRY_FOR_WIDTH(a_0);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_1);
    UI::ADD_TEXT_COMPONENT_INTEGER(a_2);
    return UI::_GET_TEXT_SCREEN_WIDTH(1);
}

void sub_1909a() {
    UI::GET_HUD_COLOUR(1, &v_2, &v_3, &v_4, &v_5);
    if (g_4369._f1E98) {
        v_2 = g_4369._f1E94;
        v_3 = g_4369._f1E95;
        v_4 = g_4369._f1E96;
        v_5 = g_4369._f1E97;
    }
    UI::SET_TEXT_FONT(0);
    UI::SET_TEXT_SCALE(0.0, 0.35);
    UI::SET_TEXT_COLOUR(v_2, v_3, v_4, v_5);
    UI::SET_TEXT_WRAP(g_4366 + 0.0046875, (g_4366 + g_4368) - 0.0046875);
    UI::SET_TEXT_CENTRE(0);
    UI::SET_TEXT_DROPSHADOW(0, 0, 0, 0, 0);
    UI::SET_TEXT_EDGE(0, 0, 0, 0, 0);
}

auto sub_19124(auto a_0, auto a_1) {
    asm .vardef<F> 4, "[{\"offset\":0,\"value\":2}]"
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_4369._f1A1A[a_0/*16*/])) {
        return sub_1951d(&g_4369._f1A1A[a_0/*16*/]);
    }
    switch (a_0) {
    case 3:
        v_4[0/*1*/] = "MP_hostCrown";
        v_4[1/*1*/] = "MP_hostCrown";
        break;
    case 21:
        v_4[0/*1*/] = "MP_SpecItem_Coke";
        v_4[1/*1*/] = "MP_SpecItem_Coke";
        break;
    case 22:
        v_4[0/*1*/] = "MP_SpecItem_Heroin";
        v_4[1/*1*/] = "MP_SpecItem_Heroin";
        break;
    case 23:
        v_4[0/*1*/] = "MP_SpecItem_Weed";
        v_4[1/*1*/] = "MP_SpecItem_Weed";
        break;
    case 24:
        v_4[0/*1*/] = "MP_SpecItem_Meth";
        v_4[1/*1*/] = "MP_SpecItem_Meth";
        break;
    case 25:
        v_4[0/*1*/] = "MP_SpecItem_Cash";
        v_4[1/*1*/] = "MP_SpecItem_Cash";
        break;
    case 1:
        v_4[0/*1*/] = "shop_NEW_Star";
        v_4[1/*1*/] = "shop_NEW_Star";
        break;
    case 2:
        v_4[0/*1*/] = "shop_NEW_Star";
        v_4[1/*1*/] = "shop_NEW_Star";
        break;
    case 4:
        v_4[0/*1*/] = "Shop_Tick_Icon";
        v_4[1/*1*/] = "Shop_Tick_Icon";
        break;
    case 6:
        v_4[0/*1*/] = "Shop_Box_CrossB";
        v_4[1/*1*/] = "Shop_Box_Cross";
        break;
    case 7:
        v_4[0/*1*/] = "Shop_Box_BlankB";
        v_4[1/*1*/] = "Shop_Box_Blank";
        break;
    case 5:
        v_4[0/*1*/] = "Shop_Box_TickB";
        v_4[1/*1*/] = "Shop_Box_Tick";
        break;
    case 8:
        v_4[0/*1*/] = "shop_NEW_Star";
        v_4[1/*1*/] = "shop_NEW_Star";
        break;
    case 9:
        v_4[0/*1*/] = "Shop_Clothing_Icon_B";
        v_4[1/*1*/] = "Shop_Clothing_Icon_A";
        break;
    case 10:
        v_4[0/*1*/] = "Shop_GunClub_Icon_B";
        v_4[1/*1*/] = "Shop_GunClub_Icon_A";
        break;
    case 17:
        v_4[0/*1*/] = "Shop_Ammo_Icon_B";
        v_4[1/*1*/] = "Shop_Ammo_Icon_A";
        break;
    case 18:
        v_4[0/*1*/] = "Shop_Armour_Icon_B";
        v_4[1/*1*/] = "Shop_Armour_Icon_A";
        break;
    case 19:
        v_4[0/*1*/] = "Shop_Health_Icon_B";
        v_4[1/*1*/] = "Shop_Health_Icon_A";
        break;
    case 20:
        v_4[0/*1*/] = "Shop_MakeUp_Icon_B";
        v_4[1/*1*/] = "Shop_MakeUp_Icon_A";
        break;
    case 11:
        v_4[0/*1*/] = "Shop_Tattoos_Icon_B";
        v_4[1/*1*/] = "Shop_Tattoos_Icon_A";
        break;
    case 12:
        v_4[0/*1*/] = "Shop_Garage_Icon_B";
        v_4[1/*1*/] = "Shop_Garage_Icon_A";
        break;
    case 13:
        v_4[0/*1*/] = "Shop_Garage_Bike_Icon_B";
        v_4[1/*1*/] = "Shop_Garage_Bike_Icon_A";
        break;
    case 14:
        v_4[0/*1*/] = "Shop_Barber_Icon_B";
        v_4[1/*1*/] = "Shop_Barber_Icon_A";
        break;
    case 15:
        v_4[0/*1*/] = "shop_Lock";
        v_4[1/*1*/] = "shop_Lock";
        break;
    case 16:
        v_4[0/*1*/] = "Shop_Tick_Icon";
        v_4[1/*1*/] = "Shop_Tick_Icon";
        break;
    case 26:
        v_4[0/*1*/] = "arrowleft";
        v_4[1/*1*/] = "arrowleft";
        break;
    case 27:
        v_4[0/*1*/] = "arrowright";
        v_4[1/*1*/] = "arrowright";
        break;
    case 28:
        v_4[0/*1*/] = "MP_AlertTriangle";
        v_4[1/*1*/] = "MP_AlertTriangle";
        break;
    case 29:
        v_4[0/*1*/] = "shop_NEW_Star";
        v_4[1/*1*/] = "shop_NEW_Star";
        break;
    case 31:
        v_4[0/*1*/] = "Shop_Michael_Icon_B";
        v_4[1/*1*/] = "Shop_Michael_Icon_A";
        break;
    case 32:
        v_4[0/*1*/] = "Shop_Franklin_Icon_B";
        v_4[1/*1*/] = "Shop_Franklin_Icon_A";
        break;
    case 33:
        v_4[0/*1*/] = "Shop_Trevor_Icon_B";
        v_4[1/*1*/] = "Shop_Trevor_Icon_A";
        break;
    case 48:
        v_4[0/*1*/] = "SaleIcon";
        v_4[1/*1*/] = "SaleIcon";
        break;
    case 49:
        v_4[0/*1*/] = "Shop_Tick_Icon";
        v_4[1/*1*/] = "Shop_Tick_Icon";
        break;
    case 0:
        v_4[0/*1*/] = "";
        v_4[1/*1*/] = "";
        break;
    }
    if (a_1) {
        return v_4[0/*1*/];
    } else { 
        return v_4[1/*1*/];
    }
}

auto sub_1951d(auto a_0) {
    return a_0;
}

auto sub_19527(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_4369._f16F9[a_0/*16*/])) {
        return sub_1951d(&g_4369._f16F9[a_0/*16*/]);
    }
    if (a_0 == 48) {
        return "MPShopSale";
    }
    return "CommonMenu";
}

auto sub_19564() {
    GRAPHICS::_GET_SCREEN_ACTIVE_RESOLUTION(&v_2, &v_3);
    v_4 = __678_$BBDA792448DB5A89(v_2) / __678_$BBDA792448DB5A89(v_3);
    if (v_4 > 3.5) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_19596(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    v_8 = sub_19527(a_0);
    v_9 = sub_19124(a_0, a_1);
    if (GAMEPLAY::GET_HASH_KEY(v_9) != 0) {
        v_C = 1.0;
        if (a_5) {
            GRAPHICS::_GET_SCREEN_ACTIVE_RESOLUTION(&v_A, &v_B);
            v_D = GRAPHICS::_GET_SCREEN_ASPECT_RATIO(0);
            if (sub_19564()) {
                v_A = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_B) * v_D);
            }
            v_E = __678_$BBDA792448DB5A89(v_A) / __678_$BBDA792448DB5A89(v_B);
            v_C = v_E / v_D;
            if (sub_19564()) {
                v_C = 1.0;
            }
            if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${director_mode}) > 0) {
                GRAPHICS::GET_SCREEN_RESOLUTION(&v_A, &v_B);
            }
            v_A = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_A) / v_C);
            v_B = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_B) / v_C);
        } else { 
            GRAPHICS::GET_SCREEN_RESOLUTION(&v_A, &v_B);
        }
        v_F/*{3}*/ = GRAPHICS::GET_TEXTURE_RESOLUTION(v_8, v_9);
        v_F *= sub_19712(a_0) / v_C;
        v_F._f1 *= sub_19712(a_0) / v_C;
        if (!a_2) {
            v_F -= 2.0;
            v_F._f1 -= 2.0;
        }
        if (a_0 == 30) {
            v_F = 288.0;
            v_F._f1 = 106.0;
        }
        a_3 = (v_F / ((float)v_A)) * ((float)(v_A / v_B));
        a_4 = ((v_F._f1 / ((float)v_B)) / (v_F / ((float)v_A))) * a_3;
        if (!a_5) {
            if ((!GRAPHICS::GET_IS_WIDESCREEN()) && (a_0 != 30)) {
                a_3 *= 1.33;
            }
        }
        if (a_0 == 29) {
            if (a_3 > g_4368) {
                a_4 *= g_4368 / a_3;
                a_3 = g_4368;
            }
        }
        return 1;
    }
    return 0;
}

auto sub_19712(auto a_0) {
    switch (a_0) {
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 26:
    case 27:
    case 28:
    case 31:
    case 32:
    case 33:
    case 49:
        return 0.5;
        break;
    }
    return 1.0;
}

auto sub_197b1(auto a_0, auto a_1) {
    v_4 = 2;
    if (((g_1C171A._f2 + 5) < GAMEPLAY::GET_FRAME_COUNT()) && (g_1C171A._f2 > 0)) {
        sub_12f3c(&g_1C171A);
        sub_12f3c(&g_1C171A._f31);
        a_0 = 0;
        g_1C171A._f2 = 0;
        sub_19e41(0);
    }
    g_1C171A._f2 = GAMEPLAY::GET_FRAME_COUNT();
    v_5 = -1;
    if (GAMEPLAY::IS_ORBIS_VERSION()) {
        if (NETWORK::_BD545D44CCE70597() == 0) {
            v_5 = NETWORK::_74FB3E29E6D10FA9();
        }
    }
    if ((GAMEPLAY::IS_ORBIS_VERSION() && ((((v_5 == 4) || (v_5 == 2)) || (v_5 == 1)) || (v_5 == 5))) || ((!sub_19e15()) && NETWORK::NETWORK_IS_SIGNED_ONLINE())) {
        if (NETWORK::_8D11E61A4ABF49CC()) {
            sub_19cfe(&g_1C171A._f3, sub_19e09(&g_1C171A._f3));
            if (!GAMEPLAY::IS_BIT_SET(a_0, 4)) {
                GAMEPLAY::SET_BIT(a_0, 4);
                g_1C171A._f3._f1/*"64"*/ = "";
                sub_19cc6(&g_1C171A._f3, 0);
            }
        } else { 
            if (v_5 == 4) {
                UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "HUD_PROFILECHNG", v_4, 0, 0, -1, 0, 0, 1);
            } else if (v_5 == 2) {
                UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "HUD_GAMEUPD_G", v_4, 0, 0, -1, 0, 0, 1);
            } else if (v_5 == 1) {
                UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "HUD_SYSTUPD_G", v_4, 0, 0, -1, 0, 0, 1);
            } else if (v_5 == 5) {
                UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_NO_INT", v_4, 0, 0, -1, 0, 0, 1);
            } else if (!sub_19e15()) {
                UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_NO_ROS", v_4, 0, 0, -1, 0, 0, 1);
            }
            if (!GAMEPLAY::IS_BIT_SET(a_0, 0)) {
                if (!CONTROLS::IS_CONTROL_PRESSED(2, 201)) {
                    GAMEPLAY::SET_BIT(a_0, 0);
                }
            } else if (CONTROLS::IS_CONTROL_JUST_RELEASED(2, 201)) {
                sub_12f3c(&g_1C171A._f31);
                sub_12f3c(&g_1C171A);
                a_0 = 0;
                g_1C171A._f2 = 0;
                sub_19e41(0);
                return 1;
            }
        }
    } else { 
        sub_19cfe(&g_1C171A._f3, sub_19e09(&g_1C171A._f3));
        if ((sub_19cba(&g_1C171A._f31) && (!sub_19c17(&g_1C171A._f31, 2000, 1))) && (!NETWORK::NETWORK_IS_SIGNED_ONLINE())) {
            GAMEPLAY::SET_BIT(a_0, 3);
            g_1C171A._f3._f1/*"64"*/ = "";
            sub_19cc6(&g_1C171A._f3, 0);
        } else if (!GAMEPLAY::IS_BIT_SET(a_0, 3)) {
            if (!GAMEPLAY::IS_BIT_SET(a_0, 1)) {
                PLAYER::DISPLAY_SYSTEM_SIGNIN_UI(0);
                GAMEPLAY::SET_BIT(a_0, 1);
                g_1C171A._f3._f1/*"64"*/ = "";
                sub_19cc6(&g_1C171A._f3, 0);
            }
        }
        if (sub_19cba(&g_1C171A)) {
            if (!sub_19c17(&g_1C171A, 4000, 1)) {
                v_6 = 1;
            }
        }
        if (!v_6) {
            if (a_1) {
                if (!NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
                    if (NETWORK::_EFFB25453D8600F9()) {
                        UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "STORE_NOT_ONL", v_4, 0, 0, -1, 0, 0, 1);
                    } else { 
                        UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_NO_INT", v_4, 0, 0, -1, 0, 0, 1);
                    }
                    if (!PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED()) {
                        if (!GAMEPLAY::IS_BIT_SET(a_0, 0)) {
                            if (!CONTROLS::IS_CONTROL_PRESSED(2, 201)) {
                                GAMEPLAY::SET_BIT(a_0, 0);
                            }
                        } else if (CONTROLS::IS_CONTROL_JUST_RELEASED(2, 201)) {
                            sub_12f3c(&g_1C171A);
                            a_0 = 0;
                            g_1C171A._f2 = 0;
                            sub_19e41(0);
                            return 1;
                        }
                    }
                } else { 
                    sub_12f3c(&g_1C171A);
                    a_0 = 0;
                    g_1C171A._f2 = 0;
                    sub_19e41(0);
                    return 1;
                }
            } else if (GAMEPLAY::IS_BIT_SET(a_0, 3)) {
                if (NETWORK::_EFFB25453D8600F9()) {
                    UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_SIGN_OUT", v_4, 0, 0, -1, 0, 0, 1);
                } else { 
                    UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_NO_INT", v_4, 0, 0, -1, 0, 0, 1);
                }
                if (!GAMEPLAY::IS_BIT_SET(a_0, 0)) {
                    if (!CONTROLS::IS_CONTROL_PRESSED(2, 201)) {
                        GAMEPLAY::SET_BIT(a_0, 0);
                    }
                } else if (CONTROLS::IS_CONTROL_JUST_RELEASED(2, 201)) {
                    sub_12f3c(&g_1C171A._f31);
                    sub_12f3c(&g_1C171A);
                    a_0 = 0;
                    g_1C171A._f2 = 0;
                    sub_19e41(0);
                    return 1;
                }
            } else { 
                if (NETWORK::_EFFB25453D8600F9()) {
                    UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_NOT_ONL", v_4, 0, 0, -1, 0, 0, 1);
                } else { 
                    UI::_SET_WARNING_MESSAGE_2("PM_INF_QMFT", "SCLB_NO_INT", v_4, 0, 0, -1, 0, 0, 1);
                }
                if (!PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED()) {
                    if (!GAMEPLAY::IS_BIT_SET(a_0, 0)) {
                        if (!CONTROLS::IS_CONTROL_PRESSED(2, 201)) {
                            GAMEPLAY::SET_BIT(a_0, 0);
                        }
                    } else if (CONTROLS::IS_CONTROL_JUST_RELEASED(2, 201)) {
                        sub_12f3c(&g_1C171A._f31);
                        sub_12f3c(&g_1C171A);
                        a_0 = 0;
                        g_1C171A._f2 = 0;
                        sub_19e41(0);
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_19c17(auto a_0, auto a_1, auto a_2) {
    if (a_1 == -1) {
        return 1;
    }
    sub_19c75(a_0, a_2, 0);
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_2)) {
        if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), a_0)) >= a_1) {
            return 1;
        }
    } else if (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(GAMEPLAY::GET_GAME_TIMER(), a_0)) >= a_1) {
        return 1;
    }
    return 0;
}

void sub_19c75(auto a_0, auto a_1, auto a_2) {
    if (a_0._f1 == 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!a_1)) {
            if (!a_2) {
                a_0 = NETWORK::GET_NETWORK_TIME();
            } else { 
                a_0 = NETWORK::_89023FBBF9200E9F();
            }
        } else { 
            a_0 = GAMEPLAY::GET_GAME_TIMER();
        }
        a_0._f1 = 1;
    }
}

auto sub_19cba(auto a_0) {
    return a_0._f1;
}

void sub_19cc6(auto a_0, auto a_1) {
    sub_19ce3(a_0);
    if (a_1) {
        sub_19e41(0);
    }
    a_0._f23 = 1;
}

void sub_19ce3(auto a_0) {
    asm .vardef<F> 3, "[{\"type\":\"field\",\"value\":[{\"offset\":41,\"value\":1}]}]"
    a_0/*{46}*/ = v_3;
}

void sub_19cfe(auto a_0, auto a_1) {
    if (a_1 == 1) {
        a_0 = 0;
        sub_19dfc(a_0);
    }
    if (a_0 == 0) {
        if (a_0._f24) {
            UI::_ABA17D7CE615ADBF(&a_0._f1);
            UI::ADD_TEXT_COMPONENT_INTEGER(a_0._f21);
            UI::ADD_TEXT_COMPONENT_INTEGER(a_0._f22);
            UI::_BD12F8228410D9B4(a_0._f29);
        } else if (a_0._f25) {
            UI::_ABA17D7CE615ADBF(&a_0._f1);
            UI::ADD_TEXT_COMPONENT_INTEGER(a_0._f21);
            UI::_BD12F8228410D9B4(a_0._f29);
        } else if (a_0._f27) {
            UI::_ABA17D7CE615ADBF(&a_0._f1);
            UI::_ADD_TEXT_COMPONENT_STRING(&a_0._f11);
            UI::ADD_TEXT_COMPONENT_INTEGER(a_0._f21);
            UI::ADD_TEXT_COMPONENT_INTEGER(a_0._f22);
            UI::_BD12F8228410D9B4(a_0._f29);
        } else if (a_0._f26) {
            UI::_ABA17D7CE615ADBF(&a_0._f1);
            UI::_ADD_TEXT_COMPONENT_STRING(&a_0._f11);
            UI::_BD12F8228410D9B4(a_0._f29);
        } else if (a_0._f28) {
            UI::_ABA17D7CE615ADBF(&a_0._f1);
            UI::ADD_TEXT_COMPONENT_SUBSTRING_TIME(a_0._f21, 70);
            UI::_BD12F8228410D9B4(a_0._f29);
        } else { 
            UI::_ABA17D7CE615ADBF(&a_0._f1);
            UI::_BD12F8228410D9B4(a_0._f29);
        }
        a_0 = 1;
    }
    if (a_0 == 1) {}
}

void sub_19dfc(auto a_0) {
    a_0._f23 = 0;
}

auto sub_19e09(auto a_0) {
    return a_0._f23;
}

auto sub_19e15() {
    if (sub_19e35()) {
        return 0;
    }
    if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE() == 0) {
        return 0;
    }
    return 1;
}

auto sub_19e35() {
    return g_2540EF;
}

void sub_19e41(auto a_0) {
    UI::_10D373323E5B9C0D();
    if (a_0) {
        UI::_C65AB383CD91DF98();
    }
}

auto sub_19e56() {
    return NETWORK::_EFFB25453D8600F9();
}

auto sub_19e62(auto a_0, auto a_1) {
    v_4 = 0.0;
    v_5 = 0.0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_122ef()) {
        return 1.0;
    }
    if (sub_19fb4() || sub_19fab()) {
        if (((((((a_0 == ${weapon_assaultmg}) || (a_0 == ${weapon_assaultsniper})) || (a_0 == ${weapon_heavyrifle})) || (a_0 == ${weapon_assaultmg})) || (a_0 == ${weapon_programmablear})) || (a_0 == ${weapon_rubbergun})) || (a_0 == ${weapon_loudhailer})) {
            a_1 = 0;
        }
    }
    if (!is_in_transition) {
        v_6 = sub_105c7(a_0);
        if (v_6 == 3) {
            v_5 += 0.1;
        } else if (v_6 == 2) {
            v_5 += 0.15;
        } else if (v_6 == 1) {
            v_5 += 0.25;
        }
    }
    if (l_32 == 1) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            v_5 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
        }
    }
    if (l_32 == 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (sub_f594()) {
                v_5 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
                l_32 = 1;
            } else { 
                l_32 = -1;
            }
        }
    }
    v_4 = 1.0 - v_5;
    a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * v_4);
    return v_4;
}

auto sub_19fab() {
    return 1;
}

auto sub_19fb4() {
    return 1;
}

auto sub_19fbd(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = 0;
    if (is_in_transition) {
        v_8 = sub_1be7f(a_0, a_1, a_2);
        if (v_8 != 0) {
            if (sub_1bc1f(v_8, -1)) {
                v_7 = 1;
            }
        } else { 
            v_7 = 1;
        }
    } else { 
        v_8 = sub_1be7f(a_0, a_1, a_2);
        if (v_8 != 0) {
            if (sub_1a029(sub_10943(), v_8)) {
                v_7 = 1;
            }
        } else { 
            v_7 = 1;
        }
    }
    a_4 = a_1 == a_3;
    return v_7;
}

auto sub_1a029(auto a_0, auto a_1) {
    if (sub_7507(a_0)) {
        v_4 = sub_1b7c4(a_0, a_1);
        v_5 = sub_1a06d(a_1);
        v_6 = sub_1a060(v_5);
        return GAMEPLAY::IS_BIT_SET(v_4, v_6);
    }
    return 0;
}

auto sub_1a060(auto a_0) {
    return a_0 % 32;
}

auto sub_1a06d(auto a_0) {
    return sub_1a07b(a_0);
}

auto sub_1a07b(auto a_0) {
    switch (a_0) {
    case 1:
        return 0;
        break;
    case 2:
        return 1;
        break;
    case 3:
        return 2;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 4;
        break;
    case 6:
        return 5;
        break;
    case 7:
        return 6;
        break;
    case 16:
        return 7;
        break;
    case 17:
        return 8;
        break;
    case 18:
        return 9;
        break;
    case 19:
        return 10;
        break;
    case 20:
        return 11;
        break;
    case 21:
        return 12;
        break;
    case 22:
        return 13;
        break;
    case 23:
        return 14;
        break;
    case 24:
        return 15;
        break;
    case 25:
        return 16;
        break;
    case 26:
        return 17;
        break;
    case 27:
        return 18;
        break;
    case 28:
        return 19;
        break;
    case 29:
        return 20;
        break;
    case 30:
        return 21;
        break;
    case 31:
        return 22;
        break;
    case 32:
        return 23;
        break;
    case 33:
        return 24;
        break;
    case 34:
        return 25;
        break;
    case 35:
        return 26;
        break;
    case 36:
        return 27;
        break;
    case 37:
        return 28;
        break;
    case 38:
        return 29;
        break;
    case 39:
        return 30;
        break;
    case 40:
        return 31;
        break;
    case 41:
        return 32;
        break;
    case 42:
        return 33;
        break;
    case 43:
        return 34;
        break;
    case 44:
        return 35;
        break;
    case 45:
        return 36;
        break;
    case 46:
        return 37;
        break;
    case 47:
        return 38;
        break;
    case 48:
        return 39;
        break;
    case 49:
        return 40;
        break;
    case 50:
        return 41;
        break;
    case 51:
        return 42;
        break;
    case 52:
        return 43;
        break;
    case 53:
        return 44;
        break;
    case 54:
        return 45;
        break;
    case 55:
        return 46;
        break;
    case 56:
        return 47;
        break;
    case 57:
        return 48;
        break;
    case 58:
        return 49;
        break;
    case 59:
        return 50;
        break;
    case 60:
        return 51;
        break;
    case 61:
        return 52;
        break;
    case 62:
        return 53;
        break;
    case 63:
        return 54;
        break;
    case 64:
        return 55;
        break;
    case 65:
        return 56;
        break;
    case 66:
        return 57;
        break;
    case 67:
        return 58;
        break;
    case 68:
        return 59;
        break;
    case 69:
        return 60;
        break;
    case 70:
        return 61;
        break;
    case 71:
        return 62;
        break;
    case 72:
        return 63;
        break;
    case 73:
        return 64;
        break;
    case 74:
        return 65;
        break;
    case 75:
        return 66;
        break;
    case 76:
        return 67;
        break;
    case 77:
        return 68;
        break;
    case 78:
        return 69;
        break;
    case 79:
        return 70;
        break;
    case 80:
        return 71;
        break;
    case 81:
        return 72;
        break;
    case 82:
        return 73;
        break;
    case 83:
        return 74;
        break;
    case 84:
        return 75;
        break;
    case 85:
        return 76;
        break;
    case 86:
        return 77;
        break;
    case 87:
        return 78;
        break;
    case 88:
        return 79;
        break;
    case 89:
        return 80;
        break;
    case 90:
        return 81;
        break;
    case 91:
        return 82;
        break;
    case 92:
        return 83;
        break;
    case 93:
        return 84;
        break;
    case 94:
        return 85;
        break;
    case 95:
        return 86;
        break;
    case 96:
        return 87;
        break;
    case 97:
        return 88;
        break;
    case 98:
        return 89;
        break;
    case 99:
        return 90;
        break;
    case 100:
        return 91;
        break;
    case 101:
        return 92;
        break;
    case 102:
        return 93;
        break;
    case 103:
        return 94;
        break;
    case 104:
        return 95;
        break;
    case 105:
        return 96;
        break;
    case 106:
        return 97;
        break;
    case 107:
        return 98;
        break;
    case 108:
        return 99;
        break;
    case 109:
        return 100;
        break;
    case 110:
        return 101;
        break;
    case 111:
        return 102;
        break;
    case 112:
        return 103;
        break;
    case 113:
        return 104;
        break;
    case 114:
        return 105;
        break;
    case 115:
        return 106;
        break;
    case 116:
        return 107;
        break;
    case 117:
        return 108;
        break;
    case 118:
        return 109;
        break;
    case 119:
        return 110;
        break;
    case 120:
        return 111;
        break;
    case 121:
        return 112;
        break;
    case 122:
        return 113;
        break;
    case 123:
        return 114;
        break;
    case 124:
        return 115;
        break;
    case 125:
        return 116;
        break;
    case 126:
        return 117;
        break;
    case 127:
        return 118;
        break;
    case 128:
        return 119;
        break;
    case 129:
        return 120;
        break;
    case 130:
        return 121;
        break;
    case 131:
        return 122;
        break;
    case 132:
        return 123;
        break;
    case 133:
        return 124;
        break;
    case 134:
        return 125;
        break;
    case 135:
        return 126;
        break;
    case 136:
        return 127;
        break;
    case 137:
        return 128;
        break;
    case 138:
        return 129;
        break;
    case 139:
        return 130;
        break;
    case 140:
        return 131;
        break;
    case 141:
        return 132;
        break;
    case 142:
        return 133;
        break;
    case 143:
        return 134;
        break;
    case 144:
        return 135;
        break;
    case 145:
        return 136;
        break;
    case 146:
        return 137;
        break;
    case 147:
        return 138;
        break;
    case 148:
        return 139;
        break;
    case 149:
        return 140;
        break;
    case 150:
        return 141;
        break;
    case 151:
        return 142;
        break;
    case 152:
        return 143;
        break;
    case 153:
        return 144;
        break;
    case 154:
        return 145;
        break;
    case 155:
        return 146;
        break;
    case 156:
        return 147;
        break;
    case 157:
        return 148;
        break;
    case 158:
        return 149;
        break;
    case 159:
        return 150;
        break;
    case 160:
        return 151;
        break;
    case 8:
        return 152;
        break;
    case 9:
        return 153;
        break;
    case 10:
        return 154;
        break;
    case 11:
        return 155;
        break;
    case 12:
        return 156;
        break;
    case 13:
        return 157;
        break;
    case 14:
        return 158;
        break;
    case 15:
        return 159;
        break;
    case 185:
        return 178;
        break;
    case 186:
        return 179;
        break;
    case 187:
        return 180;
        break;
    case 188:
        return 181;
        break;
    case 189:
        return 182;
        break;
    case 190:
        return 183;
        break;
    case 161:
        return 172;
        break;
    case 162:
        return 173;
        break;
    case 163:
        return 174;
        break;
    case 164:
        return 175;
        break;
    case 165:
        return 176;
        break;
    case 166:
        return 177;
        break;
    case 179:
        return 166;
        break;
    case 180:
        return 167;
        break;
    case 181:
        return 168;
        break;
    case 182:
        return 169;
        break;
    case 183:
        return 170;
        break;
    case 184:
        return 171;
        break;
    case 173:
        return 160;
        break;
    case 174:
        return 161;
        break;
    case 175:
        return 162;
        break;
    case 176:
        return 163;
        break;
    case 177:
        return 164;
        break;
    case 178:
        return 165;
        break;
    case 191:
        return 184;
        break;
    case 192:
        return 185;
        break;
    case 193:
        return 186;
        break;
    case 194:
        return 187;
        break;
    case 216:
        return 188;
        break;
    }
    switch (a_0) {
    case 195:
        return 196;
        break;
    case 196:
        return 197;
        break;
    case 197:
        return 198;
        break;
    case 198:
        return 199;
        break;
    case 199:
        return 200;
        break;
    case 200:
        return 201;
        break;
    case 201:
        return 202;
        break;
    case 202:
        return 189;
        break;
    case 203:
        return 190;
        break;
    case 204:
        return 191;
        break;
    case 205:
        return 192;
        break;
    case 206:
        return 193;
        break;
    case 207:
        return 194;
        break;
    case 208:
        return 195;
        break;
    case 209:
        return 217;
        break;
    case 210:
        return 218;
        break;
    case 211:
        return 219;
        break;
    case 212:
        return 220;
        break;
    case 213:
        return 221;
        break;
    case 214:
        return 222;
        break;
    case 215:
        return 223;
        break;
    case 224:
        return 210;
        break;
    case 225:
        return 211;
        break;
    case 226:
        return 212;
        break;
    case 227:
        return 213;
        break;
    case 228:
        return 214;
        break;
    case 229:
        return 215;
        break;
    case 230:
        return 216;
        break;
    case 217:
        return 203;
        break;
    case 218:
        return 204;
        break;
    case 219:
        return 205;
        break;
    case 220:
        return 206;
        break;
    case 221:
        return 207;
        break;
    case 222:
        return 208;
        break;
    case 223:
        return 209;
        break;
    case 232:
        return 231;
        break;
    case 233:
        return 232;
        break;
    case 234:
        return 233;
        break;
    case 235:
        return 234;
        break;
    case 236:
        return 235;
        break;
    case 237:
        return 236;
        break;
    case 231:
        return 237;
        break;
    case 238:
        return 245;
        break;
    case 239:
        return 246;
        break;
    case 240:
        return 247;
        break;
    case 241:
        return 248;
        break;
    case 242:
        return 249;
        break;
    case 243:
        return 250;
        break;
    case 244:
        return 251;
        break;
    case 245:
        return 252;
        break;
    case 246:
        return 253;
        break;
    case 247:
        return 254;
        break;
    case 248:
        return 224;
        break;
    case 249:
        return 225;
        break;
    case 250:
        return 226;
        break;
    case 251:
        return 227;
        break;
    case 252:
        return 228;
        break;
    case 253:
        return 229;
        break;
    case 254:
        return 230;
        break;
    case 255:
        return 255;
        break;
    case 256:
        return 256;
        break;
    case 257:
        return 257;
        break;
    case 258:
        return 258;
        break;
    case 259:
        return 259;
        break;
    case 260:
        return 260;
        break;
    case 261:
        return 261;
        break;
    case 262:
        return 262;
        break;
    case 263:
        return 263;
        break;
    case 264:
        return 264;
        break;
    case 265:
        return 265;
        break;
    }
    switch (a_0) {
    case 267:
        return 238;
        break;
    case 268:
        return 239;
        break;
    case 269:
        return 240;
        break;
    case 270:
        return 241;
        break;
    case 271:
        return 242;
        break;
    case 272:
        return 243;
        break;
    case 266:
        return 244;
        break;
    case 274:
        return 266;
        break;
    case 275:
        return 267;
        break;
    case 276:
        return 268;
        break;
    case 277:
        return 269;
        break;
    case 278:
        return 270;
        break;
    case 279:
        return 271;
        break;
    case 273:
        return 272;
        break;
    case 281:
        return 273;
        break;
    case 282:
        return 274;
        break;
    case 283:
        return 275;
        break;
    case 284:
        return 276;
        break;
    case 285:
        return 277;
        break;
    case 286:
        return 278;
        break;
    case 280:
        return 279;
        break;
    case 287:
        return 280;
        break;
    case 288:
        return 281;
        break;
    case 289:
        return 282;
        break;
    case 290:
        return 283;
        break;
    case 291:
        return 284;
        break;
    case 292:
        return 285;
        break;
    case 293:
        return 286;
        break;
    case 294:
        return 287;
        break;
    case 295:
        return 288;
        break;
    case 296:
        return 289;
        break;
    case 297:
        return 290;
        break;
    case 298:
        return 291;
        break;
    case 299:
        return 292;
        break;
    case 300:
        return 293;
        break;
    case 301:
        return 294;
        break;
    case 302:
        return 295;
        break;
    case 303:
        return 296;
        break;
    case 304:
        return 297;
        break;
    case 305:
        return 298;
        break;
    case 306:
        return 299;
        break;
    case 307:
        return 300;
        break;
    case 308:
        return 301;
        break;
    case 309:
        return 302;
        break;
    case 310:
        return 303;
        break;
    case 311:
        return 304;
        break;
    case 312:
        return 305;
        break;
    case 313:
        return 306;
        break;
    case 314:
        return 307;
        break;
    case 315:
        return 308;
        break;
    case 316:
        return 309;
        break;
    case 317:
        return 310;
        break;
    case 318:
        return 311;
        break;
    case 319:
        return 312;
        break;
    case 320:
        return 313;
        break;
    case 321:
        return 314;
        break;
    case 322:
        return 315;
        break;
    case 323:
        return 316;
        break;
    }
    switch (a_0) {
    case 345:
        return 338;
        break;
    case 346:
        return 339;
        break;
    case 347:
        return 340;
        break;
    case 348:
        return 341;
        break;
    case 349:
        return 342;
        break;
    case 350:
        return 343;
        break;
    case 351:
        return 344;
        break;
    case 352:
        return 345;
        break;
    case 353:
        return 346;
        break;
    case 354:
        return 347;
        break;
    case 355:
        return 348;
        break;
    case 356:
        return 349;
        break;
    case 357:
        return 350;
        break;
    case 358:
        return 351;
        break;
    case 359:
        return 352;
        break;
    case 360:
        return 353;
        break;
    case 361:
        return 354;
        break;
    case 362:
        return 355;
        break;
    case 363:
        return 356;
        break;
    case 364:
        return 357;
        break;
    }
    switch (a_0) {
    case 325:
        return 317;
        break;
    case 326:
        return 318;
        break;
    case 327:
        return 319;
        break;
    case 328:
        return 320;
        break;
    case 329:
        return 321;
        break;
    case 330:
        return 322;
        break;
    case 324:
        return 323;
        break;
    case 332:
        return 324;
        break;
    case 333:
        return 325;
        break;
    case 334:
        return 326;
        break;
    case 335:
        return 327;
        break;
    case 336:
        return 328;
        break;
    case 337:
        return 329;
        break;
    case 331:
        return 330;
        break;
    case 366:
        return 370;
        break;
    case 367:
        return 371;
        break;
    case 368:
        return 372;
        break;
    case 369:
        return 373;
        break;
    case 370:
        return 374;
        break;
    case 371:
        return 375;
        break;
    case 365:
        return 376;
        break;
    case 338:
        return 358;
        break;
    case 339:
        return 359;
        break;
    case 340:
        return 360;
        break;
    case 341:
        return 361;
        break;
    case 342:
        return 362;
        break;
    case 343:
        return 363;
        break;
    case 344:
        return 364;
        break;
    case 372:
        return 365;
        break;
    case 373:
        return 366;
        break;
    case 374:
        return 367;
        break;
    case 375:
        return 368;
        break;
    case 376:
        return 369;
        break;
    case 377:
        return 383;
        break;
    case 378:
        return 377;
        break;
    case 379:
        return 378;
        break;
    case 380:
        return 379;
        break;
    case 381:
        return 380;
        break;
    case 382:
        return 381;
        break;
    case 383:
        return 382;
        break;
    case 384:
        return 384;
        break;
    case 385:
        return 385;
        break;
    case 386:
        return 386;
        break;
    case 387:
        return 387;
        break;
    case 388:
        return 388;
        break;
    case 389:
        return 389;
        break;
    case 390:
        return 390;
        break;
    case 391:
        return 405;
        break;
    case 392:
        return 406;
        break;
    case 393:
        return 407;
        break;
    case 394:
        return 408;
        break;
    case 395:
        return 409;
        break;
    case 396:
        return 410;
        break;
    case 397:
        return 397;
        break;
    case 405:
        return 391;
        break;
    case 406:
        return 392;
        break;
    case 407:
        return 393;
        break;
    case 408:
        return 394;
        break;
    case 409:
        return 395;
        break;
    case 410:
        return 396;
        break;
    case 411:
        return 397;
        break;
    case 398:
        return 398;
        break;
    case 399:
        return 399;
        break;
    case 400:
        return 400;
        break;
    case 401:
        return 401;
        break;
    case 402:
        return 402;
        break;
    case 403:
        return 403;
        break;
    case 404:
        return 404;
        break;
    case 412:
        return 412;
        break;
    case 413:
        return 413;
        break;
    case 414:
        return 414;
        break;
    case 415:
        return 415;
        break;
    case 416:
        return 416;
        break;
    case 417:
        return 417;
        break;
    case 418:
        return 418;
        break;
    }
    return 146;
}

auto sub_1b7c4(auto a_0, auto a_1) {
    v_5 = sub_1a06d(a_1);
    v_6 = sub_1bc12(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x87af642a, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xb19a20d6, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xd87a875, &v_4, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x4ee77297, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x84614665, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x8d73284e, &v_4, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x2d4e2f65, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x6f2a1bf7, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x734bf3fc, &v_4, -1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xf079b5bd, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xe6fe8b9e, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x41ec913e, &v_4, -1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x40b7d638, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf8c12f23, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x581ebda2, &v_4, -1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x13e87c9a, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xc31bc3d9, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xcc81a66a, &v_4, -1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xe22a991f, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xd4596654, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x9ab3c2cf, &v_4, -1);
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xa9322733, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x2d381820, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xb0deef25, &v_4, -1);
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xf77e43c6, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x40febfad, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x7f240bb0, &v_4, -1);
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xccfeeecc, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x9c7512f, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xff888c7b, &v_4, -1);
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xa43cfe56, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x5fd50bf0, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xffba48db, &v_4, -1);
            break;
        }
        break;
    case 11:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x72301a3d, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x9198ef77, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xf293ae8e, &v_4, -1);
            break;
        }
        break;
    case 12:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x6ef013b5, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x5b208283, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xdc82826c, &v_4, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_4;
}

auto sub_1bc12(auto a_0) {
    return a_0 / 32;
}

auto sub_1bc1f(auto a_0, auto a_1) {
    if (sub_1bd98()) {
        return 0;
    }
    v_4 = sub_1bc50(a_0, a_1);
    v_5 = sub_1a06d(a_0);
    return GAMEPLAY::IS_BIT_SET(v_4, sub_1a060(v_5));
}

auto sub_1bc50(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_1bc69(a_0), a_1, 0);
    return v_4;
}

auto sub_1bc69(auto a_0) {
    v_3 = sub_1a06d(a_0);
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 791;
            break;
        case 1:
            return 792;
            break;
        case 2:
            return 793;
            break;
        case 3:
            return 794;
            break;
        case 4:
            return 795;
            break;
        case 5:
            return 796;
            break;
        case 6:
            return 797;
            break;
        case 7:
            return 798;
            break;
        case 8:
            return 799;
            break;
        case 9:
            return 2041;
            break;
        case 10:
            return 2053;
            break;
        case 11:
            return 2080;
            break;
        case 12:
            return 2404;
            break;
        case 13:
            return 2922;
            break;
        }
    }
    return 3790;
}

auto sub_1bd8d() {
    return g_621C;
}

auto sub_1bd98() {
    return g_141430;
}

auto sub_1bda4(auto a_0) {
    return GAMEPLAY::IS_BIT_SET(g_1837E7[a_0/*410*/]._f80, 22);
}

auto sub_1bdbd(auto a_0) {
    v_3 = sub_1bddd(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_1bddd(auto a_0) {
    v_3 = sub_4b3f(sub_1bdf5(a_0), -1, 0);
    return v_3;
}

auto sub_1bdf5(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    switch (v_4) {
    case 0:
        return 1280;
        break;
    }
    return 1280;
}

auto sub_1be22() {
    if (PLAYER::IS_PLAYER_ONLINE()) {
        if ((NETWORK::NETWORK_IS_SIGNED_ONLINE() && NETWORK::NETWORK_IS_SIGNED_IN()) && NETWORK::_67A5589628E0CFF6()) {
            v_2/*{13}*/ = sub_1be6a();
            if (NETWORK::_NETWORK_PLAYER_IS_IN_CLAN() && NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(&v_2)) {
                return 1;
            }
        }
    }
    return 0;
}

auto<13> sub_1be6a() {
    NETWORK::NETWORK_GET_LOCAL_HANDLE(&v_2, 13);
    return v_2;
}

auto sub_1be7f(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case ${weapon_pistol}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 76;
            break;
        case 2:
            return 16;
            break;
        case 3:
            return 136;
            break;
        case 4:
            return 56;
            break;
        case 5:
            return 116;
            break;
        case 6:
            return 96;
            break;
        case 7:
            return 36;
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 77;
            break;
        case 2:
            return 17;
            break;
        case 3:
            return 137;
            break;
        case 4:
            return 57;
            break;
        case 5:
            return 117;
            break;
        case 6:
            return 97;
            break;
        case 7:
            return 37;
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 78;
            break;
        case 2:
            return 18;
            break;
        case 3:
            return 138;
            break;
        case 4:
            return 58;
            break;
        case 5:
            return 118;
            break;
        case 6:
            return 98;
            break;
        case 7:
            return 38;
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 79;
            break;
        case 2:
            return 19;
            break;
        case 3:
            return 139;
            break;
        case 4:
            return 59;
            break;
        case 5:
            return 119;
            break;
        case 6:
            return 99;
            break;
        case 7:
            return 39;
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 80;
            break;
        case 2:
            return 20;
            break;
        case 3:
            return 140;
            break;
        case 4:
            return 60;
            break;
        case 5:
            return 120;
            break;
        case 6:
            return 100;
            break;
        case 7:
            return 40;
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 81;
            break;
        case 2:
            return 21;
            break;
        case 3:
            return 141;
            break;
        case 4:
            return 61;
            break;
        case 5:
            return 121;
            break;
        case 6:
            return 101;
            break;
        case 7:
            return 41;
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 82;
            break;
        case 2:
            return 22;
            break;
        case 3:
            return 142;
            break;
        case 4:
            return 62;
            break;
        case 5:
            return 122;
            break;
        case 6:
            return 102;
            break;
        case 7:
            return 42;
            break;
        }
        break;
    case ${weapon_specialcarbine}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 208;
            break;
        case 2:
            return 202;
            break;
        case 3:
            return 203;
            break;
        case 4:
            return 204;
            break;
        case 5:
            return 205;
            break;
        case 6:
            return 206;
            break;
        case 7:
            return 207;
            break;
        }
        break;
    case ${weapon_snspistol}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 215;
            break;
        case 2:
            return 209;
            break;
        case 3:
            return 210;
            break;
        case 4:
            return 211;
            break;
        case 5:
            return 212;
            break;
        case 6:
            return 213;
            break;
        case 7:
            return 214;
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 83;
            break;
        case 2:
            return 23;
            break;
        case 3:
            return 143;
            break;
        case 4:
            return 63;
            break;
        case 5:
            return 123;
            break;
        case 6:
            return 103;
            break;
        case 7:
            return 43;
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 84;
            break;
        case 2:
            return 24;
            break;
        case 3:
            return 144;
            break;
        case 4:
            return 64;
            break;
        case 5:
            return 124;
            break;
        case 6:
            return 104;
            break;
        case 7:
            return 44;
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 85;
            break;
        case 2:
            return 25;
            break;
        case 3:
            return 145;
            break;
        case 4:
            return 65;
            break;
        case 5:
            return 125;
            break;
        case 6:
            return 105;
            break;
        case 7:
            return 45;
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 87;
            break;
        case 2:
            return 27;
            break;
        case 3:
            return 147;
            break;
        case 4:
            return 67;
            break;
        case 5:
            return 127;
            break;
        case 6:
            return 107;
            break;
        case 7:
            return 47;
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 86;
            break;
        case 2:
            return 26;
            break;
        case 3:
            return 146;
            break;
        case 4:
            return 66;
            break;
        case 5:
            return 126;
            break;
        case 6:
            return 106;
            break;
        case 7:
            return 46;
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 88;
            break;
        case 2:
            return 28;
            break;
        case 3:
            return 148;
            break;
        case 4:
            return 68;
            break;
        case 5:
            return 128;
            break;
        case 6:
            return 108;
            break;
        case 7:
            return 48;
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 91;
            break;
        case 2:
            return 31;
            break;
        case 3:
            return 151;
            break;
        case 4:
            return 71;
            break;
        case 5:
            return 131;
            break;
        case 6:
            return 111;
            break;
        case 7:
            return 51;
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 92;
            break;
        case 2:
            return 32;
            break;
        case 3:
            return 152;
            break;
        case 4:
            return 72;
            break;
        case 5:
            return 132;
            break;
        case 6:
            return 112;
            break;
        case 7:
            return 52;
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 93;
            break;
        case 2:
            return 33;
            break;
        case 3:
            return 153;
            break;
        case 4:
            return 73;
            break;
        case 5:
            return 133;
            break;
        case 6:
            return 113;
            break;
        case 7:
            return 53;
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 95;
            break;
        case 2:
            return 35;
            break;
        case 3:
            return 155;
            break;
        case 4:
            return 75;
            break;
        case 5:
            return 135;
            break;
        case 6:
            return 115;
            break;
        case 7:
            return 55;
            break;
        }
        break;
    case ${weapon_rpg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 94;
            break;
        case 2:
            return 34;
            break;
        case 3:
            return 154;
            break;
        case 4:
            return 74;
            break;
        case 5:
            return 134;
            break;
        case 6:
            return 114;
            break;
        case 7:
            return 54;
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 194;
            break;
        case 2:
            return 173;
            break;
        case 3:
            return 174;
            break;
        case 4:
            return 175;
            break;
        case 5:
            return 176;
            break;
        case 6:
            return 177;
            break;
        case 7:
            return 178;
            break;
        }
        break;
    case ${weapon_assaultmg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 193;
            break;
        case 2:
            return 179;
            break;
        case 3:
            return 180;
            break;
        case 4:
            return 181;
            break;
        case 5:
            return 182;
            break;
        case 6:
            return 183;
            break;
        case 7:
            return 184;
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 192;
            break;
        case 2:
            return 161;
            break;
        case 3:
            return 162;
            break;
        case 4:
            return 163;
            break;
        case 5:
            return 164;
            break;
        case 6:
            return 165;
            break;
        case 7:
            return 166;
            break;
        }
        break;
    case ${weapon_heavyrifle}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 191;
            break;
        case 2:
            return 185;
            break;
        case 3:
            return 186;
            break;
        case 4:
            return 187;
            break;
        case 5:
            return 188;
            break;
        case 6:
            return 189;
            break;
        case 7:
            return 190;
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 201;
            break;
        case 2:
            return 195;
            break;
        case 3:
            return 196;
            break;
        case 4:
            return 197;
            break;
        case 5:
            return 198;
            break;
        case 6:
            return 199;
            break;
        case 7:
            return 200;
            break;
        }
        break;
    case ${weapon_heavypistol}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 230;
            break;
        case 2:
            return 224;
            break;
        case 3:
            return 225;
            break;
        case 4:
            return 226;
            break;
        case 5:
            return 227;
            break;
        case 6:
            return 228;
            break;
        case 7:
            return 229;
            break;
        }
        break;
    case ${weapon_bullpuprifle}:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 223;
            break;
        case 2:
            return 217;
            break;
        case 3:
            return 218;
            break;
        case 4:
            return 219;
            break;
        case 5:
            return 220;
            break;
        case 6:
            return 221;
            break;
        case 7:
            return 222;
            break;
        }
        break;
    case 0x61012683:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 231;
            break;
        case 2:
            return 232;
            break;
        case 3:
            return 233;
            break;
        case 4:
            return 234;
            break;
        case 5:
            return 235;
            break;
        case 6:
            return 236;
            break;
        case 7:
            return 237;
            break;
        }
        break;
    case ${gadget_parachute}:
        if (a_2 == 1) {
            switch (a_1) {
            case 0:
                return 255;
                break;
            case 1:
                return 256;
                break;
            case 2:
                return 257;
                break;
            case 3:
                return 258;
                break;
            case 4:
                return 259;
                break;
            case 5:
                return 260;
                break;
            case 6:
                return 261;
                break;
            case 7:
                return 262;
                break;
            case 8:
                return 305;
                break;
            case 9:
                return 306;
                break;
            case 10:
                return 307;
                break;
            case 11:
                return 308;
                break;
            case 12:
                return 309;
                break;
            case 13:
                return 310;
                break;
            case 14:
                return 311;
                break;
            case 15:
                return 312;
                break;
            case 16:
                return 313;
                break;
            case 17:
                return 314;
                break;
            case 18:
                return 315;
                break;
            case 19:
                return 316;
                break;
            case 20:
                return 317;
                break;
            case 21:
                return 318;
                break;
            case 22:
                return 319;
                break;
            case 23:
                return 320;
                break;
            case 24:
                return 321;
                break;
            case 25:
                return 322;
                break;
            case 26:
                return 323;
                break;
            case 27:
                return 345;
                break;
            case 28:
                return 346;
                break;
            case 29:
                return 347;
                break;
            case 30:
                return 348;
                break;
            case 31:
                return 349;
                break;
            case 32:
                return 350;
                break;
            case 33:
                return 351;
                break;
            case 34:
                return 352;
                break;
            case 35:
                return 353;
                break;
            case 36:
                return 354;
                break;
            case 37:
                return 355;
                break;
            case 38:
                return 356;
                break;
            case 39:
                return 357;
                break;
            case 40:
                return 358;
                break;
            case 41:
                return 359;
                break;
            case 42:
                return 360;
                break;
            case 43:
                return 361;
                break;
            case 44:
                return 362;
                break;
            case 45:
                return 363;
                break;
            case 46:
                return 364;
                break;
            case 47:
                return 372;
                break;
            case 48:
                return 373;
                break;
            case 49:
                return 374;
                break;
            case 50:
                return 375;
                break;
            case 51:
                return 376;
                break;
            }
        } else if (a_2 == 2) {
            switch (a_1) {
            case 0:
                return 8;
                break;
            case 1:
                return 9;
                break;
            case 2:
                return 10;
                break;
            case 3:
                return 11;
                break;
            case 4:
                return 12;
                break;
            case 5:
                return 13;
                break;
            case 6:
                return 14;
                break;
            case 7:
                return 15;
                break;
            case 8:
                return 263;
                break;
            case 9:
                return 264;
                break;
            case 10:
                return 265;
                break;
            case 11:
                return 302;
                break;
            case 12:
                return 303;
                break;
            case 13:
                return 304;
                break;
            }
        } else if (a_2 == 3) {
            switch (a_1) {
            case 0:
                return 288;
                break;
            case 1:
                return 289;
                break;
            case 2:
                return 290;
                break;
            case 3:
                return 291;
                break;
            case 4:
                return 292;
                break;
            case 5:
                return 293;
                break;
            case 6:
                return 294;
                break;
            case 7:
                return 295;
                break;
            case 8:
                return 296;
                break;
            case 9:
                return 297;
                break;
            case 10:
                return 298;
                break;
            case 11:
                return 299;
                break;
            case 12:
                return 300;
                break;
            case 13:
                return 301;
                break;
            }
        } else if (a_2 == 4) {
            switch (a_1) {
            case 0:
                break;
            case 1:
                return 2;
                break;
            case 2:
                return 3;
                break;
            case 3:
                return 4;
                break;
            case 4:
                return 7;
                break;
            case 5:
                return 6;
                break;
            case 6:
                return 216;
                break;
            case 7:
                return 287;
                break;
            }
        }
        break;
    case 0x83839c4:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 254;
            break;
        case 2:
            return 248;
            break;
        case 3:
            return 249;
            break;
        case 4:
            return 250;
            break;
        case 5:
            return 251;
            break;
        case 6:
            return 252;
            break;
        case 7:
            return 253;
            break;
        }
        break;
    case 0xa89cb99e:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 266;
            break;
        case 2:
            return 267;
            break;
        case 3:
            return 268;
            break;
        case 4:
            return 269;
            break;
        case 5:
            return 270;
            break;
        case 6:
            return 271;
            break;
        case 7:
            return 272;
            break;
        }
        break;
    case 0x7f7497e5:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 273;
            break;
        case 2:
            return 274;
            break;
        case 3:
            return 275;
            break;
        case 4:
            return 276;
            break;
        case 5:
            return 277;
            break;
        case 6:
            return 278;
            break;
        case 7:
            return 279;
            break;
        }
        break;
    case 0x47757124:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 280;
            break;
        case 2:
            return 281;
            break;
        case 3:
            return 282;
            break;
        case 4:
            return 283;
            break;
        case 5:
            return 284;
            break;
        case 6:
            return 285;
            break;
        case 7:
            return 286;
            break;
        }
        break;
    case 0x3aabbbaa:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 324;
            break;
        case 2:
            return 325;
            break;
        case 3:
            return 326;
            break;
        case 4:
            return 327;
            break;
        case 5:
            return 328;
            break;
        case 6:
            return 329;
            break;
        case 7:
            return 330;
            break;
        }
        break;
    case 0xc734385a:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 331;
            break;
        case 2:
            return 332;
            break;
        case 3:
            return 333;
            break;
        case 4:
            return 334;
            break;
        case 5:
            return 335;
            break;
        case 6:
            return 336;
            break;
        case 7:
            return 337;
            break;
        }
        break;
    case 0x63ab0442:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 365;
            break;
        case 2:
            return 366;
            break;
        case 3:
            return 367;
            break;
        case 4:
            return 368;
            break;
        case 5:
            return 369;
            break;
        case 6:
            return 370;
            break;
        case 7:
            return 371;
            break;
        }
        break;
    case 0x6d544c99:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 344;
            break;
        case 2:
            return 338;
            break;
        case 3:
            return 339;
            break;
        case 4:
            return 340;
            break;
        case 5:
            return 341;
            break;
        case 6:
            return 342;
            break;
        case 7:
            return 343;
            break;
        }
        break;
    case 0xdc4db296:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 390;
            break;
        case 2:
            return 384;
            break;
        case 3:
            return 385;
            break;
        case 4:
            return 386;
            break;
        case 5:
            return 387;
            break;
        case 6:
            return 388;
            break;
        case 7:
            return 389;
            break;
        }
        break;
    case 0xa3d4d34:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 377;
            break;
        case 2:
            return 378;
            break;
        case 3:
            return 379;
            break;
        case 4:
            return 380;
            break;
        case 5:
            return 381;
            break;
        case 6:
            return 382;
            break;
        case 7:
            return 383;
            break;
        }
        break;
    case 0xdb1aa450:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 397;
            break;
        case 2:
            return 391;
            break;
        case 3:
            return 392;
            break;
        case 4:
            return 393;
            break;
        case 5:
            return 394;
            break;
        case 6:
            return 395;
            break;
        case 7:
            return 396;
            break;
        }
        break;
    case 0x624fe830:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 411;
            break;
        case 2:
            return 405;
            break;
        case 3:
            return 406;
            break;
        case 4:
            return 407;
            break;
        case 5:
            return 408;
            break;
        case 6:
            return 409;
            break;
        case 7:
            return 410;
            break;
        }
        break;
    case 0xef951fbb:
        switch (a_1) {
        case 0:
            break;
        case 1:
            return 404;
            break;
        case 2:
            return 398;
            break;
        case 3:
            return 399;
            break;
        case 4:
            return 400;
            break;
        case 5:
            return 401;
            break;
        case 6:
            return 402;
            break;
        case 7:
            return 403;
            break;
        }
        break;
    case 0xc1b3c3d1:
        switch (a_1) {
        case 1:
            return 412;
            break;
        case 2:
            return 413;
            break;
        case 3:
            return 414;
            break;
        case 4:
            return 415;
            break;
        case 5:
            return 416;
            break;
        case 6:
            return 417;
            break;
        case 7:
            return 418;
            break;
        }
        break;
    }
    return 0;
}

auto sub_1d864(auto a_0) {
    switch (a_0) {
    case ${weapon_pistol}:
        return "WTT_PIST";
        break;
    case ${weapon_combatpistol}:
        return "WTT_PIST_CBT";
        break;
    case ${weapon_appistol}:
        return "WTT_PIST_AP";
        break;
    case ${weapon_smg}:
        return "WTT_SMG";
        break;
    case ${weapon_microsmg}:
        return "WTT_SMG_MCR";
        break;
    case ${weapon_assaultrifle}:
        return "WTT_RIFLE_ASL";
        break;
    case ${weapon_carbinerifle}:
        return "WTT_RIFLE_CBN";
        break;
    case ${weapon_advancedrifle}:
        return "WTT_RIFLE_ADV";
        break;
    case ${weapon_mg}:
        return "WTT_MG";
        break;
    case ${weapon_combatmg}:
        return "WTT_MG_CBT";
        break;
    case ${weapon_pumpshotgun}:
        return "WTT_SG_PMP";
        break;
    case ${weapon_sawnoffshotgun}:
        return "WTT_SG_SOF";
        break;
    case ${weapon_assaultshotgun}:
        return "WTT_SG_ASL";
        break;
    case ${weapon_heavysniper}:
        return "WTT_SNIP_HVY";
        break;
    case ${weapon_remotesniper}:
        return "WTT_SNIP_RMT";
        break;
    case ${weapon_sniperrifle}:
        return "WTT_SNIP_RIF";
        break;
    case ${weapon_grenadelauncher}:
        return "WTT_GL";
        break;
    case ${weapon_rpg}:
        return "WTT_RPG";
        break;
    case ${weapon_minigun}:
        return "WTT_MINIGUN";
        break;
    case ${weapon_assaultsmg}:
        return "WTT_SMG_ASL";
        break;
    case ${weapon_bullpupshotgun}:
        return "WTT_SG_BLP";
        break;
    case 0x99aeeb3b:
        return "WTT_PIST_50";
        break;
    case ${weapon_bottle}:
        return "WTT_BOTTLE";
        break;
    case 0x61012683:
        return "WTT_GUSENBERG";
        break;
    case ${weapon_snspistol}:
        return "WTT_SNSPISTOL";
        break;
    case 0x83839c4:
        return "WTT_VPISTOL";
        break;
    case 0x92a27487:
        return "WTT_DAGGER";
        break;
    case 0x47757124:
        return "WTT_FLAREGUN";
        break;
    case 0xa89cb99e:
        return "WTT_MUSKET";
        break;
    case 0x7f7497e5:
        return "WTT_FWRKLNCHR";
        break;
    case 0xc734385a:
        return "WTT_HMKRIFLE";
        break;
    case 0x3aabbbaa:
        return "WTT_HVYSHOT";
        break;
    case 0xab564b93:
        return "WTT_PRXMINE";
        break;
    case 0x63ab0442:
        return "WTT_HOMLNCH";
        break;
    case 0xa3d4d34:
        return "WTT_COMBATPDW";
        break;
    case 0xd8df3c3c:
        return "WTT_KNUCKLE";
        break;
    case 0xdc4db296:
        return "WTT_MKPISTOL";
        break;
    case 0xdd5df8d9:
        return "WTT_MACHETE";
        break;
    case 0xdb1aa450:
        return "WTT_MCHPIST";
        break;
    case 0x8bb05fd7:
        return "WTT_FLASHLIGHT";
        break;
    case 0xef951fbb:
        return "WTT_DBSHGN";
        break;
    case 0x624fe830:
        return "WTT_CMPRIFLE";
        break;
    case 0xdfe37640:
        return "WTT_SWBLADE";
        break;
    case 0xc1b3c3d1:
        return "WTT_REVOLVER";
        break;
    default:
        if (sub_6469(a_0, &v_3) != -1) {
            return sub_122e5(&v_3._f17);
        }
        break;
    }
    return "WT_INVALID";
}

auto sub_1db51(auto a_0) {
    switch (a_0) {
    case ${weapon_knife}:
        v_3 = 184;
        break;
    case ${weapon_pistol}:
        v_3 = 249;
        break;
    case ${weapon_combatpistol}:
        v_3 = 259;
        break;
    case ${weapon_appistol}:
        v_3 = 279;
        break;
    case ${weapon_microsmg}:
        v_3 = 289;
        break;
    case ${weapon_smg}:
        v_3 = 299;
        break;
    case ${weapon_assaultrifle}:
        v_3 = 318;
        break;
    case ${weapon_carbinerifle}:
        v_3 = 327;
        break;
    case ${weapon_specialcarbine}:
        v_3 = 3212;
        break;
    case ${weapon_advancedrifle}:
        v_3 = 336;
        break;
    case ${weapon_mg}:
        v_3 = 345;
        break;
    case ${weapon_combatmg}:
        v_3 = 354;
        break;
    case ${weapon_pumpshotgun}:
        v_3 = 372;
        break;
    case ${weapon_sawnoffshotgun}:
        v_3 = 382;
        break;
    case ${weapon_assaultshotgun}:
        v_3 = 400;
        break;
    case ${weapon_stungun}:
        v_3 = 410;
        break;
    case ${weapon_sniperrifle}:
        v_3 = 419;
        break;
    case ${weapon_heavysniper}:
        v_3 = 428;
        break;
    case ${weapon_grenadelauncher}:
        v_3 = 437;
        break;
    case ${weapon_rpg}:
        v_3 = 444;
        break;
    case ${weapon_minigun}:
        v_3 = 453;
        break;
    case ${weapon_grenade}:
        v_3 = 461;
        break;
    case ${weapon_smokegrenade}:
        v_3 = 470;
        break;
    case ${weapon_stickybomb}:
        v_3 = 478;
        break;
    case ${weapon_molotov}:
        v_3 = 487;
        break;
    case ${weapon_petrolcan}:
        return 0;
        break;
    case ${weapon_nightstick}:
        v_3 = 192;
        break;
    case 0x99aeeb3b:
        v_3 = 269;
        break;
    case ${weapon_assaultmg}:
        v_3 = 363;
        break;
    case ${weapon_assaultsmg}:
        v_3 = 309;
        break;
    case ${weapon_assaultsniper}:
        return 0;
        break;
    case ${weapon_hammer}:
        v_3 = 220;
        break;
    case ${weapon_bullpupshotgun}:
        v_3 = 391;
        break;
    case ${weapon_bottle}:
        v_3 = 1727;
        break;
    case ${weapon_snspistol}:
        v_3 = 1737;
        break;
    case ${weapon_heavypistol}:
        v_3 = 3202;
        break;
    case ${weapon_bullpuprifle}:
        v_3 = 3222;
        break;
    case 0x61012683:
        v_3 = 3232;
        break;
    case 0x83839c4:
        v_3 = 3515;
        break;
    case 0x92a27487:
        v_3 = 3505;
        break;
    case 0xa89cb99e:
        v_3 = 3535;
        break;
    case 0x7f7497e5:
        v_3 = 3525;
        break;
    case 0x3aabbbaa:
        v_3 = 3613;
        break;
    case 0xc734385a:
        v_3 = 3623;
        break;
    case 0xab564b93:
        v_3 = 3639;
        break;
    case 0x63ab0442:
        v_3 = 3647;
        break;
    case 0xf9dcbf2d:
        v_3 = 3631;
        break;
    case 0xa3d4d34:
        v_3 = 3648;
        break;
    case 0xdc4db296:
        v_3 = 3665;
        break;
    case 0xd8df3c3c:
        v_3 = 3658;
        break;
    case 0xdd5df8d9:
        v_3 = 3675;
        break;
    case 0xdb1aa450:
        v_3 = 3683;
        break;
    case 0xef951fbb:
        v_3 = 3711;
        break;
    case 0x624fe830:
        v_3 = 3701;
        break;
    case 0x8bb05fd7:
        v_3 = 3721;
        break;
    default:
        return 0;
        break;
    }
    return sub_4b3f(v_3, -1, 0);
}

auto sub_1de6b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_2/*"16"*/ = "";
    a_3 = -1;
    a_4 = 0;
    switch (a_0) {
    case ${gadget_parachute}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 1:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 2:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 3:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 4:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 5:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 6:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 7:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 8:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 9:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 10:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 11:
            a_2/*"16"*/ = "PD_TINT0";
            a_3 = -1;
            a_4 = 0;
            break;
        case 12:
            a_2/*"16"*/ = "PD_TINT1";
            a_3 = -1;
            a_4 = 0;
            break;
        case 13:
            a_2/*"16"*/ = "PD_TINT2";
            a_3 = -1;
            a_4 = 0;
            break;
        case 14:
            a_2/*"16"*/ = "PD_TINT3";
            a_3 = -1;
            a_4 = 0;
            break;
        case 15:
            a_2/*"16"*/ = "PD_TINT4";
            a_3 = -1;
            a_4 = 0;
            break;
        case 16:
            a_2/*"16"*/ = "PD_TINT5";
            a_3 = -1;
            a_4 = 0;
            break;
        case 17:
            a_2/*"16"*/ = "PD_TINT6";
            a_3 = -1;
            a_4 = 0;
            break;
        case 18:
            a_2/*"16"*/ = "PD_TINT7";
            a_3 = -1;
            a_4 = 0;
            break;
        case 19:
            a_2/*"16"*/ = "PD_TINT8";
            a_3 = -1;
            a_4 = 0;
            break;
        case 20:
            a_2/*"16"*/ = "PD_TINT9";
            a_3 = -1;
            a_4 = 0;
            break;
        case 21:
            a_2/*"16"*/ = "PD_TINT10";
            a_3 = -1;
            a_4 = 0;
            break;
        case 22:
            a_2/*"16"*/ = "PD_TINT11";
            a_3 = -1;
            a_4 = 0;
            break;
        case 23:
            a_2/*"16"*/ = "PD_TINT12";
            a_3 = -1;
            a_4 = 0;
            break;
        case 24:
            a_2/*"16"*/ = "PD_TINT13";
            a_3 = -1;
            a_4 = 0;
            break;
        case 25:
            a_2/*"16"*/ = "PD_TINT14";
            a_3 = -1;
            a_4 = 0;
            break;
        }
        break;
    default:
        if (a_0 == 0xfc508e33) {
            switch (a_1) {
            case 0:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 1:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 2:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 3:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 4:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 5:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 6:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 7:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            }
        } else { 
            switch (a_1) {
            case 0:
                a_2/*"16"*/ = "";
                a_3 = -1;
                a_4 = 0;
                break;
            case 1:
                a_2/*"16"*/ = "GSM_TINT_KILL";
                a_3 = 200;
                a_4 = 1;
                break;
            case 2:
                a_2/*"16"*/ = "GSM_TINT_CASH";
                a_3 = -1;
                a_4 = 0;
                break;
            case 3:
                a_2/*"16"*/ = "GSM_TINT_RANK";
                a_3 = 50;
                a_4 = 0;
                break;
            case 4:
                a_2/*"16"*/ = "GSM_TINT_KILL";
                a_3 = 100;
                a_4 = 1;
                break;
            case 5:
                a_2/*"16"*/ = "GSM_TINT_KILL";
                a_3 = 600;
                a_4 = 1;
                break;
            case 6:
                a_2/*"16"*/ = "GSM_TINT_KILL";
                a_3 = 400;
                a_4 = 1;
                break;
            case 7:
                a_2/*"16"*/ = "GSM_TINT_AWARD";
                a_3 = -1;
                a_4 = 0;
                break;
            }
        }
        break;
    }
    return GAMEPLAY::GET_HASH_KEY(a_2) != 0;
}

auto sub_1e2cd(auto a_0, auto a_1, auto a_2) {
    if (a_0 != 0) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (a_0 == ${gadget_parachute})) && sub_1e985(PLAYER::PLAYER_ID())) {
            return 0;
        }
        if (a_2 == 5) {
            return 1;
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (((((((((a_0 == ${weapon_assaultmg}) || (a_0 == ${weapon_assaultsniper})) || (a_0 == ${weapon_bullpupshotgun})) || (a_0 == ${weapon_heavyrifle})) || (a_0 == ${weapon_loudhailer})) || (a_0 == 0x99aeeb3b)) || (a_0 == ${weapon_programmablear})) || (a_0 == ${weapon_rubbergun})) || (a_0 == ${weapon_hammer})) {
                return 1;
            }
        } else if ((((((((((a_0 == ${weapon_assaultmg}) || (a_0 == ${weapon_assaultsmg})) || (a_0 == ${weapon_assaultsniper})) || (a_0 == ${weapon_bullpupshotgun})) || (a_0 == ${weapon_heavyrifle})) || (a_0 == ${weapon_loudhailer})) || (a_0 == 0x99aeeb3b)) || (a_0 == ${weapon_programmablear})) || (a_0 == ${weapon_rubbergun})) || (a_0 == ${weapon_hammer})) {
            return 1;
        }
        v_2C = sub_6469(a_0, &v_5);
        if (v_2C != -1) {
            return 1;
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (((a_0 == ${gadget_parachute}) && (a_2 == 4)) && (a_1 == 6)) {
                if (!sub_1bdbd(6)) {
                    return 0;
                }
            }
            if (((a_0 == ${gadget_parachute}) && (a_2 == 4)) && (a_1 == 7)) {
                if ((!sub_7282()) || ((!g_40001._f1822) && (!sub_1e5c5(3602, -1, -1)))) {
                    return 0;
                }
            }
            if (((a_0 != ${gadget_parachute}) && (a_2 == 0)) && (a_1 == 2)) {
                v_2D = sub_1be7f(a_0, a_1, a_2);
                if (sub_273c7(v_2D) || sub_1bdbd(14)) {
                    return 1;
                }
            }
            v_2D = sub_1be7f(a_0, a_1, a_2);
            if (v_2D != 0) {
                return sub_273c7(v_2D);
            }
            if (a_0 == 0x47757124) {
                v_2E/*"16"*/ = "WT_FLAREGUN";
                return !sub_1e527(v_2E);
            }
        }
    }
    return 1;
}

auto sub_1e527(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (GAMEPLAY::GET_HASH_KEY(&a_0)) {
    case 0xc8f210b7:
        return !sub_1e5c5(3755, -1, -1);
        break;
    case 0xaa91e3a6:
        return !sub_1e5c5(3760, -1, -1);
        break;
    case 0xc4c92365:
    case 0x18383565:
        return !sub_1e5c5(3757, -1, -1);
        break;
    case 0x947707cd:
        return !sub_1e5c5(3756, -1, -1);
        break;
    case 0x61f4ad5e:
        return !sub_1e5c5(3758, -1, -1);
        break;
    case 0xec0f288d:
        return !sub_1e5c5(3759, -1, -1);
        break;
    }
    return 0;
}

auto sub_1e5c5(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    if (a_1 == -1) {
        a_1 = sub_4ba5();
    }
    v_6 = sub_1e7ba(a_0, a_1);
    v_7 = sub_1e602(a_0);
    if (0 != v_6) {
        v_5 = STATS::STAT_GET_BOOL_MASKED(v_6, v_7, a_2);
    }
    return v_5;
}

auto sub_1e602(auto a_0) {
    v_3 = 0;
    if ((a_0 >= 0) && (a_0 < 192)) {
        v_3 = (a_0 - 0) - (STATS::_F4D8E7AC2A27758C(a_0 - 0) * 64);
    } else if ((a_0 >= 192) && (a_0 < 384)) {
        v_3 = (a_0 - 192) - (STATS::_F4D8E7AC2A27758C(a_0 - 192) * 64);
    } else if ((a_0 >= 513) && (a_0 < 705)) {
        v_3 = (a_0 - 513) - (STATS::_F4D8E7AC2A27758C(a_0 - 513) * 64);
    } else if ((a_0 >= 705) && (a_0 < 1281)) {
        v_3 = (a_0 - 705) - (STATS::_F4D8E7AC2A27758C(a_0 - 705) * 64);
    } else if ((a_0 >= 2919) && (a_0 < 3111)) {
        v_3 = (a_0 - 2919) - (STATS::_F4D8E7AC2A27758C(a_0 - 2919) * 64);
    } else if ((a_0 >= 3111) && (a_0 < 3879)) {
        v_3 = (a_0 - 3111) - (STATS::_F4D8E7AC2A27758C(a_0 - 3111) * 64);
    } else if ((a_0 >= 4335) && (a_0 < 4399)) {
        v_3 = (a_0 - 4335) - (STATS::_F4D8E7AC2A27758C(a_0 - 4335) * 64);
    } else if ((a_0 >= 4207) && (a_0 < 4335)) {
        v_3 = (a_0 - 4207) - (STATS::_F4D8E7AC2A27758C(a_0 - 4207) * 64);
    } else if ((a_0 >= 6029) && (a_0 < 6413)) {
        v_3 = (a_0 - 6029) - (STATS::_F4D8E7AC2A27758C(a_0 - 6029) * 64);
    } else if ((a_0 >= 7385) && (a_0 < 7449)) {
        v_3 = (a_0 - 7385) - (STATS::_F4D8E7AC2A27758C(a_0 - 7385) * 64);
    }
    return v_3;
}

auto sub_1e7ba(auto a_0, auto a_1) {
    if (a_1 == -1) {
        a_1 = sub_4ba5();
    }
    v_4 = 0;
    if ((a_0 >= 0) && (a_0 < 192)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 0, 0, 1, a_1);
    } else if ((a_0 >= 192) && (a_0 < 384)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 192, 1, 1, a_1);
    } else if ((a_0 >= 513) && (a_0 < 705)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 513, 0, 0, 0);
    } else if ((a_0 >= 705) && (a_0 < 1281)) {
        v_4 = STATS::_80C75307B1C42837(a_0 - 705, 1, 0, 0);
    } else if ((a_0 >= 2919) && (a_0 < 3111)) {
        v_4 = STATS::_C4BB08EE7907471E(a_0 - 2919, 0, 0, 0);
    } else if ((a_0 >= 3111) && (a_0 < 3879)) {
        v_4 = STATS::_C4BB08EE7907471E(a_0 - 3111, 0, 1, a_1);
    } else if ((a_0 >= 4335) && (a_0 < 4399)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 4335, 0, 0, 0, "_NGPSTAT_BOOL");
    } else if ((a_0 >= 4207) && (a_0 < 4335)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 4207, 0, 1, a_1, "_NGPSTAT_BOOL");
    } else if ((a_0 >= 6029) && (a_0 < 6413)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 6029, 0, 1, a_1, "_NGTATPSTAT_BOOL");
    } else if ((a_0 >= 7321) && (a_0 < 7385)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 7321, 0, 0, 0, "_NGPSTAT_BOOL");
    } else if ((a_0 >= 7385) && (a_0 < 7449)) {
        v_4 = STATS::_BA52FF538ED2BC71(a_0 - 7385, 0, 1, a_1, "_NGPSTAT_BOOL");
    }
    return v_4;
}

auto sub_1e985(auto a_0) {
    return g_24E1AF[a_0/*306*/]._f72 == 2;
}

auto sub_1e99a(auto a_0, auto a_1, auto a_2) {
    v_5 = 0;
    if (is_in_transition) {
        if (sub_1f8a7(a_0, a_1, -1)) {
            v_5 = 1;
        }
    } else if (sub_1e9e1(sub_10943(), a_1, a_0)) {
        v_5 = 1;
    }
    a_2 = WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), a_1, a_0);
    return v_5;
}

auto sub_1e9e1(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        v_5 = sub_1f636(a_0, a_1, a_2);
        v_6 = sub_1ea29(a_2, a_1);
        v_7 = sub_1ea1c(v_6);
        return GAMEPLAY::IS_BIT_SET(v_5, v_7);
    }
    return 0;
}

auto sub_1ea1c(auto a_0) {
    return a_0 % 32;
}

auto sub_1ea29(auto a_0, auto a_1) {
    return sub_1ea39(a_0, a_1);
}

auto sub_1ea39(auto a_0, auto a_1) {
    switch (a_1) {
    case ${weapon_pistol}:
        switch (a_0) {
        case 0xfed0fd71:
            return 1;
            break;
        case 0xed265a1c:
            return 2;
            break;
        case ${component_at_pi_flsh}:
            return 3;
            break;
        case 0x65ea7ebb:
            return 4;
            break;
        case 0xd7391086:
            return 175;
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_0) {
        case 0x721b079:
            return 5;
            break;
        case 0xd67b4f2d:
            return 6;
            break;
        case ${component_at_pi_flsh}:
            return 7;
            break;
        case ${component_at_pi_supp}:
            return 8;
            break;
        case 0xc6654d72:
            return 186;
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_0) {
        case 0x31c4b22a:
            return 11;
            break;
        case 0x249a17d5:
            return 12;
            break;
        case ${component_at_pi_flsh}:
            return 13;
            break;
        case ${component_at_pi_supp}:
            return 14;
            break;
        case 0x9b76c72c:
            return 164;
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_0) {
        case 0xcb48aef0:
            return 15;
            break;
        case 0x10e6ba2b:
            return 16;
            break;
        case ${component_at_pi_flsh}:
            return 17;
            break;
        case ${component_at_scope_macro}:
            return 18;
            break;
        case ${component_at_ar_supp_02}:
            return 19;
            break;
        case 0x487aae09:
            return 174;
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_0) {
        case 0x26574997:
            return 22;
            break;
        case 0x350966fb:
            return 23;
            break;
        case ${component_at_ar_flsh}:
            return 24;
            break;
        case 0x3cc6ba57:
            return 25;
            break;
        case ${component_at_pi_supp}:
            return 26;
            break;
        case 0x27872c90:
            return 179;
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_0) {
        case 0xbe5eea16:
            return 27;
            break;
        case 0xb1214f9b:
            return 28;
            break;
        case ${component_at_ar_afgrip}:
            return 29;
            break;
        case ${component_at_ar_flsh}:
            return 30;
            break;
        case ${component_at_scope_macro}:
            return 31;
            break;
        case ${component_at_ar_supp_02}:
            return 32;
            break;
        case 0x4ead7533:
            return 165;
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_0) {
        case 0x9fbe33ec:
            return 33;
            break;
        case 0x91109691:
            return 34;
            break;
        case 0x75414f30:
            return 35;
            break;
        case ${component_at_ar_afgrip}:
            return 36;
            break;
        case ${component_at_ar_flsh}:
            return 37;
            break;
        case ${component_at_scope_medium}:
            return 38;
            break;
        case ${component_at_ar_supp}:
            return 39;
            break;
        case 0xd89b9658:
            return 168;
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_0) {
        case 0xfa8fa10f:
            return 44;
            break;
        case 0x8ec1c979:
            return 45;
            break;
        case ${component_at_ar_flsh}:
            return 47;
            break;
        case ${component_at_scope_small}:
            return 48;
            break;
        case ${component_at_ar_supp}:
            return 49;
            break;
        case 0x377cd377:
            return 163;
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_0) {
        case 0xf434ef84:
            return 50;
            break;
        case 0x82158b47:
            return 51;
            break;
        case 0x3c00afed:
            return 52;
            break;
        case 0xd6dababe:
            return 187;
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_0) {
        case 0xe1ffb34a:
            return 53;
            break;
        case 0xd6c59cd6:
            return 54;
            break;
        case ${component_at_ar_afgrip}:
            return 55;
            break;
        case ${component_at_scope_medium}:
            return 56;
            break;
        case 0x92feccdd:
            return 188;
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_0) {
        case ${component_at_sr_supp}:
            return 59;
            break;
        case ${component_at_ar_flsh}:
            return 60;
            break;
        case 0xa2d79ddb:
            return 193;
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_0) {
        case 0x94e81bc7:
            return 64;
            break;
        case 0x86bd7f72:
            return 65;
            break;
        case ${component_at_ar_afgrip}:
            return 66;
            break;
        case ${component_at_ar_flsh}:
            return 67;
            break;
        case ${component_at_ar_supp}:
            return 68;
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_0) {
        case 0x9bc64089:
            return 69;
            break;
        case ${component_at_scope_large}:
            return 70;
            break;
        case ${component_at_scope_max}:
            return 71;
            break;
        case ${component_at_ar_supp_02}:
            return 72;
            break;
        case 0x4032b5e7:
            return 180;
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_0) {
        case 0x476f52f4:
            return 76;
            break;
        case ${component_at_scope_max}:
            return 77;
            break;
        case ${component_at_scope_large}:
            return 82;
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_0) {
        case ${component_at_ar_afgrip}:
            return 78;
            break;
        case ${component_at_ar_flsh}:
            return 79;
            break;
        case ${component_at_scope_small}:
            return 80;
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_0) {
        case 0xc8de6f06:
            return 81;
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_0) {
        case 0x8d1307b0:
            return 83;
            break;
        case 0xbb46e417:
            return 84;
            break;
        case ${component_at_ar_flsh}:
            return 85;
            break;
        case ${component_at_scope_macro}:
            return 86;
            break;
        case ${component_at_ar_supp_02}:
            return 87;
            break;
        case 0x278c78af:
            return 189;
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_0) {
        case ${component_at_ar_afgrip}:
            return 88;
            break;
        case ${component_at_ar_flsh}:
            return 89;
            break;
        case ${component_at_ar_supp_02}:
            return 90;
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_0) {
        case 0x2297be19:
            return 91;
            break;
        case 0xd9d3ac92:
            return 92;
            break;
        case ${component_at_pi_flsh}:
            return 93;
            break;
        case ${component_at_ar_supp_02}:
            return 94;
            break;
        case 0x77b8ab2f:
            return 176;
            break;
        }
        break;
    case ${weapon_assaultsniper}:
        switch (a_0) {
        case 0xbaab157:
            return 95;
            break;
        case ${component_at_scope_large}:
            return 96;
            break;
        case ${component_at_scope_max}:
            return 97;
            break;
        case ${component_at_ar_supp}:
            return 98;
            break;
        }
        break;
    case ${weapon_heavyrifle}:
        switch (a_0) {
        case 0x5af49386:
            return 99;
            break;
        case 0x6cbf371b:
            return 100;
            break;
        case ${component_at_ar_afgrip}:
            return 101;
            break;
        case ${component_at_ar_flsh}:
            return 102;
            break;
        case ${component_at_scope_medium}:
            return 103;
            break;
        case ${component_at_ar_supp}:
            return 104;
            break;
        }
        break;
    case ${weapon_assaultmg}:
        switch (a_0) {
        case 0xcaebd246:
            return 105;
            break;
        case 0xe1c5fffa:
            return 106;
            break;
        case ${component_at_ar_afgrip}:
            return 107;
            break;
        case ${component_at_scope_medium}:
            return 108;
            break;
        }
        break;
    case ${weapon_programmablear}:
        switch (a_0) {
        case 0xf8955d89:
            return 109;
            break;
        case 0x3e7e6956:
            return 110;
            break;
        }
        break;
    case ${weapon_specialcarbine}:
        switch (a_0) {
        case ${component_specialcarbine_clip_01}:
            return 111;
            break;
        case ${component_specialcarbine_clip_02}:
            return 112;
            break;
        case ${component_at_ar_afgrip}:
            return 113;
            break;
        case ${component_at_ar_flsh}:
            return 114;
            break;
        case ${component_at_scope_medium}:
            return 115;
            break;
        case ${component_at_ar_supp_02}:
            return 116;
            break;
        case 0x730154f2:
            return 190;
            break;
        }
        break;
    case ${weapon_snspistol}:
        switch (a_0) {
        case ${component_snspistol_clip_01}:
            return 117;
            break;
        case ${component_snspistol_clip_02}:
            return 118;
            break;
        case ${component_at_pi_flsh}:
            return 119;
            break;
        case ${component_at_pi_supp}:
            return 120;
            break;
        case 0x8033ecaf:
            return 191;
            break;
        }
        break;
    case ${weapon_heavypistol}:
        switch (a_0) {
        case ${component_heavypistol_clip_01}:
            return 121;
            break;
        case ${component_heavypistol_clip_02}:
            return 122;
            break;
        case ${component_at_pi_flsh}:
            return 123;
            break;
        case ${component_at_pi_supp}:
            return 124;
            break;
        case 0x7a6a7b7b:
            return 171;
            break;
        }
        break;
    case ${weapon_bullpuprifle}:
        switch (a_0) {
        case ${component_bullpuprifle_clip_01}:
            return 131;
            break;
        case ${component_bullpuprifle_clip_02}:
            return 132;
            break;
        case ${component_at_ar_flsh}:
            return 127;
            break;
        case ${component_at_ar_supp}:
            return 128;
            break;
        case ${component_at_scope_small}:
            return 129;
            break;
        case ${component_at_ar_afgrip}:
            return 130;
            break;
        case 0xa857bc78:
            return 192;
            break;
        }
        break;
    case 0x61012683:
        switch (a_0) {
        case 0x1ce5a6a5:
            return 125;
            break;
        case 0xeac8c270:
            return 126;
            break;
        }
        break;
    case 0x83839c4:
        switch (a_0) {
        case 0x45a3b6bb:
            return 133;
            break;
        case 0x33ba12e8:
            return 134;
            break;
        case ${component_at_pi_supp}:
            return 136;
            break;
        }
        break;
    case 0x3aabbbaa:
        switch (a_0) {
        case 0x324f2d5f:
            return 137;
            break;
        case 0x971cf6fd:
            return 140;
            break;
        case ${component_at_ar_flsh}:
            return 145;
            break;
        case ${component_at_ar_supp_02}:
            return 146;
            break;
        case ${component_at_ar_afgrip}:
            return 147;
            break;
        }
        break;
    case 0xc734385a:
        switch (a_0) {
        case 0xd83b4141:
            return 138;
            break;
        case 0xccfd2ac5:
            return 139;
            break;
        case 0x1c221b1a:
            return 141;
            break;
        case ${component_at_ar_flsh}:
            return 142;
            break;
        case ${component_at_ar_supp}:
            return 143;
            break;
        case ${component_at_ar_afgrip}:
            return 144;
            break;
        case 0x161e9241:
            return 172;
            break;
        }
        break;
    case 0xa3d4d34:
        switch (a_0) {
        case 0x4317f19e:
            return 149;
            break;
        case 0x334a5203:
            return 150;
            break;
        case ${component_at_ar_flsh}:
            return 151;
            break;
        case ${component_at_scope_small}:
            return 152;
            break;
        case ${component_at_ar_afgrip}:
            return 153;
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_0) {
        case 0x85a64df9:
            return 178;
            break;
        }
        break;
    case 0xdc4db296:
        switch (a_0) {
        case 0xcb9e41ed:
            return 148;
            break;
        }
        break;
    case 0xd8df3c3c:
        switch (a_0) {
        case 0xc613f685:
            return 154;
            break;
        case 0xeed9fd63:
            return 155;
            break;
        case 0x50910c31:
            return 156;
            break;
        case 0x9761d9dc:
            return 157;
            break;
        case 0x7decfe30:
            return 158;
            break;
        case 0x3f4e8aa6:
            return 159;
            break;
        case 0x8b808bb:
            return 160;
            break;
        case 0xe28babef:
            return 161;
            break;
        case 0x7af3f785:
            return 162;
            break;
        }
        break;
    case 0xdb1aa450:
        switch (a_0) {
        case 0x476e85ff:
            return 184;
            break;
        case 0xb92c6979:
            return 185;
            break;
        case ${component_at_pi_supp}:
            return 183;
            break;
        }
        break;
    case 0xdfe37640:
        switch (a_0) {
        case 0x5b3e7db6:
            return 194;
            break;
        case 0xe7939662:
            return 195;
            break;
        }
        break;
    case 0xc1b3c3d1:
        switch (a_0) {
        case 0xe9867ce3:
            return 196;
            break;
        case 0x16ee3040:
            return 197;
            break;
        case 0x9493b80d:
            return 198;
            break;
        }
        break;
    case 0x624fe830:
        switch (a_0) {
        case 0x513f0a63:
            return 199;
            break;
        case 0x59ff9bf8:
            return 200;
            break;
        }
        break;
    }
    return 0;
}

auto sub_1f636(auto a_0, auto a_1, auto a_2) {
    v_6 = sub_1ea29(a_2, a_1);
    v_7 = sub_1f89a(v_6);
    switch (v_7) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x407407aa, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xd3eebb4e, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x6aaef0a, &v_5, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xae46634d, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xb9588622, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xf4614a77, &v_5, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xd25eab9d, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x3d718e5a, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xe96f3493, &v_5, -1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xbf938607, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x6b5d6a31, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xdaac970e, &v_5, -1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x876d959c, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x9058b423, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xcd6f7c94, &v_5, -1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xf4fdf0db, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x7f15119c, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xbb31d819, &v_5, -1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xce382338, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x20e9795, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xcc667a86, &v_5, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_5;
}

auto sub_1f89a(auto a_0) {
    return a_0 / 32;
}

auto sub_1f8a7(auto a_0, auto a_1, auto a_2) {
    if (sub_1bd98()) {
        return 0;
    }
    v_5 = sub_1f8dc(a_0, a_1, a_2);
    v_6 = sub_1ea29(a_0, a_1);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

auto sub_1f8dc(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_4b3f(sub_1f8f7(a_0, a_1), a_2, 0);
    return v_5;
}

auto sub_1f8f7(auto a_0, auto a_1) {
    v_4 = sub_1ea29(a_0, a_1);
    v_5 = sub_10156(v_4);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_5) {
        case 0:
            return 800;
            break;
        case 1:
            return 801;
            break;
        case 2:
            return 802;
            break;
        case 3:
            return 803;
            break;
        case 4:
            return 1740;
            break;
        case 5:
            return 2406;
            break;
        case 6:
            return 2798;
            break;
        }
    }
    return 3790;
}

auto sub_1f9b4(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_0) {
    case ${weapon_pistol}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xfed0fd71, a_0);
            a_3/*"16"*/ = sub_20976(0xfed0fd71, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0xed265a1c, a_0);
            a_3/*"16"*/ = sub_20976(0xed265a1c, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(0x65ea7ebb, a_0);
            a_3/*"16"*/ = sub_20976(0x65ea7ebb, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(0xd7391086, a_0);
            a_3/*"16"*/ = sub_20976(0xd7391086, a_0);
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x721b079, a_0);
            a_3/*"16"*/ = sub_20976(0x721b079, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0xd67b4f2d, a_0);
            a_3/*"16"*/ = sub_20976(0xd67b4f2d, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_supp}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(0xc6654d72, a_0);
            a_3/*"16"*/ = sub_20976(0xc6654d72, a_0);
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x31c4b22a, a_0);
            a_3/*"16"*/ = sub_20976(0x31c4b22a, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x249a17d5, a_0);
            a_3/*"16"*/ = sub_20976(0x249a17d5, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_supp}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(0x9b76c72c, a_0);
            a_3/*"16"*/ = sub_20976(0x9b76c72c, a_0);
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xcb48aef0, a_0);
            a_3/*"16"*/ = sub_20976(0xcb48aef0, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x10e6ba2b, a_0);
            a_3/*"16"*/ = sub_20976(0x10e6ba2b, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_macro}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_macro}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp_02}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp_02}, a_0);
            break;
        case 5:
            a_2/*"16"*/ = sub_20eda(0x487aae09, a_0);
            a_3/*"16"*/ = sub_20976(0x487aae09, a_0);
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x26574997, a_0);
            a_3/*"16"*/ = sub_20976(0x26574997, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x350966fb, a_0);
            a_3/*"16"*/ = sub_20976(0x350966fb, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(0x3cc6ba57, a_0);
            a_3/*"16"*/ = sub_20976(0x3cc6ba57, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_supp}, a_0);
            break;
        case 5:
            a_2/*"16"*/ = sub_20eda(0x27872c90, a_0);
            a_3/*"16"*/ = sub_20976(0x27872c90, a_0);
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xbe5eea16, a_0);
            a_3/*"16"*/ = sub_20976(0xbe5eea16, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0xb1214f9b, a_0);
            a_3/*"16"*/ = sub_20976(0xb1214f9b, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_afgrip}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_afgrip}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_macro}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_macro}, a_0);
            break;
        case 5:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp_02}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp_02}, a_0);
            break;
        case 6:
            a_2/*"16"*/ = sub_20eda(0x4ead7533, a_0);
            a_3/*"16"*/ = sub_20976(0x4ead7533, a_0);
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x9fbe33ec, a_0);
            a_3/*"16"*/ = sub_20976(0x9fbe33ec, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x91109691, a_0);
            a_3/*"16"*/ = sub_20976(0x91109691, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(0x75414f30, a_0);
            a_3/*"16"*/ = sub_20976(0x75414f30, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_afgrip}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_afgrip}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 5:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_medium}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_medium}, a_0);
            break;
        case 6:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp}, a_0);
            break;
        case 7:
            a_2/*"16"*/ = sub_20eda(0xd89b9658, a_0);
            a_3/*"16"*/ = sub_20976(0xd89b9658, a_0);
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xfa8fa10f, a_0);
            a_3/*"16"*/ = sub_20976(0xfa8fa10f, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x8ec1c979, a_0);
            a_3/*"16"*/ = sub_20976(0x8ec1c979, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_small}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_small}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp}, a_0);
            break;
        case 5:
            a_2/*"16"*/ = sub_20eda(0x377cd377, a_0);
            a_3/*"16"*/ = sub_20976(0x377cd377, a_0);
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xf434ef84, a_0);
            a_3/*"16"*/ = sub_20976(0xf434ef84, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x82158b47, a_0);
            a_3/*"16"*/ = sub_20976(0x82158b47, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(0x3c00afed, a_0);
            a_3/*"16"*/ = sub_20976(0x3c00afed, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(0xd6dababe, a_0);
            a_3/*"16"*/ = sub_20976(0xd6dababe, a_0);
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xe1ffb34a, a_0);
            a_3/*"16"*/ = sub_20976(0xe1ffb34a, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0xd6c59cd6, a_0);
            a_3/*"16"*/ = sub_20976(0xd6c59cd6, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_afgrip}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_afgrip}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_medium}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_medium}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(0x92feccdd, a_0);
            a_3/*"16"*/ = sub_20976(0x92feccdd, a_0);
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(${component_at_sr_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_sr_supp}, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(0xa2d79ddb, a_0);
            a_3/*"16"*/ = sub_20976(0xa2d79ddb, a_0);
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x94e81bc7, a_0);
            a_3/*"16"*/ = sub_20976(0x94e81bc7, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0x86bd7f72, a_0);
            a_3/*"16"*/ = sub_20976(0x86bd7f72, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_afgrip}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_afgrip}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp}, a_0);
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x9bc64089, a_0);
            a_3/*"16"*/ = sub_20976(0x9bc64089, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp_02}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp_02}, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_large}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_large}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_max}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_max}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(0x4032b5e7, a_0);
            a_3/*"16"*/ = sub_20976(0x4032b5e7, a_0);
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x476f52f4, a_0);
            a_3/*"16"*/ = sub_20976(0x476f52f4, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_large}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_large}, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_max}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_max}, a_0);
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_afgrip}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_afgrip}, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_small}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_small}, a_0);
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0xc8de6f06, a_0);
            a_3/*"16"*/ = sub_20976(0xc8de6f06, a_0);
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x8d1307b0, a_0);
            a_3/*"16"*/ = sub_20976(0x8d1307b0, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0xbb46e417, a_0);
            a_3/*"16"*/ = sub_20976(0xbb46e417, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_scope_macro}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_scope_macro}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp_02}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp_02}, a_0);
            break;
        case 5:
            a_2/*"16"*/ = sub_20eda(0x278c78af, a_0);
            a_3/*"16"*/ = sub_20976(0x278c78af, a_0);
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_afgrip}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_afgrip}, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_flsh}, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp_02}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp_02}, a_0);
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x2297be19, a_0);
            a_3/*"16"*/ = sub_20976(0x2297be19, a_0);
            break;
        case 1:
            a_2/*"16"*/ = sub_20eda(0xd9d3ac92, a_0);
            a_3/*"16"*/ = sub_20976(0xd9d3ac92, a_0);
            break;
        case 2:
            a_2/*"16"*/ = sub_20eda(${component_at_pi_flsh}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_pi_flsh}, a_0);
            break;
        case 3:
            a_2/*"16"*/ = sub_20eda(${component_at_ar_supp_02}, a_0);
            a_3/*"16"*/ = sub_20976(${component_at_ar_supp_02}, a_0);
            break;
        case 4:
            a_2/*"16"*/ = sub_20eda(0x77b8ab2f, a_0);
            a_3/*"16"*/ = sub_20976(0x77b8ab2f, a_0);
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_1) {
        case 0:
            a_2/*"16"*/ = sub_20eda(0x85a64df9, a_0);
            a_3/*"16"*/ = sub_20976(0x85a64df9, a_0);
            break;
        }
        break;
    default:
        v_6 = sub_6469(a_0, &v_8);
        if (v_6 != -1) {
            for (v_7 = 0; v_7 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_6); v_7 += 1) {
                if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_6, v_7, &v_2F)) {
                    if (v_7 == a_1) {
                        a_2/*"16"*/ = v_2F._f6;
                        a_3/*"16"*/ = v_2F._fE;
                    }
                }
            }
        }
        break;
    }
    return (GAMEPLAY::GET_HASH_KEY(a_2) != 0) || (GAMEPLAY::GET_HASH_KEY(a_3) != 0);
}

auto sub_20976(auto a_0, auto a_1) {
    switch (a_0) {
    case 0:
        return "WCD_INVALID";
        break;
    case 0x75414f30:
        return "WCD_AT_RAIL";
        break;
    case ${component_at_ar_afgrip}:
        return "WCD_GRIP";
        break;
    case ${component_at_pi_flsh}:
        return "WCD_FLASH";
        break;
    case ${component_at_ar_flsh}:
        return "WCD_FLASH";
        break;
    case ${component_at_scope_macro}:
        return "WCD_SCOPE_MAC";
        break;
    case 0x3cc6ba57:
        return "WCD_SCOPE_MAC";
        break;
    case ${component_at_scope_small}:
        return "WCD_SCOPE_SML";
        break;
    case 0x3c00afed:
        return "WCD_SCOPE_SML";
        break;
    case ${component_at_scope_medium}:
        return "WCD_SCOPE_MED";
        break;
    case ${component_at_scope_large}:
        return "WCD_SCOPE_LRG";
        break;
    case ${component_at_scope_max}:
        return "WCD_SCOPE_MAX";
        break;
    case ${component_at_pi_supp}:
        return "WCD_PI_SUPP";
        break;
    case 0x65ea7ebb:
        return "WCD_PI_SUPP";
        break;
    case ${component_at_ar_supp}:
        return "WCD_AR_SUPP";
        break;
    case ${component_at_ar_supp_02}:
        return "WCD_AR_SUPP2";
        break;
    case ${component_at_sr_supp}:
        return "WCD_SR_SUPP";
        break;
    case 0xfed0fd71:
        return "WCD_P_CLIP1";
        break;
    case 0xed265a1c:
        return "WCD_P_CLIP2";
        break;
    case 0x721b079:
        return "WCD_CP_CLIP1";
        break;
    case 0xd67b4f2d:
        return "WCD_CP_CLIP2";
        break;
    case 0x31c4b22a:
        return "WCD_AP_CLIP1";
        break;
    case 0x249a17d5:
        return "WCD_AP_CLIP2";
        break;
    case 0xcb48aef0:
        return "WCDMSMG_CLIP1";
        break;
    case 0x10e6ba2b:
        return "WCDMSMG_CLIP2";
        break;
    case 0x26574997:
        return "WCD_SMG_CLIP1";
        break;
    case 0x350966fb:
        return "WCD_SMG_CLIP2";
        break;
    case 0xbe5eea16:
        return "WCD_AR_CLIP1";
        break;
    case 0xb1214f9b:
        return "WCD_AR_CLIP2";
        break;
    case 0x9fbe33ec:
        return "WCD_CR_CLIP1";
        break;
    case 0x91109691:
        return "WCD_CR_CLIP2";
        break;
    case 0xfa8fa10f:
        return "WCD_ADR_CLIP1";
        break;
    case 0x8ec1c979:
        return "WCD_ADR_CLIP2";
        break;
    case 0xf434ef84:
        return "WCD_MG_CLIP1";
        break;
    case 0x82158b47:
        return "WCD_MG_CLIP2";
        break;
    case 0xe1ffb34a:
        return "WCDCMG_CLIP1";
        break;
    case 0xd6c59cd6:
        return "WCDCMG_CLIP2";
        break;
    case 0x94e81bc7:
        return "WCD_AS_CLIP1";
        break;
    case 0x86bd7f72:
        return "WCD_AS_CLIP2";
        break;
    case 0x9bc64089:
        return "WCD_SR_CLIP1";
        break;
    case 0x476f52f4:
        return "WCD_HS_CLIP1";
        break;
    case 0xc8de6f06:
        return "WCD_MIG_CLIP2";
        break;
    case 0x8d1307b0:
        return "WCD_ASMG_CLIP1";
        break;
    case 0xbb46e417:
        return "WCD_ASMG_CLIP2";
        break;
    case 0x2297be19:
        return "WCD_P50_CLIP1";
        break;
    case 0xd9d3ac92:
        return "WCD_P50_CLIP2";
        break;
    case 0x4ead7533:
        return "WCD_VAR_AR";
        break;
    case 0x377cd377:
        return "WCD_VAR_ADR";
        break;
    case 0xd89b9658:
        return "WCD_VAR_CR";
        break;
    case 0x9b76c72c:
        return "WCD_VAR_AP";
        break;
    case 0xd7391086:
        return "WCD_VAR_P";
        break;
    case 0x77b8ab2f:
        return "WCD_VAR_P50";
        break;
    case 0x7a6a7b7b:
        return "WCD_VAR_HPST";
        break;
    case 0x27872c90:
        return "WCD_VAR_SMG";
        break;
    case 0x487aae09:
        return "WCD_VAR_MSMG";
        break;
    case 0x85a64df9:
        return "WCD_VAR_SOF";
        break;
    case 0x4032b5e7:
        return "WCD_VAR_SNP";
        break;
    case 0x161e9241:
        return "WCD_VAR_MKRF";
        break;
    case 0xc613f685:
        return "WCD_VAR_DESC";
        break;
    case 0xeed9fd63:
        return "WCD_VAR_DESC";
        break;
    case 0x50910c31:
        return "WCD_VAR_DESC";
        break;
    case 0x9761d9dc:
        return "WCD_VAR_DESC";
        break;
    case 0x7decfe30:
        return "WCD_VAR_DESC";
        break;
    case 0x3f4e8aa6:
        return "WCD_VAR_DESC";
        break;
    case 0x8b808bb:
        return "WCD_VAR_DESC";
        break;
    case 0xe28babef:
        return "WCD_VAR_DESC";
        break;
    case 0x7af3f785:
        return "WCD_VAR_DESC";
        break;
    case 0x278c78af:
        return "WCD_VAR_ASMG";
        break;
    case 0xa857bc78:
        return "WCD_VAR_BPR";
        break;
    case 0x92feccdd:
        return "WCD_VAR_CBMG";
        break;
    case 0xc6654d72:
        return "WCD_VAR_CBP";
        break;
    case 0xd6dababe:
        return "WCD_VAR_MG";
        break;
    case 0xa2d79ddb:
        return "WCD_VAR_PSHT";
        break;
    case 0x8033ecaf:
        return "WCD_VAR_SNS";
        break;
    case 0x730154f2:
        return "WCD_VAR_SCAR";
        break;
    case 0x5b3e7db6:
        return "WCD_VAR_DESC";
        break;
    case 0xe7939662:
        return "WCD_VAR_DESC";
        break;
    case 0xe9867ce3:
        return "WCD_P_CLIP1";
        break;
    case 0x16ee3040:
        return "WCD_REV_VARB";
        break;
    case 0x9493b80d:
        return "WCD_REV_VARG";
        break;
    default:
        if (a_1 != 0) {
            v_4 = sub_6469(a_1, &v_6);
            if (v_4 != -1) {
                for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_4); v_5 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_4, v_5, &v_2D)) {
                        if (v_2D._f3 == a_0) {
                            return sub_122e5(&v_2D._fE);
                        }
                    }
                }
            }
        }
        break;
    }
    return "WCD_INVALID";
}

auto sub_20eda(auto a_0, auto a_1) {
    if (a_1 == 0xd8df3c3c) {
        switch (a_0) {
        case 0xf3462f33:
            return "WT_KNUCKLE";
            break;
        case 0xc613f685:
            return "WCT_KNUCK_02";
            break;
        case 0xeed9fd63:
            return "WCT_KNUCK_BG";
            break;
        case 0x50910c31:
            return "WCT_KNUCK_DLR";
            break;
        case 0x9761d9dc:
            return "WCT_KNUCK_DMD";
            break;
        case 0x7decfe30:
            return "WCT_KNUCK_HT";
            break;
        case 0x3f4e8aa6:
            return "WCT_KNUCK_LV";
            break;
        case 0x8b808bb:
            return "WCT_KNUCK_PC";
            break;
        case 0xe28babef:
            return "WCT_KNUCK_SLG";
            break;
        case 0x7af3f785:
            return "WCT_KNUCK_VG";
            break;
        }
    }
    switch (a_0) {
    case 0:
        return "WCT_INVALID";
        break;
    case 0x75414f30:
        return "WCT_RAIL";
        break;
    case ${component_at_ar_afgrip}:
        return "WCT_GRIP";
        break;
    case ${component_at_pi_flsh}:
        return "WCT_FLASH";
        break;
    case ${component_at_ar_flsh}:
        return "WCT_FLASH";
        break;
    case ${component_at_scope_macro}:
        return "WCT_SCOPE_MAC";
        break;
    case 0x3cc6ba57:
        return "WCT_SCOPE_MAC";
        break;
    case ${component_at_scope_small}:
        return "WCT_SCOPE_SML";
        break;
    case 0x3c00afed:
        return "WCT_SCOPE_SML";
        break;
    case ${component_at_scope_medium}:
        return "WCT_SCOPE_MED";
        break;
    case ${component_at_scope_large}:
        return "WCT_SCOPE_LRG";
        break;
    case ${component_at_scope_max}:
        return "WCT_SCOPE_MAX";
        break;
    case ${component_at_pi_supp}:
        return "WCT_SUPP";
        break;
    case ${component_at_ar_supp}:
        return "WCT_SUPP";
        break;
    case ${component_at_ar_supp_02}:
        return "WCT_SUPP";
        break;
    case ${component_at_sr_supp}:
        return "WCT_SUPP";
        break;
    case 0xfed0fd71:
        return "WCT_CLIP1";
        break;
    case 0xed265a1c:
        return "WCT_CLIP2";
        break;
    case 0x721b079:
        return "WCT_CLIP1";
        break;
    case 0xd67b4f2d:
        return "WCT_CLIP2";
        break;
    case 0x31c4b22a:
        return "WCT_CLIP1";
        break;
    case 0x249a17d5:
        return "WCT_CLIP2";
        break;
    case 0xcb48aef0:
        return "WCT_CLIP1";
        break;
    case 0x10e6ba2b:
        return "WCT_CLIP2";
        break;
    case 0x26574997:
        return "WCT_CLIP1";
        break;
    case 0x350966fb:
        return "WCT_CLIP2";
        break;
    case 0xbe5eea16:
        return "WCT_CLIP1";
        break;
    case 0xb1214f9b:
        return "WCT_CLIP2";
        break;
    case 0x9fbe33ec:
        return "WCT_CLIP1";
        break;
    case 0x91109691:
        return "WCT_CLIP2";
        break;
    case 0xfa8fa10f:
        return "WCT_CLIP1";
        break;
    case 0x8ec1c979:
        return "WCT_CLIP2";
        break;
    case 0xf434ef84:
        return "WCT_CLIP1";
        break;
    case 0x82158b47:
        return "WCT_CLIP2";
        break;
    case 0xe1ffb34a:
        return "WCT_CLIP1";
        break;
    case 0xd6c59cd6:
        return "WCT_CLIP2";
        break;
    case 0x94e81bc7:
        return "WCT_CLIP1";
        break;
    case 0x86bd7f72:
        return "WCT_CLIP2";
        break;
    case 0x9bc64089:
        return "WCT_CLIP1";
        break;
    case 0x476f52f4:
        return "WCT_CLIP1";
        break;
    case 0xc8de6f06:
        return "WCT_CLIP2";
        break;
    case 0x8d1307b0:
        return "WCT_CLIP1";
        break;
    case 0xbb46e417:
        return "WCT_CLIP2";
        break;
    case 0x2297be19:
        return "WCT_CLIP1";
        break;
    case 0xd9d3ac92:
        return "WCT_CLIP2";
        break;
    case 0xbaab157:
        return "WCT_CLIP1";
        break;
    case 0x5af49386:
        return "WCT_CLIP1";
        break;
    case 0x6cbf371b:
        return "WCT_CLIP2";
        break;
    case 0xcaebd246:
        return "WCT_CLIP1";
        break;
    case 0xe1c5fffa:
        return "WCT_CLIP2";
        break;
    case 0xf8955d89:
        return "WCT_CLIP1";
        break;
    case 0x3e7e6956:
        return "WCT_CLIP2";
        break;
    case ${component_snspistol_clip_01}:
        return "WCT_CLIP1";
        break;
    case ${component_snspistol_clip_02}:
        return "WCT_CLIP2";
        break;
    case 0x45a3b6bb:
        return "WCT_CLIP1";
        break;
    case 0x33ba12e8:
        return "WCT_CLIP2";
        break;
    case 0x324f2d5f:
        return "WCT_CLIP1";
        break;
    case 0xd83b4141:
        return "WCT_CLIP1";
        break;
    case 0x971cf6fd:
        return "WCT_CLIP2";
        break;
    case 0xccfd2ac5:
        return "WCT_CLIP2";
        break;
    case 0x1c221b1a:
        return "WCT_SCOPE_LRG";
        break;
    case 0x65ea7ebb:
        return "WCT_SUPP";
        break;
    case 0x4317f19e:
        return "WCT_CLIP1";
        break;
    case 0x334a5203:
        return "WCT_CLIP2";
        break;
    case 0xcb9e41ed:
        return "WCT_CLIP1";
        break;
    case 0x476e85ff:
        return "WCT_CLIP1";
        break;
    case 0xb92c6979:
        return "WCT_CLIP2";
        break;
    case 0x4ead7533:
        return "WCT_VAR_GOLD";
        break;
    case 0x377cd377:
        return "WCT_VAR_METAL";
        break;
    case 0xd89b9658:
        return "WCT_VAR_GOLD";
        break;
    case 0x9b76c72c:
        return "WCT_VAR_METAL";
        break;
    case 0xd7391086:
        return "WCT_VAR_GOLD";
        break;
    case 0x77b8ab2f:
        return "WCT_VAR_SIL";
        break;
    case 0x7a6a7b7b:
        return "WCT_VAR_WOOD";
        break;
    case 0x27872c90:
        return "WCT_VAR_GOLD";
        break;
    case 0x487aae09:
        return "WCT_VAR_GOLD";
        break;
    case 0x85a64df9:
        return "WCT_VAR_METAL";
        break;
    case 0x4032b5e7:
        return "WCT_VAR_WOOD";
        break;
    case 0x161e9241:
        return "WCT_VAR_GOLD";
        break;
    case 0x278c78af:
        return "WCT_VAR_GOLD";
        break;
    case 0xa857bc78:
        return "WCT_VAR_METAL";
        break;
    case 0x92feccdd:
        return "WCT_VAR_ETCHM";
        break;
    case 0xc6654d72:
        return "WCT_VAR_GOLD";
        break;
    case 0xd6dababe:
        return "WCT_VAR_GOLD";
        break;
    case 0xa2d79ddb:
        return "WCT_VAR_GOLD";
        break;
    case 0x8033ecaf:
        return "WCT_VAR_WOOD";
        break;
    case 0x730154f2:
        return "WCT_VAR_ETCHM";
        break;
    case 0x9137a500:
        return "WCT_SB_BASE";
        break;
    case 0x5b3e7db6:
        return "WCT_SB_VAR1";
        break;
    case 0xe7939662:
        return "WCT_SB_VAR2";
        break;
    case 0xe9867ce3:
        return "WCT_CLIP1";
        break;
    case 0x16ee3040:
        return "WCT_REV_VARB";
        break;
    case 0x9493b80d:
        return "WCT_REV_VARG";
        break;
    default:
        if (a_1 != 0) {
            v_4 = sub_6469(a_1, &v_6);
            if (v_4 != -1) {
                for (v_5 = 0; v_5 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_4); v_5 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_4, v_5, &v_2D)) {
                        if (v_2D._f3 == a_0) {
                            return sub_122e5(&v_2D._f6);
                        }
                    }
                }
            }
        }
        break;
    }
    return "WCT_INVALID";
}

auto sub_215bf(auto a_0, auto a_1) {
    switch (a_0) {
    case ${wapclip}:
        if (a_1 == ${weapon_pistol}) {
            return 3;
        } else if (a_1 == ${weapon_combatpistol}) {
            return 10;
        } else if (a_1 == ${weapon_appistol}) {
            return 34;
        } else if (a_1 == ${weapon_microsmg}) {
            return 6;
        } else if (a_1 == ${weapon_smg}) {
            return 12;
        } else if (a_1 == ${weapon_assaultsmg}) {
            return 30;
        } else if (a_1 == ${weapon_assaultrifle}) {
            return 25;
        } else if (a_1 == ${weapon_carbinerifle}) {
            return 43;
        } else if (a_1 == ${weapon_advancedrifle}) {
            return 71;
        } else if (a_1 == ${weapon_assaultshotgun}) {
            return 38;
        } else if (a_1 == ${weapon_mg}) {
            return 51;
        } else if (a_1 == ${weapon_combatmg}) {
            return 81;
        }
        break;
    case ${wapflshlasr}:
        if (a_1 == ${weapon_pistol}) {
            return 4;
        } else if (a_1 == ${weapon_combatpistol}) {
            return 11;
        } else if (a_1 == ${weapon_appistol}) {
            return 35;
        } else if (a_1 == ${weapon_microsmg}) {
            return 7;
        } else if (a_1 == ${weapon_smg}) {
            return 13;
        } else if (a_1 == ${weapon_assaultsmg}) {
            return 31;
        } else if (a_1 == ${weapon_assaultrifle}) {
            return 27;
        } else if (a_1 == ${weapon_carbinerifle}) {
            return 45;
        } else if (a_1 == ${weapon_advancedrifle}) {
            return 72;
        } else if (a_1 == ${weapon_pumpshotgun}) {
            return 18;
        } else if (a_1 == ${weapon_assaultshotgun}) {
            return 40;
        } else if (a_1 == ${weapon_grenadelauncher}) {
            return 62;
        }
        break;
    case ${wapscop}:
        if (a_1 == ${weapon_microsmg}) {
            return 8;
        } else if (a_1 == ${weapon_smg}) {
            return 14;
        } else if (a_1 == ${weapon_assaultsmg}) {
            return 32;
        } else if (a_1 == ${weapon_assaultrifle}) {
            return 28;
        } else if (a_1 == ${weapon_carbinerifle}) {
            return 46;
        } else if (a_1 == ${weapon_advancedrifle}) {
            return 73;
        } else if (a_1 == ${weapon_mg}) {
            return 52;
        } else if (a_1 == ${weapon_combatmg}) {
            return 83;
        } else if (a_1 == ${weapon_sniperrifle}) {
            return 23;
        } else if (a_1 == ${weapon_heavysniper}) {
            return 91;
        } else if (a_1 == ${weapon_grenadelauncher}) {
            return 63;
        }
        break;
    case 0x9221a98d:
        if (a_1 == ${weapon_sniperrifle}) {
            return 23;
        } else if (a_1 == ${weapon_heavysniper}) {
            return 92;
        }
        break;
    case ${wapgrip}:
        if (a_1 == ${weapon_assaultrifle}) {
            return 26;
        } else if (a_1 == ${weapon_carbinerifle}) {
            return 44;
        } else if (a_1 == ${weapon_assaultshotgun}) {
            return 39;
        } else if (a_1 == ${weapon_combatmg}) {
            return 82;
        } else if (a_1 == ${weapon_grenadelauncher}) {
            return 61;
        }
        break;
    case ${wapsupp}:
        if (a_1 == ${weapon_pistol}) {
            return 5;
        } else if (a_1 == ${weapon_combatpistol}) {
            return 12;
        } else if (a_1 == ${weapon_appistol}) {
            return 36;
        } else if (a_1 == ${weapon_microsmg}) {
            return 9;
        } else if (a_1 == ${weapon_smg}) {
            return 15;
        } else if (a_1 == ${weapon_assaultsmg}) {
            return 33;
        } else if (a_1 == ${weapon_assaultrifle}) {
            return 29;
        } else if (a_1 == ${weapon_carbinerifle}) {
            return 47;
        } else if (a_1 == ${weapon_advancedrifle}) {
            return 74;
        } else if (a_1 == ${weapon_pumpshotgun}) {
            return 19;
        } else if (a_1 == ${weapon_assaultshotgun}) {
            return 41;
        } else if (a_1 == ${weapon_sniperrifle}) {
            return 22;
        }
        break;
    case 0x67386f9b:
        if (a_1 == ${weapon_sniperrifle}) {
            return 23;
        } else if (a_1 == ${weapon_heavysniper}) {
            return 92;
        }
        break;
    case 0x395e9926:
        return 0;
        break;
    }
    return 0;
}

auto sub_219f1(auto a_0) {
    switch (a_0) {
    case 0x16ee3040:
    case 0x5b3e7db6:
        sub_2b0c4("WCD_SB_VAR1", 0, 0);
        return 1;
        break;
    case 0x9493b80d:
    case 0xe7939662:
        sub_2b0c4("WCD_SB_VAR2", 0, 0);
        return 1;
        break;
    }
    return 0;
}

auto sub_21a3b(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_2451b(a_0, 0, 0x3af5bac2, 0, 0);
    switch (a_1) {
    case ${weapon_pistol}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xfed0fd71, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0xed265a1c, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, 0x65ea7ebb, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, 0xd7391086, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_combatpistol}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x721b079, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0xd67b4f2d, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_pi_supp}, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, 0xc6654d72, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_appistol}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x31c4b22a, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x249a17d5, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_pi_supp}, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, 0x9b76c72c, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_microsmg}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xcb48aef0, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x10e6ba2b, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_scope_macro}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_2451b(a_0, 0x487aae09, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_smg}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x26574997, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x350966fb, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, 0x3cc6ba57, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_pi_supp}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_2451b(a_0, 0x27872c90, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_assaultrifle}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xbe5eea16, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0xb1214f9b, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_scope_macro}, ${wapscop}, 1, 0);
            break;
        case 5:
            sub_2451b(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 6:
            sub_2451b(a_0, 0x4ead7533, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_carbinerifle}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x9fbe33ec, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x91109691, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, 0x75414f30, 0x9221a98d, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 5:
            sub_2451b(a_0, ${component_at_scope_medium}, ${wapscop}, 1, 0);
            break;
        case 6:
            sub_2451b(a_0, ${component_at_ar_supp}, ${wapsupp}, 1, 0);
            break;
        case 7:
            sub_2451b(a_0, 0xd89b9658, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_advancedrifle}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xfa8fa10f, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x8ec1c979, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_scope_small}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_ar_supp}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_2451b(a_0, 0x377cd377, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_mg}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xf434ef84, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x82158b47, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, 0x3c00afed, ${wapscop}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, 0xd6dababe, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_combatmg}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xe1ffb34a, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0xd6c59cd6, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_scope_medium}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, 0x92feccdd, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_pumpshotgun}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 1:
            sub_2451b(a_0, ${component_at_sr_supp}, ${wapsupp}, 1, 0);
            break;
        case 2:
            sub_2451b(a_0, 0xa2d79ddb, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_assaultshotgun}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x94e81bc7, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0x86bd7f72, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_ar_supp}, ${wapsupp}, 1, 0);
            break;
        }
        break;
    case ${weapon_sniperrifle}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x9bc64089, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_scope_large}, ${wapscop}, 1, 1);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_scope_max}, ${wapscop}, 2, 0);
            break;
        case 4:
            sub_2451b(a_0, 0x4032b5e7, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_heavysniper}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x476f52f4, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, ${component_at_scope_large}, ${wapscop}, 1, 1);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_scope_max}, ${wapscop}, 2, 0);
            break;
        }
        break;
    case ${weapon_grenadelauncher}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 1:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_scope_small}, ${wapscop}, 1, 0);
            break;
        }
        break;
    case ${weapon_minigun}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0xc8de6f06, ${wapclip}, 1, 1);
            break;
        }
        break;
    case ${weapon_assaultsmg}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x8d1307b0, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0xbb46e417, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_scope_macro}, ${wapscop}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 5:
            sub_2451b(a_0, 0x278c78af, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_bullpupshotgun}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, ${component_at_ar_afgrip}, ${wapgrip}, 1, 0);
            break;
        case 1:
            sub_2451b(a_0, ${component_at_ar_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        }
        break;
    case 0x99aeeb3b:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x2297be19, ${wapclip}, 1, 1);
            break;
        case 1:
            sub_2451b(a_0, 0xd9d3ac92, ${wapclip}, 2, 0);
            break;
        case 2:
            sub_2451b(a_0, ${component_at_pi_flsh}, ${wapflshlasr}, 1, 0);
            break;
        case 3:
            sub_2451b(a_0, ${component_at_ar_supp_02}, ${wapsupp}, 1, 0);
            break;
        case 4:
            sub_2451b(a_0, 0x77b8ab2f, 0x395e9926, 1, 0);
            break;
        }
        break;
    case ${weapon_sawnoffshotgun}:
        switch (a_2) {
        case 0:
            sub_2451b(a_0, 0x85a64df9, 0x395e9926, 1, 0);
            break;
        }
        break;
    default:
        v_10 = sub_6469(a_1, &v_12);
        if (v_10 != -1) {
            for (v_11 = 0; v_11 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_10); v_11 += 1) {
                if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_10, v_11, &v_39)) {
                    if ((v_39 == ${wapclip}) || (v_39 == 0x11621646)) {
                        v_7 += 1;
                    } else if ((v_39 == ${wapflshlasr}) || (v_39 == ${wapflshlasr_2})) {
                        v_8 += 1;
                    } else if ((v_39 == ${wapscop}) || (v_39 == ${wapscop_2})) {
                        v_9 += 1;
                    } else if ((v_39 == 0x9221a98d) || (v_39 == 0x1da14ce5)) {
                        v_A += 1;
                    } else if ((v_39 == ${wapgrip}) || (v_39 == 0xdf693abd)) {
                        v_B += 1;
                    } else if ((v_39 == ${wapsupp}) || (v_39 == ${wapsupp_2})) {
                        v_C += 1;
                    } else if (v_39 == 0x67386f9b) {
                        v_D += 1;
                    } else if (v_39 == 0x395e9926) {
                        v_E += 1;
                    } else { 
                        v_F += 1;
                    }
                    if (v_11 == a_2) {
                        if ((v_39 == ${wapclip}) || (v_39 == 0x11621646)) {
                            v_6 = v_7;
                        } else if ((v_39 == ${wapflshlasr}) || (v_39 == ${wapflshlasr_2})) {
                            v_6 = v_8;
                        } else if ((v_39 == ${wapscop}) || (v_39 == ${wapscop_2})) {
                            v_6 = v_9;
                        } else if ((v_39 == 0x9221a98d) || (v_39 == 0x1da14ce5)) {
                            v_6 = v_A;
                        } else if ((v_39 == ${wapgrip}) || (v_39 == 0xdf693abd)) {
                            v_6 = v_B;
                        } else if ((v_39 == ${wapsupp}) || (v_39 == ${wapsupp_2})) {
                            v_6 = v_C;
                        } else if (v_39 == 0x67386f9b) {
                            v_6 = v_D;
                        } else if (v_39 == 0x395e9926) {
                            v_6 = v_E;
                        } else { 
                            v_6 = v_F;
                        }
                        sub_2451b(a_0, v_39._f3, v_39, v_6, v_39._f1);
                    }
                }
            }
        }
        break;
    }
    if (a_3) {
        a_0._f2 = sub_22796(a_1, a_0);
    }
    return a_0._f4 != 0x3af5bac2;
}

auto sub_22796(auto a_0, auto a_1) {
    v_4 = 0;
    v_5 = 2.5;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_5 = 2.5;
        switch (a_0) {
        case ${weapon_pistol}:
            switch (a_1) {
            case 0xfed0fd71:
                v_4 = 120;
                break;
            case 0xed265a1c:
                v_4 = 155;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 189;
                break;
            case 0x65ea7ebb:
                v_4 = 729;
                break;
            case 0xd7391086:
                v_4 = 18600;
                break;
            }
            break;
        case ${weapon_combatpistol}:
            switch (a_1) {
            case 0x721b079:
                v_4 = 136;
                break;
            case 0xd67b4f2d:
                v_4 = 159;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 189;
                break;
            case ${component_at_pi_supp}:
                v_4 = 735;
                break;
            case 0xc6654d72:
                v_4 = 14500;
                break;
            }
            break;
        case ${weapon_appistol}:
            switch (a_1) {
            case 0x31c4b22a:
                v_4 = 145;
                break;
            case 0x249a17d5:
                v_4 = 165;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 185;
                break;
            case ${component_at_pi_supp}:
                v_4 = 730;
                break;
            case 0x9b76c72c:
                v_4 = 15800;
                break;
            }
            break;
        case ${weapon_microsmg}:
            switch (a_1) {
            case 0xcb48aef0:
                v_4 = 120;
                break;
            case 0x10e6ba2b:
                v_4 = 137;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 190;
                break;
            case ${component_at_scope_macro}:
                v_4 = 549;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 775;
                break;
            case 0x487aae09:
                v_4 = 15100;
                break;
            }
            break;
        case ${weapon_smg}:
            switch (a_1) {
            case 0x26574997:
                v_4 = 119;
                break;
            case 0x350966fb:
                v_4 = 134;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 210;
                break;
            case 0x3cc6ba57:
                v_4 = 549;
                break;
            case ${component_at_pi_supp}:
                v_4 = 815;
                break;
            case 0x27872c90:
                v_4 = 19300;
                break;
            }
            break;
        case ${weapon_assaultrifle}:
            switch (a_1) {
            case 0xbe5eea16:
                v_4 = 120;
                break;
            case 0xb1214f9b:
                v_4 = 129;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 159;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 189;
                break;
            case ${component_at_scope_macro}:
                v_4 = 565;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 810;
                break;
            case 0x4ead7533:
                v_4 = 14400;
                break;
            }
            break;
        case ${weapon_carbinerifle}:
            switch (a_1) {
            case 0x9fbe33ec:
                v_4 = 99;
                break;
            case 0x91109691:
                v_4 = 105;
                break;
            case 0x75414f30:
                v_4 = -1;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 132;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 150;
                break;
            case ${component_at_scope_medium}:
                v_4 = 450;
                break;
            case ${component_at_ar_supp}:
                v_4 = 815;
                break;
            case 0xd89b9658:
                v_4 = 17900;
                break;
            }
            break;
        case ${weapon_advancedrifle}:
            switch (a_1) {
            case 0xfa8fa10f:
                v_4 = 110;
                break;
            case 0x8ec1c979:
                v_4 = 124;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 159;
                break;
            case ${component_at_scope_small}:
                v_4 = 450;
                break;
            case ${component_at_ar_supp}:
                v_4 = 812;
                break;
            case 0x377cd377:
                v_4 = 16500;
                break;
            }
            break;
        case ${weapon_mg}:
            switch (a_1) {
            case 0xf434ef84:
                v_4 = 135;
                break;
            case 0x82158b47:
                v_4 = 145;
                break;
            case 0x3c00afed:
                v_4 = 450;
                break;
            case 0xd6dababe:
                v_4 = 15600;
                break;
            }
            break;
        case ${weapon_combatmg}:
            switch (a_1) {
            case 0xe1ffb34a:
                v_4 = 119;
                break;
            case 0xd6c59cd6:
                v_4 = 126;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 129;
                break;
            case ${component_at_scope_medium}:
                v_4 = 559;
                break;
            case 0x92feccdd:
                v_4 = 14000;
                break;
            }
            break;
        case ${weapon_pumpshotgun}:
            switch (a_1) {
            case ${component_at_ar_flsh}:
                v_4 = 189;
                break;
            case ${component_at_sr_supp}:
                v_4 = 975;
                break;
            case 0xa2d79ddb:
                v_4 = 16900;
                break;
            }
            break;
        case ${weapon_assaultshotgun}:
            switch (a_1) {
            case 0x94e81bc7:
                v_4 = 129;
                break;
            case 0x86bd7f72:
                v_4 = 139;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 150;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 225;
                break;
            case ${component_at_ar_supp}:
                v_4 = 899;
                break;
            }
            break;
        case ${weapon_sniperrifle}:
            switch (a_1) {
            case 0x9bc64089:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 559;
                break;
            case ${component_at_scope_max}:
                v_4 = 975;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 920;
                break;
            case 0x4032b5e7:
                v_4 = 13000;
                break;
            }
            break;
        case ${weapon_heavysniper}:
            switch (a_1) {
            case 0x476f52f4:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 575;
                break;
            case ${component_at_scope_max}:
                v_4 = 999;
                break;
            }
            break;
        case ${weapon_grenadelauncher}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 128;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 185;
                break;
            case ${component_at_scope_small}:
                v_4 = 525;
                break;
            }
            break;
        case ${weapon_minigun}:
            switch (a_1) {
            case 0xc8de6f06:
                v_4 = -1;
                break;
            }
            break;
        case ${weapon_assaultsmg}:
            switch (a_1) {
            case 0x8d1307b0:
                v_4 = 110;
                break;
            case 0xbb46e417:
                v_4 = 9700;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2275;
                break;
            case ${component_at_scope_macro}:
                v_4 = 10875;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12400;
                break;
            case 0x278c78af:
                v_4 = 17600;
                break;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                v_4 = 0;
            }
            break;
        case ${weapon_bullpupshotgun}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 4100;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2300;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12450;
                break;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                v_4 = 0;
            }
            break;
        case 0x99aeeb3b:
            switch (a_1) {
            case 0x2297be19:
                v_4 = 0;
                break;
            case 0xd9d3ac92:
                v_4 = 9500;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 2000;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12250;
                break;
            case 0x77b8ab2f:
                v_4 = 20000;
                break;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                v_4 = 0;
            }
            break;
        case ${weapon_sawnoffshotgun}:
            switch (a_1) {
            case 0x85a64df9:
                v_4 = 13700;
                break;
            }
            break;
        case 0xc734385a:
            switch (a_1) {
            case 0xd83b4141:
                v_4 = 0;
                break;
            case 0xccfd2ac5:
                v_4 = 3612;
                break;
            case 0x1c221b1a:
                v_4 = 0;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 1020;
                break;
            case ${component_at_ar_supp}:
                v_4 = 5000;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 1760;
                break;
            case 0x161e9241:
                v_4 = 17200;
                break;
            }
            break;
        case ${weapon_heavypistol}:
            switch (a_1) {
            case ${component_heavypistol_clip_01}:
                v_4 = 0;
                break;
            case ${component_heavypistol_clip_02}:
                v_4 = 3680;
                break;
            case ${component_at_pi_flsh}:
                v_4 = 710;
                break;
            case ${component_at_pi_supp}:
                v_4 = 4800;
                break;
            case 0x7a6a7b7b:
                v_4 = 12000;
                break;
            }
            break;
        case 0xd8df3c3c:
            switch (a_1) {
            case 0xc613f685:
                v_4 = 4900;
                break;
            case 0xeed9fd63:
                v_4 = 5600;
                break;
            case 0x50910c31:
                v_4 = 5500;
                break;
            case 0x9761d9dc:
                v_4 = 5200;
                break;
            case 0x7decfe30:
                v_4 = 4600;
                break;
            case 0x3f4e8aa6:
                v_4 = 4700;
                break;
            case 0x8b808bb:
                v_4 = 4800;
                break;
            case 0xe28babef:
                v_4 = 4300;
                break;
            case 0x7af3f785:
                v_4 = 4000;
                break;
            }
            break;
        case ${weapon_bullpuprifle}:
            switch (a_1) {
            case ${component_bullpuprifle_clip_01}:
                v_4 = 108;
                break;
            case ${component_bullpuprifle_clip_02}:
                v_4 = 9950;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2575;
                break;
            case ${component_at_scope_macro}:
                v_4 = 11350;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12500;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4275;
                break;
            case 0xa857bc78:
                v_4 = 16600;
                break;
            }
            break;
        case ${weapon_snspistol}:
            switch (a_1) {
            case ${component_snspistol_clip_01}:
                v_4 = 29;
                break;
            case ${component_snspistol_clip_02}:
                v_4 = 9150;
                break;
            case 0x8033ecaf:
                v_4 = 13900;
                break;
            }
            break;
        case ${weapon_specialcarbine}:
            switch (a_1) {
            case ${component_specialcarbine_clip_01}:
                v_4 = 108;
                break;
            case ${component_specialcarbine_clip_02}:
                v_4 = 9975;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2525;
                break;
            case ${component_at_scope_medium}:
                v_4 = 11550;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12500;
                break;
            case 0x730154f2:
                v_4 = 18000;
                break;
            }
            break;
        case 0xdb1aa450:
            switch (a_1) {
            case 0x476e85ff:
                v_4 = 0;
                break;
            case 0xb92c6979:
                v_4 = 3680;
                break;
            case ${component_at_pi_supp}:
                v_4 = 4840;
                break;
            }
            break;
        default:
            v_6 = sub_6469(a_0, &v_8);
            if (v_6 != -1) {
                for (v_7 = 0; v_7 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_6); v_7 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_6, v_7, &v_2F)) {
                        if (v_2F._f3 == a_1) {
                            v_5 = 1.0;
                            if (v_2F._f5 == -1) {
                                v_4 = -1;
                            } else { 
                                v_4 = v_2F._f5;
                            }
                            if (a_0 == ${weapon_hammer}) {
                                if (sub_715b() && (sub_1230c() || sub_12460())) {
                                    v_4 = 0;
                                }
                            }
                        }
                    }
                }
            }
            break;
        }
    } else { 
        v_5 = 2.5;
        switch (a_0) {
        case ${weapon_pistol}:
            switch (a_1) {
            case 0xfed0fd71:
                v_4 = 120;
                break;
            case 0xed265a1c:
                v_4 = 9175;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB3E);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1675;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10E8);
                break;
            case 0x65ea7ebb:
                v_4 = 12050;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10E9);
                break;
            case 0xd7391086:
                v_4 = g_40001._f2127;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1136);
                break;
            }
            break;
        case ${weapon_combatpistol}:
            switch (a_1) {
            case 0x721b079:
                v_4 = 136;
                break;
            case 0xd67b4f2d:
                v_4 = 9250;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB3F);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1825;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EA);
                break;
            case ${component_at_pi_supp}:
                v_4 = 12100;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EB);
                break;
            case 0xc6654d72:
                v_4 = g_40001._f267E;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1131);
                break;
            }
            break;
        case ${weapon_appistol}:
            switch (a_1) {
            case 0x31c4b22a:
                v_4 = 145;
                break;
            case 0x249a17d5:
                v_4 = 9400;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB41);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1975;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EC);
                break;
            case ${component_at_pi_supp}:
                v_4 = 12200;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10ED);
                break;
            case 0x9b76c72c:
                v_4 = g_40001._f2126;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112B);
                break;
            }
            break;
        case ${weapon_microsmg}:
            switch (a_1) {
            case 0xcb48aef0:
                v_4 = 120;
                break;
            case 0x10e6ba2b:
                v_4 = 9325;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB42);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 1900;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F0);
                break;
            case ${component_at_scope_macro}:
                v_4 = 10800;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F2);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12150;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F1);
                break;
            case 0x487aae09:
                v_4 = g_40001._f212A;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1135);
                break;
            }
            break;
        case ${weapon_smg}:
            switch (a_1) {
            case 0x26574997:
                v_4 = 119;
                break;
            case 0x350966fb:
                v_4 = 9475;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB43);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2050;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F3);
                break;
            case 0x3cc6ba57:
                v_4 = 10825;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F5);
                break;
            case ${component_at_pi_supp}:
                v_4 = 12250;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F4);
                break;
            case 0x27872c90:
                v_4 = g_40001._f2129;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113A);
                break;
            }
            break;
        case ${weapon_assaultrifle}:
            switch (a_1) {
            case 0xbe5eea16:
                v_4 = 120;
                break;
            case 0xb1214f9b:
                v_4 = 9550;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB45);
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4200;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FD);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2125;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FA);
                break;
            case ${component_at_scope_macro}:
                v_4 = 10850;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FC);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12300;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10FB);
                break;
            case 0x4ead7533:
                v_4 = g_40001._f2123;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112C);
                break;
            }
            break;
        case ${weapon_carbinerifle}:
            switch (a_1) {
            case 0x9fbe33ec:
                v_4 = 99;
                break;
            case 0x91109691:
                v_4 = 9775;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB46);
                break;
            case 0x75414f30:
                v_4 = -1;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1105);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1102);
                break;
            case ${component_at_scope_medium}:
                v_4 = 10900;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1104);
                break;
            case ${component_at_ar_supp}:
                v_4 = 12450;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1103);
                break;
            case 0xd89b9658:
                v_4 = g_40001._f2125;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112F);
                break;
            }
            break;
        case ${weapon_advancedrifle}:
            switch (a_1) {
            case 0xfa8fa10f:
                v_4 = 110;
                break;
            case 0x8ec1c979:
                v_4 = 9925;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB48);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2425;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1107);
                break;
            case ${component_at_scope_small}:
                v_4 = 10950;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1109);
                break;
            case ${component_at_ar_supp}:
                v_4 = 12500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1108);
                break;
            case 0x377cd377:
                v_4 = g_40001._f2124;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f112A);
                break;
            }
            break;
        case ${weapon_mg}:
            switch (a_1) {
            case 0xf434ef84:
                v_4 = 135;
                break;
            case 0x82158b47:
                v_4 = 9850;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB49);
                break;
            case 0x3c00afed:
                v_4 = 10925;
                break;
            case 0xd6dababe:
                v_4 = g_40001._f267F;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1134);
                break;
            }
            break;
        case ${weapon_combatmg}:
            switch (a_1) {
            case 0xe1ffb34a:
                v_4 = 119;
                break;
            case 0xd6c59cd6:
                v_4 = 10000;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB4A);
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4425;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1120);
                break;
            case ${component_at_scope_medium}:
                v_4 = 10975;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1121);
                break;
            case 0x92feccdd:
                v_4 = g_40001._f2680;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1130);
                break;
            }
            break;
        case ${weapon_pumpshotgun}:
            switch (a_1) {
            case ${component_at_ar_flsh}:
                v_4 = 1750;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f110E);
                break;
            case ${component_at_sr_supp}:
                v_4 = 12350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f110F);
                break;
            case 0xa2d79ddb:
                v_4 = g_40001._f267B;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1138);
                break;
            }
            break;
        case ${weapon_assaultshotgun}:
            switch (a_1) {
            case 0x94e81bc7:
                v_4 = 129;
                break;
            case 0x86bd7f72:
                v_4 = 9625;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB4C);
                break;
            case ${component_at_ar_afgrip}:
                v_4 = 4275;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1112);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2200;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1113);
                break;
            case ${component_at_ar_supp}:
                v_4 = 12350;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1114);
                break;
            }
            break;
        case ${weapon_sniperrifle}:
            switch (a_1) {
            case 0x9bc64089:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 12400;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1115);
                break;
            case ${component_at_scope_max}:
                v_4 = 12500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1116);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12050;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1117);
                break;
            case 0x4032b5e7:
                v_4 = g_40001._f212C;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113B);
                break;
            }
            break;
        case ${weapon_heavysniper}:
            switch (a_1) {
            case 0x476f52f4:
                v_4 = -1;
                break;
            case ${component_at_scope_large}:
                v_4 = 99;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1118);
                break;
            case ${component_at_scope_max}:
                v_4 = 12500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1119);
                break;
            }
            break;
        case ${weapon_grenadelauncher}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 4500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1122);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f111E);
                break;
            case ${component_at_scope_small}:
                v_4 = 11000;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f111F);
                break;
            }
            break;
        case ${weapon_minigun}:
            switch (a_1) {
            case 0xc8de6f06:
                v_4 = -1;
                break;
            }
            break;
        case ${weapon_assaultsmg}:
            switch (a_1) {
            case 0x8d1307b0:
                v_4 = 110;
                break;
            case 0xbb46e417:
                v_4 = 9700;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB44);
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2275;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F6);
                break;
            case ${component_at_scope_macro}:
                v_4 = 10875;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F9);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12400;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F7);
                break;
            case 0x278c78af:
                v_4 = g_40001._f267C;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10F8);
                break;
            }
            break;
        case 0x61012683:
            switch (a_1) {
            case 0x1ce5a6a5:
                v_4 = 0;
                break;
            case 0xeac8c270:
                v_4 = g_40001._f1388;
                break;
            }
            break;
        case ${weapon_snspistol}:
            switch (a_1) {
            case ${component_snspistol_clip_01}:
                v_4 = 0;
                break;
            case ${component_snspistol_clip_02}:
                v_4 = g_40001._f15C9;
                break;
            case 0x8033ecaf:
                v_4 = g_40001._f267D;
                break;
            }
            break;
        case ${weapon_specialcarbine}:
            switch (a_1) {
            case ${component_specialcarbine_clip_01}:
                v_4 = 0;
                break;
            case ${component_specialcarbine_clip_02}:
                v_4 = g_40001._f15CE;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f15D1;
                break;
            case ${component_at_scope_medium}:
                v_4 = g_40001._f15CD;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = g_40001._f15CB;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f15D0;
                break;
            case 0x730154f2:
                v_4 = g_40001._f2681;
                break;
            }
            break;
        case ${weapon_heavypistol}:
            switch (a_1) {
            case ${component_heavypistol_clip_01}:
                v_4 = 0;
                break;
            case ${component_heavypistol_clip_02}:
                v_4 = g_40001._f15CF;
                break;
            case ${component_at_pi_flsh}:
                v_4 = g_40001._f15D3;
                break;
            case ${component_at_pi_supp}:
                v_4 = g_40001._f15CC;
                break;
            case 0x7a6a7b7b:
                v_4 = g_40001._f15E7;
                break;
            }
            break;
        case ${weapon_bullpuprifle}:
            switch (a_1) {
            case ${component_bullpuprifle_clip_01}:
                v_4 = 0;
                break;
            case ${component_bullpuprifle_clip_02}:
                v_4 = g_40001._f15D6;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f15D9;
                break;
            case ${component_at_ar_supp}:
                v_4 = g_40001._f15D4;
                break;
            case ${component_at_scope_small}:
                v_4 = g_40001._f15D5;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f15D7;
                break;
            case 0xa857bc78:
                v_4 = g_40001._f2682;
                break;
            }
            break;
        case 0x83839c4:
            switch (a_1) {
            case 0x45a3b6bb:
                v_4 = 0;
                break;
            case 0x33ba12e8:
                v_4 = g_40001._f17AF;
                break;
            case ${component_at_pi_supp}:
                v_4 = g_40001._f17B0;
                break;
            }
            break;
        case 0x3aabbbaa:
            switch (a_1) {
            case 0x324f2d5f:
                v_4 = 0;
                break;
            case 0x971cf6fd:
                v_4 = g_40001._f1A3D;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f1A3E;
                break;
            case ${component_at_ar_supp_02}:
                v_4 = g_40001._f1A3F;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f1A40;
                break;
            }
            break;
        case 0xc734385a:
            switch (a_1) {
            case 0xd83b4141:
                v_4 = 0;
                break;
            case 0xccfd2ac5:
                v_4 = g_40001._f1A43;
                break;
            case ${component_at_ar_flsh}:
                v_4 = g_40001._f1A44;
                break;
            case ${component_at_ar_supp}:
                v_4 = g_40001._f1A46;
                break;
            case ${component_at_ar_afgrip}:
                v_4 = g_40001._f1A47;
                break;
            case 0x161e9241:
                v_4 = g_40001._f1A48;
                break;
            }
            break;
        case ${weapon_bullpupshotgun}:
            switch (a_1) {
            case ${component_at_ar_afgrip}:
                v_4 = 4100;
                break;
            case ${component_at_ar_flsh}:
                v_4 = 2300;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1110);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12450;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1111);
                break;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                v_4 = 0;
            }
            break;
        case 0x99aeeb3b:
            switch (a_1) {
            case 0x2297be19:
                v_4 = 0;
                break;
            case 0xd9d3ac92:
                v_4 = 9500;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._fB40);
                break;
            case ${component_at_pi_flsh}:
                v_4 = 2000;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EE);
                break;
            case ${component_at_ar_supp_02}:
                v_4 = 12250;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f10EF);
                break;
            case 0x77b8ab2f:
                v_4 = g_40001._f2128;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1137);
                break;
            }
            if (sub_715b() && (sub_1230c() || sub_12460())) {
                v_4 = 0;
            }
            break;
        case ${weapon_sawnoffshotgun}:
            switch (a_1) {
            case 0x85a64df9:
                v_4 = g_40001._f212B;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1139);
                break;
            }
            break;
        case 0xd8df3c3c:
            switch (a_1) {
            case 0xc613f685:
                v_4 = g_40001._f2263;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113E);
                break;
            case 0xeed9fd63:
                v_4 = g_40001._f2264;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f113F);
                break;
            case 0x50910c31:
                v_4 = g_40001._f2265;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1140);
                break;
            case 0x9761d9dc:
                v_4 = g_40001._f2266;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1141);
                break;
            case 0x7decfe30:
                v_4 = g_40001._f2267;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1142);
                break;
            case 0x3f4e8aa6:
                v_4 = g_40001._f2268;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1143);
                break;
            case 0x8b808bb:
                v_4 = g_40001._f2269;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1144);
                break;
            case 0xe28babef:
                v_4 = g_40001._f226A;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1145);
                break;
            case 0x7af3f785:
                v_4 = g_40001._f226B;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1146);
                break;
            }
            break;
        case 0xdb1aa450:
            switch (a_1) {
            case 0x476e85ff:
                v_4 = 0;
                break;
            case 0xb92c6979:
                v_4 = g_40001._f227C;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1148);
                break;
            case ${component_at_pi_supp}:
                v_4 = g_40001._f227D;
                v_4 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_4) * g_40001._f1149);
                break;
            }
            break;
        case 0xdfe37640:
            switch (a_1) {
            case 0x9137a500:
                v_4 = 0;
                break;
            case 0x5b3e7db6:
                v_4 = g_40001._f29CB;
                break;
            case 0xe7939662:
                v_4 = g_40001._f29CC;
                break;
            }
            break;
        case 0xc1b3c3d1:
            switch (a_1) {
            case 0xe9867ce3:
                v_4 = 0;
                break;
            case 0x16ee3040:
                v_4 = g_40001._f2A05;
                break;
            case 0x9493b80d:
                v_4 = g_40001._f29CA;
                break;
            }
            break;
        case 0x624fe830:
            switch (a_1) {
            case 0x513f0a63:
                v_4 = 0;
                break;
            case 0x59ff9bf8:
                v_4 = g_40001._f2DA4;
                break;
            }
            break;
        case 0xef951fbb:
            switch (a_1) {
            case 0x29ea741e:
                v_4 = 0;
                break;
            }
            break;
        default:
            v_45 = sub_6469(a_0, &v_47);
            if (v_45 != -1) {
                for (v_46 = 0; v_46 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_45); v_46 += 1) {
                    if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_45, v_46, &v_6E)) {
                        if (v_6E._f3 == a_1) {
                            v_5 = 1.0;
                            if (v_6E._f5 == -1) {
                                v_4 = -1;
                            } else { 
                                v_4 = v_6E._f5;
                            }
                        }
                    }
                }
            }
            break;
        }
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_122ef()) {
        v_94/*"16"*/ = sub_20eda(a_1, a_0);
        sub_11379(&v_84, v_94, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 1, sub_10a67(a_0), -1, -1);
        if (MOBILE::_BD4D7EAF8A30F637(&v_84)) {
            v_4 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_84), 0x63a336e1, 1);
        }
    }
    if (v_4 > 0) {
        v_98 = sub_24405(a_0, &v_4, v_5);
        if (v_98 != 1.0) {}
    }
    return v_4;
}

auto sub_24405(auto a_0, auto a_1, auto a_2) {
    v_5 = 0.0;
    v_6 = 0.0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_122ef()) {
        return 1.0;
    }
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * a_2);
    }
    if (!is_in_transition) {
        if (a_1 != 0) {
            v_7 = sub_105c7(a_0);
            if (v_7 == 3) {
                v_6 = 0.1;
            } else if (v_7 == 2) {
                v_6 = 0.15;
            } else if (v_7 == 1) {
                v_6 = 0.25;
            }
        }
    }
    if (l_32 == 1) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._f4C);
            v_6 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
        }
    }
    if (l_32 == 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * g_40001._f4C);
            if (sub_f594()) {
                v_6 += __678_$BBDA792448DB5A89(g_40001._f76) / 100.0;
                l_32 = 1;
            } else { 
                l_32 = -1;
            }
        }
    }
    v_5 = 1.0 - v_6;
    a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * v_5);
    return v_5;
}

void sub_2451b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_0 = a_1;
    a_0._f4 = a_2;
    a_0._f5 = a_3;
    a_0._f1 = a_4;
}

auto sub_2453a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_3/*"16"*/ = "";
    a_4/*"16"*/ = "";
    v_7 = -1;
    switch (a_1) {
    case 0:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${gadget_parachute}, 0);
            a_4/*"16"*/ = sub_250ec(${gadget_parachute});
            break;
        }
        break;
    case 1:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_microsmg}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_microsmg});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_smg}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_smg});
            break;
        }
        break;
    case 2:
        switch (a_2) {
        case 0:
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                a_3/*"16"*/ = sub_1199f(${weapon_assaultsmg}, 0);
                a_4/*"16"*/ = sub_250ec(${weapon_assaultsmg});
            } else { 
                a_3/*"16"*/ = sub_1199f(${weapon_sawnoffshotgun}, 0);
                a_4/*"16"*/ = sub_250ec(${weapon_sawnoffshotgun});
            }
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_pumpshotgun}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_pumpshotgun});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(${weapon_assaultshotgun}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_assaultshotgun});
            break;
        }
        break;
    case 3:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_assaultrifle}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_assaultrifle});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_carbinerifle}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_carbinerifle});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(${weapon_advancedrifle}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_advancedrifle});
            break;
        }
        break;
    case 4:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_sniperrifle}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_sniperrifle});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_heavysniper}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_heavysniper});
            break;
        }
        break;
    case 5:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_mg}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_mg});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_combatmg}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_combatmg});
            break;
        }
        break;
    case 6:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_rpg}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_rpg});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_grenadelauncher}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_grenadelauncher});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(${weapon_minigun}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_minigun});
            break;
        }
        break;
    case 7:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_knife}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_knife});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_nightstick}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_nightstick});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(${weapon_hammer}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_hammer});
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(${weapon_bottle}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_bottle});
            break;
        case 4:
            a_3/*"16"*/ = sub_1199f(0xd8df3c3c, 0);
            a_4/*"16"*/ = sub_250ec(0xd8df3c3c);
            break;
        }
        break;
    case 8:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_stungun}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_stungun});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_appistol}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_appistol});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(${weapon_combatpistol}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_combatpistol});
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(${weapon_pistol}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_pistol});
            break;
        case 4:
            a_3/*"16"*/ = sub_1199f(0x99aeeb3b, 0);
            a_4/*"16"*/ = sub_250ec(0x99aeeb3b);
            break;
        }
        break;
    case 9:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_smokegrenade}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_smokegrenade});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_grenade}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_grenade});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(${weapon_stickybomb}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_stickybomb});
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(0xab564b93, 0);
            a_4/*"16"*/ = sub_250ec(0xab564b93);
            break;
        }
        break;
    case 10:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_petrolcan}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_petrolcan});
            break;
        }
        break;
    case 11:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(a_0[0/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[0/*1*/]);
            v_7 = 0;
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(a_0[1/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[1/*1*/]);
            v_7 = 1;
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(a_0[2/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[2/*1*/]);
            v_7 = 2;
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(a_0[3/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[3/*1*/]);
            v_7 = 3;
            break;
        }
        break;
    case 12:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(a_0[4/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[4/*1*/]);
            v_7 = 4;
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(a_0[5/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[5/*1*/]);
            v_7 = 5;
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(a_0[7/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[7/*1*/]);
            v_7 = 7;
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(a_0[6/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[6/*1*/]);
            v_7 = 6;
            break;
        }
        break;
    case 13:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(a_0[8/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[8/*1*/]);
            v_7 = 8;
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(a_0[9/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[9/*1*/]);
            v_7 = 9;
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(a_0[10/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[10/*1*/]);
            v_7 = 10;
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(a_0[11/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[11/*1*/]);
            v_7 = 11;
            break;
        }
        break;
    case 14:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(a_0[12/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[12/*1*/]);
            v_7 = 12;
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(a_0[13/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[13/*1*/]);
            v_7 = 13;
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(a_0[14/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[14/*1*/]);
            v_7 = 14;
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(a_0[15/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[15/*1*/]);
            v_7 = 15;
            break;
        }
        break;
    case 15:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(a_0[16/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[16/*1*/]);
            v_7 = 16;
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(a_0[17/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[17/*1*/]);
            v_7 = 17;
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(a_0[18/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[18/*1*/]);
            v_7 = 18;
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(a_0[19/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[19/*1*/]);
            v_7 = 19;
            break;
        }
        break;
    case 16:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = "WT_BA_0";
            a_4/*"16"*/ = "WTD_BA_0";
            break;
        case 1:
            a_3/*"16"*/ = "WT_BA_1";
            a_4/*"16"*/ = "WTD_BA_1";
            break;
        case 2:
            a_3/*"16"*/ = "WT_BA_2";
            a_4/*"16"*/ = "WTD_BA_2";
            break;
        case 3:
            a_3/*"16"*/ = "WT_BA_3";
            a_4/*"16"*/ = "WTD_BA_3";
            break;
        case 4:
            a_3/*"16"*/ = "WT_BA_4";
            a_4/*"16"*/ = "WTD_BA_4";
            break;
        }
        break;
    case 17:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(0xdd5df8d9, 0);
            a_4/*"16"*/ = sub_250ec(0xdd5df8d9);
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(0x92a27487, 0);
            a_4/*"16"*/ = sub_250ec(0x92a27487);
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(0xdfe37640, 0);
            a_4/*"16"*/ = sub_250ec(0xdfe37640);
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(0x8bb05fd7, 0);
            a_4/*"16"*/ = sub_250ec(0x8bb05fd7);
            break;
        case 4:
            a_3/*"16"*/ = sub_1199f(0xf9dcbf2d, 0);
            a_4/*"16"*/ = sub_250ec(0xf9dcbf2d);
            break;
        }
        break;
    case 18:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(${weapon_snspistol}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_snspistol});
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(${weapon_heavypistol}, 0);
            a_4/*"16"*/ = sub_250ec(${weapon_heavypistol});
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(0x83839c4, 0);
            a_4/*"16"*/ = sub_250ec(0x83839c4);
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(0x47757124, 0);
            a_4/*"16"*/ = sub_250ec(0x47757124);
            break;
        }
        break;
    case 19:
        switch (a_2) {
        case 0:
            a_3/*"16"*/ = sub_1199f(a_0[20/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[20/*1*/]);
            v_7 = 20;
            break;
        case 1:
            a_3/*"16"*/ = sub_1199f(a_0[21/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[21/*1*/]);
            v_7 = 21;
            break;
        case 2:
            a_3/*"16"*/ = sub_1199f(a_0[22/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[22/*1*/]);
            v_7 = 22;
            break;
        case 3:
            a_3/*"16"*/ = sub_1199f(a_0[23/*1*/], 0);
            a_4/*"16"*/ = sub_250ec(a_0[23/*1*/]);
            v_7 = 23;
            break;
        }
        break;
    }
    if (v_7 != -1) {
        if (a_0[v_7/*1*/] == 0xfc508e33) {
            a_3/*"16"*/ = "FW_WEAP";
            a_4/*"16"*/ = "FW_DESC";
        }
    }
    return (GAMEPLAY::GET_HASH_KEY(a_3) != 0) || (GAMEPLAY::GET_HASH_KEY(a_4) != 0);
}

auto sub_250ec(auto a_0) {
    switch (a_0) {
    case 0:
        return "";
        break;
    case ${weapon_unarmed}:
        return "";
        break;
    case ${weapon_pistol}:
        return "WT_PIST_DESC";
        break;
    case ${weapon_combatpistol}:
        return "WTD_PIST_CBT";
        break;
    case ${weapon_appistol}:
        return "WTD_PIST_AP";
        break;
    case ${weapon_smg}:
        return "WTD_SMG";
        break;
    case ${weapon_microsmg}:
        return "WTD_SMG_MCR";
        break;
    case ${weapon_assaultrifle}:
        return "WTD_RIFLE_ASL";
        break;
    case ${weapon_carbinerifle}:
        return "WTD_RIFLE_CBN";
        break;
    case ${weapon_advancedrifle}:
        return "WTD_RIFLE_ADV";
        break;
    case ${weapon_mg}:
        return "WTD_MG";
        break;
    case ${weapon_combatmg}:
        return "WTD_MG_CBT";
        break;
    case ${weapon_pumpshotgun}:
        return "WTD_SG_PMP";
        break;
    case ${weapon_sawnoffshotgun}:
        return "WTD_SG_SOF";
        break;
    case ${weapon_assaultshotgun}:
        return "WTD_SG_ASL";
        break;
    case ${weapon_heavysniper}:
        return "WTD_SNIP_HVY";
        break;
    case ${weapon_remotesniper}:
        return "WTD_SNIP_RMT";
        break;
    case ${weapon_sniperrifle}:
        return "WTD_SNIP_RIF";
        break;
    case ${weapon_grenadelauncher}:
        return "WTD_GL";
        break;
    case ${weapon_rpg}:
        return "WTD_RPG";
        break;
    case ${weapon_minigun}:
        return "WTD_MINIGUN";
        break;
    case ${weapon_grenade}:
        return "WTD_GNADE";
        break;
    case ${weapon_smokegrenade}:
        return "WTD_GNADE_SMK";
        break;
    case ${weapon_stickybomb}:
        return "WTD_GNADE_STK";
        break;
    case ${weapon_molotov}:
        return "WTD_MOLOTOV";
        break;
    case ${weapon_stungun}:
        return "WTD_STUN";
        break;
    case ${weapon_petrolcan}:
        return "WTD_PETROL";
        break;
    case ${weapon_digiscanner}:
        return "WTD_DIGI";
        break;
    case ${weapon_electric_fence}:
        return "WTD_ELCFEN";
        break;
    case ${vehicle_weapon_tank}:
        return "";
        break;
    case ${vehicle_weapon_space_rocket}:
        return "";
        break;
    case ${vehicle_weapon_player_laser}:
        return "";
        break;
    case ${object}:
        return "";
        break;
    case ${gadget_parachute}:
        return "WTD_PARA";
        break;
    case ${ammo_rpg}:
        return "";
        break;
    case ${ammo_tank}:
        return "";
        break;
    case ${ammo_space_rocket}:
        return "";
        break;
    case ${ammo_player_laser}:
        return "";
        break;
    case ${ammo_enemy_laser}:
        return "";
        break;
    case ${weapon_knife}:
        return "WTD_KNIFE";
        break;
    case ${weapon_nightstick}:
        return "WTD_NGTSTK";
        break;
    case ${weapon_hammer}:
        return "WTD_HAMMER";
        break;
    case ${weapon_bat}:
        return "WTD_BAT";
        break;
    case ${weapon_crowbar}:
        return "WTD_CROWBAR";
        break;
    case ${weapon_golfclub}:
        return "WTD_GOLFCLUB";
        break;
    case ${weapon_rammed_by_car}:
        return "";
        break;
    case ${weapon_run_over_by_car}:
        return "";
        break;
    case ${weapon_assaultsmg}:
        return "WTD_SMG_ASL";
        break;
    case ${weapon_bullpupshotgun}:
        return "WTD_SG_BLP";
        break;
    case 0x99aeeb3b:
        return "WTD_PIST_50";
        break;
    case 0x83839c4:
        return "WTD_VPISTOL";
        break;
    case 0x92a27487:
        return "WTD_DAGGER";
        break;
    case 0xab564b93:
        return "WTD_PRXMINE";
        break;
    case 0x63ab0442:
        return "WTD_HOMLNCH";
        break;
    case 0xdd5df8d9:
        return "WTD_MACHETE";
        break;
    case 0xdb1aa450:
        return "WTD_MCHPIST";
        break;
    case 0x8bb05fd7:
        return "WTD_FLASHLIGHT";
        break;
    case 0xef951fbb:
        return "WTD_DBSHGN";
        break;
    case 0x624fe830:
        return "WTD_CMPRIFLE";
        break;
    case 0xdfe37640:
        return "WTD_SWBLADE";
        break;
    case 0xc1b3c3d1:
        return "WTD_REVOLVER";
        break;
    default:
        if (sub_6469(a_0, &v_3) != -1) {
            return sub_122e5(&v_3._fF);
        }
        break;
    }
    return "WT_INVALID";
}

void sub_254cf(auto a_0, auto a_1, auto a_2) {
    if (GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_1)) {
        sub_2551a(a_0);
    } else { 
        a_0._fB/*"16"*/ = a_1;
        a_0._f10 = 1;
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            a_0._f7 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), a_2);
        } else { 
            a_0._f6 = GAMEPLAY::GET_GAME_TIMER() + a_2;
        }
    }
}

auto sub_2551a(auto a_0) {
    a_0._fB/*"16"*/ = "";
    if (a_0._f10) {
        a_0._f10 = 0;
        return 1;
    }
    return 0;
}

void sub_2553b(auto a_0, auto a_1) {
    if (!sub_26032(a_0, a_1)) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        sub_25e53(a_1, 1);
    } else { 
        sub_2556c(a_0, a_1, 1);
    }
}

void sub_2556c(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        v_5 = sub_25a05(a_0, a_1);
        v_6 = sub_1a06d(a_1);
        v_7 = sub_1a060(v_6);
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, v_7);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, v_7);
        }
        sub_255b9(a_0, a_1, v_5);
    }
}

void sub_255b9(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_1a06d(a_1);
    v_6 = sub_1bc12(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xb6eff39a, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x74148c1b, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x6636ccb6, a_2, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x87ba152f, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x878f3310, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x516ca322, a_2, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x92962ae7, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x59c95785, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x8a6b951f, a_2, 1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x1210a9de, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x6b247a3b, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x74086859, a_2, 1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x63b6cd29, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xe9e177b3, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xa930d2a9, a_2, 1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x70cce755, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xbb181a21, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x9af2362c, a_2, 1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x3f7904ae, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xccadbd4c, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xe6f2ce28, a_2, 1);
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xd701b3c1, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x9e9d612c, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xd6b52dad, a_2, 1);
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x2874d6a6, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x2016e425, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xb5196e5, a_2, 1);
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x31b5e928, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xf26388bf, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xf5086a53, a_2, 1);
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x75274b18, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x27540e49, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x3b5357e5, a_2, 1);
            break;
        }
        break;
    case 11:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x831666f6, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xaeab9d02, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x4ce67b0b, a_2, 1);
            break;
        }
        break;
    case 12:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x311e6ef, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x98e67178, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x41136331, a_2, 1);
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_25a05(auto a_0, auto a_1) {
    v_5 = sub_1a06d(a_1);
    v_6 = sub_1bc12(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xb6eff39a, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x74148c1b, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x6636ccb6, &v_4, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x87ba152f, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x878f3310, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x516ca322, &v_4, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x92962ae7, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x59c95785, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x8a6b951f, &v_4, -1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x1210a9de, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x6b247a3b, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x74086859, &v_4, -1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x63b6cd29, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xe9e177b3, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xa930d2a9, &v_4, -1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x70cce755, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xbb181a21, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x9af2362c, &v_4, -1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x3f7904ae, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xccadbd4c, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xe6f2ce28, &v_4, -1);
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xd701b3c1, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x9e9d612c, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xd6b52dad, &v_4, -1);
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x2874d6a6, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x2016e425, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xb5196e5, &v_4, -1);
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x31b5e928, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf26388bf, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xf5086a53, &v_4, -1);
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x75274b18, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x27540e49, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x3b5357e5, &v_4, -1);
            break;
        }
        break;
    case 11:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x831666f6, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xaeab9d02, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x4ce67b0b, &v_4, -1);
            break;
        }
        break;
    case 12:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x311e6ef, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x98e67178, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x41136331, &v_4, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_4;
}

void sub_25e53(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_26007(a_0)) {
            sub_25e84(a_0, 1);
        }
    } else if (sub_26007(a_0)) {
        sub_25e84(a_0, 0);
    }
}

void sub_25e84(auto a_0, auto a_1) {
    v_4 = sub_25fef(a_0);
    v_5 = a_0;
    if (v_5 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_4, sub_1008b(v_5));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_4, sub_1008b(v_5));
        }
        sub_84ba(sub_25ecf(a_0), v_4, -1, 1);
    } else { }
}

auto sub_25ecf(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 704;
            break;
        case 1:
            return 705;
            break;
        case 2:
            return 706;
            break;
        case 3:
            return 707;
            break;
        case 4:
            return 708;
            break;
        case 5:
            return 709;
            break;
        case 6:
            return 710;
            break;
        case 7:
            return 711;
            break;
        case 8:
            return 712;
            break;
        case 9:
            return 2044;
            break;
        case 10:
            return 2056;
            break;
        case 11:
            return 2083;
            break;
        case 12:
            return 2403;
            break;
        case 13:
            return 2921;
            break;
        }
    }
    return 3790;
}

auto sub_25fef(auto a_0) {
    v_3 = sub_4b3f(sub_25ecf(a_0), -1, 0);
    return v_3;
}

auto sub_26007(auto a_0) {
    if (sub_1bd98()) {
        return 0;
    }
    v_3 = sub_25fef(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_26032(auto a_0, auto a_1) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_273c7(a_1) && (!sub_26007(a_1))) {
            return 1;
        }
    } else if (!sub_2606e(a_0, a_1)) {
        return 1;
    }
    return 0;
}

auto sub_2606e(auto a_0, auto a_1) {
    if (sub_7507(a_0)) {
        v_4 = sub_25a05(a_0, a_1);
        v_5 = sub_1a06d(a_1);
        v_6 = sub_1a060(v_5);
        return GAMEPLAY::IS_BIT_SET(v_4, v_6);
    }
    return 0;
}

auto sub_260a5(auto a_0) {
    switch (a_0) {
    case ${weapon_pistol}:
        return 0;
        break;
    case ${weapon_knife}:
        return 0;
        break;
    case ${weapon_microsmg}:
        return 5;
        break;
    case ${weapon_assaultsmg}:
        return 29;
        break;
    case ${weapon_nightstick}:
        return 3;
        break;
    case ${weapon_combatpistol}:
        return 9;
        break;
    case ${weapon_smg}:
        return 11;
        break;
    case ${weapon_assaultrifle}:
        return 24;
        break;
    case ${weapon_sniperrifle}:
        return 21;
        break;
    case ${weapon_stickybomb}:
        return 19;
        break;
    case ${weapon_petrolcan}:
        return 20;
        break;
    case ${weapon_pumpshotgun}:
        return 17;
        break;
    case ${weapon_appistol}:
        return 33;
        break;
    case ${weapon_smokegrenade}:
        return 13;
        break;
    case ${weapon_grenade}:
        return 15;
        break;
    case ${weapon_carbinerifle}:
        if (sub_1e5c5(3741, -1, -1)) {
            return 0;
        } else { 
            return 42;
        }
        break;
    case ${weapon_assaultshotgun}:
        return 37;
        break;
    case ${weapon_molotov}:
        if (sub_1e5c5(3741, -1, -1)) {
            return 0;
        } else { 
            return 31;
        }
        break;
    case ${weapon_mg}:
        return 50;
        break;
    case ${weapon_advancedrifle}:
        return 70;
        break;
    case ${weapon_combatmg}:
        return 80;
        break;
    case ${weapon_grenadelauncher}:
        return 60;
        break;
    case ${weapon_heavysniper}:
        return 90;
        break;
    case ${weapon_rpg}:
        return 100;
        break;
    case ${weapon_minigun}:
        return 120;
        break;
    case ${weapon_sawnoffshotgun}:
        return 0;
        break;
    case ${weapon_golfclub}:
        return 0;
        break;
    case ${weapon_crowbar}:
        return 0;
        break;
    case ${weapon_bat}:
        return 0;
        break;
    }
    return 0;
}

void sub_26269(auto a_0) {
    if ((g_2708AA._f3E >= 3) || (g_2708AA._f3D >= 4)) {
        return ;
    }
    g_2708AA._f19[g_2708AA._f3D/*1*/] = 2;
    g_2708AA._f3D += 1;
    g_2708AA._f1E[g_2708AA._f3E/*1*/] = a_0;
    g_2708AA._f3E += 1;
}

void sub_262c8(auto a_0, auto a_1, auto a_2) {
    g_2708AA._f15/*"16"*/ = a_0;
    g_2708AA._f3D = 0;
    g_2708AA._f3E = 0;
    g_2708AA._f3F = 0;
    g_2708AA._f40 = 0;
    g_2708AA._f41 = a_1;
    g_2708AA._f42 = GAMEPLAY::GET_GAME_TIMER();
    g_2708AA._f43 = a_2;
    for (v_5 = 0; v_5 < 4; v_5 += 1) {
        g_2708AA._f19[v_5/*1*/] = 0;
    }
}

void sub_2632d(auto a_0) {
    if ((g_4369._f1219 >= 3) || (g_4369._f1218 >= 4)) {
        return ;
    }
    g_4369._f11D6[g_4369._f1218/*1*/] = 2;
    g_4369._f1218 += 1;
    g_4369._f11DB[g_4369._f1219/*1*/] = a_0;
    g_4369._f1219 += 1;
}

auto sub_2638c(auto a_0) {
    switch (a_0) {
    case 1:
        return 11;
        break;
    case 256:
        return 11;
        break;
    case 257:
        return 11;
        break;
    case 258:
        return 11;
        break;
    case 259:
        return 11;
        break;
    case 260:
        return 11;
        break;
    case 261:
        return 11;
        break;
    case 262:
        return 11;
        break;
    case 305:
        return 11;
        break;
    case 306:
        return 11;
        break;
    case 307:
        return 11;
        break;
    case 308:
        return 11;
        break;
    case 309:
        return 11;
        break;
    case 310:
        return 11;
        break;
    case 311:
        return 11;
        break;
    case 312:
        return 11;
        break;
    case 313:
        return 11;
        break;
    case 314:
        return 11;
        break;
    case 315:
        return 11;
        break;
    case 316:
        return 11;
        break;
    case 317:
        return 11;
        break;
    case 318:
        return 11;
        break;
    case 319:
        return 11;
        break;
    case 320:
        return 11;
        break;
    case 321:
        return 11;
        break;
    case 322:
        return 11;
        break;
    case 323:
        return 11;
        break;
    case 263:
        return 11;
        break;
    case 264:
        return 11;
        break;
    case 265:
        return 11;
        break;
    case 302:
        return 11;
        break;
    case 303:
        return 11;
        break;
    case 304:
        return 11;
        break;
    case 296:
        return 11;
        break;
    case 297:
        return 11;
        break;
    case 298:
        return 11;
        break;
    case 299:
        return 11;
        break;
    case 300:
        return 11;
        break;
    case 301:
        return 11;
        break;
    case 156:
        return 5;
        break;
    case 157:
        return 10;
        break;
    case 158:
        return 15;
        break;
    case 159:
        return 20;
        break;
    case 160:
        return 25;
        break;
    case 2:
        return 27;
        break;
    case 3:
        return 24;
        break;
    case 4:
        return 22;
        break;
    case 6:
        return 15;
        break;
    case 7:
        return 18;
        break;
    case 8:
        return 44;
        break;
    case 9:
        return 16;
        break;
    case 10:
        return 23;
        break;
    case 11:
        return 38;
        break;
    case 12:
        return 32;
        break;
    case 13:
        return 11;
        break;
    case 14:
        return 56;
        break;
    case 15:
        return 28;
        break;
    case 288:
        return 44;
        break;
    case 289:
        return 16;
        break;
    case 290:
        return 23;
        break;
    case 291:
        return 38;
        break;
    case 292:
        return 32;
        break;
    case 293:
        return 11;
        break;
    case 294:
        return 56;
        break;
    case 295:
        return 28;
        break;
    case 17:
        return 75;
        break;
    case 136:
        return 50;
        break;
    case 137:
        return 50;
        break;
    case 138:
        return 50;
        break;
    case 139:
        return 50;
        break;
    case 140:
        return 50;
        break;
    case 141:
        return 50;
        break;
    case 142:
        return 50;
        break;
    case 143:
        return 50;
        break;
    case 144:
        return 50;
        break;
    case 145:
        return 50;
        break;
    case 146:
        return 50;
        break;
    case 147:
        return 50;
        break;
    case 148:
        return 50;
        break;
    case 149:
        return 50;
        break;
    case 150:
        return 50;
        break;
    case 151:
        return 50;
        break;
    case 152:
        return 50;
        break;
    case 153:
        return 50;
        break;
    case 154:
        return 50;
        break;
    case 155:
        return 50;
        break;
    case 36:
        return 100;
        break;
    case 238:
        if (g_40001._fB23 > -1) {
            return g_40001._fB23;
        } else { 
            return 0;
        }
        break;
    case 239:
        if (g_40001._fB24 > -1) {
            return g_40001._fB24;
        } else { 
            return 15;
        }
        break;
    case 240:
        if (g_40001._fB25 > -1) {
            return g_40001._fB25;
        } else { 
            return 30;
        }
        break;
    case 241:
        if (g_40001._fB26 > -1) {
            return g_40001._fB26;
        } else { 
            return 45;
        }
        break;
    case 242:
        if (g_40001._fB27 > -1) {
            return g_40001._fB27;
        } else { 
            return 60;
        }
        break;
    case 243:
        if (g_40001._fB28 > -1) {
            return g_40001._fB28;
        } else { 
            return 75;
        }
        break;
    case 244:
        if (g_40001._fB29 > -1) {
            return g_40001._fB29;
        } else { 
            return 90;
        }
        break;
    case 245:
        if (g_40001._fB2A > -1) {
            return g_40001._fB2A;
        } else { 
            return 105;
        }
        break;
    case 246:
        if (g_40001._fB2B > -1) {
            return g_40001._fB2B;
        } else { 
            return 130;
        }
        break;
    case 247:
        if (g_40001._fB2C > -1) {
            return g_40001._fB2C;
        } else { 
            return 145;
        }
        break;
    }
    switch (a_0) {
    case 345:
        return 11;
        break;
    case 346:
        return 11;
        break;
    case 347:
        return 11;
        break;
    case 348:
        return 11;
        break;
    case 349:
        return 11;
        break;
    case 350:
        return 11;
        break;
    case 351:
        return 11;
        break;
    case 352:
        return 11;
        break;
    case 353:
        return 11;
        break;
    case 354:
        return 11;
        break;
    case 355:
        return 11;
        break;
    case 356:
        return 11;
        break;
    case 357:
        return 11;
        break;
    case 358:
        return 11;
        break;
    case 359:
        return 11;
        break;
    case 360:
        return 11;
        break;
    case 361:
        return 11;
        break;
    case 362:
        return 11;
        break;
    case 363:
        return 11;
        break;
    case 364:
        return 11;
        break;
    }
    switch (a_0) {
    case 56:
        return 100;
    case 57:
        return 100;
    case 58:
        return 100;
    case 59:
        return 100;
    case 60:
        return 100;
    case 61:
        return 100;
    case 62:
        return 100;
    case 63:
        return 100;
    case 64:
        return 100;
    case 65:
        return 100;
    case 66:
        return 100;
    case 67:
        return 100;
    case 68:
        return 100;
    case 69:
        return 100;
    case 70:
        return 100;
    case 71:
        return 100;
    case 72:
        return 100;
    case 73:
        return 100;
    case 74:
        return 100;
    case 75:
        return 100;
    case 76:
        return 200;
    case 77:
        return 200;
    case 78:
        return 200;
    case 79:
        return 200;
    case 80:
        return 200;
    case 81:
        return 200;
    case 82:
        return 200;
    case 83:
        return 200;
    case 84:
        return 200;
    case 85:
        return 200;
    case 86:
        return 200;
    case 87:
        return 200;
    case 88:
        return 200;
    case 89:
        return 200;
    case 90:
        return 200;
    case 91:
        return 200;
    case 92:
        return 200;
    case 93:
        return 200;
    case 94:
        return 200;
    case 95:
        return 200;
    case 96:
        return 400;
    case 97:
        return 400;
    case 98:
        return 400;
    case 99:
        return 400;
    case 100:
        return 400;
    case 101:
        return 400;
    case 102:
        return 400;
    case 103:
        return 400;
    case 104:
        return 400;
    case 105:
        return 400;
    case 106:
        return 400;
    case 107:
        return 400;
    case 108:
        return 400;
    case 109:
        return 400;
    case 110:
        return 400;
    case 111:
        return 400;
    case 112:
        return 400;
    case 113:
        return 400;
    case 114:
        return 400;
    case 115:
        return 400;
    case 116:
        return 600;
    case 117:
        return 600;
    case 118:
        return 600;
    case 119:
        return 600;
    case 120:
        return 600;
    case 121:
        return 600;
    case 122:
        return 600;
    case 123:
        return 600;
    case 124:
        return 600;
    case 125:
        return 600;
    case 126:
        return 600;
    case 127:
        return 600;
    case 128:
        return 600;
    case 129:
        return 600;
    case 130:
        return 600;
    case 131:
        return 600;
    case 132:
        return 600;
    case 133:
        return 600;
    case 134:
        return 600;
    case 135:
        return 600;
    }
    switch (a_0) {
    case 161:
        return 75;
    case 162:
        return 50;
    case 163:
        return 100;
    case 164:
        return 600;
    case 165:
        return 400;
    case 166:
        return 100;
    case 167:
        return 75;
    case 168:
        return 50;
    case 169:
        return 100;
    case 170:
        return 600;
    case 171:
        return 400;
    case 172:
        return 100;
    case 173:
        return 75;
    case 174:
        return 50;
    case 175:
        return 100;
    case 176:
        return 600;
    case 177:
        return 400;
    case 178:
        return 100;
    case 179:
        return 75;
    case 180:
        return 50;
    case 181:
        return 100;
    case 182:
        return 600;
    case 183:
        return 400;
    case 184:
        return 100;
    }
    switch (a_0) {
    case 185:
        return 75;
    case 186:
        return 50;
    case 187:
        return 100;
    case 188:
        return 600;
    case 189:
        return 400;
    case 190:
        return 100;
    case 191:
        return 200;
    case 192:
        return 200;
    case 193:
        return 200;
    case 194:
        return 200;
    case 195:
        return 75;
    case 196:
        return 50;
    case 197:
        return 100;
    case 198:
        return 600;
    case 199:
        return 400;
    case 200:
        return 100;
    case 201:
        return 200;
    case 202:
        return 75;
    case 203:
        return 50;
    case 204:
        return 100;
    case 205:
        return 600;
    case 206:
        return 400;
    case 207:
        return 100;
    case 208:
        return 200;
    case 209:
        return 75;
    case 210:
        return 50;
    case 211:
        return 100;
    case 212:
        return 600;
    case 213:
        return 400;
    case 214:
        return 100;
    case 215:
        return 200;
    case 224:
        return 75;
    case 225:
        return 50;
    case 226:
        return 100;
    case 227:
        return 600;
    case 228:
        return 400;
    case 229:
        return 100;
    case 230:
        return 200;
    case 231:
        return 75;
    case 232:
        return 50;
    case 233:
        return 100;
    case 234:
        return 600;
    case 235:
        return 400;
    case 236:
        return 100;
    case 237:
        return 200;
    }
    switch (a_0) {
    case 266:
        return 75;
    case 267:
        return 50;
    case 268:
        return 100;
    case 269:
        return 600;
    case 270:
        return 400;
    case 271:
        return 100;
    case 272:
        return 200;
    case 273:
        return 75;
    case 274:
        return 50;
    case 275:
        return 100;
    case 276:
        return 600;
    case 277:
        return 400;
    case 278:
        return 100;
    case 279:
        return 200;
    case 280:
        return 75;
    case 281:
        return 50;
    case 282:
        return 100;
    case 283:
        return 600;
    case 284:
        return 400;
    case 285:
        return 100;
    case 286:
        return 200;
    case 324:
        return 75;
    case 325:
        return 50;
    case 326:
        return 100;
    case 327:
        return 600;
    case 328:
        return 400;
    case 329:
        return 100;
    case 330:
        return 200;
    case 331:
        return 75;
    case 332:
        return 50;
    case 333:
        return 100;
    case 334:
        return 600;
    case 335:
        return 400;
    case 336:
        return 100;
    case 337:
        return 200;
    case 338:
        return 75;
    case 339:
        return 50;
    case 340:
        return 100;
    case 341:
        return 600;
    case 342:
        return 400;
    case 343:
        return 100;
    case 344:
        return 200;
    case 372:
        return 11;
    case 373:
        return 11;
    case 374:
        return 11;
    case 375:
        return 11;
    case 376:
        return 11;
    }
    return 0;
}

auto sub_273c7(auto a_0) {
    if (sub_1bd98()) {
        return 0;
    }
    v_3 = sub_273f2(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_273f2(auto a_0) {
    v_3 = sub_4b3f(sub_2740d(a_0, 999), -1, 0);
    return v_3;
}

auto sub_2740d(auto a_0, auto a_1) {
    v_4 = a_0;
    v_5 = sub_10156(v_4);
    if ((((sub_4e69() == 0) || (sub_1bd8d() == 0)) || (a_1 == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_5) {
        case 0:
            return 686;
            break;
        case 1:
            return 687;
            break;
        case 2:
            return 688;
            break;
        case 3:
            return 689;
            break;
        case 4:
            return 690;
            break;
        case 5:
            return 691;
            break;
        case 6:
            return 692;
            break;
        case 7:
            return 693;
            break;
        case 8:
            return 694;
            break;
        case 9:
            return 2042;
            break;
        case 10:
            return 2054;
            break;
        case 11:
            return 2081;
            break;
        case 12:
            return 2401;
            break;
        case 13:
            return 2919;
            break;
        }
    }
    return 3790;
}

auto sub_27537(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_2af85(a_0, "", "", -1, -1, 0);
    switch (a_1) {
    case ${gadget_parachute}:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            switch (a_2) {
            case 0:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 1:
                sub_2af85(a_0, "PS_BAG_47", "PD_CONTENT_11", 9000, 47, 1);
                break;
            case 2:
                sub_2af85(a_0, "PS_BAG_49", "PD_CONTENT_11", 9000, 49, 1);
                break;
            case 3:
                sub_2af85(a_0, "PS_BAG_51", "PD_CONTENT_11", 9000, 51, 1);
                break;
            case 4:
                sub_2af85(a_0, "PS_BAG_48", "PD_CONTENT_11", 9000, 48, 1);
                break;
            case 5:
                sub_2af85(a_0, "PS_BAG_50", "PD_CONTENT_11", 9000, 50, 1);
                break;
            case 6:
                sub_2af85(a_0, "PS_BAG_13", "PD_CONTENT_9", 0, 13, 1);
                break;
            case 7:
                sub_2af85(a_0, "PS_BAG_22", "PD_CONTENT_9", 15000, 22, 1);
                break;
            case 8:
                sub_2af85(a_0, "PS_BAG_2", "PD_CONTENT_9", 15000, 2, 1);
                break;
            case 9:
                sub_2af85(a_0, "PS_BAG_20", "PD_CONTENT_9", 15000, 20, 1);
                break;
            case 10:
                sub_2af85(a_0, "PS_BAG_18", "PD_CONTENT_9", 15000, 18, 1);
                break;
            case 11:
                sub_2af85(a_0, "PS_BAG_3", "PD_CONTENT_9", 15000, 3, 1);
                break;
            case 12:
                sub_2af85(a_0, "PS_BAG_5", "PD_CONTENT_9", 15000, 5, 1);
                break;
            case 13:
                sub_2af85(a_0, "PS_BAG_31", "PD_CONTENT_10", 15000, 31, 1);
                break;
            case 14:
                sub_2af85(a_0, "PS_BAG_15", "PD_CONTENT_9", 15000, 15, 1);
                break;
            case 15:
                sub_2af85(a_0, "PS_BAG_32", "PD_CONTENT_10", 15000, 32, 1);
                break;
            case 16:
                sub_2af85(a_0, "PS_BAG_33", "PD_CONTENT_10", 15000, 33, 1);
                break;
            case 17:
                sub_2af85(a_0, "PS_BAG_28", "PD_CONTENT_10", 15000, 28, 1);
                break;
            case 18:
                sub_2af85(a_0, "PS_BAG_26", "PD_CONTENT_9", 15000, 26, 1);
                break;
            case 19:
                sub_2af85(a_0, "PS_BAG_27", "PD_CONTENT_10", 15000, 27, 1);
                break;
            case 20:
                sub_2af85(a_0, "PS_BAG_6", "PD_CONTENT_9", 15000, 6, 1);
                break;
            case 21:
                sub_2af85(a_0, "PS_BAG_7", "PD_CONTENT_9", 15000, 7, 1);
                break;
            case 22:
                sub_2af85(a_0, "PS_BAG_34", "PD_CONTENT_10", 15000, 34, 1);
                break;
            case 23:
                sub_2af85(a_0, "PS_BAG_24", "PD_CONTENT_9", 15000, 24, 1);
                break;
            case 24:
                sub_2af85(a_0, "PS_BAG_46", "PD_CONTENT_10", 15000, 46, 1);
                break;
            case 25:
                sub_2af85(a_0, "PS_BAG_11", "PD_CONTENT_9", 15000, 11, 1);
                break;
            case 26:
                sub_2af85(a_0, "PS_BAG_14", "PD_CONTENT_9", 15000, 14, 1);
                break;
            case 27:
                sub_2af85(a_0, "PS_BAG_8", "PD_CONTENT_9", 15000, 8, 1);
                break;
            case 28:
                sub_2af85(a_0, "PS_BAG_35", "PD_CONTENT_10", 15000, 35, 1);
                break;
            case 29:
                sub_2af85(a_0, "PS_BAG_36", "PD_CONTENT_10", 15000, 36, 1);
                break;
            case 30:
                sub_2af85(a_0, "PS_BAG_19", "PD_CONTENT_9", 15000, 19, 1);
                break;
            case 31:
                sub_2af85(a_0, "PS_BAG_29", "PD_CONTENT_10", 15000, 29, 1);
                break;
            case 32:
                sub_2af85(a_0, "PS_BAG_37", "PD_CONTENT_10", 15000, 37, 1);
                break;
            case 33:
                sub_2af85(a_0, "PS_BAG_38", "PD_CONTENT_10", 15000, 38, 1);
                break;
            case 34:
                sub_2af85(a_0, "PS_BAG_16", "PD_CONTENT_9", 15000, 16, 1);
                break;
            case 35:
                sub_2af85(a_0, "PS_BAG_45", "PD_CONTENT_10", 15000, 45, 1);
                break;
            case 36:
                sub_2af85(a_0, "PS_BAG_39", "PD_CONTENT_10", 15000, 39, 1);
                break;
            case 37:
                sub_2af85(a_0, "PS_BAG_30", "PD_CONTENT_10", 15000, 30, 1);
                break;
            case 38:
                sub_2af85(a_0, "PS_BAG_40", "PD_CONTENT_10", 15000, 40, 1);
                break;
            case 39:
                sub_2af85(a_0, "PS_BAG_21", "PD_CONTENT_9", 15000, 21, 1);
                break;
            case 40:
                sub_2af85(a_0, "PS_BAG_9", "PD_CONTENT_9", 15000, 9, 1);
                break;
            case 41:
                sub_2af85(a_0, "PS_BAG_41", "PD_CONTENT_10", 15000, 41, 1);
                break;
            case 42:
                sub_2af85(a_0, "PS_BAG_42", "PD_CONTENT_10", 15000, 42, 1);
                break;
            case 43:
                sub_2af85(a_0, "PS_BAG_43", "PD_CONTENT_10", 15000, 43, 1);
                break;
            case 44:
                sub_2af85(a_0, "PS_BAG_44", "PD_CONTENT_10", 15000, 44, 1);
                break;
            case 45:
                sub_2af85(a_0, "PS_BAG_4", "PD_CONTENT_9", 15000, 4, 1);
                break;
            case 46:
                sub_2af85(a_0, "PS_BAG_17", "PD_CONTENT_9", 15000, 17, 1);
                break;
            case 47:
                sub_2af85(a_0, "PS_BAG_12", "PD_CONTENT_9", 15000, 12, 1);
                break;
            case 48:
                sub_2af85(a_0, "PS_BAG_23", "PD_CONTENT_9", 15000, 23, 1);
                break;
            case 49:
                sub_2af85(a_0, "PS_BAG_10", "PD_CONTENT_9", 15000, 10, 1);
                break;
            case 50:
                sub_2af85(a_0, "PS_BAG_1", "PD_CONTENT_9", 15000, 1, 1);
                break;
            case 51:
                sub_2af85(a_0, "PS_BAG_25", "PD_CONTENT_9", 15000, 25, 1);
                break;
            case 52:
                sub_2af85(a_0, "", "", 0, 52, 1);
                break;
            case 53:
                sub_2af85(a_0, "", "", 0, 53, 1);
                break;
            case 54:
                sub_2af85(a_0, "", "", 0, 54, 1);
                break;
            case 55:
                sub_2af85(a_0, "", "", 0, 55, 1);
                break;
            case 56:
                sub_2af85(a_0, "", "", 0, 56, 1);
                break;
            case 57:
                sub_2af85(a_0, "", "", 0, 57, 1);
                break;
            case 58:
                sub_2af85(a_0, "", "", 0, 58, 1);
                break;
            case 59:
                sub_2af85(a_0, "", "", 0, 59, 1);
                break;
            case 60:
                sub_2af85(a_0, "", "", 0, 60, 1);
                break;
            case 61:
                sub_2af85(a_0, "", "", 0, 61, 1);
                break;
            case 62:
                sub_2af85(a_0, "PS_CAN_0", "PSD_CAN_0", 21500, 8, 2);
                break;
            case 63:
                sub_2af85(a_0, "PS_CAN_1", "PSD_CAN_1", 22100, 9, 2);
                break;
            case 64:
                sub_2af85(a_0, "PS_CAN_2", "PSD_CAN_2", 23900, 10, 2);
                break;
            case 65:
                sub_2af85(a_0, "PS_CAN_3", "PSD_CAN_3", 24800, 11, 2);
                break;
            case 66:
                sub_2af85(a_0, "PS_CAN_4", "PSD_CAN_4", 21000, 12, 2);
                break;
            case 67:
                sub_2af85(a_0, "PS_CAN_5", "PSD_CAN_5", 25000, 13, 2);
                break;
            case 68:
                sub_2af85(a_0, "PM_TINT5", "PD_TINT5", 18500, 5, 2);
                break;
            case 69:
                sub_2af85(a_0, "PM_TINT1", "PD_TINT1", 19250, 1, 2);
                break;
            case 70:
                sub_2af85(a_0, "PM_TINT2", "PD_TINT2", 18750, 2, 2);
                break;
            case 71:
                sub_2af85(a_0, "PM_TINT7", "PD_TINT7", 19000, 7, 2);
                break;
            case 72:
                sub_2af85(a_0, "PM_TINT4", "PD_TINT4", 12500, 4, 2);
                break;
            case 73:
                sub_2af85(a_0, "PM_TINT3", "PD_TINT3", 19500, 3, 2);
                break;
            case 74:
                sub_2af85(a_0, "PM_TINT0", "PD_TINT0", 19750, 0, 2);
                break;
            case 75:
                sub_2af85(a_0, "PM_TINT6", "PD_TINT6", 20000, 6, 2);
                break;
            case 76:
                sub_2af85(a_0, "PS_CAN_0", "PSD_CAN_0_R", 10750, 8, 3);
                break;
            case 77:
                sub_2af85(a_0, "PS_CAN_1", "PSD_CAN_1_R", 11050, 9, 3);
                break;
            case 78:
                sub_2af85(a_0, "PS_CAN_2", "PSD_CAN_2_R", 11950, 10, 3);
                break;
            case 79:
                sub_2af85(a_0, "PS_CAN_3", "PSD_CAN_3_R", 12400, 11, 3);
                break;
            case 80:
                sub_2af85(a_0, "PS_CAN_4", "PSD_CAN_4_R", 10500, 12, 3);
                break;
            case 81:
                sub_2af85(a_0, "PS_CAN_5", "PSD_CAN_5_R", 12500, 13, 3);
                break;
            case 82:
                sub_2af85(a_0, "PM_TINT5", "PD_TINT5_R", 9250, 5, 3);
                break;
            case 83:
                sub_2af85(a_0, "PM_TINT1", "PD_TINT1_R", 9625, 1, 3);
                break;
            case 84:
                sub_2af85(a_0, "PM_TINT2", "PD_TINT2_R", 9375, 2, 3);
                break;
            case 85:
                sub_2af85(a_0, "PM_TINT7", "PD_TINT7_R", 9500, 7, 3);
                break;
            case 86:
                sub_2af85(a_0, "PM_TINT4", "PD_TINT4_R", 6250, 4, 3);
                break;
            case 87:
                sub_2af85(a_0, "PM_TINT3", "PD_TINT3_R", 9750, 3, 3);
                break;
            case 88:
                sub_2af85(a_0, "PM_TINT0", "PD_TINT0_R", 9875, 0, 3);
                break;
            case 89:
                sub_2af85(a_0, "PM_TINT6", "PD_TINT6_R", 10000, 6, 3);
                break;
            case 90:
                sub_2af85(a_0, "PM_TINT8", "PD_TINT8", 100, 0, 4);
                break;
            case 91:
                sub_2af85(a_0, "PM_TINT9", "PD_TINT9", 14300, 1, 4);
                break;
            case 92:
                sub_2af85(a_0, "PM_TINT10", "PD_TINT10", 14475, 2, 4);
                break;
            case 93:
                sub_2af85(a_0, "PM_TINT11", "PD_TINT11", 14650, 3, 4);
                break;
            case 94:
                sub_2af85(a_0, "PM_TINT12", "PD_TINT12", 14825, 4, 4);
                break;
            case 95:
                sub_2af85(a_0, "PM_TINT13", "PD_TINT13", 15000, 5, 4);
                break;
            case 96:
                sub_2af85(a_0, "PM_TINT14", "PD_TINT14", 25000, 6, 4);
                break;
            case 97:
                sub_2af85(a_0, "PM_TINT15", "PD_TINT15", 30000, 7, 4);
                break;
            }
        } else { 
            switch (a_2) {
            case 0:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 1:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 2:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 3:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 4:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 5:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 6:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 7:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 8:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 9:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 10:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 11:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 12:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 13:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 14:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 15:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 16:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 17:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 18:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 19:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 20:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 21:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 22:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 23:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 24:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 25:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 26:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 27:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 28:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 29:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 30:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 31:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 32:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 33:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 34:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 35:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 36:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 37:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 38:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 39:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 40:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 41:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 42:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 43:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 44:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 45:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 46:
                sub_2af85(a_0, "PS_BAG_0", "PD_CONTENT_9", 0, 0, 1);
                break;
            case 47:
                sub_2af85(a_0, "PS_CAN_0", "PSD_CAN_0", 2750, 8, 2);
                break;
            case 48:
                sub_2af85(a_0, "PS_CAN_1", "PSD_CAN_1", 2750, 9, 2);
                break;
            case 49:
                sub_2af85(a_0, "PS_CAN_2", "PSD_CAN_2", 2750, 10, 2);
                break;
            case 50:
                sub_2af85(a_0, "PS_CAN_3", "PSD_CAN_3", 2750, 11, 2);
                break;
            case 51:
                sub_2af85(a_0, "PS_CAN_4", "PSD_CAN_4", 2750, 12, 2);
                break;
            case 52:
                sub_2af85(a_0, "PS_CAN_5", "PSD_CAN_5", 2750, 13, 2);
                break;
            case 53:
                sub_2af85(a_0, "PM_TINT5", "PD_TINT5", 250, 5, 2);
                break;
            case 54:
                sub_2af85(a_0, "PM_TINT1", "PD_TINT1", 500, 1, 2);
                break;
            case 55:
                sub_2af85(a_0, "PM_TINT2", "PD_TINT2", 1000, 2, 2);
                break;
            case 56:
                sub_2af85(a_0, "PM_TINT7", "PD_TINT7", 1250, 7, 2);
                break;
            case 57:
                sub_2af85(a_0, "PM_TINT4", "PD_TINT4", 1500, 4, 2);
                break;
            case 58:
                sub_2af85(a_0, "PM_TINT3", "PD_TINT3", 1750, 3, 2);
                break;
            case 59:
                sub_2af85(a_0, "PM_TINT0", "PD_TINT0", 2000, 0, 2);
                break;
            case 60:
                sub_2af85(a_0, "PM_TINT6", "PD_TINT6", 2500, 6, 2);
                break;
            case 61:
                sub_2af85(a_0, "PS_CAN_0", "PSD_CAN_0_R", 1375, 8, 3);
                break;
            case 62:
                sub_2af85(a_0, "PS_CAN_1", "PSD_CAN_1_R", 1375, 9, 3);
                break;
            case 63:
                sub_2af85(a_0, "PS_CAN_2", "PSD_CAN_2_R", 1375, 10, 3);
                break;
            case 64:
                sub_2af85(a_0, "PS_CAN_3", "PSD_CAN_3_R", 1375, 11, 3);
                break;
            case 65:
                sub_2af85(a_0, "PS_CAN_4", "PSD_CAN_4_R", 1375, 12, 3);
                break;
            case 66:
                sub_2af85(a_0, "PS_CAN_5", "PSD_CAN_5_R", 1375, 13, 3);
                break;
            case 67:
                sub_2af85(a_0, "PM_TINT5", "PD_TINT5_R", 125, 5, 3);
                break;
            case 68:
                sub_2af85(a_0, "PM_TINT1", "PD_TINT1_R", 250, 1, 3);
                break;
            case 69:
                sub_2af85(a_0, "PM_TINT2", "PD_TINT2_R", 500, 2, 3);
                break;
            case 70:
                sub_2af85(a_0, "PM_TINT7", "PD_TINT7_R", 625, 7, 3);
                break;
            case 71:
                sub_2af85(a_0, "PM_TINT4", "PD_TINT4_R", 750, 4, 3);
                break;
            case 72:
                sub_2af85(a_0, "PM_TINT3", "PD_TINT3_R", 875, 3, 3);
                break;
            case 73:
                sub_2af85(a_0, "PM_TINT0", "PD_TINT0_R", 1000, 0, 3);
                break;
            case 74:
                sub_2af85(a_0, "PM_TINT6", "PD_TINT6_R", 1250, 6, 3);
                break;
            case 75:
                sub_2af85(a_0, "PM_TINT8", "PD_TINT8", 100, 0, 4);
                break;
            case 76:
                sub_2af85(a_0, "PM_TINT9", "PD_TINT9", 14300, 1, 4);
                break;
            case 77:
                sub_2af85(a_0, "PM_TINT10", "PD_TINT10", 14475, 2, 4);
                break;
            case 78:
                sub_2af85(a_0, "PM_TINT11", "PD_TINT11", 14650, 3, 4);
                break;
            case 79:
                sub_2af85(a_0, "PM_TINT12", "PD_TINT12", 14825, 4, 4);
                break;
            case 80:
                sub_2af85(a_0, "PM_TINT13", "PD_TINT13", 15000, 5, 4);
                break;
            }
        }
        break;
    case 0xd8df3c3c:
        break;
    default:
        if (a_1 == 0xfc508e33) {
            switch (a_2) {
            case 0:
                sub_2af85(a_0, "FW_TINT0", "FWD_TYPE1", g_40001._f1826, 0, 5);
                break;
            case 1:
                sub_2af85(a_0, "FW_TINT1", "FWD_TYPE1", g_40001._f1826, 1, 5);
                break;
            case 2:
                sub_2af85(a_0, "FW_TINT2", "FWD_TYPE1", g_40001._f1826, 2, 5);
                break;
            case 3:
                sub_2af85(a_0, "FW_TINT3", "FWD_TYPE2", g_40001._f1827, 3, 5);
                break;
            case 4:
                sub_2af85(a_0, "FW_TINT4", "FWD_TYPE2", g_40001._f1827, 4, 5);
                break;
            case 5:
                sub_2af85(a_0, "FW_TINT5", "FWD_TYPE2", g_40001._f1827, 5, 5);
                break;
            case 6:
                sub_2af85(a_0, "FW_TINT6", "FWD_TYPE3", g_40001._f1828, 6, 5);
                break;
            case 7:
                sub_2af85(a_0, "FW_TINT7", "FWD_TYPE3", g_40001._f1828, 7, 5);
                break;
            case 8:
                sub_2af85(a_0, "FW_TINT8", "FWD_TYPE3", g_40001._f1828, 8, 5);
                break;
            case 9:
                sub_2af85(a_0, "FW_TINT9", "FWD_TYPE4", g_40001._f1829, 9, 5);
                break;
            case 10:
                sub_2af85(a_0, "FW_TINT10", "FWD_TYPE4", g_40001._f1829, 10, 5);
                break;
            case 11:
                sub_2af85(a_0, "FW_TINT11", "FWD_TYPE4", g_40001._f1829, 11, 5);
                break;
            }
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || (sub_6469(a_1, &v_6) != -1)) {
            switch (a_2) {
            case 0:
                if (((((a_1 == 0xa89cb99e) || (a_1 == 0x47757124)) || (a_1 == 0x7f7497e5)) || (a_1 == 0xdc4db296)) || (a_1 == 0xef951fbb)) {
                    sub_2af85(a_0, "WM_TINTDF", "", 500, 0, 0);
                } else { 
                    sub_2af85(a_0, "WM_TINT0", "", 500, 0, 0);
                }
                break;
            case 1:
                sub_2af85(a_0, "WM_TINT4", "", 5000, 4, 0);
                break;
            case 2:
                sub_2af85(a_0, "WM_TINT1", "", 5250, 1, 0);
                break;
            case 3:
                sub_2af85(a_0, "WM_TINT6", "", 5500, 6, 0);
                break;
            case 4:
                sub_2af85(a_0, "WM_TINT5", "", 5750, 5, 0);
                break;
            case 5:
                sub_2af85(a_0, "WM_TINT3", "", 7500, 3, 0);
                break;
            case 6:
                sub_2af85(a_0, "WM_TINT2", "", 10000, 2, 0);
                break;
            case 7:
                sub_2af85(a_0, "WM_TINT7", "", 12500, 7, 0);
                break;
            case 8:
                sub_2af85(a_0, "WM_TINT8", "", 15000, 8, 0);
                break;
            }
        } else { 
            switch (a_2) {
            case 0:
                sub_2af85(a_0, "WM_TINT0", "", 500, 0, 0);
                break;
            case 1:
                sub_2af85(a_0, "WM_TINT4", "", 100, 4, 0);
                break;
            case 2:
                sub_2af85(a_0, "WM_TINT1", "", 200, 1, 0);
                break;
            case 3:
                sub_2af85(a_0, "WM_TINT6", "", 400, 6, 0);
                break;
            case 4:
                sub_2af85(a_0, "WM_TINT5", "", 600, 5, 0);
                break;
            case 5:
                sub_2af85(a_0, "WM_TINT3", "", 800, 3, 0);
                break;
            case 6:
                sub_2af85(a_0, "WM_TINT2", "", 1000, 2, 0);
                break;
            case 7:
                sub_2af85(a_0, "WM_TINT7", "", 1500, 7, 0);
                break;
            case 8:
                sub_2af85(a_0, "WM_TINT8", "", 2000, 8, 0);
                break;
            }
        }
        break;
    }
    if (a_3 && (a_0._f8 != -1)) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            switch (a_1) {
            case ${gadget_parachute}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f1C5B;
                    break;
                case 2:
                    a_0._f8 = g_40001._f1C5D;
                    break;
                case 3:
                    a_0._f8 = g_40001._f1C5F;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1C5C;
                    break;
                case 5:
                    a_0._f8 = g_40001._f1C5E;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1938;
                    break;
                case 7:
                    a_0._f8 = g_40001._f19A0;
                    break;
                case 8:
                    a_0._f8 = g_40001._f1933;
                    break;
                case 9:
                    a_0._f8 = g_40001._f199E;
                    break;
                case 10:
                    a_0._f8 = g_40001._f199C;
                    break;
                case 11:
                    a_0._f8 = g_40001._f1935;
                    break;
                case 12:
                    a_0._f8 = g_40001._f192F;
                    break;
                case 13:
                    a_0._f8 = g_40001._f1A4E;
                    break;
                case 14:
                    a_0._f8 = g_40001._f1999;
                    break;
                case 15:
                    a_0._f8 = g_40001._f1A4F;
                    break;
                case 16:
                    a_0._f8 = g_40001._f1A50;
                    break;
                case 17:
                    a_0._f8 = g_40001._f1A4B;
                    break;
                case 18:
                    a_0._f8 = g_40001._f19A4;
                    break;
                case 19:
                    a_0._f8 = g_40001._f1A4A;
                    break;
                case 20:
                    a_0._f8 = g_40001._f1930;
                    break;
                case 21:
                    a_0._f8 = g_40001._f1931;
                    break;
                case 22:
                    a_0._f8 = g_40001._f1A51;
                    break;
                case 23:
                    a_0._f8 = g_40001._f19A2;
                    break;
                case 24:
                    a_0._f8 = g_40001._f1A5D;
                    break;
                case 25:
                    a_0._f8 = g_40001._f1996;
                    break;
                case 26:
                    a_0._f8 = g_40001._f1998;
                    break;
                case 27:
                    a_0._f8 = g_40001._f1934;
                    break;
                case 28:
                    a_0._f8 = g_40001._f1A52;
                    break;
                case 29:
                    a_0._f8 = g_40001._f1A53;
                    break;
                case 30:
                    a_0._f8 = g_40001._f199D;
                    break;
                case 31:
                    a_0._f8 = g_40001._f1A4C;
                    break;
                case 32:
                    a_0._f8 = g_40001._f1A54;
                    break;
                case 33:
                    a_0._f8 = g_40001._f1A55;
                    break;
                case 34:
                    a_0._f8 = g_40001._f199A;
                    break;
                case 35:
                    a_0._f8 = g_40001._f1A5C;
                    break;
                case 36:
                    a_0._f8 = g_40001._f1A56;
                    break;
                case 37:
                    a_0._f8 = g_40001._f1A4D;
                    break;
                case 38:
                    a_0._f8 = g_40001._f1A57;
                    break;
                case 39:
                    a_0._f8 = g_40001._f199F;
                    break;
                case 40:
                    a_0._f8 = g_40001._f192E;
                    break;
                case 41:
                    a_0._f8 = g_40001._f1A58;
                    break;
                case 42:
                    a_0._f8 = g_40001._f1A59;
                    break;
                case 43:
                    a_0._f8 = g_40001._f1A5A;
                    break;
                case 44:
                    a_0._f8 = g_40001._f1A5B;
                    break;
                case 45:
                    a_0._f8 = g_40001._f1932;
                    break;
                case 46:
                    a_0._f8 = g_40001._f199B;
                    break;
                case 47:
                    a_0._f8 = g_40001._f1997;
                    break;
                case 48:
                    a_0._f8 = g_40001._f19A1;
                    break;
                case 49:
                    a_0._f8 = g_40001._f192D;
                    break;
                case 50:
                    a_0._f8 = g_40001._f192C;
                    break;
                case 51:
                    a_0._f8 = g_40001._f19A3;
                    break;
                case 52:
                    break;
                case 53:
                    break;
                case 54:
                    break;
                case 55:
                    break;
                case 56:
                    break;
                case 57:
                    break;
                case 58:
                    break;
                case 59:
                    break;
                case 60:
                    break;
                case 61:
                    break;
                case 62:
                    a_0._f8 = g_40001._f1926;
                    break;
                case 63:
                    a_0._f8 = g_40001._f1927;
                    break;
                case 64:
                    a_0._f8 = g_40001._f1928;
                    break;
                case 65:
                    a_0._f8 = g_40001._f1929;
                    break;
                case 66:
                    a_0._f8 = g_40001._f192A;
                    break;
                case 67:
                    a_0._f8 = g_40001._f192B;
                    break;
                case 68:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6D);
                    break;
                case 69:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA69);
                    break;
                case 70:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6A);
                    break;
                case 71:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6F);
                    break;
                case 72:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6C);
                    break;
                case 73:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6B);
                    break;
                case 74:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA68);
                    break;
                case 75:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6E);
                    break;
                case 76:
                    a_0._f8 = g_40001._f1926 / 2;
                    break;
                case 77:
                    a_0._f8 = g_40001._f1927 / 2;
                    break;
                case 78:
                    a_0._f8 = g_40001._f1928 / 2;
                    break;
                case 79:
                    a_0._f8 = g_40001._f1929 / 2;
                    break;
                case 80:
                    a_0._f8 = g_40001._f192A / 2;
                    break;
                case 81:
                    a_0._f8 = g_40001._f192B / 2;
                    break;
                case 82:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6D);
                    break;
                case 83:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA69);
                    break;
                case 84:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6A);
                    break;
                case 85:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6F);
                    break;
                case 86:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6C);
                    break;
                case 87:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6B);
                    break;
                case 88:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA68);
                    break;
                case 89:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA6E);
                    break;
                case 90:
                    break;
                case 91:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA62);
                    break;
                case 92:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA63);
                    break;
                case 93:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA64);
                    break;
                case 94:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA67);
                    break;
                case 95:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA66);
                    break;
                case 96:
                    a_0._f8 = g_40001._f2B2E;
                    break;
                case 97:
                    a_0._f8 = g_40001._f183F;
                    break;
                }
                break;
            case ${weapon_assaultsmg}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f15E8;
                    break;
                case 2:
                    a_0._f8 = g_40001._f15E9;
                    break;
                case 3:
                    a_0._f8 = g_40001._f15EA;
                    break;
                case 4:
                    a_0._f8 = g_40001._f15EB;
                    break;
                case 5:
                    a_0._f8 = g_40001._f15EC;
                    break;
                case 6:
                    a_0._f8 = g_40001._f15ED;
                    break;
                case 7:
                    a_0._f8 = g_40001._f15EE;
                    break;
                }
                break;
            case ${weapon_snspistol}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f1556;
                    break;
                case 2:
                    a_0._f8 = g_40001._f1557;
                    break;
                case 3:
                    a_0._f8 = g_40001._f1558;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1559;
                    break;
                case 5:
                    a_0._f8 = g_40001._f155A;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1554;
                    break;
                case 7:
                    a_0._f8 = g_40001._f1555;
                    break;
                }
                break;
            case ${weapon_specialcarbine}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f155D;
                    break;
                case 2:
                    a_0._f8 = g_40001._f155E;
                    break;
                case 3:
                    a_0._f8 = g_40001._f155F;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1560;
                    break;
                case 5:
                    a_0._f8 = g_40001._f1561;
                    break;
                case 6:
                    a_0._f8 = g_40001._f155B;
                    break;
                case 7:
                    a_0._f8 = g_40001._f155C;
                    break;
                }
                break;
            case ${weapon_heavypistol}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f1564;
                    break;
                case 2:
                    a_0._f8 = g_40001._f1565;
                    break;
                case 3:
                    a_0._f8 = g_40001._f1566;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1567;
                    break;
                case 5:
                    a_0._f8 = g_40001._f1568;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1562;
                    break;
                case 7:
                    a_0._f8 = g_40001._f1563;
                    break;
                }
                break;
            case ${weapon_bullpuprifle}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f156B;
                    break;
                case 2:
                    a_0._f8 = g_40001._f156C;
                    break;
                case 3:
                    a_0._f8 = g_40001._f156D;
                    break;
                case 4:
                    a_0._f8 = g_40001._f156E;
                    break;
                case 5:
                    a_0._f8 = g_40001._f156F;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1569;
                    break;
                case 7:
                    a_0._f8 = g_40001._f156A;
                    break;
                }
                break;
            case 0x83839c4:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f1A61;
                    break;
                case 2:
                    a_0._f8 = g_40001._f1A62;
                    break;
                case 3:
                    a_0._f8 = g_40001._f1A63;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1A64;
                    break;
                case 5:
                    a_0._f8 = g_40001._f1A65;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1A5F;
                    break;
                case 7:
                    a_0._f8 = g_40001._f1A60;
                    break;
                }
                break;
            case 0x3aabbbaa:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f1A6F;
                    break;
                case 2:
                    a_0._f8 = g_40001._f1A70;
                    break;
                case 3:
                    a_0._f8 = g_40001._f1A71;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1A72;
                    break;
                case 5:
                    a_0._f8 = g_40001._f1A73;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1A6D;
                    break;
                case 7:
                    a_0._f8 = g_40001._f1A6E;
                    break;
                }
                break;
            case 0xc734385a:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = g_40001._f1A68;
                    break;
                case 2:
                    a_0._f8 = g_40001._f1A69;
                    break;
                case 3:
                    a_0._f8 = g_40001._f1A6A;
                    break;
                case 4:
                    a_0._f8 = g_40001._f1A6B;
                    break;
                case 5:
                    a_0._f8 = g_40001._f1A6C;
                    break;
                case 6:
                    a_0._f8 = g_40001._f1A66;
                    break;
                case 7:
                    a_0._f8 = g_40001._f1A67;
                    break;
                }
                break;
            case ${weapon_pistol}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA98);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAC);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC0);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD4);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE8);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA70);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA84);
                    break;
                }
                break;
            case ${weapon_combatpistol}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA99);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAD);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC1);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD5);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE9);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA71);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA85);
                    break;
                }
                break;
            case ${weapon_appistol}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA9A);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAE);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC2);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD6);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAEA);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA72);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA86);
                    break;
                }
                break;
            case ${weapon_microsmg}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA9B);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAF);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC3);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD7);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAEB);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA73);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA87);
                    break;
                }
                break;
            case ${weapon_smg}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA9C);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB0);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC4);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD8);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAEC);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA74);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA88);
                    break;
                }
                break;
            case ${weapon_assaultrifle}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA9B);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAF);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC3);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD7);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAEB);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA73);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA87);
                    break;
                }
                break;
            case ${weapon_carbinerifle}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA9E);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB2);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC6);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fADA);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAEE);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA76);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA8A);
                    break;
                }
                break;
            case ${weapon_advancedrifle}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA9F);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB3);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC7);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fADB);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAEF);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA77);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA8B);
                    break;
                }
                break;
            case ${weapon_mg}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA0);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB4);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC8);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fADC);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF0);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA78);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA8C);
                    break;
                }
                break;
            case ${weapon_combatmg}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA1);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB5);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAC9);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fADD);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF1);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA79);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA8D);
                    break;
                }
                break;
            case ${weapon_pumpshotgun}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA2);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB6);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fACA);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fADE);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF2);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA7A);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA8E);
                    break;
                }
                break;
            case ${weapon_sawnoffshotgun}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA3);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB7);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fACB);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fADF);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF3);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA7B);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA8F);
                    break;
                }
                break;
            case ${weapon_assaultshotgun}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA4);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAB8);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fACC);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE0);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF4);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA7C);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA90);
                    break;
                }
                break;
            case ${weapon_stungun}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA6);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fABA);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fACE);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE2);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF6);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA7E);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA92);
                    break;
                }
                break;
            case ${weapon_sniperrifle}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA7);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fABB);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fACF);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE3);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF7);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA7F);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA93);
                    break;
                }
                break;
            case ${weapon_heavysniper}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA8);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fABC);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD0);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE4);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF8);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA80);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA94);
                    break;
                }
                break;
            case ${weapon_grenadelauncher}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAA9);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fABD);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD1);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE5);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAF9);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA81);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA95);
                    break;
                }
                break;
            case ${weapon_rpg}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAA);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fABE);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD2);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE6);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAFA);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA82);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA96);
                    break;
                }
                break;
            case ${weapon_minigun}:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAAB);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fABF);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAD3);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAE7);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fAFB);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA83);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._fA97);
                    break;
                }
                break;
            default:
                switch (a_2) {
                case 0:
                    break;
                case 1:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1124);
                    break;
                case 2:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1127);
                    break;
                case 3:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1123);
                    break;
                case 4:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1125);
                    break;
                case 5:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1128);
                    break;
                case 6:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1129);
                    break;
                case 7:
                    a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_40001._f1126);
                }
                break;
            }
            a_0._f8 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_0._f8) * g_42DD3._f8);
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_122ef()) {
            v_3D = 2;
            if (a_1 == ${gadget_parachute}) {
                v_3D = a_0._fA;
            }
            if (a_1 == 0xfc508e33) {
                sub_11379(&v_2D, a_0, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 6, 1, -1, -1);
                if (MOBILE::_BD4D7EAF8A30F637(&v_2D)) {
                    a_0._f8 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_2D), 0x3fa29128, 1);
                }
            } else { 
                sub_11379(&v_2D, a_0, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, v_3D, sub_10a67(a_1), -1, -1);
                if (MOBILE::_BD4D7EAF8A30F637(&v_2D)) {
                    a_0._f8 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_2D), 0x63a336e1, 1);
                }
            }
        }
        if (sub_715b() && (sub_1230c() || sub_12460())) {
            if ((a_1 == 0x99aeeb3b) || (a_1 == ${weapon_bullpupshotgun})) {
                if (!GAMEPLAY::IS_PC_VERSION()) {
                    a_0._f8 = 0;
                } else { 
                    sub_11379(&v_3E, a_0, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 3, sub_10a67(a_1), -1, -1);
                    if (MOBILE::_BD4D7EAF8A30F637(&v_3E)) {
                        a_0._f8 = UNK3::_NETWORK_SHOP_GET_PRICE(GAMEPLAY::GET_HASH_KEY(&v_3E), 0x63a336e1, 1);
                    }
                }
            }
        }
        v_4E = sub_19e62(a_1, &a_0._f8);
        if (v_4E != 1.0) {}
    }
    return a_0._f8 != -1;
}

void sub_2af85(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_0/*"16"*/ = a_1;
    a_0._f4/*"16"*/ = a_2;
    a_0._f8 = a_3;
    a_0._f9 = a_4;
    a_0._fA = a_5;
}

auto sub_2afad(auto a_0, auto a_1) {
    if (a_0 == ${gadget_parachute}) {
        return a_1;
    }
    if (a_0 == 0xfc508e33) {
        return a_1;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return a_1;
    } else if (sub_19fb4() || sub_19fab()) {
        return a_1;
    } else if (a_1 == 0) {
        return 0;
    } else if (a_1 == 1) {
        return 1;
    } else if (a_1 == 2) {
        return 4;
    }
    return -1;
}

auto sub_2b020(auto a_0, auto a_1, auto a_2) {
    sub_2451b(&v_5, a_0, a_0._f4, a_0._f5, a_0._f1);
    while (sub_21a3b(&v_5, a_1, v_B, 0)) {
        if (v_5._f4 == a_2) {
            return v_B;
        }
        v_B += 1;
    }
    return -1;
}

void sub_2b063(auto a_0) {
    if ((g_4369._f121B >= 3) || (g_4369._f1218 >= 4)) {
        return ;
    }
    g_4369._f11D6[g_4369._f1218/*1*/] = 1;
    g_4369._f1218 += 1;
    g_4369._f11E7[g_4369._f121B/*16*/]/*"64"*/ = a_0;
    g_4369._f121B += 1;
}

void sub_2b0c4(auto a_0, auto a_1, auto a_2) {
    g_4369._f11D2/*"16"*/ = a_0;
    g_4369._f1218 = 0;
    g_4369._f1219 = 0;
    g_4369._f121A = 0;
    g_4369._f121B = 0;
    g_4369._f121C = a_1;
    g_4369._f121D = GAMEPLAY::GET_GAME_TIMER();
    g_4369._f121E = a_2;
    for (v_5 = 0; v_5 < 4; v_5 += 1) {
        g_4369._f11D6[v_5/*1*/] = 0;
    }
}

auto sub_2b129(auto a_0, auto a_1, auto a_2, auto a_3) {
    sub_2451b(&v_6, a_0, a_0._f4, a_0._f5, a_0._f1);
    v_D = 0;
    while (sub_21a3b(&v_6, a_1, v_C, 0)) {
        if (v_6._f4 == a_2) {
            if (a_3 == v_D) {
                return v_6;
            }
            v_D += 1;
        }
        v_C += 1;
    }
    return 0;
}

auto sub_2b17c(auto a_0, auto a_1, auto a_2) {
    sub_2451b(&v_5, a_0, a_0._f4, a_0._f5, a_0._f1);
    while (sub_21a3b(&v_5, a_1, v_B, 0)) {
        if (v_5._f4 == a_2) {
            return 1;
        }
        v_B += 1;
    }
    return 0;
}

auto sub_2b1be() {
    PLAYER::GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(PLAYER::PLAYER_ID(), &v_2, &v_3, &v_4);
    if (((v_2 == 255) && (v_3 == 255)) && (v_4 == 255)) {
        return 0;
    } else if (((v_2 == 255) && (v_3 == 0)) && (v_4 == 0)) {
        return 1;
    } else if (((v_2 == 255) && (v_3 == 165)) && (v_4 == 0)) {
        return 2;
    } else if (((v_2 == 255) && (v_3 == 255)) && (v_4 == 0)) {
        return 3;
    } else if (((v_2 == 0) && (v_3 == 0)) && (v_4 == 255)) {
        return 4;
    } else if (((v_2 == 20) && (v_3 == 20)) && (v_4 == 20)) {
        return 5;
    } else if ((((((v_2 == g_1418CE) && (v_3 == g_1418CF)) && (v_4 == g_1418D0)) && g_1418CD) && sub_1be22()) && sub_1bdbd(6)) {
        return 6;
    } else if (((v_2 == 0) && (v_3 == 0)) && (v_4 == 0)) {
        return 7;
    }
    return 0;
}

auto sub_2b303(auto a_0, auto a_1) {
    a_1 = -1;
    v_4 = 0;
    while (sub_27537(&l_4E7, a_0, sub_2afad(a_0, v_4), 1)) {
        if (sub_2b34d(a_0, l_4E7._f9, l_4E7._fA)) {
            a_1 = v_4;
            return 1;
        }
        v_4 += 1;
    }
    return 0;
}

auto sub_2b34d(auto a_0, auto a_1, auto a_2) {
    if (a_0 == 0) {
        return 0;
    }
    if (a_0 == 0xfc508e33) {
        return 1;
    }
    if (a_0 == ${gadget_parachute}) {
        if (!l_4D4) {
            if (((((l_4D5 == 0) && (a_2 != 2)) || ((l_4D5 == 1) && (a_2 != 3))) || ((l_4D5 == 2) && (a_2 != 4))) || ((l_4D5 == 3) && (a_2 != 1))) {
                return 0;
            }
        }
        if ((a_2 == 4) && (a_1 == 7)) {
            if (((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || (!sub_7282())) || ((!g_40001._f1822) && (!sub_1e5c5(3602, -1, -1)))) {
                return 0;
            }
        }
        if ((a_2 == 1) && (a_1 == 13)) {
            if (!sub_1e5c5(3609, -1, -1)) {
                return 0;
            }
        }
        if ((a_2 == 2) || (a_2 == 3)) {
            if (a_1 >= 8) {
                if (!sub_2b543()) {
                    return 0;
                }
            }
        }
        if (a_2 == 1) {
            if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                return 0;
            }
            if (a_1 >= 27) {
                if (!sub_2b532()) {
                    return 0;
                }
            } else if (!sub_2b543()) {
                return 0;
            }
        }
        if (a_2 == 1) {
            if ((a_1 > 51) && (a_1 <= 61)) {
                return 0;
            }
        }
        return 1;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if ((a_1 >= 0) && (a_1 < WEAPON::GET_WEAPON_TINT_COUNT(a_0))) {
            return 1;
        }
    } else if (sub_19fb4() || sub_19fab()) {
        if ((a_1 >= 0) && (a_1 < WEAPON::GET_WEAPON_TINT_COUNT(a_0))) {
            return 1;
        }
    } else if ((a_1 >= 0) && (a_1 < WEAPON::GET_WEAPON_TINT_COUNT(a_0))) {
        if (((a_1 == 0) || (a_1 == 4)) || (a_1 == 5)) {
            return 1;
        }
    }
    return 0;
}

auto sub_2b532() {
    return DLC2::IS_DLC_PRESENT(0xc40b8b70);
}

auto sub_2b543() {
    return DLC2::IS_DLC_PRESENT(0x55292cc7);
}

auto sub_2b554(auto a_0, auto a_1) {
    a_1 = -1;
    v_4 = 0;
    while (sub_21a3b(&l_4E1, a_0, v_4, 1)) {
        if (l_4E1._f2 != -1) {
            a_1 = v_4;
            return 1;
        }
        v_4 += 1;
    }
    return 0;
}

void sub_2b58e() {
    if (sub_5a62(1)) {
        v_2 = 0;
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_427[0/*1*/])) {
                v_3 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(3500, 5000);
                l_427[0/*1*/] = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), v_3);
                v_2 = 1;
            }
        } else if ((GAMEPLAY::GET_GAME_TIMER() - l_42A[0/*1*/]) > 0) {
            v_3 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(3500, 5000);
            l_42A[0/*1*/] = GAMEPLAY::GET_GAME_TIMER() + v_3;
            v_2 = 1;
        }
        if (v_2) {
            sub_2b7d8(l_B3, &v_4, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 10));
            AI::TASK_LOOK_AT_COORD(PLAYER::PLAYER_PED_ID(), v_4 + ({GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(0.0, 0.05), GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(0.0, 0.05), GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(0.0, 0.05) }), v_3 + 1000, 1, 2);
        }
    }
    if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC) && (!PED::IS_PED_INJURED(l_B3._fC))) {
        if (l_42E) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (NETWORK::_SUBTRACT_B_FROM_A_AND_CHECK_IF_NEGATIVE(NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 500), l_427[1/*1*/])) {
                    l_427[1/*1*/] = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(400, 600));
                }
            } else if ((GAMEPLAY::GET_GAME_TIMER() + 500) < l_42A[1/*1*/]) {
                l_42A[1/*1*/] = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(400, 600);
            }
            l_42E = 0;
        }
        v_B = 0;
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_427[1/*1*/])) {
                v_C = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(9000, 12000);
                l_427[1/*1*/] = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), v_C);
                v_B = 1;
            }
        } else if ((GAMEPLAY::GET_GAME_TIMER() - l_42A[1/*1*/]) > 0) {
            v_C = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(9000, 12000);
            l_42A[1/*1*/] = GAMEPLAY::GET_GAME_TIMER() + v_C;
            v_B = 1;
        }
        if (v_B) {
            if ((l_42D > 0) && (!sub_adc8(l_42F, 0.0, 0.0, 0.0, 0))) {
                if (sub_2b79c(0)) {
                    AI::TASK_LOOK_AT_COORD(l_B3._fC, l_42F, v_C + 1000, 1, 2);
                    l_42D = 0;
                }
            } else if (sub_2b79c(0)) {
                AI::TASK_LOOK_AT_COORD(l_B3._fC, CAM::_GET_GAMEPLAY_CAM_COORDS(), v_C + 1000, 1, 2);
                l_42D += 1;
            }
        }
    }
}

auto sub_2b79c(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(l_63)) {
            if (NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(l_63)) {
                return 1;
            } else if (a_0) {
                NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(l_63);
            }
        }
    } else { 
        return 1;
    }
    return 0;
}

void sub_2b7d8(auto a_0, auto a_1, auto a_2) {
    sub_2bd59(a_1, "WEAP_GROUP", 0.0, 0.0, 0.0);
    v_5 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_6 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_7 = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_0));
    if (v_7 == v_5) {
        switch (a_2) {
        case 0:
            sub_2bd59(a_1, "WEAP_EX", 19.73, -1103.0699462890625, 31.28);
            break;
        case 1:
            sub_2bd59(a_1, "WEAP_SMG", 19.56, -1103.01, 30.6);
            break;
        case 2:
            sub_2bd59(a_1, "WEAP_SG", 20.65, -1103.41, 30.88);
            break;
        case 3:
            sub_2bd59(a_1, "WEAP_AR", 21.71, -1103.8, 30.89);
            break;
        case 4:
            sub_2bd59(a_1, "WEAP_SR", 22.83, -1104.2099609375, 30.68);
            break;
        case 5:
            sub_2bd59(a_1, "WEAP_LMG", 24.21, -1104.7099609375, 30.85);
            break;
        case 6:
            sub_2bd59(a_1, "WEAP_S", 25.54, -1105.18994140625, 30.87);
            break;
        case 7:
            sub_2bd59(a_1, "WEAP_K", 20.12, -1105.39, 29.52);
            break;
        case 8:
            sub_2bd59(a_1, "WEAP_HG", 22.1, -1106.02, 29.52);
            break;
        case 9:
            sub_2bd59(a_1, "WEAP_T", 23.1, -1107.91, 29.52);
            break;
        case 10:
            sub_2bd59(a_1, "WEAP_P", 23.24, -1109.05, 29.61);
            break;
        case 11:
            sub_2bd59(a_1, "WEAP_DLC1", 25.86, -1106.0899658203125, 30.79);
            break;
        case 12:
            sub_2bd59(a_1, "WEAP_DLC1", 25.27, -1107.15, 30.79);
            break;
        case 13:
            sub_2bd59(a_1, "WEAP_DLC1", 24.7, -1108.16, 30.79);
            break;
        case 14:
            sub_2bd59(a_1, "WEAP_DLC1", 24.14, -1109.15, 30.79);
            break;
        case 15:
            sub_2bd59(a_1, "WEAP_DLC1", 24.14, -1109.15, 30.79);
            break;
        case 16:
            sub_2bd59(a_1, "WEAP_EX", 16.28, -1109.51, 30.32);
            break;
        case 17:
            sub_2bd59(a_1, "WEAP_K", 20.12, -1105.39, 29.52);
            break;
        case 18:
            sub_2bd59(a_1, "WEAP_HG", 22.1, -1106.02, 29.52);
            break;
        }
    } else if (v_7 == v_6) {
        switch (a_2) {
        case 0:
            sub_2bd59(a_1, "WEAP_EX", 1688.93, 3759.28, 36.21);
            break;
        case 1:
            sub_2bd59(a_1, "WEAP_SMG", 1688.81, 3759.14990234375, 35.52);
            break;
        case 2:
            sub_2bd59(a_1, "WEAP_SG", 1689.5899658203125, 3759.99, 35.8);
            break;
        case 3:
            sub_2bd59(a_1, "WEAP_AR", 1690.3299560546875, 3760.8, 35.78);
            break;
        case 4:
            sub_2bd59(a_1, "WEAP_SR", 1691.17, 3761.7099609375, 35.61);
            break;
        case 5:
            sub_2bd59(a_1, "WEAP_LMG", 1692.14, 3762.77, 35.81);
            break;
        case 6:
            sub_2bd59(a_1, "WEAP_S", 1693.12, 3763.84, 35.83);
            break;
        case 7:
            sub_2bd59(a_1, "WEAP_K", 1691.01, 3758.3701171875, 34.43);
            break;
        case 8:
            sub_2bd59(a_1, "WEAP_HG", 1692.5799560546875, 3760.34, 34.43);
            break;
        case 9:
            sub_2bd59(a_1, "WEAP_T", 1694.65, 3760.449951171875, 34.43);
            break;
        case 10:
            sub_2bd59(a_1, "WEAP_P", 1695.65, 3759.79, 34.43);
            break;
        case 11:
            sub_2bd59(a_1, "WEAP_DLC1", 1694.0699462890625, 3763.929931640625, 35.77);
            break;
        case 12:
            sub_2bd59(a_1, "WEAP_DLC1", 1694.88, 3763.18994140625, 35.77);
            break;
        case 13:
            sub_2bd59(a_1, "WEAP_DLC1", 1695.77, 3762.3798828125, 35.77);
            break;
        case 14:
            sub_2bd59(a_1, "WEAP_DLC1", 1696.65, 3761.56, 35.77);
            break;
        case 15:
            sub_2bd59(a_1, "WEAP_DLC1", 1696.65, 3761.56, 35.77);
            break;
        case 16:
            sub_2bd59(a_1, "WEAP_EX", 1693.5, 3753.64990234375, 35.21);
            break;
        case 17:
            sub_2bd59(a_1, "WEAP_K", 1691.01, 3758.3701171875, 34.43);
            break;
        case 18:
            sub_2bd59(a_1, "WEAP_HG", 1692.5799560546875, 3760.34, 34.43);
            break;
        }
    }
    if (v_7 == v_5) {
        v_8 = 28;
    } else if (v_7 == v_6) {
        v_8 = 29;
    }
    sub_ae1f(v_8, a_0, a_1);
}

void sub_2bd59(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_0/*{3}*/ = a_2;
    a_0._f3/*"16"*/ = a_1;
}

void sub_2bd71() {
    if (CAM::DOES_CAM_EXIST(l_B3._f26[l_B3._f69._f4/*12*/])) {
        v_3/*{3}*/ = CAM::_GET_GAMEPLAY_CAM_COORDS();
        v_6/*{3}*/ = CAM::_GET_GAMEPLAY_CAM_ROT(2);
        v_9 = CAM::_80EC114669DAEFF4();
        v_A/*{3}*/ = v_3 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f1 - v_3) * ((vector)(0.2)));
        v_D = v_9 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f7 - v_9) * 0.2);
        if (l_4D6) {
            v_A/*{3}*/ = v_3 + ((l_B3._fAC._f2A - v_3) * ((vector)(0.2)));
            for (v_11 = l_B3._fAC._f2D._f2 - v_6._f2; v_11 < -180.0; v_11 += 360.0) {}
            for (; v_11 > 180.0; v_11 -= 360.0) {}
            v_E = v_6 + ((l_B3._fAC._f2D - v_6) * 0.2);
            v_E._f1 = v_6._f1 + ((l_B3._fAC._f2D._f1 - v_6._f1) * 0.2);
            v_E._f2 = v_6._f2 + (v_11 * 0.2);
        } else { 
            for (v_11 = l_B3._f26[l_B3._f69._f4/*12*/]._f4._f2 - v_6._f2; v_11 < -180.0; v_11 += 360.0) {}
            for (; v_11 > 180.0; v_11 -= 360.0) {}
            v_E = v_6 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f4 - v_6) * 0.2);
            v_E._f1 = v_6._f1 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f4._f1 - v_6._f1) * 0.2);
            v_E._f2 = v_6._f2 + (v_11 * 0.2);
        }
        if ((((CONTROLS::_GET_LAST_INPUT_METHOD(2) && (l_B3._f69._f3 != 16)) && (l_4D8 == 0)) && (l_418 == 0)) && (l_B3._f69._f5 == 0)) {
            if (l_4E0 == 0) {
                if (g_2708F0 > (1.0 - 0.05)) {
                    l_4D9 = 1;
                    v_11 = (0.05 - (1.0 - g_2708F0)) * -30.0;
                    UI::_8DB8CFFD58B62552(7);
                } else if (g_2708F0 < 0.05) {
                    l_4D9 = 1;
                    v_11 = (0.05 - g_2708F0) * 30.0;
                    UI::_8DB8CFFD58B62552(6);
                } else if (l_4D9) {
                    v_11 = 0.0;
                }
                if (g_2708F1 > (1.0 - 0.03)) {
                    l_4D9 = 1;
                    v_2 = (0.03 - (1.0 - g_2708F1)) * -30.0;
                    UI::_8DB8CFFD58B62552(9);
                } else if (g_2708F1 < 0.03) {
                    l_4D9 = 1;
                    v_2 = (0.03 - g_2708F1) * 30.0;
                    UI::_8DB8CFFD58B62552(8);
                } else if (l_4D9) {
                    v_2 = 0.0;
                }
            } else if ((((!(g_2708F0 > (1.0 - 0.05))) && (!(g_2708F0 < 0.05))) && (!(g_2708F1 > (1.0 - 0.03)))) && (!(g_2708F1 < 0.03))) {
                l_4E0 = 0;
            }
        } else { 
            l_4D9 = 0;
        }
        if (l_4D9 && GAMEPLAY::IS_PC_VERSION()) {
            v_E = sub_2c1df(v_6 + v_2, 9.2, 12.7);
            v_E._f1 = v_6._f1 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f4._f1 - v_6._f1) * 0.2);
            if (l_4DB < -80.0) {
                v_E._f2 = v_6._f2 + v_11;
                if ((v_E._f2 < 0.0) && (v_E._f2 > l_4DB)) {
                    v_E._f2 = l_4DB;
                } else if ((v_E._f2 > 0.0) && (v_E._f2 < l_4DC)) {
                    v_E._f2 = l_4DC;
                }
            } else if (l_4DB > l_4DC) {
                v_E._f2 = sub_2c1df(v_6._f2 + v_11, l_4DC, l_4DB);
            } else { 
                v_E._f2 = sub_2c1df(v_6._f2 + v_11, l_4DB, l_4DC);
            }
        } else { 
            v_E = v_6 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f4 - v_6) * 0.2);
            v_E._f1 = v_6._f1 + ((l_B3._f26[l_B3._f69._f4/*12*/]._f4._f1 - v_6._f1) * 0.2);
            v_E._f2 = v_6._f2 + (v_11 * 0.2);
        }
        CAM::SET_CAM_COORD(l_B3._f26[l_B3._f69._f4/*12*/], v_A);
        CAM::SET_CAM_ROT(l_B3._f26[l_B3._f69._f4/*12*/], v_E, 2);
        CAM::SET_CAM_FOV(l_B3._f26[l_B3._f69._f4/*12*/], v_D);
    }
}

auto sub_2c1df(auto a_0, auto a_1, auto a_2) {
    if (a_0 > a_2) {
        return a_2;
    } else if (a_0 < a_1) {
        return a_1;
    }
    return a_0;
}

void sub_2c206() {
    v_2 = 1;
    v_7 = -1;
    if ((l_B3._f69._f3 != -1) && (l_B3._f69._f1 != -1)) {
        v_7 = (l_B3._f69._f3 * 5) + l_B3._f69._f1;
        if (!GAMEPLAY::IS_BIT_SET(l_B3._fDC._f65[v_7 / 32/*1*/], v_7 % 32)) {
            sub_2d761(v_7);
        }
    }
    v_22 = l_4CF;
    l_4CF = 0;
    v_2A = 0.6;
    for (v_6 = 0; v_6 < v_22; v_6 += 1) {
        v_5 = l_46A[v_6/*1*/];
        v_23 = 1;
        v_3 = v_5 / 5;
        v_4 = v_5 % 5;
        if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_5/*1*/])) {
            if (sub_afc5(l_B3, &g_2707D2, &v_8, v_3, v_4, 0)) {
                sub_2d0ce(&l_B3._fDC[v_5/*1*/], &l_B3._fDC._f6A[v_5/*3*/], &v_23, &v_8, v_7 == v_5);
                if (v_7 == v_5) {
                    sub_2c813(&l_B3._fDC[v_5/*1*/], &v_8);
                    if (sub_21a3b(&v_2B, v_8, l_B3._f69._f2 - 1, 0)) {
                        if ((((v_2B._f4 == 0x395e9926) && (!l_4D0)) && (l_B3._f69._f2 < 21)) && (!(sub_2b17c(&v_2B, v_8, 0x395e9926) && sub_2c7ad(&v_8)))) {
                            l_4D0 = 1;
                            v_27/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(v_8._f1, v_8._f4._f2, v_8._f7);
                            v_24/*{3}*/ = l_B3._f26[l_B3._f69._f4/*12*/]._f1;
                            l_B3._f26[l_B3._f69._f4/*12*/]._f1 += (v_27 - v_24) * ((vector)v_2A);
                        } else if ((v_2B._f4 != 0x395e9926) && (!(sub_2b17c(&v_2B, v_8, 0x395e9926) && sub_2c7ad(&v_8)))) {
                            if (l_4D0) {
                                l_4D0 = 0;
                                l_B3._f69._f11 = 0;
                            }
                        }
                    } else if (l_4D0) {
                        if ((v_2B._f4 != 0x395e9926) && (!(sub_2b17c(&v_2B, v_8, 0x395e9926) && sub_2c7ad(&v_8)))) {
                            l_4D0 = 0;
                            l_B3._f69._f11 = 0;
                        }
                    }
                }
            }
        } else { 
            v_23 = 0;
        }
        if (v_23) {
            sub_2d761(v_5);
        } else { 
            GAMEPLAY::CLEAR_BIT(&l_B3._fDC._f65[v_5 / 32/*1*/], v_5 % 32);
        }
    }
    if (l_43A) {
        if (!sub_6681c(11)) {
            v_2 = 0;
            l_4F9 = 1;
        }
    }
    if (l_B3 == 28) {
        STREAMING::REQUEST_MODEL(${v_lirg_gunlight});
        l_A7 = 1;
        if (STREAMING::HAS_MODEL_LOADED(${v_lirg_gunlight})) {
            if (((((((l_B3._f69._f3 != 7) && (l_B3._f69._f3 != 9)) && (l_B3._f69._f3 != 10)) && (l_B3._f69._f3 != 16)) && (l_B3._f69._f3 != 17)) && (l_B3._f69._f3 != 18)) && sub_afc5(l_B3, &g_2707D2, &v_8, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                if (!ENTITY::DOES_ENTITY_EXIST(l_A5)) {
                    v_31/*{3}*/ = v_8._f1 + sub_2c6b5(l_B3, l_B3._f69._f3);
                    v_34/*{3}*/ = sub_2c5c5(l_B3, l_B3._f69._f3);
                    l_A5 = OBJECT::CREATE_OBJECT_NO_OFFSET(${v_lirg_gunlight}, v_8._f1, 0, 1, 0);
                    ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_A5, v_31, 0, 0, 1);
                    ENTITY::SET_ENTITY_ROTATION(l_A5, v_34, 2, 1);
                    l_A8 = 0;
                } else if (l_A8) {
                    v_31/*{3}*/ = v_8._f1 + sub_2c6b5(l_B3, l_B3._f69._f3);
                    v_34/*{3}*/ = sub_2c5c5(l_B3, l_B3._f69._f3);
                    ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_A5, v_31, 0, 0, 1);
                    ENTITY::SET_ENTITY_ROTATION(l_A5, v_34, 2, 1);
                    l_A8 = 0;
                }
            } else if (ENTITY::DOES_ENTITY_EXIST(l_A5)) {
                OBJECT::DELETE_OBJECT(&l_A5);
            }
        }
    }
    if (v_2 && l_43A) {
        l_424 = 1;
        l_43A = 0;
    }
}

auto<3> sub_2c5c5(auto a_0, auto a_1) {
    v_4/*{3}*/ = {0.0, 0.0, 0.0 };
    v_7 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_8 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_9 = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_0));
    if (v_9 == v_7) {
        switch (a_1) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
            v_4 = 0.0;
            v_4._f1 = 0.0;
            v_4._f2 = 342.75;
            break;
        case 8:
            v_4 = 0.0;
            v_4._f1 = 1.71;
            v_4._f2 = -0.09;
            break;
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
            v_4 = 0.0;
            v_4._f1 = 0.0;
            v_4._f2 = 269.0;
            break;
        }
    }
    if (v_9 == v_7) {
        v_A = 28;
    } else if (v_9 == v_8) {
        v_A = 29;
    }
    sub_a564(v_A, a_0, &v_4);
    return v_4;
}

auto<3> sub_2c6b5(auto a_0, auto a_1) {
    v_4/*{3}*/ = {0.0, 0.0, 0.0 };
    v_7 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_8 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_9 = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_0));
    if (v_9 == v_7) {
        switch (a_1) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
            v_4 = 0.225;
            v_4._f1 = 0.368;
            v_4._f2 = 0.408;
            break;
        case 8:
            v_4 = 0.0;
            v_4._f1 = 0.0;
            v_4._f2 = 0.0;
            break;
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
            v_4 = 0.945;
            v_4._f1 = -0.128;
            v_4._f2 = 0.478;
            break;
        }
    }
    if (v_9 == v_7) {
        v_A = 28;
    } else if (v_9 == v_8) {
        v_A = 29;
    }
    sub_ae1f(v_A, a_0, &v_4);
    return v_4;
}

auto sub_2c7ad(auto a_0) {
    switch (a_0) {
    case ${weapon_crowbar}:
    case 0x8bb05fd7:
    case 0x92a27487:
    case ${weapon_bat}:
    case ${weapon_knife}:
    case ${weapon_unarmed}:
    case 0xd8df3c3c:
    case 0xdd5df8d9:
    case 0xdfe37640:
    case ${weapon_bottle}:
    case ${weapon_golfclub}:
    case ${weapon_hammer}:
    case ${weapon_nightstick}:
        return 1;
        break;
    }
    return 0;
}

void sub_2c813(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        sub_21a3b(&v_12, a_1, l_B3._f69._f2 - 1, 0);
        if ((a_1._f18 == 0) || (sub_2b17c(&v_C, a_1, 0x395e9926) && sub_2c7ad(a_1))) {
            if ((((ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPONTYPE_MODEL(a_1)) || (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&v_C, a_1, 0x395e9926, 0)))) || (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&v_C, a_1, 0x395e9926, 1)))) || (sub_2b17c(&v_C, a_1, 0x395e9926) && sub_2c7ad(a_1))) {
                if (sub_2cfd6(a_1, 0) != 0) {
                    if ((l_B3._f69._f2 > ((21 + sub_2cfd6(a_1, 1)) - 1)) || (l_B3._f69._f2 < 21)) {
                        if (WEAPON::GET_WEAPON_OBJECT_TINT_INDEX(a_0) != 0) {
                            WEAPON::SET_WEAPON_OBJECT_TINT_INDEX(a_0, 0);
                        }
                    } else if (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPONTYPE_MODEL(a_1)) {
                        for (v_5 = 0; v_5 < WEAPON::GET_WEAPON_TINT_COUNT(a_1); v_5 += 1) {
                            if (sub_27537(&l_4E7, a_1, v_5, 0)) {
                                if (l_4E7._fA == 0) {
                                    if ((sub_2afad(a_1, l_B3._f69._f2 - 21) == v_5) && (WEAPON::GET_WEAPON_OBJECT_TINT_INDEX(a_0) != l_4E7._f9)) {
                                        if (l_4E7._f9 < 64) {
                                            WEAPON::SET_WEAPON_OBJECT_TINT_INDEX(a_0, l_4E7._f9);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                while (sub_21a3b(&v_C, a_1, v_4, 0)) {
                    if (v_C != 0) {
                        v_6 = 0;
                        if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_1, 0)) {
                            if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), a_1, v_C)) {
                                if (v_C._f4 == 0x395e9926) {
                                    if (l_B3._f69._f2 < 21) {
                                        v_6 = 1;
                                    } else { 
                                        v_6 = 0;
                                    }
                                } else { 
                                    v_6 = 1;
                                }
                            }
                        } else if (v_C._f1) {
                            v_6 = 1;
                        }
                        if (l_B3._f69._f5 == 1) {
                            if ((l_B3._f69._f2 - 1) == v_4) {
                                v_6 = 1;
                            }
                            if ((l_B3._f69._f2 - 1) != v_4) {
                                if ((v_C._f4 == v_12._f4) && (v_C._f5 != v_12._f5)) {
                                    v_6 = 0;
                                }
                            }
                        }
                        if (v_6) {
                            v_8 = 1;
                            v_7 = WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(v_C);
                            if (v_7 != 0) {
                                STREAMING::REQUEST_MODEL(v_7);
                                if (!STREAMING::HAS_MODEL_LOADED(v_7)) {
                                    v_8 = 0;
                                }
                            }
                            if (v_C._f4 == 0x395e9926) {
                                v_9 = __678_$B428C34E7B156B39(v_C);
                                for (v_A = 0; v_A <= (v_9 - 1); v_A += 1) {
                                    v_B = __678_$A54BF52BDDCD2C56(v_C, v_A);
                                    if (v_B != 0) {
                                        STREAMING::REQUEST_MODEL(v_B);
                                        if (!STREAMING::HAS_MODEL_LOADED(v_B)) {
                                            v_8 = 0;
                                        }
                                    }
                                }
                            }
                            if ((!WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, v_C)) && v_8) {
                                if (((v_C._f4 == 0x395e9926) && (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPONTYPE_MODEL(a_1))) || (sub_2b17c(&v_C, a_1, 0x395e9926) && sub_2c7ad(a_1))) {
                                    if (v_C._f4 == 0x395e9926) {
                                        if (sub_2b17c(&v_C, a_1, ${wapclip})) {
                                            if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, sub_2b129(&v_C, a_1, ${wapclip}, 0))) {
                                                WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, sub_2b129(&v_C, a_1, ${wapclip}, 0));
                                            }
                                        }
                                        if (a_1 == 0xc734385a) {
                                            WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, 0x1c221b1a);
                                        }
                                        if (a_1 == ${weapon_sniperrifle}) {
                                            if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, ${component_at_scope_large})) {
                                                WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, ${component_at_scope_large});
                                            }
                                        }
                                    }
                                    sub_2cdb1(a_0, a_1, ENTITY::GET_ENTITY_COORDS(a_0, 0), ENTITY::GET_ENTITY_ROTATION(a_0, 2), v_7);
                                }
                                if (((v_C == sub_2b129(&v_C, a_1, 0x395e9926, 0)) && (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&v_C, a_1, 0x395e9926, 0)))) && (!sub_2c7ad(a_1))) {
                                    WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, v_C);
                                }
                                if (((v_C == sub_2b129(&v_C, a_1, 0x395e9926, 1)) && (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&v_C, a_1, 0x395e9926, 1)))) && (!sub_2c7ad(a_1))) {
                                    WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, v_C);
                                }
                                if ((v_C != sub_2b129(&v_C, a_1, 0x395e9926, 0)) && (v_C != sub_2b129(&v_C, a_1, 0x395e9926, 1))) {
                                    if (!(sub_2b17c(&v_C, a_1, 0x395e9926) && sub_2c7ad(a_1))) {
                                        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, v_C);
                                    }
                                }
                                if (v_C._f4 == 0x395e9926) {
                                    if (sub_2b17c(&v_C, a_1, ${wapclip})) {
                                        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, sub_2b129(&v_C, a_1, ${wapclip}, 0));
                                    }
                                    if (a_1 == 0xc734385a) {
                                        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, 0x1c221b1a);
                                    }
                                    if (a_1 == ${weapon_sniperrifle}) {
                                        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, ${component_at_scope_large});
                                    }
                                }
                            }
                        } else if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, v_C)) {
                            WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, v_C);
                            if (((v_C._f4 == 0x395e9926) && ((ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&v_C, a_1, 0x395e9926, 0))) || (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&v_C, a_1, 0x395e9926, 1))))) || (sub_2b17c(&v_C, a_1, 0x395e9926) && sub_2c7ad(a_1))) {
                                sub_2cdb1(a_0, a_1, ENTITY::GET_ENTITY_COORDS(a_0, 0), ENTITY::GET_ENTITY_ROTATION(a_0, 2), 0);
                            }
                        }
                    }
                    v_4 += 1;
                }
            }
        }
    }
}

void sub_2cdb1(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    v_B/*{3}*/ = a_2;
    v_E/*{3}*/ = a_5;
    sub_aed2(a_0);
    if (((sub_2b129(&l_4E1, a_1, 0x395e9926, 0) != 0) && (a_8 == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&l_4E1, a_1, 0x395e9926, 0)))) || ((sub_2b129(&l_4E1, a_1, 0x395e9926, 1) != 0) && (a_8 == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&l_4E1, a_1, 0x395e9926, 1))))) {
        if ((!sub_2cfac(a_1._fD)) && (!sub_2cfac(a_1._f10))) {
            v_B/*{3}*/ = a_1._fD;
            v_E/*{3}*/ = a_1._f10;
        }
    }
    a_0 = WEAPON::CREATE_WEAPON_OBJECT(a_1, sub_2ce9a(a_1), v_B, 1, 1.0, a_8);
    ENTITY::SET_ENTITY_COORDS_NO_OFFSET(a_0, v_B, 0, 0, 1);
    ENTITY::SET_ENTITY_ROTATION(a_0, v_E, 2, 0);
}

auto sub_2ce9a(auto a_0) {
    v_3 = 0;
    v_3 = WEAPON::GET_MAX_AMMO_IN_CLIP(PLAYER::PLAYER_PED_ID(), a_0, 1) * 4;
    if (sub_2cf41(a_0)) {
        v_3 = sub_2cec7(a_0);
    }
    return v_3;
}

auto sub_2cec7(auto a_0) {
    v_3 = sub_2cf26(a_0, 2);
    switch (a_0) {
    case ${weapon_minigun}:
        v_3 = 200;
        break;
    case ${weapon_grenadelauncher}:
        v_3 = 10;
        break;
    case ${weapon_rpg}:
    case 0x7f7497e5:
        v_3 = 5;
        break;
    case ${weapon_grenade}:
    case 0xa89cb99e:
    case ${weapon_stickybomb}:
        v_3 = 8;
        break;
    }
    return v_3;
}

auto sub_2cf26(auto a_0, auto a_1) {
    if (a_0 != 0) {
        return WEAPON::GET_WEAPON_CLIP_SIZE(a_0) * a_1;
    }
    return 0;
}

auto sub_2cf41(auto a_0) {
    switch (a_0) {
    case ${weapon_minigun}:
        return 1;
        break;
    case ${weapon_grenadelauncher}:
        return 1;
        break;
    case ${weapon_rpg}:
        return 1;
        break;
    case 0xa89cb99e:
        return 1;
        break;
    case 0x7f7497e5:
        return 1;
        break;
    case ${weapon_grenade}:
        return 1;
        break;
    case ${weapon_stickybomb}:
        return 1;
        break;
    }
    return 0;
}

auto sub_2cfac(auto a_0, auto a_1, auto a_2) {
    if (((a_0 == 0.0) && (a_0._f1 == 0.0)) && (a_0._f2 == 0.0)) {
        return 1;
    }
    return 0;
}

auto sub_2cfd6(auto a_0, auto a_1) {
    if (a_0 == 0) {
        return 0;
    }
    v_4 = 0;
    v_5 = 0;
    if (a_0 == ${gadget_parachute}) {
        v_4 += 62;
        v_4 += 14;
        v_4 += 14;
    } else if (a_0 == 0xfc508e33) {
        v_4 = 12;
    } else if (a_0 == 0xd8df3c3c) {
        v_4 = 0;
    } else if (a_0 == 0xdfe37640) {
        v_4 = 0;
    } else if (WEAPON::GET_WEAPON_TINT_COUNT(a_0) > 0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            v_4 = WEAPON::GET_WEAPON_TINT_COUNT(a_0);
        } else if (sub_19fb4() || sub_19fab()) {
            v_4 = WEAPON::GET_WEAPON_TINT_COUNT(a_0);
        } else { 
            v_4 = 3;
        }
    }
    if (a_1) {
        if (a_0 == ${gadget_parachute}) {
            v_5 = sub_2d093();
        }
    }
    return v_4 + v_5;
}

auto sub_2d093() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_7282() && (g_40001._f1822 || sub_1e5c5(3602, -1, -1))) {
            return 8;
        }
        return 7;
    }
    return 6;
}

void sub_2d0ce(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
        if (a_4) {
            v_A/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_3._f1, a_3._f4._f2, a_3._f7);
            v_D/*{3}*/ = v_7;
            v_D += (v_A - v_7) * ((vector)(0.25));
            if ((((v_D > (v_A - 0.009999999999999998)) && (v_D < (v_A + 0.009999999999999998))) && (v_D._f1 > (v_A._f1 - 0.009999999999999998))) && (v_D._f1 < (v_A._f1 + 0.009999999999999998))) {
                if (l_41B) {
                    SYSTEM::SETTIMERB(1);
                    l_41B = 0;
                }
                if ((a_3 == 0xd8df3c3c) || (a_3 == 0xdfe37640)) {
                    v_D._f2 += SYSTEM::SIN(__678_$BBDA792448DB5A89(SYSTEM::TIMERB() / 8)) * 0.001;
                } else { 
                    v_D._f2 += SYSTEM::SIN(__678_$BBDA792448DB5A89(SYSTEM::TIMERB() / 8)) * 0.003;
                }
            }
            ENTITY::SET_ENTITY_COORDS(a_0, v_D, 1, 0, 0, 1);
            if (l_425) {
                if (!CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
                    sub_2d68c(&v_13, &v_14, &v_15, &v_16, 0);
                    if (l_419) {
                        if ((((v_16 > -64) && (v_16 < 64)) && (v_15 > -64)) && (v_15 < 64)) {
                            l_419 = 0;
                        } else { 
                            v_16 = 0;
                            v_15 = 0;
                        }
                    }
                    if (CONTROLS::IS_LOOK_INVERTED()) {
                        v_16 *= -1;
                    }
                    if ((((v_15 < -32) || (v_15 > 32)) || (v_16 < -32)) || (v_16 > 32)) {
                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            l_417 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 300);
                        } else { 
                            l_416 = GAMEPLAY::GET_GAME_TIMER() + 300;
                        }
                        l_418 = 1;
                    } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_417)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_416) > 0))) {
                        l_418 = 0;
                    }
                    if (((v_15 < 32) && (v_15 > -32)) && ((v_16 < 32) && (v_16 > -32))) {
                        if ((v_15 < 32) && (v_15 > -32)) {
                            v_15 = 0;
                        } else if (v_15 < 0) {
                            v_15 -= 32;
                        } else { 
                            v_15 += 32;
                        }
                        if ((v_16 < 32) && (v_16 > -32)) {
                            v_16 = 0;
                        } else if (v_16 < 0) {
                            v_16 -= 32;
                        } else { 
                            v_16 += 32;
                        }
                    }
                    if (a_3 == ${gadget_parachute}) {
                        v_16 *= -1;
                    }
                    v_10/*{3}*/ = a_3._f4 + a_3._fA;
                    v_10 += ((float)v_16) * 0.5;
                    v_10._f2 += ((float)v_15) * 0.35;
                } else { 
                    v_17 = 0;
                    if (l_B3._f69._f5 == 1) {
                        if (g_2708F6 == -1) {
                            if (CONTROLS::IS_CONTROL_PRESSED(2, 237)) {
                                v_17 = 1;
                                UI::_8DB8CFFD58B62552(4);
                            } else { 
                                UI::_8DB8CFFD58B62552(3);
                                v_17 = 0;
                            }
                        } else if (g_2708F6 > -1) {
                            UI::_8DB8CFFD58B62552(1);
                            v_17 = 0;
                        } else if ((g_2708F6 == -2) || (g_2708F6 == -3)) {
                            UI::_8DB8CFFD58B62552(1);
                            v_17 = 0;
                        } else { 
                            UI::_8DB8CFFD58B62552(2);
                            v_17 = 0;
                        }
                    } else if (l_4D8 == 1) {
                        if (g_2708F6 == -1) {
                            UI::_8DB8CFFD58B62552(4);
                            v_17 = 1;
                        }
                    }
                    if (v_17 == 1) {
                        v_10/*{3}*/ = a_3._f4 + a_3._fA;
                        l_4DD += g_2708F5 * 400.0;
                        if (l_4DD < -64.0) {
                            l_4DD = -64.0;
                        } else if (l_4DD > 64.0) {
                            l_4DD = 64.0;
                        }
                        if (a_3 == ${gadget_parachute}) {
                            l_4DD._f2 += sub_2c1df((-g_2708F4) * 400.0, -32.0, 32.0);
                        } else { 
                            l_4DD._f2 += sub_2c1df(g_2708F4 * 400.0, -32.0, 32.0);
                        }
                        if (l_4DD._f2 < -32.0) {
                            l_4DD._f2 = -32.0;
                        } else if (l_4DD._f2 > 32.0) {
                            l_4DD._f2 = 32.0;
                        }
                        v_10 += l_4DD;
                    } else { 
                        v_10/*{3}*/ = a_3._f4 + a_3._fA;
                    }
                }
                v_18/*{3}*/ = a_1;
                v_18 += (v_10 - a_1) * ((vector)(0.25));
                ENTITY::SET_ENTITY_ROTATION(a_0, v_18, 2, 1);
                a_1/*{3}*/ = v_18;
            }
        }
        if (!a_4) {
            v_1B/*{3}*/ = a_3._f1;
            v_1E/*{3}*/ = v_7;
            v_1E += (v_1B - v_7) * ((vector)(0.35));
            ENTITY::SET_ENTITY_COORDS(a_0, v_1E, 1, 0, 0, 1);
            v_21/*{3}*/ = a_3._f4;
            v_24/*{3}*/ = a_1;
            v_24 += (v_21 - a_1) * ((vector)(0.3));
            ENTITY::SET_ENTITY_ROTATION(a_0, v_24, 2, 1);
            a_1/*{3}*/ = v_24;
            if (sub_2d611(v_7, v_1B, 0.009999999999999998, 0)) {
                if (sub_2d611(a_1, v_21, 0.1, 0)) {
                    a_2 = 0;
                }
            }
        }
    }
}

auto sub_2d611(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    if (a_6 < 0.0) {
        a_6 = 0.0;
    }
    if (!a_7) {
        if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
            if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
                if (GAMEPLAY::ABSF(a_0._f2 - a_3._f2) <= a_6) {
                    return 1;
                }
            }
        }
    } else if (GAMEPLAY::ABSF(a_0 - a_3) <= a_6) {
        if (GAMEPLAY::ABSF(a_0._f1 - a_3._f1) <= a_6) {
            return 1;
        }
    }
    return 0;
}

void sub_2d68c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    a_0 = SYSTEM::FLOOR(CONTROLS::GET_CONTROL_NORMAL(2, 218) * 127.0);
    a_1 = SYSTEM::FLOOR(CONTROLS::GET_CONTROL_NORMAL(2, 219) * 127.0);
    a_2 = SYSTEM::FLOOR(CONTROLS::GET_CONTROL_NORMAL(2, 220) * 127.0);
    a_3 = SYSTEM::FLOOR(CONTROLS::GET_CONTROL_NORMAL(2, 221) * 127.0);
    if (a_4) {
        if ((((float)a_0) == 0.0) && (((float)a_1) == 0.0)) {
            a_0 = SYSTEM::FLOOR(CONTROLS::GET_DISABLED_CONTROL_NORMAL(2, 218) * 127.0);
            a_1 = SYSTEM::FLOOR(CONTROLS::GET_DISABLED_CONTROL_NORMAL(2, 219) * 127.0);
        }
        if ((((float)a_2) == 0.0) && (((float)a_3) == 0.0)) {
            a_2 = SYSTEM::FLOOR(CONTROLS::GET_DISABLED_CONTROL_NORMAL(2, 220) * 127.0);
            a_3 = SYSTEM::FLOOR(CONTROLS::GET_DISABLED_CONTROL_NORMAL(2, 221) * 127.0);
        }
    }
}

void sub_2d761(auto a_0) {
    if (l_4CF >= l_46A) {
        return ;
    }
    for (v_3 = 0; v_3 < l_4CF; v_3 += 1) {
        if (l_46A[v_3/*1*/] == a_0) {
            return ;
        }
    }
    GAMEPLAY::SET_BIT(&l_B3._fDC._f65[a_0 / 32/*1*/], a_0 % 32);
    l_46A[l_4CF/*1*/] = a_0;
    l_4CF += 1;
}

void sub_2d7c0() {
    sub_60870(&l_B3._f273, 300);
    sub_2d68c(&v_2, &v_3, &v_4, &v_5, 0);
    if (l_B3._f69._fA != 0) {
        if ((SYSTEM::TIMERA() > 300) || ((((v_3 > -64) && (v_3 < 64)) && (v_2 > -64)) && (v_2 < 64))) {
            l_B3._f69._fA = 0;
        } else { 
            v_2 = 0;
            v_3 = 0;
        }
    }
    v_6 = CONTROLS::IS_CONTROL_PRESSED(2, 207) || (l_B3._f69._f5 == 1);
    v_7 = CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201);
    v_8 = CONTROLS::IS_CONTROL_JUST_PRESSED(2, 202) || sub_60851();
    v_9 = CONTROLS::IS_CONTROL_JUST_PRESSED(2, 203);
    v_A = CONTROLS::IS_CONTROL_JUST_PRESSED(2, 204);
    v_B = ((v_2 < -64) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 189)) || (CONTROLS::IS_CONTROL_PRESSED(2, 189) && l_B3._f273._fA);
    v_C = ((v_2 > 64) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 190)) || (CONTROLS::IS_CONTROL_PRESSED(2, 190) && l_B3._f273._fB);
    v_D = ((v_3 < -64) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 188)) || (CONTROLS::IS_CONTROL_PRESSED(2, 188) && l_B3._f273._f8);
    v_E = ((v_3 > 64) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 187)) || (CONTROLS::IS_CONTROL_PRESSED(2, 187) && l_B3._f273._f9);
    v_F = (((v_2 < -64) || (v_2 > 64)) || (v_3 < -64)) || (v_3 > 64);
    if (CONTROLS::_13337B38DB572509(2)) {
        if (sub_607ec(l_B3._f273._f9, 0, 0)) {
            v_E = 1;
        }
        if (sub_60787(l_B3._f273._f8, 0, 0)) {
            v_D = 1;
        }
    }
    if (!v_F) {
        if (v_B) {
            v_2 = -1;
            l_B3._f273._fA = 0;
            l_B3._f273._f5 = 0;
            l_B3._f273._f15 = GAMEPLAY::GET_GAME_TIMER();
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                l_B3._f273._f19 = NETWORK::GET_NETWORK_TIME();
            }
        } else if (v_C) {
            v_2 = 1;
            l_B3._f273._fB = 0;
            l_B3._f273._f5 = 0;
            l_B3._f273._f15 = GAMEPLAY::GET_GAME_TIMER();
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                l_B3._f273._f19 = NETWORK::GET_NETWORK_TIME();
            }
        } else { 
            v_2 = 0;
        }
        if (v_D) {
            v_3 = -1;
            l_B3._f273._f8 = 0;
            l_B3._f273._f4 = 0;
            l_B3._f273._f14 = GAMEPLAY::GET_GAME_TIMER();
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                l_B3._f273._f18 = NETWORK::GET_NETWORK_TIME();
            }
        } else if (v_E) {
            v_3 = 1;
            l_B3._f273._f9 = 0;
            l_B3._f273._f4 = 0;
            l_B3._f273._f14 = GAMEPLAY::GET_GAME_TIMER();
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                l_B3._f273._f18 = NETWORK::GET_NETWORK_TIME();
            }
        } else { 
            v_3 = 0;
        }
    }
    if (!v_6) {
        l_41A = 0;
    } else if (l_41A) {
        v_6 = 0;
    }
    if (((((((((((((v_6 || l_418) || l_B3._f69._f11) || v_7) || v_8) || v_A) || v_B) || v_C) || v_D) || v_E) || v_9) || CONTROLS::_13337B38DB572509(2)) || l_B3._f69._f19) || ((l_4F5 == 0) && (l_4F6 != 0))) {
    } else { 
        return ;
    }
    if ((GAMEPLAY::GET_GAME_TIMER() - l_41C) < 500) {
        return ;
    }
    v_10 = 0;
    v_11 = 0;
    v_12 = 0;
    v_13 = 0;
    v_14 = 0;
    v_15 = 0;
    v_16 = 0;
    v_17 = 0;
    v_18 = 1;
    sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0);
    sub_2b7d8(l_B3, &v_59, l_B3._f69._f3);
    v_60 = 0;
    v_61 = -1;
    v_62 = -1;
    v_66 = 0;
    v_67 = 0;
    if (l_4F5 != 0) {
        if (!l_B3._f69._f19) {
            if (l_B3._f69._f5 == 0) {
                if (((((v_8 || v_B) || v_C) || v_D) || v_E) || (l_4F5 >= 10)) {
                    l_B3._f69._f19 = 1;
                    if (v_8) {
                        GAMEPLAY::SET_BIT(&l_4F6, 0);
                    }
                    if (v_B) {
                        GAMEPLAY::SET_BIT(&l_4F6, 1);
                    }
                    if (v_C) {
                        GAMEPLAY::SET_BIT(&l_4F6, 2);
                    }
                    if (v_D) {
                        GAMEPLAY::SET_BIT(&l_4F6, 3);
                    }
                    if (v_E) {
                        GAMEPLAY::SET_BIT(&l_4F6, 4);
                    }
                }
            } else if (l_B3._f69._f5 == 1) {
                if (((v_8 || v_D) || v_E) || (l_4F5 >= 10)) {
                    l_B3._f69._f19 = 1;
                    if (v_8) {
                        GAMEPLAY::SET_BIT(&l_4F6, 0);
                    }
                    if (v_B) {
                        GAMEPLAY::SET_BIT(&l_4F6, 1);
                    }
                    if (v_C) {
                        GAMEPLAY::SET_BIT(&l_4F6, 2);
                    }
                    if (v_D) {
                        GAMEPLAY::SET_BIT(&l_4F6, 3);
                    }
                    if (v_E) {
                        GAMEPLAY::SET_BIT(&l_4F6, 4);
                    }
                }
            }
        }
        if (l_B3._f69._f19) {
            sub_7826();
            if (l_B3._f69._f19) {
                l_425 = 0;
            }
        }
    } else if (l_4F6 != 0) {
        if (GAMEPLAY::IS_BIT_SET(l_4F6, 0)) {
            v_8 = 1;
        }
        if (GAMEPLAY::IS_BIT_SET(l_4F6, 1)) {
            v_B = 1;
            v_2 = -1;
        }
        if (GAMEPLAY::IS_BIT_SET(l_4F6, 2)) {
            v_C = 1;
            v_2 = 1;
        }
        if (GAMEPLAY::IS_BIT_SET(l_4F6, 3)) {
            v_D = 1;
            v_3 = -1;
        }
        if (GAMEPLAY::IS_BIT_SET(l_4F6, 4)) {
            v_E = 1;
            v_3 = 1;
        }
        l_4F6 = 0;
    }
    if (l_B3._f69._f19) {
        v_7 = 0;
        v_8 = 0;
        v_A = 0;
        v_B = 0;
        v_C = 0;
        v_D = 0;
        v_E = 0;
        v_9 = 0;
    }
    sub_60753();
    if (l_425 || (l_B3._f69._f19 && (l_4F5 == 0))) {
        if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
            UI::_SHOW_CURSOR_THIS_FRAME();
        }
        switch (l_B3._f69._f5) {
        case 0:
            if (GAMEPLAY::IS_PC_VERSION() && (!l_B3._f69._f19)) {
                sub_603d6(1, 0, 0, 1);
                if (g_2708F6 > -1) {
                    if (l_4D8 == 0) {
                        UI::_8DB8CFFD58B62552(1);
                    }
                } else if (g_2708F6 == -4) {
                    UI::_8DB8CFFD58B62552(2);
                }
                if (sub_603af()) {
                    v_67 = 1;
                } else if (g_2708F6 == -1) {
                    if (sub_5fe73(&v_3F, &v_62, &v_61, &l_B3._f69)) {
                        if ((v_62 == l_B3._f69._f3) && (v_61 == l_B3._f69._f1)) {
                            if (!l_4D8) {
                                UI::_8DB8CFFD58B62552(3);
                                if (l_4DA == 1) {
                                    if (!CONTROLS::IS_CONTROL_PRESSED(2, 237)) {
                                        l_4DA = 0;
                                    }
                                } else if (CONTROLS::IS_CONTROL_PRESSED(2, 237)) {
                                    l_4D8 = 1;
                                    l_4D9 = 0;
                                }
                            }
                        } else { 
                            UI::_8DB8CFFD58B62552(5);
                            if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
                                l_4D9 = 0;
                                l_4D8 = 0;
                                l_4DA = 1;
                                v_66 = 1;
                                v_25/*{26}*/ = v_3F;
                            }
                        }
                    } else if (!l_4D8) {
                        UI::_8DB8CFFD58B62552(1);
                    }
                }
                if (l_4D8 == 1) {
                    v_6 = 1;
                    if (!CONTROLS::IS_CONTROL_PRESSED(2, 237)) {
                        l_4D8 = 0;
                        v_6 = 0;
                    }
                }
            }
            if (v_A) {
                l_43D = 0;
                l_43E = 1;
                l_43F/*"64"*/ = "";
            } else if (v_66 == 1) {
                l_B3._f69._f3 = v_62;
                l_B3._f69._f1 = v_61;
                l_469 = 0;
                l_41B = 1;
                l_42E = 1;
                v_10 = 1;
                l_424 = 1;
                l_99 = 1;
                l_B3._f69._f10 = 0;
                sub_6198a(&l_B3, &l_B3._f69, &v_25, 0);
                l_A8 = 1;
                v_66 = 0;
            } else if ((v_7 || v_67) || l_B3._f69._f19) {
                v_67 = 0;
                v_15 = 0;
                l_B3._f69._f10 = 0;
                if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 1)) {
                    if (v_25._f18 == 7) {
                        if (v_25._f17 == -1) {
                        } else { 
                            l_43D = 0;
                            l_43E = 1;
                            l_43F/*"64"*/ = NETWORK::_662635855957C411(g_2707D2._f1B[v_25._f17/*1*/]);
                        }
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 7)) {
                        if (((!GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) && (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 1))) && (!((v_25._f18 == 3) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) > SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * ((float)v_25._f16)))))) {
                            if (sub_5fe37(v_25, v_25._f13)) {
                                v_19/*"16"*/ = "GSM_EQUIP";
                            } else if (v_25._f18 == 3) {
                                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                    v_19/*"16"*/ = "GSM_PURCHASE_A";
                                    v_15 = 1;
                                } else { 
                                    v_19/*"16"*/ = "GSM_PURCHASE";
                                }
                            } else { 
                                v_19/*"16"*/ = "";
                            }
                            if (sub_5e269(0, v_25._f13, v_25, v_25._f18, 0, l_B3, 0, 0, ${ammo_pistol}, 1)) {
                                g_26FCD0 = 1;
                                l_B3._f69._f17 = 1;
                                v_17 = v_25;
                                if (v_25._f18 == 1) {
                                    WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, 1, 0, 0);
                                    sub_254cf(&l_B3._f69, &v_19, 3000);
                                    l_424 = 1;
                                    if (is_in_transition) {
                                        if (sub_5de33(v_25, &v_68)) {
                                            sub_5d9c7(v_68, 1, -1);
                                            sub_5b63e(sub_5d590(v_25));
                                        }
                                    }
                                } else if (v_25._f18 == 5) {
                                    WEAPON::GET_MAX_AMMO(PLAYER::PLAYER_PED_ID(), v_25, &v_69);
                                    WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, v_69, 0, 0);
                                    sub_254cf(&l_B3._f69, &v_19, 3000);
                                    l_424 = 1;
                                    if (is_in_transition) {
                                        if (sub_5de33(v_25, &v_6A)) {
                                            sub_5d9c7(v_6A, 1, -1);
                                            sub_5b63e(sub_5d590(v_25));
                                        }
                                    }
                                } else if (v_25._f18 == 3) {
                                    if (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) < SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * ((float)v_25._f16))) {
                                        PED::SET_PED_ARMOUR(PLAYER::PLAYER_PED_ID(), SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * ((float)v_25._f16)));
                                    }
                                    if (v_15) {
                                        sub_254cf(&l_B3._f69, &v_19, 30000);
                                    } else { 
                                        sub_254cf(&l_B3._f69, &v_19, 3000);
                                    }
                                    l_424 = 1;
                                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                        v_6B = sub_4b3f(1743, -1, 0);
                                        if (v_6B == 1) {
                                            v_6C = ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID());
                                            v_6D = sub_5b159(v_6C, 11, sub_5b55a(PLAYER::PLAYER_PED_ID(), 11));
                                            if (v_6D == -99) {
                                            } else if (((v_6C == ${mp_m_freemode_01}) && (v_6D != 0)) || ((v_6C == ${mp_f_freemode_01}) && (v_6D != 0))) {
                                                v_6D += sub_5b10d(v_25._f16);
                                            } else { }
                                            g_2704B1 = v_6D;
                                        }
                                    } else { }
                                } else if (v_25._f18 == 2) {
                                    WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, 1, 0, 0);
                                    sub_254cf(&l_B3._f69, &v_19, 3000);
                                    if (is_in_transition) {
                                        if (sub_5de33(v_25, &v_6E)) {
                                            sub_5d9c7(v_6E, 1, -1);
                                            sub_5b63e(sub_5d590(v_25));
                                        }
                                    }
                                    l_424 = 1;
                                } else if (v_25._f18 == 4) {
                                    WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, 1, 0, 0);
                                    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                        sub_5ac74(sub_10943(), 13, 1);
                                    } else { 
                                        sub_5abec(13, 1, -1);
                                    }
                                    v_63 = 5;
                                    v_65 = 0;
                                    v_64 = 0;
                                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                        v_63 = sub_4b3f(575, -1, 0);
                                        v_65 = sub_4b3f(2029, -1, 0);
                                        v_64 = sub_4b3f(1436, -1, 0);
                                        if ((v_63 == 0) && (!sub_26007(13))) {
                                            v_63 = 5;
                                        }
                                    } else { 
                                        v_6F = sub_10943();
                                        if (v_6F == 0) {
                                            STATS::STAT_GET_INT(0xc8fd0844, &v_63, -1);
                                        } else if (v_6F == 1) {
                                            STATS::STAT_GET_INT(0xd3161861, &v_63, -1);
                                        } else if (v_6F == 2) {
                                            STATS::STAT_GET_INT(0xe205ca9b, &v_63, -1);
                                        }
                                    }
                                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                        sub_5a93e(v_65, 1);
                                    } else { 
                                        PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), v_65);
                                        PLAYER::CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID());
                                        PLAYER::CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(PLAYER::PLAYER_ID());
                                    }
                                    PLAYER::SET_PLAYER_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), v_63);
                                    if (sub_2b532()) {
                                        PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), ${lts_p_para_pilot2_sp_s});
                                    } else if (sub_2b543()) {
                                        PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x815e52eb);
                                    }
                                    if (v_64 == 0) {
                                        PLAYER::SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(PLAYER::PLAYER_ID(), 255, 255, 255);
                                        PLAYER::SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(PLAYER::PLAYER_ID(), 0);
                                    }
                                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                        if (((((((((((((sub_1bc1f(288, -1) || sub_1bc1f(289, -1)) || sub_1bc1f(290, -1)) || sub_1bc1f(291, -1)) || sub_1bc1f(292, -1)) || sub_1bc1f(293, -1)) || sub_1bc1f(294, -1)) || sub_1bc1f(295, -1)) || sub_1bc1f(296, -1)) || sub_1bc1f(297, -1)) || sub_1bc1f(298, -1)) || sub_1bc1f(299, -1)) || sub_1bc1f(300, -1)) || sub_1bc1f(301, -1)) {
                                            sub_5a08f(-1, 0);
                                        }
                                    } else { 
                                        v_70 = sub_10943();
                                        if (((((((((((((sub_1a029(v_70, 288) || sub_1a029(v_70, 289)) || sub_1a029(v_70, 290)) || sub_1a029(v_70, 291)) || sub_1a029(v_70, 292)) || sub_1a029(v_70, 293)) || sub_1a029(v_70, 294)) || sub_1a029(v_70, 295)) || sub_1a029(v_70, 296)) || sub_1a029(v_70, 297)) || sub_1a029(v_70, 298)) || sub_1a029(v_70, 299)) || sub_1a029(v_70, 300)) || sub_1a029(v_70, 301)) {
                                            sub_5a08f(v_63, 0);
                                        }
                                    }
                                    sub_2553b(sub_10943(), 255);
                                    sub_2553b(sub_10943(), 13);
                                    sub_254cf(&l_B3._f69, &v_19, 3000);
                                    l_424 = 1;
                                } else if (v_25._f18 == 0) {
                                    if (v_25._f19 == 0) {
                                        WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, 1, 0, 0);
                                    } else { 
                                        WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, v_25._f16 * 4, 0, 0);
                                        WEAPON::SET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_25, 0);
                                        while (sub_21a3b(&l_4E1, v_25, v_71, 0)) {
                                            if (l_4E1._f1) {
                                                if (!WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_25, l_4E1)) {
                                                    WEAPON::GIVE_WEAPON_COMPONENT_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                                }
                                            } else if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_25, l_4E1)) {
                                                WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                            }
                                            v_71 += 1;
                                        }
                                    }
                                    sub_254cf(&l_B3._f69, &v_19, 3000);
                                    if (is_in_transition) {
                                        if (sub_5de33(v_25, &v_72)) {
                                            sub_5d9c7(v_72, v_25._f16 * 4, -1);
                                            sub_5b63e(sub_5d590(v_25));
                                        }
                                    }
                                    if (sub_59e12(PLAYER::PLAYER_PED_ID(), v_25)) {
                                        sub_59b13(29, 1);
                                    }
                                    l_424 = 1;
                                }
                                if ((GAMEPLAY::IS_BIT_SET(l_B3._f297, 4) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                                    l_B3._f69._f5 = 1;
                                    l_4D4 = v_25._f18 == 4;
                                    l_B3._f69._f2 = -1;
                                }
                            } else if (!l_B3._f69._f19) {
                                if (l_B3._f69._f15) {
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_AFFORD", 3000);
                                    sub_59af0(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                                    sub_59a0b(0, 10, 3);
                                } else { 
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                                }
                            }
                        } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 13)) {
                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (v_25._f18 == 3)) {
                                v_19/*"16"*/ = "GSM_PURCH_INV_A";
                                v_15 = 1;
                            } else { 
                                v_19/*"16"*/ = "GSM_PURCH_INV";
                            }
                            if (sub_5e269(0, v_25._f13, v_25, v_25._f18, 0, l_B3, 0, 0, ${ammo_pistol}, 1)) {
                                g_26FCD0 = 1;
                                l_B3._f69._f17 = 1;
                                v_17 = v_25;
                                if (v_25._f18 == 3) {
                                    if (l_B3._f69._f1 == 0) {
                                        v_73 = sub_4b3f(1868, -1, 0);
                                        v_73 += 1;
                                        sub_84ba(1868, v_73, -1, 1);
                                    } else if (l_B3._f69._f1 == 1) {
                                        v_73 = sub_4b3f(1869, -1, 0);
                                        v_73 += 1;
                                        sub_84ba(1869, v_73, -1, 1);
                                    } else if (l_B3._f69._f1 == 2) {
                                        v_73 = sub_4b3f(1870, -1, 0);
                                        v_73 += 1;
                                        sub_84ba(1870, v_73, -1, 1);
                                    } else if (l_B3._f69._f1 == 3) {
                                        v_73 = sub_4b3f(1871, -1, 0);
                                        v_73 += 1;
                                        sub_84ba(1871, v_73, -1, 1);
                                    } else if (l_B3._f69._f1 == 4) {
                                        v_73 = sub_4b3f(1872, -1, 0);
                                        v_73 += 1;
                                        sub_84ba(1872, v_73, -1, 1);
                                    }
                                    if (v_15) {
                                        sub_254cf(&l_B3._f69, &v_19, 30000);
                                    } else { 
                                        sub_254cf(&l_B3._f69, &v_19, 3000);
                                    }
                                    l_424 = 1;
                                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {}
                                }
                            } else if (!l_B3._f69._f19) {
                                if (l_B3._f69._f15) {
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_AFFORD", 3000);
                                    sub_59af0(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                                    sub_59a0b(0, 10, 3);
                                } else { 
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                                }
                            }
                        } else if ((GAMEPLAY::IS_BIT_SET(l_B3._f297, 4) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                            l_B3._f69._f5 = 1;
                            l_4D4 = v_25._f18 == 4;
                            l_B3._f69._f2 = -1;
                            l_B3._f69._f10 = 0;
                            l_424 = 1;
                            v_16 = v_25;
                        } else if ((v_25._f18 == 3) && NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            v_11 = 1;
                            if ((((((((((!sub_273c7(247)) || (!sub_273c7(246))) || (!sub_273c7(245))) || (!sub_273c7(244))) || (!sub_273c7(243))) || (!sub_273c7(242))) || (!sub_273c7(241))) || (!sub_273c7(240))) || (!sub_273c7(239))) || (!sub_273c7(238))) {
                                sub_254cf(&l_B3._f69, "GSM_INV_FULL", 3000);
                            } else { 
                                sub_254cf(&l_B3._f69, "GSM_INV_FULL2", 3000);
                            }
                        } else if ((v_25._f18 == 3) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) > SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * ((float)v_25._f16)))) {
                            v_11 = 1;
                            sub_254cf(&l_B3._f69, "GSM_ARMOR", 3000);
                        } else if (v_25._f19 == 0) {
                            v_11 = 1;
                            sub_254cf(&l_B3._f69, "GSM_HAVE", 3000);
                        } else if (v_25._f18 == 2) {
                            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 1)) {
                                if (sub_5e269(1, v_25._f14, v_25, v_25._f18, 0, l_B3, 0, 0, ${ammo_pistol}, 1)) {
                                    g_26FCD0 = 1;
                                    l_B3._f69._f17 = 1;
                                    WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, 1, 0, 0);
                                    v_17 = v_25;
                                    sub_254cf(&l_B3._f69, "GSM_PURCHASE", 3000);
                                    if (is_in_transition) {
                                        if (sub_5de33(v_25, &v_74)) {
                                            sub_5d9c7(v_74, 1, -1);
                                            sub_5b63e(sub_5d590(v_25));
                                        }
                                    }
                                    l_424 = 1;
                                } else if (!l_B3._f69._f19) {
                                    if (l_B3._f69._f15) {
                                        v_11 = 1;
                                        sub_254cf(&l_B3._f69, "GSM_AFFORD", 3000);
                                        sub_59af0(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                                        sub_59a0b(0, 10, 3);
                                    } else { 
                                        v_11 = 1;
                                        sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                                    }
                                }
                            } else { 
                                v_11 = 1;
                                sub_254cf(&l_B3._f69, "GSM_FULL", 3000);
                            }
                        } else if (v_25._f18 == 0) {
                            if ((GAMEPLAY::IS_BIT_SET(l_B3._f297, 4) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                                l_B3._f69._f5 = 1;
                                l_4D4 = v_25._f18 == 4;
                                l_B3._f69._f2 = -1;
                                l_B3._f69._f10 = 0;
                                l_424 = 1;
                            }
                        } else { }
                    } else { 
                        if (is_in_transition) {
                            if (!sub_6651b(v_25, v_25._f18, 0)) {
                                sub_254cf(&l_B3._f69, "GSM_BLOCK_MP", 3000);
                            } else if ((!sub_7216(1, 1)) && (v_25 == ${weapon_sawnoffshotgun})) {
                                sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                            } else { 
                                sub_254cf(&l_B3._f69, "GSM_LOCK_FM", 3000);
                            }
                        } else { 
                            sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                        }
                        if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 3) == 0) {
                            sub_599e3(&l_B3._f298, 12, 1);
                        }
                        v_11 = 1;
                    }
                }
            } else if (v_8) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (v_25._f18 == 3)) {
                    if (PED::HAS_PED_HEAD_BLEND_FINISHED(PLAYER::PLAYER_PED_ID()) && PED::_7350823473013C02(PLAYER::PLAYER_PED_ID())) {
                        sub_5195("HAS_PED_HEAD_BLEND_FINISHED = TRUE", -1);
                        PED::_4668D80430D6C299(PLAYER::PLAYER_PED_ID());
                        AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_AMMO_SHOP_SOUNDSET", 1);
                        l_B3._f69._f1F = 6;
                    }
                } else { 
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_AMMO_SHOP_SOUNDSET", 1);
                    l_B3._f69._f1F = 6;
                }
            } else if (((v_D || v_E) || v_B) || v_C) {
                if (sub_58143(sub_598db(v_2, -v_3), v_25, l_B3._f69._f3, l_B3._f69._f1, &v_60, &v_62, &v_61)) {
                    l_A8 = 1;
                    l_4D9 = 0;
                    l_4E0 = 1;
                    for (v_75 = 0; v_75 < 20; v_75 += 1) {
                        for (v_76 = 0; v_76 < 5; v_76 += 1) {
                            if (sub_afc5(l_B3, &g_2707D2, &v_25, v_75, v_76, 0)) {
                                if ((v_25 == v_60) || ((v_61 == v_76) && (v_62 == v_75))) {
                                    l_B3._f69._f1 = v_76;
                                    l_B3._f69._f3 = v_75;
                                    l_469 = 0;
                                    l_41B = 1;
                                    l_42E = 1;
                                    v_10 = 1;
                                    l_424 = 1;
                                    l_99 = 1;
                                    l_B3._f69._f10 = 0;
                                    sub_6198a(&l_B3, &l_B3._f69, &v_25, 0);
                                    if (v_F) {
                                        SYSTEM::SETTIMERA(0);
                                        l_B3._f69._fA = 1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            break;
        case 1:
            if (CONTROLS::_GET_LAST_INPUT_METHOD(2) && (!l_B3._f69._f19)) {
                sub_603d6(0, 0, 0, 1);
                if (g_2708F6 > -1) {
                    UI::_8DB8CFFD58B62552(1);
                } else if (g_2708F6 == -4) {
                    UI::_8DB8CFFD58B62552(2);
                }
                if (sub_603af() && (!l_4D4)) {
                    if (g_2708F6 == l_B3._f69._f2) {
                        v_67 = 1;
                    } else { 
                        if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4) && (g_2708F6 == 0)) {
                            l_B3._f69._f2 = g_2708F6;
                            l_424 = 1;
                            v_10 = 1;
                        } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 3) && (g_2708F6 < 21)) {
                            if (!sub_58108(sub_10943(), v_25, l_4E1)) {
                                sub_575a8(sub_10943(), v_25, l_4E1);
                            }
                            l_B3._f69._f2 = g_2708F6;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                            if (sub_27537(&l_4E7, v_25, sub_2afad(v_25, l_B3._f69._f2 - 21), 1)) {
                                v_77 = sub_1be7f(v_25, l_4E7._f9, l_4E7._fA);
                                if (v_77 != 0) {
                                    sub_2553b(sub_10943(), v_77);
                                }
                            }
                            l_B3._f69._f2 = g_2708F6;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        }
                        sub_5745a(l_B3._f69._f2, 0, 1);
                    }
                }
            }
            if (l_4D4) {
                if (sub_603af()) {
                    if (g_2708F6 == l_4D5) {
                        v_7 = 1;
                    } else { 
                        v_10 = 1;
                        l_4D5 = g_2708F6;
                        sub_5745a(l_4D5, 0, 1);
                    }
                }
                if (v_D) {
                    l_4D5 -= 1;
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        if (l_4D5 < 0) {
                            l_4D5 = 3;
                        }
                    } else if (l_4D5 < 0) {
                        l_4D5 = 2;
                    }
                    v_10 = 1;
                    v_10 = 1;
                    sub_5745a(l_4D5, 0, 1);
                    sub_254cf(&l_B3._f69, "", 3000);
                    if (v_F) {
                        SYSTEM::SETTIMERA(0);
                        l_B3._f69._fA = 1;
                    }
                } else if (v_E) {
                    l_4D5 += 1;
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        if (l_4D5 > 3) {
                            l_4D5 = 0;
                        }
                    } else if (l_4D5 > 2) {
                        l_4D5 = 0;
                    }
                    v_10 = 1;
                    sub_5745a(l_4D5, 0, 1);
                    sub_254cf(&l_B3._f69, "", 3000);
                    if (v_F) {
                        SYSTEM::SETTIMERA(0);
                        l_B3._f69._fA = 1;
                    }
                } else if (v_7) {
                    if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_573e2(1)) && sub_573b8(PLAYER::PLAYER_ID())) && (((l_4D5 == 0) || (l_4D5 == 1)) || (l_4D5 == 3))) {
                        v_11 = 1;
                        sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                    } else { 
                        l_B3._f69._f5 = 1;
                        l_4D4 = 0;
                        l_B3._f69._f2 = -1;
                        l_B3._f69._f10 = 0;
                        l_424 = 1;
                        v_16 = v_25;
                        if (ENTITY::DOES_ENTITY_EXIST(l_4F2._f2) && (!PED::IS_PED_INJURED(l_4F2._f2))) {
                            l_4D7 = 0;
                            PED::SET_PED_COMPONENT_VARIATION(l_4F2._f2, 5, sub_561f5(l_4F2._f2, l_4D7), sub_561a5(l_4F2._f2, l_4D7), sub_5619c(l_4F2._f2, l_4D7));
                            PED::SET_PED_RESET_FLAG(l_4F2._f2, 177, 1);
                        }
                    }
                } else if (v_8) {
                    l_B3._f69._f10 = 0;
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_AMMO_SHOP_SOUNDSET", 1);
                    l_B3._f69._f5 = 0;
                    l_B3._f69._f2 = -1;
                    l_424 = 1;
                    l_4D5 = 0;
                }
            } else if (v_D) {
                if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 9)) {
                    if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                        if (sub_56144(v_25, &v_78)) {
                            l_B3._f69._f2 = v_78 + 21;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        }
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) {
                        if (sub_56103(v_25, &v_78)) {
                            l_B3._f69._f2 = v_78 + 1;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                            l_B3._f69._f2 = 0;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        }
                    } else { 
                        l_B3._f69._f2 = 0;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 10)) {
                    if (!sub_58108(sub_10943(), v_25, l_4E1)) {
                        sub_575a8(sub_10943(), v_25, l_4E1);
                    }
                    v_78 = l_B3._f69._f2 - 1;
                    if (sub_560c3(v_25, &v_78)) {
                        l_B3._f69._f2 = v_78 + 1;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                        l_B3._f69._f2 = 0;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                        sub_56144(v_25, &v_78);
                        l_B3._f69._f2 = 21 + v_78;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if ((v_25 == 0xd8df3c3c) && (v_78 == 0)) {
                        v_78 = 10;
                        if (sub_560c3(v_25, &v_78)) {
                            l_B3._f69._f2 = v_78 + 1;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        }
                    } else if ((v_25 == 0xdfe37640) && (v_78 == 0)) {
                        v_78 = 3;
                        if (sub_560c3(v_25, &v_78)) {
                            l_B3._f69._f2 = v_78 + 1;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        }
                    } else { 
                        sub_2b554(v_25, &v_78);
                        l_B3._f69._f2 = 1 + v_78;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 11)) {
                    if (sub_27537(&l_4E7, v_25, sub_2afad(v_25, l_B3._f69._f2 - 21), 1)) {
                        v_79 = sub_1be7f(v_25, l_4E7._f9, l_4E7._fA);
                        if (v_79 != 0) {
                            sub_2553b(sub_10943(), v_79);
                        }
                    }
                    l_4D7 = l_4E7._f9;
                    v_78 = l_B3._f69._f2 - 21;
                    if (sub_56073(v_25, &v_78)) {
                        l_B3._f69._f2 = v_78 + 21;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) {
                        if (sub_56103(v_25, &v_78)) {
                            l_B3._f69._f2 = v_78 + 1;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                            l_B3._f69._f2 = 0;
                            l_424 = 1;
                            v_10 = 1;
                            l_B3._f69._f10 = 0;
                        }
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                        l_B3._f69._f2 = 0;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else { 
                        sub_56144(v_25, &v_78);
                        l_B3._f69._f2 = 21 + v_78;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    }
                }
                sub_5745a(l_B3._f69._f2, 0, 1);
                l_423 = sub_56065();
                if (v_F) {
                    SYSTEM::SETTIMERA(0);
                    l_B3._f69._fA = 1;
                }
            } else if (v_E) {
                if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 9)) {
                    if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) {
                        sub_2b554(v_25, &v_7A);
                        l_B3._f69._f2 = 1 + v_7A;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                        sub_2b303(v_25, &v_7A);
                        l_B3._f69._f2 = 21 + v_7A;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else { 
                        l_B3._f69._f2 = 0;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 10)) {
                    if (!sub_58108(sub_10943(), v_25, l_4E1)) {
                        sub_575a8(sub_10943(), v_25, l_4E1);
                    }
                    v_7A = l_B3._f69._f2 - 1;
                    if (sub_5602b(v_25, &v_7A)) {
                        l_B3._f69._f2 = v_7A + 1;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                        sub_2b303(v_25, &v_7A);
                        l_B3._f69._f2 = 21 + v_7A;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                        l_B3._f69._f2 = 0;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else { 
                        sub_2b554(v_25, &v_7A);
                        l_B3._f69._f2 = 1 + v_7A;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 11)) {
                    if (sub_27537(&l_4E7, v_25, sub_2afad(v_25, l_B3._f69._f2 - 21), 1)) {
                        v_7B = sub_1be7f(v_25, l_4E7._f9, l_4E7._fA);
                        if (v_7B != 0) {
                            sub_2553b(sub_10943(), v_7B);
                        }
                    }
                    l_4D7 = l_4E7._f9;
                    v_7A = l_B3._f69._f2 - 21;
                    if (sub_55fe1(v_25, &v_7A)) {
                        l_B3._f69._f2 = v_7A + 21;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                        l_B3._f69._f2 = 0;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) {
                        sub_2b554(v_25, &v_7A);
                        l_B3._f69._f2 = 1 + v_7A;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    } else { 
                        sub_2b303(v_25, &v_7A);
                        l_B3._f69._f2 = 21 + v_7A;
                        l_424 = 1;
                        v_10 = 1;
                        l_B3._f69._f10 = 0;
                    }
                }
                sub_5745a(l_B3._f69._f2, 0, 1);
                l_423 = sub_56065();
                if (v_F) {
                    SYSTEM::SETTIMERA(0);
                    l_B3._f69._fA = 1;
                }
            } else if ((v_7 || v_67) || l_B3._f69._f19) {
                l_B3._f69._f10 = 0;
                if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 1)) {
                    if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 9)) {
                        if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 2)) {
                            v_7C = v_25._f14;
                            v_7D = v_25._f16;
                            if ((v_25._f18 == 0) && (v_25 != 0x6d544c99)) {
                                v_7D *= 2;
                            }
                            v_7E = v_7D;
                            if (sub_7c6f()) {
                                if (v_25._f15) {
                                    v_25._f14 *= v_7D;
                                }
                            }
                            if (l_469) {
                                if (sub_7c6f() && v_25._f15) {
                                    v_7C = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_7C) * sub_55f18(v_25, v_7D)) * ((float)v_7D));
                                } else { 
                                    v_7C = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_7C) * sub_55f18(v_25, v_7D));
                                }
                                v_7D = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_7D) * sub_55f18(v_25, v_7D));
                            } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                sub_55e75(v_25, &v_25._f14, &v_7D);
                                v_7C = v_25._f14;
                            }
                            if (sub_7c6f() && v_25._f15) {
                                v_7F = v_7D;
                            } else if (l_469) {
                                v_7F = SYSTEM::FLOOR(sub_55f18(v_25, v_7E));
                            } else { 
                                v_7F = 1;
                            }
                            if (sub_5e269(1, v_7C, v_25, v_25._f18, 0, l_B3, v_7E, v_7D, v_25._f19, v_7F)) {
                                g_26FCD0 = 1;
                                l_B3._f69._f17 = 1;
                                WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, v_7D, 0, 0);
                                v_14 = 1;
                                v_17 = v_25;
                                sub_254cf(&l_B3._f69, "GSM_PURCHASE", 3000);
                                if (is_in_transition) {
                                    if (sub_5de33(v_25, &v_80)) {
                                        sub_5d9c7(v_80, v_7D, -1);
                                        sub_5b63e(sub_5d590(v_25));
                                    }
                                }
                                l_424 = 1;
                            } else if (!l_B3._f69._f19) {
                                if (l_B3._f69._f15) {
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_AFFORD", 3000);
                                    sub_59af0(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                                    sub_59a0b(0, 10, 3);
                                } else { 
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                                }
                            }
                        } else { 
                            v_11 = 1;
                            sub_254cf(&l_B3._f69, "GSM_FULL", 3000);
                        }
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 11)) {
                        if (sub_27537(&l_4E7, v_25, sub_2afad(v_25, l_B3._f69._f2 - 21), 1)) {
                            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 8)) {
                                if ((v_25 == 0xfc508e33) && GAMEPLAY::IS_BIT_SET(l_B3._f297, 2)) {
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_FULL", 3000);
                                } else if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) {
                                    if (sub_5e269(3, l_4E7._f8, v_25, v_25._f18, 0, l_B3, 0, 0, ${ammo_pistol}, 1)) {
                                        g_26FCD0 = 1;
                                        if (sub_2b17c(&l_4E1, v_25, 0x395e9926)) {
                                            if (sub_21a3b(&l_4E1, v_25, sub_2b020(&l_4E1, v_25, 0x395e9926), 0)) {
                                                if ((l_4E1 == sub_2b129(&l_4E1, v_25, 0x395e9926, 0)) || (l_4E1 == sub_2b129(&l_4E1, v_25, 0x395e9926, 1))) {
                                                    if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_25, l_4E1)) {
                                                        WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                                        sub_55e1d(v_25);
                                                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                                            sub_55c7f(l_4E1, v_25, 0);
                                                        }
                                                        sub_254cf(&l_B3._f69, "GSM_REMOVE", 3000);
                                                        l_B3._f69._f17 = 1;
                                                        v_13 = 1;
                                                    }
                                                }
                                            }
                                        }
                                        if (l_4E7._fA == 0) {
                                            WEAPON::SET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_25, l_4E7._f9);
                                            l_41F = l_4E7._f9;
                                        } else if (l_4E7._fA == 2) {
                                            PLAYER::SET_PLAYER_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), l_4E7._f9);
                                            if (sub_2b532()) {
                                                PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), ${lts_p_para_pilot2_sp_s});
                                            } else if (sub_2b543()) {
                                                PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x815e52eb);
                                            }
                                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                                sub_84ba(575, l_4E7._f9, -1, 1);
                                            } else { 
                                                v_81 = sub_10943();
                                                if (v_81 == 0) {
                                                    STATS::STAT_SET_INT(0xc8fd0844, l_4E7._f9, 1);
                                                } else if (v_81 == 1) {
                                                    STATS::STAT_SET_INT(0xd3161861, l_4E7._f9, 1);
                                                } else if (v_81 == 2) {
                                                    STATS::STAT_SET_INT(0xe205ca9b, l_4E7._f9, 1);
                                                }
                                            }
                                            l_41F = l_4E7._f9;
                                        } else if (l_4E7._fA == 3) {
                                            sub_5a08f(l_4E7._f9, 1);
                                            l_420 = l_4E7._f9;
                                        } else if (l_4E7._fA == 1) {
                                            sub_5a93e(l_4E7._f9, 1);
                                            l_422 = l_4E7._f9;
                                        } else if (l_4E7._fA == 4) {
                                            sub_55ba4(l_4E7._f9, &v_82, &v_83, &v_84);
                                            PLAYER::SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(PLAYER::PLAYER_ID(), v_82, v_83, v_84);
                                            PLAYER::SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(PLAYER::PLAYER_ID(), l_4E7._f9 > 0);
                                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                                sub_84ba(1436, l_4E7._f9, -1, 1);
                                            }
                                            l_421 = l_4E7._f9;
                                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                                sub_55a4c(6, l_4E7._f9 == 6);
                                                if (l_4E7._f9 == 7) {
                                                    sub_8fe7(3602, 1, -1, 1);
                                                }
                                            }
                                        } else if (l_4E7._fA == 5) {
                                            v_85 = 0;
                                            if (l_4E7._f9 == 0) {
                                                v_85 = sub_4b3f(3537, -1, 0);
                                            } else if (l_4E7._f9 == 1) {
                                                v_85 = sub_4b3f(3536, -1, 0);
                                            } else if (l_4E7._f9 == 2) {
                                                v_85 = sub_4b3f(3538, -1, 0);
                                            } else if (l_4E7._f9 == 3) {
                                                v_85 = sub_4b3f(3540, -1, 0);
                                            } else if (l_4E7._f9 == 4) {
                                                v_85 = sub_4b3f(3539, -1, 0);
                                            } else if (l_4E7._f9 == 5) {
                                                v_85 = sub_4b3f(3541, -1, 0);
                                            } else if (l_4E7._f9 == 6) {
                                                v_85 = sub_4b3f(3543, -1, 0);
                                            } else if (l_4E7._f9 == 7) {
                                                v_85 = sub_4b3f(3542, -1, 0);
                                            } else if (l_4E7._f9 == 8) {
                                                v_85 = sub_4b3f(3544, -1, 0);
                                            } else if (l_4E7._f9 == 9) {
                                                v_85 = sub_4b3f(3546, -1, 0);
                                            } else if (l_4E7._f9 == 10) {
                                                v_85 = sub_4b3f(3545, -1, 0);
                                            } else if (l_4E7._f9 == 11) {
                                                v_85 = sub_4b3f(3547, -1, 0);
                                            }
                                            v_85 += 1;
                                            if (l_4E7._f9 == 0) {
                                                sub_84ba(3537, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 1) {
                                                sub_84ba(3536, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 2) {
                                                sub_84ba(3538, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 3) {
                                                sub_84ba(3540, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 4) {
                                                sub_84ba(3539, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 5) {
                                                sub_84ba(3541, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 6) {
                                                sub_84ba(3543, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 7) {
                                                sub_84ba(3542, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 8) {
                                                sub_84ba(3544, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 9) {
                                                sub_84ba(3546, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 10) {
                                                sub_84ba(3545, v_85, -1, 1);
                                            } else if (l_4E7._f9 == 11) {
                                                sub_84ba(3547, v_85, -1, 1);
                                            }
                                        }
                                        if (v_25 == ${gadget_parachute}) {
                                            WEAPON::GIVE_WEAPON_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, 1, 0, 0);
                                        }
                                        if (sub_59e12(PLAYER::PLAYER_PED_ID(), v_25)) {
                                            sub_59b13(29, 1);
                                        }
                                        sub_55763(v_25);
                                        l_B3._f69._f17 = 1;
                                        v_17 = v_25;
                                        sub_254cf(&l_B3._f69, "GSM_PURCHASE", 3000);
                                    } else if (!l_B3._f69._f19) {
                                        if (l_B3._f69._f15) {
                                            v_11 = 1;
                                            sub_254cf(&l_B3._f69, "GSM_AFFORD", 3000);
                                            sub_59af0(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                                            sub_59a0b(0, 10, 3);
                                        } else { 
                                            v_11 = 1;
                                            sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                                        }
                                    }
                                } else if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 6)) {
                                    if (sub_2b17c(&l_4E1, v_25, 0x395e9926)) {
                                        if (sub_21a3b(&l_4E1, v_25, sub_2b020(&l_4E1, v_25, 0x395e9926), 0)) {
                                            if ((l_4E1 == sub_2b129(&l_4E1, v_25, 0x395e9926, 0)) || (l_4E1 == sub_2b129(&l_4E1, v_25, 0x395e9926, 1))) {
                                                if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_25, l_4E1)) {
                                                    WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                                    sub_55e1d(v_25);
                                                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                                        sub_55c7f(l_4E1, v_25, 0);
                                                    }
                                                    sub_254cf(&l_B3._f69, "GSM_REMOVE", 3000);
                                                    l_B3._f69._f17 = 1;
                                                    v_13 = 1;
                                                }
                                            }
                                        }
                                    }
                                    if (l_4E7._fA == 0) {
                                        WEAPON::SET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_25, l_4E7._f9);
                                        l_41F = l_4E7._f9;
                                    } else if (l_4E7._fA == 2) {
                                        PLAYER::SET_PLAYER_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), l_4E7._f9);
                                        if (sub_2b532()) {
                                            PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), ${lts_p_para_pilot2_sp_s});
                                        } else if (sub_2b543()) {
                                            PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x815e52eb);
                                        }
                                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                            sub_84ba(575, l_4E7._f9, -1, 1);
                                        } else { 
                                            v_86 = sub_10943();
                                            if (v_86 == 0) {
                                                STATS::STAT_SET_INT(0xc8fd0844, l_4E7._f9, 1);
                                            } else if (v_86 == 1) {
                                                STATS::STAT_SET_INT(0xd3161861, l_4E7._f9, 1);
                                            } else if (v_86 == 2) {
                                                STATS::STAT_SET_INT(0xe205ca9b, l_4E7._f9, 1);
                                            }
                                        }
                                        l_41F = l_4E7._f9;
                                    } else if (l_4E7._fA == 3) {
                                        sub_5a08f(l_4E7._f9, 1);
                                        l_420 = l_4E7._f9;
                                    } else if (l_4E7._fA == 1) {
                                        sub_5a93e(l_4E7._f9, 1);
                                        l_422 = l_4E7._f9;
                                    } else if (l_4E7._fA == 4) {
                                        sub_55ba4(l_4E7._f9, &v_87, &v_88, &v_89);
                                        PLAYER::SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(PLAYER::PLAYER_ID(), v_87, v_88, v_89);
                                        PLAYER::SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(PLAYER::PLAYER_ID(), l_4E7._f9 > 0);
                                        l_421 = l_4E7._f9;
                                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                            sub_55a4c(6, l_4E7._f9 == 6);
                                        }
                                    } else if (l_4E7._fA == 5) {
                                        v_8A = 0;
                                        if (l_4E7._f9 == 0) {
                                            v_8A = sub_4b3f(3537, -1, 0);
                                        } else if (l_4E7._f9 == 1) {
                                            v_8A = sub_4b3f(3536, -1, 0);
                                        } else if (l_4E7._f9 == 2) {
                                            v_8A = sub_4b3f(3538, -1, 0);
                                        } else if (l_4E7._f9 == 3) {
                                            v_8A = sub_4b3f(3540, -1, 0);
                                        } else if (l_4E7._f9 == 4) {
                                            v_8A = sub_4b3f(3539, -1, 0);
                                        } else if (l_4E7._f9 == 5) {
                                            v_8A = sub_4b3f(3541, -1, 0);
                                        } else if (l_4E7._f9 == 6) {
                                            v_8A = sub_4b3f(3543, -1, 0);
                                        } else if (l_4E7._f9 == 7) {
                                            v_8A = sub_4b3f(3542, -1, 0);
                                        } else if (l_4E7._f9 == 8) {
                                            v_8A = sub_4b3f(3544, -1, 0);
                                        } else if (l_4E7._f9 == 9) {
                                            v_8A = sub_4b3f(3546, -1, 0);
                                        } else if (l_4E7._f9 == 10) {
                                            v_8A = sub_4b3f(3545, -1, 0);
                                        } else if (l_4E7._f9 == 11) {
                                            v_8A = sub_4b3f(3547, -1, 0);
                                        }
                                        v_8A += 1;
                                        if (l_4E7._f9 == 0) {
                                            sub_84ba(3537, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 1) {
                                            sub_84ba(3536, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 2) {
                                            sub_84ba(3538, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 3) {
                                            sub_84ba(3540, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 4) {
                                            sub_84ba(3539, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 5) {
                                            sub_84ba(3541, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 6) {
                                            sub_84ba(3543, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 7) {
                                            sub_84ba(3542, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 8) {
                                            sub_84ba(3544, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 9) {
                                            sub_84ba(3546, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 10) {
                                            sub_84ba(3545, v_8A, -1, 1);
                                        } else if (l_4E7._f9 == 11) {
                                            sub_84ba(3547, v_8A, -1, 1);
                                        }
                                    }
                                    sub_55763(v_25);
                                    sub_254cf(&l_B3._f69, "GSM_EQUIP", 3000);
                                    l_B3._f69._f17 = 1;
                                    v_12 = 1;
                                    if (sub_59e12(PLAYER::PLAYER_PED_ID(), v_25)) {
                                        sub_59b13(29, 1);
                                    }
                                } else { 
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_HAVE", 3000);
                                }
                            } else if (is_in_transition) {
                                v_11 = 1;
                                sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                            } else { 
                                v_11 = 1;
                                sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                            }
                        }
                        l_424 = 1;
                    } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 10)) {
                        if (sub_21a3b(&l_4E1, v_25, l_B3._f69._f2 - 1, 1)) {
                            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 8)) {
                                if (sub_55718(v_25, l_4E1, l_4E1._f2)) {
                                    v_19/*"16"*/ = "GSM_EQUIP";
                                } else { 
                                    v_19/*"16"*/ = "GSM_PURCHASE";
                                }
                                if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) {
                                    if (sub_5e269(2, l_4E1._f2, v_25, v_25._f18, l_4E1, l_B3, 0, 0, ${ammo_pistol}, 1)) {
                                        g_26FCD0 = 1;
                                        l_B3._f69._f17 = 1;
                                        if (l_4E1 != 0) {
                                            if (l_4E1._f4 == 0x395e9926) {
                                                WEAPON::SET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_25, -1);
                                                l_41F = -1;
                                                sub_254cf(&l_B3._f69, "GSM_REMOVE", 3000);
                                            }
                                            WEAPON::GIVE_WEAPON_COMPONENT_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                            sub_55e1d(v_25);
                                            STATS::_E95C8A1875A02CA4(v_25, l_4E1, 0);
                                        }
                                        v_17 = v_25;
                                        sub_254cf(&l_B3._f69, &v_19, 3000);
                                        if (sub_59e12(PLAYER::PLAYER_PED_ID(), v_25)) {
                                            sub_59b13(29, 1);
                                        }
                                    } else if (!l_B3._f69._f19) {
                                        if (l_B3._f69._f15) {
                                            v_11 = 1;
                                            sub_254cf(&l_B3._f69, "GSM_AFFORD", 3000);
                                            sub_59af0(GAMEPLAY::GET_HASH_KEY(&g_16416._f50C), g_16416._f510, GAMEPLAY::GET_HASH_KEY(sub_84e5(l_B3)));
                                            sub_59a0b(0, 10, 3);
                                        } else { 
                                            v_11 = 1;
                                            sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                                        }
                                    }
                                } else if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 6)) {
                                    if (l_4E1 != 0) {
                                        if (l_4E1._f4 == 0x395e9926) {
                                            WEAPON::SET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_25, -1);
                                            l_41F = -1;
                                            sub_254cf(&l_B3._f69, "GSM_REMOVE", 3000);
                                        }
                                        WEAPON::GIVE_WEAPON_COMPONENT_TO_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                        sub_55e1d(v_25);
                                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                            sub_55c7f(l_4E1, v_25, 1);
                                        }
                                        STATS::_E95C8A1875A02CA4(v_25, l_4E1, 0);
                                        sub_254cf(&l_B3._f69, "GSM_EQUIP", 3000);
                                        l_B3._f69._f17 = 1;
                                        v_12 = 1;
                                        if (sub_59e12(PLAYER::PLAYER_PED_ID(), v_25)) {
                                            sub_59b13(29, 1);
                                        }
                                    }
                                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 12)) {
                                    if (l_4E1 != 0) {
                                        WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(PLAYER::PLAYER_PED_ID(), v_25, l_4E1);
                                        sub_55e1d(v_25);
                                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                            sub_55c7f(l_4E1, v_25, 0);
                                        }
                                        sub_254cf(&l_B3._f69, "GSM_REMOVE", 3000);
                                        l_B3._f69._f17 = 1;
                                        v_13 = 1;
                                        if (l_4E1._f4 == 0x395e9926) {
                                            WEAPON::SET_PED_WEAPON_TINT_INDEX(PLAYER::PLAYER_PED_ID(), v_25, 0);
                                            l_41F = 0;
                                            sub_254cf(&l_B3._f69, "GSM_REMOVE", 3000);
                                        }
                                    }
                                } else { 
                                    v_11 = 1;
                                    sub_254cf(&l_B3._f69, "GSM_NOTOGGLE", 3000);
                                }
                            } else if (is_in_transition) {
                                v_11 = 1;
                                if (sub_219f1(l_4E1)) {
                                } else { 
                                    sub_254cf(&l_B3._f69, "GSM_LOCK_FM", 3000);
                                }
                            } else { 
                                v_11 = 1;
                                sub_254cf(&l_B3._f69, "GSM_LOCK", 3000);
                            }
                        }
                        l_424 = 1;
                    }
                }
            } else if (v_9) {
                if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 9)) {
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                        if (v_25._f18 == 0) {
                            l_469 = !l_469;
                            l_424 = 1;
                            AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_OTHER", "HUD_AMMO_SHOP_SOUNDSET", 1);
                        }
                    }
                }
            } else if (v_8) {
                if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 10)) {
                    if (!sub_58108(sub_10943(), v_25, l_4E1)) {
                        sub_575a8(sub_10943(), v_25, l_4E1);
                    }
                } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 11)) {
                    if (sub_27537(&l_4E7, v_25, sub_2afad(v_25, l_B3._f69._f2 - 21), 1)) {
                        v_8B = sub_1be7f(v_25, l_4E7._f9, l_4E7._fA);
                        if (v_8B != 0) {
                            sub_2553b(sub_10943(), v_8B);
                        }
                    }
                }
                if (v_25 == ${gadget_parachute}) {
                    l_B3._f69._f10 = 0;
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_AMMO_SHOP_SOUNDSET", 1);
                    l_B3._f69._f5 = 1;
                    l_4D4 = 1;
                    l_424 = 1;
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                        sub_2c813(&l_B3._fDC[(l_B3._f69._f3 * 5) + l_B3._f69._f1/*1*/], &v_25);
                    }
                } else { 
                    l_B3._f69._f10 = 0;
                    AUDIO::PLAY_SOUND_FRONTEND(-1, "BACK", "HUD_AMMO_SHOP_SOUNDSET", 1);
                    l_4D0 = 0;
                    l_B3._f69._f11 = 0;
                    l_B3._f69._f5 = 0;
                    l_B3._f69._f2 = -1;
                    l_424 = 1;
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                        sub_2c813(&l_B3._fDC[(l_B3._f69._f3 * 5) + l_B3._f69._f1/*1*/], &v_25);
                    }
                }
            }
            break;
        }
        if (v_10) {
            if (l_B3._f69._f5 == 0) {
                if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 1)) {
                    sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_1D, &v_21);
                    sub_556df(v_1D, v_25._f13, v_25, 1, 0);
                }
            } else if (l_B3._f69._f5 == 1) {
                if (l_B3._f69._f2 == 0) {
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 1)) {
                        v_8C = v_25._f16;
                        if (v_25._f18 == 0) {
                            v_8C *= 2;
                        }
                        v_8D = v_25._f14;
                        if (l_469) {
                            v_8D = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_8D) * sub_55f18(v_25, v_8C));
                            v_8C = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_8C) * sub_55f18(v_25, v_8C));
                        }
                        sub_10e6d(v_25._f19, v_8C, &v_1D, 0);
                        if (l_469) {
                            v_1D/*"16"*/ = "GS_BUY_AF";
                            sub_556df(v_1D, v_8D, v_25, v_8C, 0);
                        } else { 
                            sub_556df(v_1D, v_8D, v_25, v_8C, 0);
                        }
                    }
                    if (l_97) {
                        sub_262c8("GSHOP_SALE", 0, 0);
                    } else { 
                        v_90 = 1.0 - sub_f3a4(v_25, &v_8E, &v_8F);
                        if (v_90 != 0.0) {
                            sub_262c8("GSHOP_DISC", 0, 0);
                            sub_26269(SYSTEM::ROUND(v_90 * 100.0));
                        }
                    }
                } else if ((l_B3._f69._f2 >= 1) && (l_B3._f69._f2 < 21)) {
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                        if (sub_21a3b(&l_4E1, v_25, l_B3._f69._f2, 1)) {
                            sub_1f9b4(v_25, l_B3._f69._f2 - 1, &v_1D, &v_21);
                            sub_556df(v_1D, l_4E1._f2, v_25, 1, 0);
                        }
                    }
                    if (l_97) {
                        sub_262c8("GSHOP_SALE", 0, 0);
                    } else { 
                        v_92 = 1.0 - sub_24405(v_25, &v_91, 0x3f800000);
                        if (v_92 != 0.0) {
                            sub_262c8("GSHOP_DISC", 0, 0);
                            sub_26269(SYSTEM::ROUND(v_92 * 100.0));
                        }
                    }
                } else if (l_B3._f69._f2 >= 21) {
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                        if (sub_27537(&l_4E7, v_25, sub_2afad(v_25, l_B3._f69._f2 - 21), 1) && sub_2b34d(v_25, l_4E7._f9, l_4E7._fA)) {
                            sub_556df(v_1D, l_4E1._f2, v_25, 1, 0);
                        }
                    }
                    if (l_97) {
                        sub_262c8("GSHOP_SALE", 0, 0);
                    } else { 
                        v_93 = l_4E1._f2;
                        v_94 = 1.0 - sub_19e62(v_25, &v_93);
                        if (v_94 != 0.0) {
                            sub_262c8("GSHOP_DISC", 0, 0);
                            sub_26269(SYSTEM::ROUND(v_94 * 100.0));
                        }
                    }
                }
            }
            AUDIO::PLAY_SOUND_FRONTEND(-1, "NAV", "HUD_AMMO_SHOP_SOUNDSET", 1);
        }
        if (v_16 != 0) {
            sub_6635a(v_16);
        }
        if (v_17 != 0) {
            if (v_14) {
                AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_AMMO_PURCHASE", "HUD_AMMO_SHOP_SOUNDSET", 1);
            } else { 
                AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_PURCHASE", "HUD_AMMO_SHOP_SOUNDSET", 1);
            }
        }
        if (v_12) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_ATTACHMENT_EQUIP", "HUD_AMMO_SHOP_SOUNDSET", 1);
            } else { 
                AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_PURCHASE", "HUD_AMMO_SHOP_SOUNDSET", 1);
            }
        }
        if (v_13) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_ATTACHMENT_UNEQUIP", "HUD_AMMO_SHOP_SOUNDSET", 1);
            } else { 
                AUDIO::PLAY_SOUND_FRONTEND(-1, "ERROR", "HUD_AMMO_SHOP_SOUNDSET", 1);
            }
        }
        if (v_11) {
            AUDIO::PLAY_SOUND_FRONTEND(-1, "ERROR", "HUD_AMMO_SHOP_SOUNDSET", 1);
        }
        if (v_10 && (l_B3._f69._f5 == 0)) {
            l_B3._f69._f11 = 0;
            l_418 = 0;
        }
        if (v_18) {
            if (v_6 || l_418) {
                if (!l_B3._f69._f11) {
                    if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                        sub_6198a(&l_B3, &l_B3._f69, &v_25, 1);
                        if (l_B3._f69 == 0) {
                            l_B3._f26[l_B3._f69._f4/*12*/]._f7 -= 2.0;
                        } else if (l_B3._f69 == 1) {
                            l_B3._f26[l_B3._f69._f4/*12*/]._f7 -= 1.0;
                        }
                        v_95/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(v_25._f1, v_25._f4._f2, v_25._f7);
                        v_98/*{3}*/ = l_B3._f26[l_B3._f69._f4/*12*/]._f1;
                        v_9B = 0.4;
                        if (v_25 == 0xd8df3c3c) {
                            v_9B += 0.5;
                        }
                        if (v_25 == 0xdfe37640) {
                            v_9B += 0.4;
                        }
                        l_B3._f26[l_B3._f69._f4/*12*/]._f1 += (v_95 - v_98) * ((vector)v_9B);
                        l_B3._f69._f11 = 1;
                    }
                }
            } else if (l_B3._f69._f11) {
                if (sub_afc5(l_B3, &g_2707D2, &v_25, l_B3._f69._f3, l_B3._f69._f1, 0)) {
                    sub_6198a(&l_B3, &l_B3._f69, &v_25, 0);
                    l_B3._f69._f11 = 0;
                }
            }
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            sub_30d59();
            if ((((l_B3._f69._f5 == 1) && (l_B3._f69._f2 >= 21)) && (!l_4D4)) && (l_4D5 == 3)) {
                if (ENTITY::DOES_ENTITY_EXIST(l_4F2._f2) && (!PED::IS_PED_INJURED(l_4F2._f2))) {
                    PED::SET_PED_COMPONENT_VARIATION(l_4F2._f2, 5, sub_561f5(l_4F2._f2, l_4D7), sub_561a5(l_4F2._f2, l_4D7), sub_5619c(l_4F2._f2, l_4D7));
                    PED::SET_PED_RESET_FLAG(l_4F2._f2, 177, 1);
                    ENTITY::SET_ENTITY_VISIBLE(l_4F2._f2, 1, 0);
                    l_4D6 = 1;
                }
            } else if (l_4D6) {
                ENTITY::SET_ENTITY_VISIBLE(l_4F2._f2, 0, 0);
                PED::SET_PED_COMPONENT_VARIATION(PLAYER::PLAYER_PED_ID(), 5, 0, 0, 0);
                PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 177, 1);
                l_4D6 = 0;
            }
        }
    }
}

void sub_30d59() {
    if (is_in_transition) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (sub_67015()) {
                if (!ENTITY::DOES_ENTITY_EXIST(l_4F2._f2)) {
                    l_4F2._f2 = PED::CLONE_PED(PLAYER::PLAYER_PED_ID(), 0, 0, 0);
                    g_2705AF = l_4F2._f2;
                    ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_4F2._f2, l_B3._fAC._f1F, 0, 0, 1);
                    ENTITY::SET_ENTITY_HEADING(l_4F2._f2, l_B3._fAC._f22);
                    ENTITY::SET_ENTITY_COLLISION(l_4F2._f2, 0, 0);
                    ENTITY::FREEZE_ENTITY_POSITION(l_4F2._f2, 1);
                    ENTITY::SET_ENTITY_VISIBLE(l_4F2._f2, 0, 0);
                    PED::_2208438012482A1A(l_4F2._f2, 0, 0);
                    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4F2._f2, 1);
                    sub_30e12(&l_4F2._f2, -1, 0, 0);
                    PED::SET_PED_COMPONENT_VARIATION(l_4F2._f2, 5, 0, 0, 0);
                }
            }
        }
    }
}

void sub_30e12(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1 == -1) {
        a_1 = sub_4ba5();
    }
    if (!a_3) {
        PED::_E3B27E70CEAB9F0C(a_0);
    }
    v_13 = sub_5568a(a_0);
    v_14 = sub_529bd(a_0);
    v_15 = sub_52920(a_0);
    v_16 = sub_349d6(a_0);
    if (a_2) {
        v_15 = 1;
    }
    for (v_17 = 0; v_17 < 127; v_17 += 1) {
        if (sub_34801(v_17, a_1)) {
            if (sub_31512(&v_6, v_17, v_13, a_0, -1)) {
                if (sub_31025(&v_6, v_6._f4, v_6._f8, v_14, v_15, a_2, v_16)) {
                    if (!a_3) {
                        PED::_APPLY_PED_OVERLAY(a_0, v_6._f4, v_6._f5);
                    }
                }
            }
        }
    }
    if (sub_34801(123, -1)) {
        if (PED::_GET_TATTOO_ZONE(${mpbeach_overlays}, ${fm_hair_fuzz}) != 7) {
            if (!a_3) {
                PED::_APPLY_PED_OVERLAY(a_0, ${mpbeach_overlays}, ${fm_hair_fuzz});
            }
        }
    }
    v_19 = DLC1::_278F76C3B0A8F109(v_13);
    for (v_18 = 0; v_18 < v_19; v_18 += 1) {
        if (DLC1::_FF56381874F82086(v_13, v_18, &v_1A)) {
            if (!DLC1::_IS_OUTFIT_EMPTY(v_1A)) {
                v_29 = 129 + v_18;
                if (sub_34801(v_29, a_1)) {
                    if (sub_31025(&v_1A._f7, v_1A._f2, v_1A._f6, v_14, v_15, a_2, v_16)) {
                        if (!a_3) {
                            PED::_APPLY_PED_OVERLAY(a_0, v_1A._f2, v_1A._f3);
                            sub_30f72(a_0, v_1A._f2, v_1A._f3);
                        }
                    }
                }
            }
        }
    }
}

void sub_30f72(auto a_0, auto a_1, auto a_2) {
    switch (a_1) {
    case ${mpheist_overlays}:
        switch (a_2) {
        case 0x28014457:
            PED::_APPLY_PED_OVERLAY(a_0, ${mpheist_overlays}, 0x35e9e028);
            break;
        case 0x71f11d42:
            PED::_APPLY_PED_OVERLAY(a_0, ${mpheist_overlays}, 0xdbcbf0f6);
            break;
        }
        break;
    case 0x1ce4c2e8:
        switch (a_2) {
        case 0xfde5b6b:
            PED::_APPLY_PED_OVERLAY(a_0, 0x1ce4c2e8, 0xdceb71cd);
            PED::_APPLY_PED_OVERLAY(a_0, 0x1ce4c2e8, 0x1ba87dc4);
            break;
        case 0xb4caa545:
            PED::_APPLY_PED_OVERLAY(a_0, 0x1ce4c2e8, 0xc673c4da);
            PED::_APPLY_PED_OVERLAY(a_0, 0x1ce4c2e8, 0x37fdb66e);
            break;
        }
        break;
    }
}

auto sub_31025(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    v_9 = ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID());
    if (a_1 == 0x1acb04fa) {
        return 0;
    }
    switch (a_2) {
    case ${chest_right}:
    case ${stomach_left}:
    case 0xa8faaa1e:
    case ${chest_mid}:
    case 0xb63468af:
    case ${chest_full}:
    case ${chest_left}:
    case ${side_right}:
    case ${stomach_right}:
    case ${stomach_full}:
    case 0x329c1227:
    case 0x470ffe1b:
    case ${stomach_mid}:
    case 0x5c499b74:
    case 0x5e902381:
    case 0x688b8ecc:
        if (a_3) {
            return 0;
        }
        if (((((((a_2 == ${chest_full}) && (v_9 == ${mp_f_freemode_01})) || ((a_2 == ${chest_mid}) && (v_9 == ${mp_f_freemode_01}))) || ((a_2 == ${chest_left}) && (v_9 == ${mp_f_freemode_01}))) || (a_2 == ${chest_right})) || ((a_2 == 0x329c1227) && (v_9 == ${mp_f_freemode_01}))) || ((a_2 == 0x470ffe1b) && (v_9 == ${mp_f_freemode_01}))) {
            if (g_270846 == -1) {
                if (sub_34801(13, -1)) {
                    return 0;
                } else if (sub_34801(14, -1)) {
                    return 0;
                } else if (sub_34801(15, -1)) {
                    return 0;
                } else if (sub_34801(16, -1)) {
                } else if (sub_34801(71, -1)) {
                } else if (sub_34801(72, -1)) {
                } else { }
            } else if (g_270846 == 13) {
                return 0;
            } else if (g_270846 == 14) {
                return 0;
            } else if (g_270846 == 15) {
                return 0;
            } else if (g_270846 == 16) {
            } else if (g_270846 == 71) {
            } else if (g_270846 == 72) {
            } else { }
        } else if ((a_2 == ${stomach_full}) && (v_9 == ${mp_f_freemode_01})) {
            if (g_270846 == -1) {
                if (sub_34801(13, -1)) {
                } else if (sub_34801(14, -1)) {
                } else if (sub_34801(15, -1)) {
                    return 0;
                } else if (sub_34801(16, -1)) {
                } else if (sub_34801(71, -1)) {
                } else if (sub_34801(72, -1)) {
                } else { }
            } else if (g_270846 == 13) {
            } else if (g_270846 == 14) {
            } else if (g_270846 == 15) {
                return 0;
            } else if (g_270846 == 16) {
            } else if (g_270846 == 71) {
            } else if (g_270846 == 72) {}
        } else { }
        break;
    case 0x47f140d5:
    case ${back_1}:
        if (a_6) {
            return 0;
        }
        break;
    case 0x3cc214b0:
        if (a_4) {
            return 0;
        }
        if (a_3) {
            if (g_270846 == -1) {
                if (sub_34801(13, -1)) {
                    return 0;
                } else if (sub_34801(14, -1)) {
                    return 0;
                } else if (sub_34801(15, -1)) {
                    return 0;
                } else if (sub_34801(16, -1)) {
                } else if (sub_34801(71, -1)) {
                } else if (sub_34801(72, -1)) {
                } else { }
            } else if (g_270846 == 13) {
                return 0;
            } else if (g_270846 == 14) {
                return 0;
            } else if (g_270846 == 15) {
                return 0;
            } else if (g_270846 == 16) {
            } else if (g_270846 == 71) {
            } else if (g_270846 == 72) {}
        } else { }
        break;
    case ${rank}:
    case 0:
    case 2:
        if (a_3) {
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_0)) {
                switch (GAMEPLAY::GET_HASH_KEY(a_0)) {
                case 0x82fca310:
                case 0x8e869349:
                case 0x901ac364:
                case 0x9c2aae91:
                case 0xad58fde0:
                case 0xb38e8a4b:
                case 0xeb74f757:
                case 0xec6e500b:
                case 0xf9a293b2:
                case 0x711ab38:
                case 0x2becf792:
                case 0x514c19c5:
                case 0x575151d2:
                case 0x583b4d92:
                case 0x69bfcab0:
                    return 0;
                    break;
                }
            }
        }
        if (v_9 == ${mp_m_freemode_01}) {
        } else if (v_9 == ${mp_f_freemode_01}) {
            if (g_270846 == -1) {
                if (sub_34801(13, -1)) {
                } else if (sub_34801(14, -1)) {
                } else if (sub_34801(15, -1)) {
                } else if (sub_34801(16, -1)) {
                } else if (sub_34801(71, -1)) {
                } else if (sub_34801(72, -1)) {
                } else { }
            } else if (g_270846 == 13) {
                return 0;
            } else if (g_270846 == 14) {
            } else if (g_270846 == 15) {
                return 0;
            } else if (g_270846 == 16) {
            } else if (g_270846 == 71) {
            } else if (g_270846 == 72) {}
        } else { }
        break;
    case 0x1083ce80:
        if (a_5) {
            return 0;
        }
        break;
    }
    return 1;
}

auto sub_31512(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    sub_3454c(a_0, -1, 0, "", "", "", "", a_2, -1, 0);
    if (ENTITY::DOES_ENTITY_EXIST(a_3) && (!PED::IS_PED_INJURED(a_3))) {
        v_7 = ENTITY::GET_ENTITY_MODEL(a_3);
    }
    switch (a_2) {
    case 0:
        switch (a_1) {
        case 0:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_01", "singleplayer_overlays", "MK_000", "", a_2, 300, 3);
            break;
        case 1:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_02", "singleplayer_overlays", "MK_001", "", a_2, 450, 0);
            break;
        case 2:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_03", "singleplayer_overlays", "MK_002", "", a_2, 250, 4);
            break;
        case 3:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_04", "singleplayer_overlays", "MK_003", "", a_2, 175, 0);
            break;
        case 4:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_06", "singleplayer_overlays", "MK_005", "", a_2, 380, 0);
            break;
        case 5:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_07", "singleplayer_overlays", "MK_006", "", a_2, 180, 0);
            break;
        case 6:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_08", "singleplayer_overlays", "MK_007", "", a_2, 240, 0);
            break;
        case 7:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_10", "singleplayer_overlays", "MK_009", "", a_2, 195, 0);
            break;
        case 8:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_11", "singleplayer_overlays", "MK_010", "", a_2, 280, 6);
            break;
        case 9:
            if (sub_19fb4() || sub_19fab()) {
                v_8 = 400;
                if (sub_715b() && (sub_12460() || sub_1230c())) {
                    v_8 = 0;
                }
                sub_3454c(a_0, a_1, a_3, "TAT_MIC_12", "singleplayer_overlays", "MK_011", "", a_2, v_8, 2);
            }
            break;
        case 10:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_13", "singleplayer_overlays", "MK_012", "", a_2, 320, 3);
            break;
        case 11:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_14", "singleplayer_overlays", "MK_013", "", a_2, 500, 2);
            break;
        case 12:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_16", "singleplayer_overlays", "MK_015", "", a_2, 220, 0);
            break;
        case 13:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_17", "singleplayer_overlays", "MK_016", "", a_2, 320, 4);
            break;
        case 14:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_18", "singleplayer_overlays", "MK_017", "", a_2, 140, 2);
            break;
        case 15:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_20", "singleplayer_overlays", "MK_019", "", a_2, 350, 0);
            break;
        case 16:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_21", "singleplayer_overlays", "MK_020", "", a_2, 350, 0);
            break;
        case 17:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_05", "singleplayer_overlays", "MK_004", "", a_2, 120, 1);
            break;
        case 18:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_09", "singleplayer_overlays", "MK_008", "", a_2, 99, 1);
            break;
        case 19:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_15", "singleplayer_overlays", "MK_014", "", a_2, 400, 1);
            break;
        case 20:
            sub_3454c(a_0, a_1, a_3, "TAT_MIC_19", "singleplayer_overlays", "MK_018", "", a_2, 420, 1);
            break;
        default:
            sub_344ba(a_0, a_2, a_1, 21);
            break;
        }
        break;
    case 1:
        switch (a_1) {
        case 0:
            if (sub_19fb4() || sub_19fab()) {
                v_8 = 450;
                if (sub_715b() && (sub_12460() || sub_1230c())) {
                    v_8 = 0;
                }
                sub_3454c(a_0, a_1, a_3, "TAT_FRA_01", "singleplayer_overlays", "fr_000", "", a_2, v_8, 0);
            }
            break;
        case 1:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_02", "singleplayer_overlays", "fr_001", "", a_2, 230, 0);
            break;
        case 2:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_03", "singleplayer_overlays", "fr_002", "", a_2, 310, 0);
            break;
        case 3:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_04", "singleplayer_overlays", "fr_003", "", a_2, 260, 0);
            break;
        case 4:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_07", "singleplayer_overlays", "fr_006", "", a_2, 240, 2);
            break;
        case 5:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_08", "singleplayer_overlays", "fr_007", "", a_2, 190, 3);
            break;
        case 6:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_09", "singleplayer_overlays", "fr_008", "", a_2, 200, 2);
            break;
        case 7:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_10", "singleplayer_overlays", "fr_009", "", a_2, 225, 0);
            break;
        case 8:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_12", "singleplayer_overlays", "fr_011", "", a_2, 195, 0);
            break;
        case 9:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_13", "singleplayer_overlays", "fr_012", "", a_2, 275, 2);
            break;
        case 10:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_14", "singleplayer_overlays", "fr_013", "", a_2, 80, 0);
            break;
        case 11:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_15", "singleplayer_overlays", "fr_014", "", a_2, 95, 0);
            break;
        case 12:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_16", "singleplayer_overlays", "fr_015", "", a_2, 300, 3);
            break;
        case 13:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_17", "singleplayer_overlays", "fr_016", "", a_2, 450, 3);
            break;
        case 14:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_18", "singleplayer_overlays", "fr_017", "", a_2, 345, 3);
            break;
        case 15:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_19", "singleplayer_overlays", "fr_018", "", a_2, 550, 0);
            break;
        case 16:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_20", "singleplayer_overlays", "fr_019", "", a_2, 200, 0);
            break;
        case 17:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_21", "singleplayer_overlays", "fr_020", "", a_2, 180, 0);
            break;
        case 18:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_22", "singleplayer_overlays", "fr_021", "", a_2, 140, 0);
            break;
        case 19:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_24", "singleplayer_overlays", "fr_023", "", a_2, 245, 0);
            break;
        case 20:
            break;
        case 21:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_26", "singleplayer_overlays", "fr_025", "", a_2, 370, 0);
            break;
        case 22:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_27", "singleplayer_overlays", "fr_026", "", a_2, 350, 0);
            break;
        case 23:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_28", "singleplayer_overlays", "fr_027", "", a_2, 310, 0);
            break;
        case 24:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_29", "singleplayer_overlays", "fr_028", "", a_2, 210, 0);
            break;
        case 25:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_30", "singleplayer_overlays", "fr_029", "", a_2, 245, 0);
            break;
        case 26:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_31", "singleplayer_overlays", "fr_030", "", a_2, 85, 0);
            break;
        case 27:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_32", "singleplayer_overlays", "fr_031", "", a_2, 210, 0);
            break;
        case 28:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_33", "singleplayer_overlays", "fr_032", "", a_2, 225, 0);
            break;
        case 29:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_34", "singleplayer_overlays", "fr_033", "", a_2, 145, 0);
            break;
        case 30:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_35", "singleplayer_overlays", "fr_034", "", a_2, 230, 0);
            break;
        case 31:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_36", "singleplayer_overlays", "fr_035", "", a_2, 195, 0);
            break;
        case 32:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_37", "singleplayer_overlays", "fr_036", "", a_2, 255, 0);
            break;
        case 33:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_38", "singleplayer_overlays", "fr_037", "", a_2, 300, 0);
            break;
        case 34:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_40", "singleplayer_overlays", "fr_039", "", a_2, 300, 0);
            break;
        case 35:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_05", "singleplayer_overlays", "fr_004", "", a_2, 255, 1);
            break;
        case 36:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_06", "singleplayer_overlays", "fr_005", "", a_2, 175, 1);
            break;
        case 37:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_11", "singleplayer_overlays", "fr_010", "", a_2, 520, 1);
            break;
        case 38:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_23", "singleplayer_overlays", "fr_022", "", a_2, 125, 1);
            break;
        case 39:
            sub_3454c(a_0, a_1, a_3, "TAT_FRA_39", "singleplayer_overlays", "fr_038", "", a_2, 365, 1);
            break;
        default:
            sub_344ba(a_0, a_2, a_1, 40);
            break;
        }
        break;
    case 2:
        switch (a_1) {
        case 0:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_01", "singleplayer_overlays", "tp_000", "", a_2, 120, 0);
            break;
        case 1:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_02", "singleplayer_overlays", "tp_001", "", a_2, 150, 3);
            break;
        case 2:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_03", "singleplayer_overlays", "tp_002", "", a_2, 100, 0);
            break;
        case 3:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_04", "singleplayer_overlays", "tp_003", "", a_2, 140, 0);
            break;
        case 4:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_05", "singleplayer_overlays", "tp_004", "", a_2, 250, 0);
            break;
        case 5:
            if (sub_19fb4() || sub_19fab()) {
                v_8 = 380;
                if (sub_715b() && (sub_12460() || sub_1230c())) {
                    v_8 = 0;
                }
                sub_3454c(a_0, a_1, a_3, "TAT_TRV_06", "singleplayer_overlays", "tp_005", "", a_2, v_8, 3);
            }
            break;
        case 6:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_07", "singleplayer_overlays", "tp_006", "", a_2, 120, 0);
            break;
        case 7:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_08", "singleplayer_overlays", "tp_007", "", a_2, 250, 0);
            break;
        case 8:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_09", "singleplayer_overlays", "tp_008", "", a_2, 50, 3);
            break;
        case 9:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_10", "singleplayer_overlays", "tp_009", "", a_2, 135, 2);
            break;
        case 10:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_11", "singleplayer_overlays", "tp_010", "", a_2, 245, 0);
            break;
        case 11:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_12", "singleplayer_overlays", "tp_011", "", a_2, 280, 0);
            break;
        case 12:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_13", "singleplayer_overlays", "tp_012", "", a_2, 65, 0);
            break;
        case 13:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_14", "singleplayer_overlays", "tp_013", "", a_2, 150, 6);
            break;
        case 14:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_15", "singleplayer_overlays", "tp_014", "", a_2, 200, 0);
            break;
        case 15:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_16", "singleplayer_overlays", "tp_015", "", a_2, 145, 0);
            break;
        case 16:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_17", "singleplayer_overlays", "tp_016", "", a_2, 290, 0);
            break;
        case 17:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_18", "singleplayer_overlays", "tp_017", "", a_2, 350, 3);
            break;
        case 18:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_19", "singleplayer_overlays", "tp_018", "", a_2, 70, 0);
            break;
        case 19:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_20", "singleplayer_overlays", "tp_019", "", a_2, 180, 6);
            break;
        case 20:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_21", "singleplayer_overlays", "tp_020", "", a_2, 230, 0);
            break;
        case 21:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_22", "singleplayer_overlays", "tp_021", "", a_2, 200, 0);
            break;
        case 22:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_24", "singleplayer_overlays", "tp_023", "", a_2, 240, 0);
            break;
        case 23:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_25", "singleplayer_overlays", "tp_024", "", a_2, 195, 0);
            break;
        case 24:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_26", "singleplayer_overlays", "tp_025", "", a_2, 225, 2);
            break;
        case 25:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_28", "singleplayer_overlays", "tp_027", "", a_2, 175, 0);
            break;
        case 26:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_29", "singleplayer_overlays", "tp_028", "", a_2, 65, 0);
            break;
        case 27:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_30", "singleplayer_overlays", "tp_029", "", a_2, 50, 0);
            break;
        case 28:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_31", "singleplayer_overlays", "tp_030", "", a_2, 70, 0);
            break;
        case 29:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_34", "singleplayer_overlays", "tp_033", "", a_2, 70, 0);
            break;
        case 30:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_23", "singleplayer_overlays", "tp_022", "", a_2, 500, 1);
            break;
        case 31:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_27", "singleplayer_overlays", "tp_026", "", a_2, 300, 1);
            break;
        case 32:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_32", "singleplayer_overlays", "tp_031", "", a_2, 190, 1);
            break;
        case 33:
            sub_3454c(a_0, a_1, a_3, "TAT_TRV_33", "singleplayer_overlays", "tp_032", "", a_2, 129, 1);
            break;
        default:
            sub_344ba(a_0, a_2, a_1, 34);
            break;
        }
        break;
    case 3:
    case 4:
        switch (a_1) {
        case 0:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_008", "multiplayer_overlays", "000", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(20000) * g_40001._fB54), 0);
            break;
        case 1:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_009", "multiplayer_overlays", "001", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1400) * g_40001._fB55), 2);
            break;
        case 2:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_010", "multiplayer_overlays", "002", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(9750) * g_40001._fB56), 3);
            break;
        case 3:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_011", "multiplayer_overlays", "003", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2150) * g_40001._fB57), 0);
            break;
        case 4:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_012", "multiplayer_overlays", "004", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB58), 0);
            break;
        case 54:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_013", "multiplayer_overlays", "005", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(12400) * g_40001._fB59), 1);
            break;
        case 5:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_014", "multiplayer_overlays", "006", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(3500) * g_40001._fB5A), 0);
            break;
        case 6:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_015", "multiplayer_overlays", "007", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(4950) * g_40001._fB5B), 2);
            break;
        case 55:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_016", "multiplayer_overlays", "008", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1350) * g_40001._fB5C), 1);
            break;
        case 7:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_017", "multiplayer_overlays", "009", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1450) * g_40001._fB5D), 0);
            break;
        case 8:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_018", "multiplayer_overlays", "010", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2700) * g_40001._fB5E), 7);
            break;
        case 9:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_019", "multiplayer_overlays", "011", "rank", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1200) * g_40001._fB5F), 0);
            break;
        case 10:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_020", "multiplayer_overlays", "012", "rank", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1500) * g_40001._fB60), 0);
            break;
        case 11:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_021", "multiplayer_overlays", "013", "rank", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2650) * g_40001._fB61), 0);
            break;
        case 56:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_022", "multiplayer_overlays", "014", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1900) * g_40001._fB62), 1);
            break;
        case 12:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_023", "multiplayer_overlays", "015", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(4950) * g_40001._fB63), 2);
            break;
        case 57:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_024", "multiplayer_overlays", "016", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2400) * g_40001._fB64), 1);
            break;
        case 58:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_025", "multiplayer_overlays", "017", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5100) * g_40001._fB65), 1);
            break;
        case 59:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_026", "multiplayer_overlays", "018", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7400) * g_40001._fB66), 1);
            break;
        case 60:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_027", "multiplayer_overlays", "019", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB67), 1);
            break;
        case 17:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_201", "multiplayer_overlays", "005", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2400) * g_40001._fB6C), 2);
            break;
        case 18:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_202", "multiplayer_overlays", "006", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5100) * g_40001._fB6D), 2);
            break;
        case 19:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_203", "multiplayer_overlays", "015", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(3600) * g_40001._fB6E), 2);
            break;
        case 20:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_204", "multiplayer_overlays", "000", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB6F), 3);
            break;
        case 21:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_205", "multiplayer_overlays", "001", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(12500) * g_40001._fB70), 3);
            break;
        case 22:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_206", "multiplayer_overlays", "003", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB71), 3);
            break;
        case 23:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_207", "multiplayer_overlays", "014", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB72), 3);
            break;
        case 24:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_208", "multiplayer_overlays", "018", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7500) * g_40001._fB73), 3);
            break;
        case 25:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_209", "multiplayer_overlays", "002", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(3750) * g_40001._fB74), 2);
            break;
        case 26:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_210", "multiplayer_overlays", "007", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(3750) * g_40001._fB75), 3);
            break;
        case 27:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_211", "multiplayer_overlays", "008", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(4800) * g_40001._fB76), 3);
            break;
        case 28:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_212", "multiplayer_overlays", "017", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(3500) * g_40001._fB77), 3);
            break;
        case 61:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_213", "multiplayer_overlays", "009", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(12350) * g_40001._fB78), 1);
            break;
        case 62:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_214", "multiplayer_overlays", "011", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1900) * g_40001._fB79), 1);
            break;
        case 63:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_215", "multiplayer_overlays", "013", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(4500) * g_40001._fB7A), 1);
            break;
        case 64:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_216", "multiplayer_overlays", "016", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(12250) * g_40001._fB7B), 1);
            break;
        case 65:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_217", "multiplayer_overlays", "019", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(12300) * g_40001._fB7C), 1);
            break;
        case 29:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_218", "multiplayer_overlays", "010", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2500) * g_40001._fB7D), 0);
            break;
        case 30:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_219", "multiplayer_overlays", "004", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB7E), 0);
            break;
        case 31:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_220", "multiplayer_overlays", "012", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB7F), 0);
            break;
        case 66:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_221", "multiplayer_overlays", "020", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7500) * g_40001._fB80), 1);
            break;
        case 32:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_222", "multiplayer_overlays", "021", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB81), 2);
            break;
        case 33:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_223", "multiplayer_overlays", "022", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7300) * g_40001._fB82), 3);
            break;
        case 34:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_224", "multiplayer_overlays", "023", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7250) * g_40001._fB83), 2);
            break;
        case 35:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_225", "multiplayer_overlays", "024", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(11900) * g_40001._fB84), 0);
            break;
        case 36:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_226", "multiplayer_overlays", "025", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2750) * g_40001._fB85), 0);
            break;
        case 37:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_227", "multiplayer_overlays", "026", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1750) * g_40001._fB86), 0);
            break;
        case 38:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_228", "multiplayer_overlays", "027", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7300) * g_40001._fB87), 3);
            break;
        case 39:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_229", "multiplayer_overlays", "028", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(3250) * g_40001._fB88), 2);
            break;
        case 40:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_230", "multiplayer_overlays", "029", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1000) * g_40001._fB89), 0);
            break;
        case 67:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_231", "multiplayer_overlays", "030", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB8A), 1);
            break;
        case 41:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_232", "multiplayer_overlays", "031", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7500) * g_40001._fB8B), 2);
            break;
        case 68:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_233", "multiplayer_overlays", "032", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5100) * g_40001._fB8C), 1);
            break;
        case 42:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_234", "multiplayer_overlays", "033", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5050) * g_40001._fB8D), 0);
            break;
        case 43:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_235", "multiplayer_overlays", "034", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2450) * g_40001._fB8E), 2);
            break;
        case 44:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_236", "multiplayer_overlays", "035", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(4950) * g_40001._fB8F), 0);
            break;
        case 45:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_237", "multiplayer_overlays", "036", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5100) * g_40001._fB90), 0);
            break;
        case 46:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_238", "multiplayer_overlays", "037", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(12250) * g_40001._fB91), 0);
            break;
        case 47:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_239", "multiplayer_overlays", "038", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(1150) * g_40001._fB92), 3);
            break;
        case 48:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_240", "multiplayer_overlays", "039", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7500) * g_40001._fB93), 3);
            break;
        case 49:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_241", "multiplayer_overlays", "040", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7600) * g_40001._fB94), 3);
            break;
        case 50:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_242", "multiplayer_overlays", "041", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2600) * g_40001._fB95), 2);
            break;
        case 51:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_243", "multiplayer_overlays", "042", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2500) * g_40001._fB96), 3);
            break;
        case 52:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_244", "multiplayer_overlays", "043", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7450) * g_40001._fB97), 3);
            break;
        case 53:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_245", "multiplayer_overlays", "044", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(7500) * g_40001._fB98), 0);
            break;
        case 69:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_246", "multiplayer_overlays", "045", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB99), 1);
            break;
        case 70:
            sub_3454c(a_0, a_1, a_3, "TAT_FM_247", "multiplayer_overlays", "047", "", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(2500) * g_40001._fB9A), 2);
            break;
        }
        if (v_7 == ${mp_m_freemode_01}) {
            switch (a_1) {
            case 73:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_001", "torsoDecal", a_2, 100, 0);
                break;
            case 74:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_002", "torsoDecal", a_2, 100, 0);
                break;
            case 75:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_003", "torsoDecal", a_2, 100, 0);
                break;
            case 76:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_004", "torsoDecal", a_2, 100, 0);
                break;
            case 77:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_005", "torsoDecal", a_2, 100, 0);
                break;
            case 78:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_006", "torsoDecal", a_2, 100, 0);
                break;
            case 79:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_009", "torsoDecal", a_2, 100, 0);
                break;
            case 80:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_013", "torsoDecal", a_2, 100, 0);
                break;
            case 81:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_014", "torsoDecal", a_2, 100, 0);
                break;
            case 82:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_015", "torsoDecal", a_2, 100, 0);
                break;
            case 83:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_016", "torsoDecal", a_2, 100, 0);
                break;
            case 84:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_019", "torsoDecal", a_2, 100, 0);
                break;
            case 85:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_020", "torsoDecal", a_2, 100, 0);
                break;
            case 86:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_036", "torsoDecal", a_2, 100, 0);
                break;
            case 90:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_017", "torsoDecal", a_2, 100, 0);
                break;
            case 91:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_018", "torsoDecal", a_2, 100, 0);
                break;
            case 124:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_046", "torsoDecal", a_2, 100, 0);
                break;
            case 125:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_045", "torsoDecal", a_2, 100, 0);
                break;
            case 87:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "FM_Tshirt_Award_000", "torsoDecal", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(100) * g_40001._fB9B), 0);
                break;
            case 88:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "FM_Tshirt_Award_001", "torsoDecal", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(100) * g_40001._fB9C), 0);
                break;
            case 89:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "FM_Tshirt_Award_002", "torsoDecal", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(100) * g_40001._fB9D), 0);
                break;
            case 93:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 94:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_002", "hairOverlay", a_2, 100, 0);
                break;
            case 95:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_003", "hairOverlay", a_2, 100, 0);
                break;
            case 96:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_004", "hairOverlay", a_2, 100, 0);
                break;
            case 97:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_005", "hairOverlay", a_2, 100, 0);
                break;
            case 98:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_006", "hairOverlay", a_2, 100, 0);
                break;
            case 99:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_007", "hairOverlay", a_2, 100, 0);
                break;
            case 100:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_008", "hairOverlay", a_2, 100, 0);
                break;
            case 101:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_009", "hairOverlay", a_2, 100, 0);
                break;
            case 102:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_010", "hairOverlay", a_2, 100, 0);
                break;
            case 103:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_011", "hairOverlay", a_2, 100, 0);
                break;
            case 104:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_012", "hairOverlay", a_2, 100, 0);
                break;
            case 105:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_013", "hairOverlay", a_2, 100, 0);
                break;
            case 106:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_014", "hairOverlay", a_2, 100, 0);
                break;
            case 107:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_M_Hair_015", "hairOverlay", a_2, 100, 0);
                break;
            case 108:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBea_M_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 109:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBea_M_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 110:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBus_M_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 111:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBus_M_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 112:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGHip_M_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 113:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGHip_M_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 114:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGInd_M_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 115:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 116:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 117:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 123:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "mpBeach_overlays", "FM_Hair_Fuzz", "hairOverlay", a_2, 100, 0);
                break;
            case 13:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_100", "multiplayer_overlays", "000_A", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB68), 0);
                break;
            case 14:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_101", "multiplayer_overlays", "000_B", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB69), 0);
                break;
            case 15:
                sub_3454c(a_0, a_1, a_3, "TAT_FMM_CLB", "multiplayer_overlays", "000_C", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB6A), 2);
                break;
            case 16:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_100", "multiplayer_overlays", "000_D", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB6B), 0);
                break;
            case 71:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_101", "multiplayer_overlays", "000_E", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB6B), 0);
                break;
            case 72:
                sub_3454c(a_0, a_1, a_3, "TAT_FMM_CLB", "multiplayer_overlays", "000_F", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB6B), 0);
                break;
            }
        } else if (v_7 == ${mp_f_freemode_01}) {
            switch (a_1) {
            case 73:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_027_f", "torsoDecal", a_2, 100, 0);
                break;
            case 74:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_028_f", "torsoDecal", a_2, 100, 0);
                break;
            case 75:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_034_f", "torsoDecal", a_2, 100, 0);
                break;
            case 76:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_036_f", "torsoDecal", a_2, 100, 0);
                break;
            case 77:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_048", "torsoDecal", a_2, 100, 0);
                break;
            case 78:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_052", "torsoDecal", a_2, 100, 0);
                break;
            case 79:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_053", "torsoDecal", a_2, 100, 0);
                break;
            case 80:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_054", "torsoDecal", a_2, 100, 0);
                break;
            case 81:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_055", "torsoDecal", a_2, 100, 0);
                break;
            case 82:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_056", "torsoDecal", a_2, 100, 0);
                break;
            case 83:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_058", "torsoDecal", a_2, 100, 0);
                break;
            case 84:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_067", "torsoDecal", a_2, 100, 0);
                break;
            case 85:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_068", "torsoDecal", a_2, 100, 0);
                break;
            case 92:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "mp_fm_branding_051", "torsoDecal", a_2, 100, 0);
                break;
            case 87:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "FM_Tshirt_Award_F_000", "torsoDecal", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(100) * g_40001._fB9B), 0);
                break;
            case 88:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "FM_Tshirt_Award_F_001", "torsoDecal", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(100) * g_40001._fB9C), 0);
                break;
            case 89:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "FM_Tshirt_Award_F_002", "torsoDecal", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(100) * g_40001._fB9D), 0);
                break;
            case 93:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 94:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_002", "hairOverlay", a_2, 100, 0);
                break;
            case 95:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_003", "hairOverlay", a_2, 100, 0);
                break;
            case 96:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_004", "hairOverlay", a_2, 100, 0);
                break;
            case 97:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_005", "hairOverlay", a_2, 100, 0);
                break;
            case 98:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_006", "hairOverlay", a_2, 100, 0);
                break;
            case 99:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_007", "hairOverlay", a_2, 100, 0);
                break;
            case 100:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_008", "hairOverlay", a_2, 100, 0);
                break;
            case 101:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_009", "hairOverlay", a_2, 100, 0);
                break;
            case 102:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_010", "hairOverlay", a_2, 100, 0);
                break;
            case 103:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_011", "hairOverlay", a_2, 100, 0);
                break;
            case 104:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_012", "hairOverlay", a_2, 100, 0);
                break;
            case 105:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_013", "hairOverlay", a_2, 100, 0);
                break;
            case 106:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_014", "hairOverlay", a_2, 100, 0);
                break;
            case 107:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NG_F_Hair_015", "hairOverlay", a_2, 100, 0);
                break;
            case 108:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBea_F_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 109:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBea_F_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 110:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBus_F_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 111:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGBus_F_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 112:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGHip_F_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 113:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGHip_F_Hair_001", "hairOverlay", a_2, 100, 0);
                break;
            case 114:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "NGInd_F_Hair_000", "hairOverlay", a_2, 100, 0);
                break;
            case 115:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 116:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 117:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 118:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 119:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 120:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 121:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 122:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "multiplayer_overlays", "not_in_use", "hairOverlay", a_2, 100, 0);
                break;
            case 123:
                sub_3454c(a_0, a_1, a_3, "NO_LABEL", "mpBeach_overlays", "FM_Hair_Fuzz", "hairOverlay", a_2, 100, 0);
                break;
            case 13:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_100", "multiplayer_overlays", "000_A", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB68), 0);
                break;
            case 14:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_100", "multiplayer_overlays", "000_B", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(5000) * g_40001._fB69), 0);
                break;
            case 15:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_101", "multiplayer_overlays", "000_C", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB6A), 2);
                break;
            case 16:
                sub_3454c(a_0, a_1, a_3, "TAT_FM_101", "multiplayer_overlays", "000_D", "crewLogo", a_2, SYSTEM::ROUND(__678_$BBDA792448DB5A89(10000) * g_40001._fB6B), 0);
                break;
            }
        }
        break;
    }
    if (((a_2 == 3) || (a_2 == 4)) && (a_1 >= 129)) {
        sub_344ba(a_0, a_2, a_1, 129);
    }
    if (a_4 == 22) {
        a_0._f7 *= 2;
    }
    return a_0._fB != -1;
}

void sub_344ba(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = a_2 - a_3;
    v_7 = DLC1::_278F76C3B0A8F109(a_1);
    if ((v_7 > 0) && (v_6 < v_7)) {
        if (DLC1::_FF56381874F82086(a_1, v_6, &v_8)) {
            if (!DLC1::_IS_OUTFIT_EMPTY(v_8)) {
                a_0._fB = a_2;
                a_0/*"16"*/ = v_8._f7;
                a_0._f5 = v_8._f3;
                a_0._f4 = v_8._f2;
                a_0._f8 = v_8._f6;
                a_0._f6 = a_1;
                a_0._f7 = v_8._f4;
                a_0._f9 = a_2 / 32;
                a_0._fA = a_2 % 32;
                a_0._fC = v_8._f5;
            }
        }
    }
}

void sub_3454c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    a_0._fB = a_1;
    a_0/*"16"*/ = a_3;
    a_0._f4 = GAMEPLAY::GET_HASH_KEY(a_4);
    a_0._f5 = GAMEPLAY::GET_HASH_KEY(a_5);
    a_0._f8 = GAMEPLAY::GET_HASH_KEY(a_6);
    a_0._f6 = a_7;
    a_0._f7 = a_8;
    a_0._f9 = a_1 / 32;
    a_0._fA = a_1 % 32;
    a_0._fC = a_9;
    if (ENTITY::DOES_ENTITY_EXIST(a_2) && (!PED::IS_PED_INJURED(a_2))) {
        if (((a_0._f6 == 0) || (a_0._f6 == 1)) || (a_0._f6 == 2)) {
        } else if ((a_0._f6 == 3) || (a_0._f6 == 4)) {
            v_C/*"32"*/ = "";
            if ((((((a_0._fB == 13) || (a_0._fB == 14)) || (a_0._fB == 15)) || (a_0._fB == 16)) || (a_0._fB == 71)) || (a_0._fB == 72)) {
                v_C/*32*/ += "FM_";
                v_C/*32*/ += "CREW_";
                if (ENTITY::GET_ENTITY_MODEL(a_2) == ${mp_m_freemode_01}) {
                    v_C/*32*/ += "M_";
                } else { 
                    v_C/*32*/ += "F_";
                }
                v_C/*32*/ += a_5;
            } else if (GAMEPLAY::ARE_STRINGS_EQUAL(a_6, "torsoDecal") || GAMEPLAY::ARE_STRINGS_EQUAL(a_6, "hairOverlay")) {
                v_C/*"32"*/ = a_5;
            } else { 
                if ((((((((((((((((((((a_0._fB == 0) || (a_0._fB == 1)) || (a_0._fB == 2)) || (a_0._fB == 4)) || (a_0._fB == 3)) || (a_0._fB == 54)) || (a_0._fB == 5)) || (a_0._fB == 6)) || (a_0._fB == 55)) || (a_0._fB == 7)) || (a_0._fB == 8)) || (a_0._fB == 9)) || (a_0._fB == 10)) || (a_0._fB == 11)) || (a_0._fB == 56)) || (a_0._fB == 12)) || (a_0._fB == 57)) || (a_0._fB == 58)) || (a_0._fB == 59)) || (a_0._fB == 60)) {
                    v_C/*32*/ += "FM_Tat_Award_";
                } else { 
                    v_C/*32*/ += "FM_Tat_";
                }
                if ((ENTITY::GET_ENTITY_MODEL(a_2) == ${mp_m_freemode_01}) || (a_0._fB == 20)) {
                    v_C/*32*/ += "M_";
                } else { 
                    v_C/*32*/ += "F_";
                }
                v_C/*32*/ += a_5;
            }
            a_0._f5 = GAMEPLAY::GET_HASH_KEY(&v_C);
            if (PED::_GET_TATTOO_ZONE(a_0._f4, a_0._f5) == 7) {
                a_0._fB = -1;
            }
        }
    }
}

auto sub_34801(auto a_0, auto a_1) {
    if (a_0 == -1) {
        return 0;
    }
    v_4 = sub_34843(a_0, a_1);
    v_5 = sub_1008b(a_0);
    if ((v_5 < 0) || (v_5 >= 32)) {
        return 0;
    }
    return GAMEPLAY::IS_BIT_SET(v_4, v_5);
}

auto sub_34843(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_3485c(a_0), a_1, 0);
    return v_4;
}

auto sub_3485c(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 1038;
            break;
        case 1:
            return 1039;
            break;
        case 2:
            return 1040;
            break;
        case 3:
            return 1041;
            break;
        case 4:
            return 1042;
            break;
        case 5:
            return 1043;
            break;
        case 6:
            return 1477;
            break;
        case 7:
            return 1478;
            break;
        case 8:
            return 1479;
            break;
        case 9:
            return 1480;
            break;
        case 10:
            return 1936;
            break;
        case 11:
            return 1937;
            break;
        case 12:
            return 1938;
            break;
        case 13:
            return 2396;
            break;
        case 14:
            return 2416;
            break;
        case 15:
            return 2419;
            break;
        case 16:
            return 2422;
            break;
        case 17:
            return 2585;
            break;
        case 18:
            return 2588;
            break;
        case 19:
            return 2591;
            break;
        }
    }
    return 3790;
}

auto sub_349d6(auto a_0) {
    if (!PED::IS_PED_INJURED(a_0)) {
        if (ENTITY::GET_ENTITY_MODEL(a_0) == ${mp_m_freemode_01}) {
            v_3 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 11);
            v_5 = sub_4b3f(1746, -1, 0);
            if (v_3 > 15) {
                v_6 = sub_350d8(a_0, 11, -1);
                if (v_6 >= 256) {
                    v_7 = sub_34b26(${mp_f_freemode_01}, v_6, 11, 4);
                    if ((DLC1::_341DE7ED1D2A1BFD(v_7, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_7, ${multi_decal}, 0)) || DLC1::_341DE7ED1D2A1BFD(v_7, 0x159b376c, 0)) {
                        if (v_5 == 0x28014457) {
                            return 1;
                        }
                    }
                }
            }
        } else if (ENTITY::GET_ENTITY_MODEL(a_0) == ${mp_f_freemode_01}) {
            v_3 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 11);
            v_4 = PED::GET_PED_TEXTURE_VARIATION(a_0, 11);
            v_5 = sub_4b3f(1746, -1, 0);
            if (v_3 == 3) {
                if (v_4 == 14) {
                    return 1;
                }
            } else if (v_3 > 15) {
                v_8 = sub_350d8(a_0, 11, -1);
                if (v_8 >= 256) {
                    v_9 = sub_34b26(${mp_f_freemode_01}, v_8, 11, 4);
                    if ((DLC1::_341DE7ED1D2A1BFD(v_9, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_9, ${multi_decal}, 0)) || DLC1::_341DE7ED1D2A1BFD(v_9, 0x159b376c, 0)) {
                        if (v_5 == 0x71f11d42) {
                            return 1;
                        }
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_34b26(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == 12) {
    } else if (a_2 == 13) {
    } else if (a_2 == 14) {
        DLC1::INIT_SHOP_PED_PROP(&v_6);
        v_18 = 0;
        v_19 = a_1 - sub_35077(a_0);
        if (v_19 < 0) {
            return -1;
        }
        v_1A = DLC1::_GET_NUM_PROPS_FROM_OUTFIT(a_3, 6, -1, 1, -1, -1);
        for (v_17 = 0; v_17 < v_1A; v_17 += 1) {
            DLC1::GET_SHOP_PED_QUERY_PROP(v_17, &v_6);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_6)) {
                if (v_18 == v_19) {
                    return v_6._f1;
                }
                v_18 += 1;
            }
        }
    } else { 
        DLC1::INIT_SHOP_PED_COMPONENT(&v_1B);
        v_2D = 0;
        v_2E = a_1 - sub_34c20(a_0, sub_34fc7(a_2));
        if (v_2E < 0) {
            return -1;
        }
        v_2F = DLC1::_GET_NUM_PROPS_FROM_OUTFIT(a_3, 6, -1, 0, -1, sub_34fc7(a_2));
        for (v_2C = 0; v_2C < v_2F; v_2C += 1) {
            DLC1::GET_SHOP_PED_QUERY_COMPONENT(v_2C, &v_1B);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_1B)) {
                if (v_2D == v_2E) {
                    return v_1B._f1;
                }
                v_2D += 1;
            }
        }
    }
    return -1;
}

auto sub_34c20(auto a_0, auto a_1) {
    switch (a_0) {
    case ${player_zero}:
        switch (a_1) {
        case 0:
            return 7;
            break;
        case 1:
            return 5;
            break;
        case 2:
            return 6;
            break;
        case 3:
            return 181;
            break;
        case 4:
            return 113;
            break;
        case 5:
            return 14;
            break;
        case 6:
            return 99;
            break;
        case 7:
            return 1;
            break;
        case 8:
            return 24;
            break;
        case 9:
            return 20;
            break;
        case 10:
            return 48;
            break;
        case 11:
            return 45;
            break;
        }
        break;
    case ${player_one}:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 5;
            break;
        case 2:
            return 21;
            break;
        case 3:
            return 318;
            break;
        case 4:
            return 117;
            break;
        case 5:
            return 7;
            break;
        case 6:
            return 134;
            break;
        case 7:
            return 1;
            break;
        case 8:
            return 77;
            break;
        case 9:
            return 12;
            break;
        case 10:
            return 53;
            break;
        case 11:
            return 63;
            break;
        }
        break;
    case ${player_two}:
        switch (a_1) {
        case 0:
            return 7;
            break;
        case 1:
            return 6;
            break;
        case 2:
            return 9;
            break;
        case 3:
            return 242;
            break;
        case 4:
            return 104;
            break;
        case 5:
            return 7;
            break;
        case 6:
            return 84;
            break;
        case 7:
            return 1;
            break;
        case 8:
            return 18;
            break;
        case 9:
            return 17;
            break;
        case 10:
            return 33;
            break;
        case 11:
            return 1;
            break;
        }
        break;
    }
    switch (a_0) {
    case ${mp_m_freemode_01}:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 26;
            break;
        case 2:
            return 91;
            break;
        case 3:
            return 16;
            break;
        case 4:
            return 256;
            break;
        case 5:
            return 9;
            break;
        case 6:
            return 256;
            break;
        case 7:
            return 92;
            break;
        case 8:
            return 241;
            break;
        case 9:
            return 46;
            break;
        case 10:
            return 7;
            break;
        case 11:
            return 237;
            break;
        }
        break;
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 0:
            return 0;
            break;
        case 1:
            return 26;
            break;
        case 2:
            return 92;
            break;
        case 3:
            return 16;
            break;
        case 4:
            return 256;
            break;
        case 5:
            return 9;
            break;
        case 6:
            return 256;
            break;
        case 7:
            return 55;
            break;
        case 8:
            return 136;
            break;
        case 9:
            return 36;
            break;
        case 10:
            return 6;
            break;
        case 11:
            return 256;
            break;
        }
        break;
    }
    return -99;
}

auto sub_34fc7(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 2:
        return 2;
        break;
    case 3:
        return 3;
        break;
    case 4:
        return 4;
        break;
    case 6:
        return 6;
        break;
    case 5:
        return 5;
        break;
    case 8:
        return 8;
        break;
    case 9:
        return 9;
        break;
    case 10:
        return 10;
        break;
    case 1:
        return 1;
        break;
    case 7:
        return 7;
        break;
    case 11:
        return 11;
        break;
    }
    return 0;
}

auto sub_35077(auto a_0) {
    switch (a_0) {
    case ${player_zero}:
        return 113;
        break;
    case ${player_one}:
        return 175;
        break;
    case ${player_two}:
        return 155;
        break;
    }
    switch (a_0) {
    case ${mp_m_freemode_01}:
        return 327;
        break;
    case ${mp_f_freemode_01}:
        return 327;
        break;
    }
    return -99;
}

auto sub_350d8(auto a_0, auto a_1, auto a_2) {
    if (!PED::IS_PED_INJURED(a_0)) {
        if (a_1 == 12) {
            for (v_5 = 0; v_5 <= 53; v_5 += 1) {
                if (sub_3555f(a_0, a_1, v_5)) {
                    return v_5;
                }
            }
        } else if (a_1 == 13) {
            for (v_6 = 0; v_6 <= 19; v_6 += 1) {
                if (sub_3555f(a_0, a_1, v_6)) {
                    return v_6;
                }
            }
            return 31;
        } else if (a_1 == 14) {
            if (a_2 == -1) {
            } else { 
                return sub_35179(a_0, a_2);
            }
        } else { 
            return sub_5b55a(a_0, a_1);
        }
    }
    return -99;
}

auto sub_35179(auto a_0, auto a_1) {
    if (PED::IS_PED_INJURED(a_0)) {
        return -99;
    }
    v_4 = PED::GET_PED_PROP_INDEX(a_0, a_1);
    if (v_4 == -1) {
        return sub_354d9(a_1);
    }
    v_5 = PED::GET_PED_PROP_TEXTURE_INDEX(a_0, a_1);
    return sub_351bf(a_0, v_4, v_5, a_1);
}

auto sub_351bf(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1 == -1) {
        return sub_354d9(a_3);
    }
    v_6 = ENTITY::GET_ENTITY_MODEL(a_0);
    v_7 = DLC1::GET_HASH_NAME_FOR_PROP(a_0, a_3, a_1, a_2);
    if ((v_7 != -1) && (v_7 != 0)) {
        if (v_6 == ${mp_m_freemode_01}) {
            return sub_353f9(ENTITY::GET_ENTITY_MODEL(a_0), v_7, 14, 3);
        } else if (v_6 == ${mp_f_freemode_01}) {
            return sub_353f9(ENTITY::GET_ENTITY_MODEL(a_0), v_7, 14, 4);
        }
    }
    v_8 = PED::GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(a_0, a_3);
    for (v_A = 0; v_A <= (v_8 - 1); v_A += 1) {
        v_C = PED::GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(a_0, a_3, v_A);
        if (v_A != a_1) {
            v_9 += v_C;
        } else { 
            for (v_B = 0; v_B <= (v_C - 1); v_B += 1) {
                if ((v_A == a_1) && (v_B == a_2)) {
                    v_9 += sub_352bb(a_0, a_3);
                    return v_9;
                } else { 
                    v_9 += 1;
                }
            }
        }
    }
    return sub_354d9(a_3);
}

auto sub_352bb(auto a_0, auto a_1) {
    v_4 = ENTITY::GET_ENTITY_MODEL(a_0);
    switch (v_4) {
    case ${player_zero}:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 58;
            break;
        case 2:
            return 112;
            break;
        }
        break;
    case ${player_one}:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 82;
            break;
        case 2:
            return 158;
            break;
        }
        break;
    case ${player_two}:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 88;
            break;
        case 2:
            return 154;
            break;
        }
        break;
    case ${mp_m_freemode_01}:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 155;
            break;
        case 6:
            return 319;
            break;
        }
        break;
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 0:
            return 10;
            break;
        case 1:
            return 155;
            break;
        case 6:
            return 319;
            break;
        }
        break;
    }
    return -99;
}

auto sub_353f9(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == 12) {
    } else if (a_2 == 13) {
    } else if (a_2 == 14) {
        DLC1::INIT_SHOP_PED_PROP(&v_6);
        v_18 = 0;
        v_19 = DLC1::_GET_NUM_PROPS_FROM_OUTFIT(a_3, 6, -1, 1, -1, -1);
        for (v_17 = 0; v_17 < v_19; v_17 += 1) {
            DLC1::GET_SHOP_PED_QUERY_PROP(v_17, &v_6);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_6)) {
                if (a_1 == v_6._f1) {
                    return sub_35077(a_0) + v_18;
                }
                v_18 += 1;
            }
        }
    } else { 
        DLC1::INIT_SHOP_PED_COMPONENT(&v_1A);
        v_2C = 0;
        v_2D = DLC1::_GET_NUM_PROPS_FROM_OUTFIT(a_3, 6, -1, 0, -1, sub_34fc7(a_2));
        for (v_2B = 0; v_2B < v_2D; v_2B += 1) {
            DLC1::GET_SHOP_PED_QUERY_COMPONENT(v_2B, &v_1A);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_1A)) {
                if (a_1 == v_1A._f1) {
                    return sub_34c20(a_0, sub_34fc7(a_2)) + v_2C;
                }
                v_2C += 1;
            }
        }
    }
    return -99;
}

auto sub_354d9(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 1:
        return 1;
        break;
    case 2:
        return 2;
        break;
    case 3:
        return 3;
        break;
    case 4:
        return 4;
        break;
    case 5:
        return 5;
        break;
    case 6:
        return 6;
        break;
    case 7:
        return 7;
        break;
    case 8:
        return 8;
        break;
    }
    return 0;
}

auto sub_3555f(auto a_0, auto a_1, auto a_2) {
    if (PED::IS_PED_INJURED(a_0)) {
        return 0;
    }
    v_5 = ENTITY::GET_ENTITY_MODEL(a_0);
    g_10E3A[1/*14*/]/*{14}*/ = sub_395df(v_5, a_1, a_2);
    v_7 = g_280004;
    v_8 = g_280005;
    if (!GAMEPLAY::IS_BIT_SET(g_10E3A[1/*14*/]._f6, 0)) {
        return 0;
    }
    if (a_1 == 12) {
        v_D/*{16}*/ = sub_374c8(v_5, a_2);
        for (v_C = 0; v_C < 7; v_C += 1) {
            switch (v_C) {
            case 0:
                v_9 = 1;
                break;
            case 1:
                v_9 = 4;
                break;
            case 2:
                v_9 = 6;
                break;
            case 3:
                v_9 = 7;
                break;
            case 4:
                v_9 = 8;
                break;
            case 5:
                v_9 = 11;
                break;
            case 6:
                v_9 = 13;
                break;
            }
            if (v_D[v_9/*1*/] != -99) {
                if (!sub_3555f(a_0, v_9, v_D[v_9/*1*/])) {
                    g_280004 = v_7;
                    g_280005 = v_8;
                    return 0;
                    if (v_9 == 13) {
                        v_1D/*{10}*/ = sub_36a27(v_5, v_D[v_9/*1*/]);
                        for (v_A = 0; v_A <= 8; v_A += 1) {
                            if (!sub_3555f(a_0, 14, v_1D[v_A/*1*/])) {
                                for (v_B = 0; v_B <= 19; v_B += 1) {
                                    g_10E3A[2/*14*/]/*{14}*/ = sub_395df(v_5, 14, v_B);
                                    if (g_10E3A[2/*14*/]._fC == v_A) {
                                        if (sub_3555f(a_0, 14, v_B)) {
                                            if (!sub_35a6a(v_5, a_2, 14, v_B, &v_D, &g_10E3A[2/*14*/])) {
                                                g_280004 = v_7;
                                                g_280005 = v_8;
                                                return 0;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else { 
                        v_6 = sub_5b55a(a_0, v_9);
                        g_10E3A[2/*14*/]/*{14}*/ = sub_395df(v_5, v_9, v_6);
                        if (!sub_35a6a(v_5, a_2, v_9, v_6, &v_D, &g_10E3A[2/*14*/])) {
                            g_280004 = v_7;
                            g_280005 = v_8;
                            return 0;
                        }
                    }
                }
            }
        }
        if ((v_D[10/*1*/] != 0) && (v_D[10/*1*/] != ${0})) {
            if (sub_4b3f(1746, g_10E38, 0) != v_D[10/*1*/]) {
                g_280004 = v_7;
                g_280005 = v_8;
                return 0;
            }
        }
        g_280004 = v_7;
        g_280005 = v_8;
        return 1;
    } else if (a_1 == 13) {
        v_28/*{10}*/ = sub_36a27(v_5, a_2);
        for (v_27 = 0; v_27 <= 8; v_27 += 1) {
            if (!sub_3555f(a_0, 14, v_28[v_27/*1*/])) {
                return 0;
            }
        }
        return 1;
    } else if (a_1 == 14) {
        if ((PED::GET_PED_PROP_INDEX(a_0, g_10E3A[1/*14*/]._fC) == g_10E3A[1/*14*/]._f3) && ((PED::GET_PED_PROP_TEXTURE_INDEX(a_0, g_10E3A[1/*14*/]._fC) == g_10E3A[1/*14*/]._f4) || (g_10E3A[1/*14*/]._f3 == -1))) {
            return 1;
        }
    } else { 
        if ((g_10E3A[1/*14*/]._f3 == PED::GET_PED_DRAWABLE_VARIATION(a_0, sub_34fc7(a_1))) && (g_10E3A[1/*14*/]._f4 == PED::GET_PED_TEXTURE_VARIATION(a_0, sub_34fc7(a_1)))) {
            return 1;
        }
        if (a_1 == 4) {
            if (sub_35a21(v_5, 11, sub_5b55a(a_0, 11))) {
                if (sub_35979(v_5, 4, a_2, &v_32)) {
                    return sub_3555f(a_0, 4, v_32);
                }
            } else if (sub_358d0(v_5, 4, a_2, &v_32)) {
                return sub_3555f(a_0, 4, v_32);
            }
        }
    }
    return 0;
}

auto sub_358d0(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_0) {
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 4:
            if (a_2 >= 256) {
                v_6 = sub_34b26(a_0, a_2, a_1, 4);
                if (v_6 != -1) {
                    v_7 = DLC1::_C17AD0E5752BECDA(v_6);
                    for (v_8 = 0; v_8 < v_7; v_8 += 1) {
                        DLC1::GET_VARIANT_COMPONENT(v_6, v_8, &v_9, &v_A, &v_B);
                        if (v_B == 4) {
                            if ((v_9 != 0) && (v_9 != ${0})) {
                                if (!DLC1::_341DE7ED1D2A1BFD(v_9, 0xbe63036f, 0)) {
                                    a_3 = sub_353f9(a_0, v_9, a_1, 4);
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
            break;
        }
        break;
    }
    return 0;
}

auto sub_35979(auto a_0, auto a_1, auto a_2, auto a_3) {
    switch (a_0) {
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 4:
            if (a_2 >= 256) {
                v_6 = sub_34b26(a_0, a_2, a_1, 4);
                if (v_6 != -1) {
                    v_7 = DLC1::_C17AD0E5752BECDA(v_6);
                    for (v_8 = 0; v_8 < v_7; v_8 += 1) {
                        DLC1::GET_VARIANT_COMPONENT(v_6, v_8, &v_9, &v_A, &v_B);
                        if (v_B == 4) {
                            if ((v_9 != 0) && (v_9 != ${0})) {
                                if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xbe63036f, 0)) {
                                    a_3 = sub_353f9(a_0, v_9, a_1, 4);
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
            break;
        }
        break;
    }
    return 0;
}

auto sub_35a21(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 11:
            if (a_2 >= 256) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 11, 4), 0xe067789f, 0);
            }
            break;
        }
        break;
    }
    return 0;
}

auto sub_35a6a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_4[a_2/*1*/] == a_3) {
        return 1;
    }
    if (((a_4[a_2/*1*/] == -99) && (a_2 != 14)) && (a_2 != 13)) {
        return 1;
    }
    if ((a_2 == 13) || ((a_2 == 14) && (a_4[13/*1*/] == 31))) {
        if (((((((((a_3 == 0) || (a_3 == 1)) || (a_3 == 2)) || (a_3 == 3)) || (a_3 == 4)) || (a_3 == 5)) || (a_3 == 6)) || (a_3 == 7)) || (a_3 == 8)) {
            return 1;
        }
    }
    if ((a_3 == -99) || (a_5._f1 == -1)) {
        return 1;
    }
    if (a_2 == 14) {
        v_8/*{10}*/ = sub_36a27(a_0, a_4[13/*1*/]);
        for (v_12 = 0; v_12 <= 8; v_12 += 1) {
            if (v_8[v_12/*1*/] == a_3) {
                return 1;
            }
        }
    }
    if (sub_3698e(a_0, a_2, a_3)) {
        return 1;
    }
    if (a_0 == ${player_zero}) {
        if (sub_366af(a_0, a_2, a_3)) {
            if (((((((a_1 == 1) || (a_1 == 2)) || (a_1 == 10)) || (a_1 == 11)) || (a_1 == 12)) || (a_1 == 18)) || (a_1 == 50)) {
                return 0;
            }
            return 1;
        } else if (sub_362ba(a_0, a_2, a_3)) {
            if ((((((((((a_1 == 1) || (a_1 == 2)) || (a_1 == 4)) || (a_1 == 5)) || (a_1 == 10)) || (a_1 == 11)) || (a_1 == 12)) || (a_1 == 14)) || (a_1 == 18)) || (a_1 == 50)) {
                return 0;
            }
            if (a_2 == 8) {
                if (a_4[8/*1*/] != 0) {
                    return 0;
                }
            } else if (a_2 == 9) {
                if (a_4[9/*1*/] != 0) {
                    return 0;
                }
            }
            return 1;
        } else if (sub_36065(a_0, a_2, a_3)) {
            if ((((((((((a_1 == 1) || (a_1 == 2)) || (a_1 == 4)) || (a_1 == 5)) || (a_1 == 10)) || (a_1 == 11)) || (a_1 == 12)) || (a_1 == 14)) || (a_1 == 18)) || (a_1 == 50)) {
                return 0;
            }
            return 1;
        }
    } else if (a_0 == ${player_one}) {
        if (sub_366af(a_0, a_2, a_3)) {
            if (((a_1 == 3) || (a_1 == 5)) || (a_1 == 7)) {
                return 0;
            }
            return 1;
        } else if (sub_362ba(a_0, a_2, a_3)) {
            if (((((a_1 == 3) || (a_1 == 5)) || (a_1 == 7)) || (a_1 == 8)) || (a_1 == 21)) {
                if (a_2 == 8) {
                    if (a_3 == 9) {
                        if ((a_1 == 8) || (a_1 == 21)) {
                            return 1;
                        }
                    } else { 
                        return 0;
                    }
                } else { 
                    return 0;
                }
            }
            if (a_2 == 8) {
                if (a_4[8/*1*/] != 26) {
                    return 0;
                }
            } else if (a_2 == 9) {
                if (a_4[9/*1*/] != 0) {
                    return 0;
                }
                if ((((a_1 == 43) || (a_1 == 44)) || (a_1 == 45)) || (a_1 == 46)) {
                    if ((a_3 >= 5) && (a_3 <= 10)) {
                        return 0;
                    }
                }
            } else if (a_2 == 14) {
                if ((((a_1 == 43) || (a_1 == 44)) || (a_1 == 45)) || (a_1 == 46)) {
                    if ((a_3 >= 26) && (a_3 <= 39)) {
                        return 0;
                    }
                }
            }
            return 1;
        } else if (sub_36065(a_0, a_2, a_3)) {
            if ((((((a_1 == 3) || (a_1 == 3)) || (a_1 == 5)) || (a_1 == 7)) || (a_1 == 8)) || (a_1 == 21)) {
                return 0;
            }
            return 1;
        } else if (a_2 == 14) {
            if ((a_3 >= 159) && (a_3 <= 174)) {
                return 1;
            }
        }
    } else if (a_0 == ${player_two}) {
        if (a_1 == 2) {
            if ((a_2 == 14) && (a_3 == 0)) {
                return 1;
            }
        }
        if (sub_366af(a_0, a_2, a_3)) {
            if ((((((a_1 == 1) || (a_1 == 2)) || (a_1 == 6)) || (a_1 == 8)) || (a_1 == 45)) || (a_1 == 12)) {
                return 0;
            }
            return 1;
        } else if (sub_362ba(a_0, a_2, a_3)) {
            if ((((((((a_1 == 1) || (a_1 == 2)) || (a_1 == 3)) || (a_1 == 6)) || (a_1 == 8)) || (a_1 == 11)) || (a_1 == 45)) || (a_1 == 12)) {
                return 0;
            }
            if (a_2 == 8) {
                if (a_4[8/*1*/] != 15) {
                    return 0;
                }
            } else if (a_2 == 9) {
                if (a_4[9/*1*/] != 0) {
                    return 0;
                }
            }
            return 1;
        } else if (sub_36065(a_0, a_2, a_3)) {
            if (((((((a_1 == 1) || (a_1 == 2)) || (a_1 == 3)) || (a_1 == 6)) || (a_1 == 8)) || (a_1 == 11)) || (a_1 == 12)) {
                return 0;
            }
            return 1;
        }
    }
    return 0;
}

auto sub_36065(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case ${player_zero}:
        switch (a_1) {
        case 14:
            if (a_2 == 16) {
                return 1;
            }
            break;
        }
        break;
    case ${player_one}:
        switch (a_1) {
        case 14:
            if (((a_2 == 40) || ((a_2 >= 41) && (a_2 <= 56))) || ((a_2 >= 64) && (a_2 <= 79))) {
                return 1;
            }
            break;
        }
        break;
    case ${player_two}:
        switch (a_1) {
        case 14:
            if (((a_2 >= 17) && (a_2 <= 18)) || ((a_2 >= 71) && (a_2 <= 86))) {
                return 1;
            }
            break;
        }
        break;
    case ${mp_m_freemode_01}:
        switch (a_1) {
        case 14:
            if ((a_2 >= 18) && (a_2 <= 130)) {
                return 1;
            } else if ((a_2 >= 10) && (a_2 <= 17)) {
                return 1;
            } else if (a_2 >= 327) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 14, 3), ${hat}, 1) || DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 14, 3), 0x922ad66f, 1);
            }
            break;
        case 1:
            if (a_2 >= 26) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 1, 3), ${hat}, 0) || DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 1, 3), 0x922ad66f, 0);
            }
            break;
        }
        break;
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 14:
            if ((a_2 >= 18) && (a_2 <= 130)) {
                return 1;
            } else if ((a_2 >= 10) && (a_2 <= 17)) {
                return 1;
            } else if (a_2 >= 327) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 14, 4), ${hat}, 1) || DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 14, 4), 0x922ad66f, 1);
            }
            break;
        case 1:
            if (a_2 >= 26) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 1, 4), ${hat}, 0) || DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 1, 4), 0x922ad66f, 0);
            }
            break;
        }
        break;
    }
    return 0;
}

auto sub_362ba(auto a_0, auto a_1, auto a_2) {
    if (a_0 == ${player_zero}) {
        if (a_1 == 6) {
            if (a_2 == 10) {
                return 1;
            }
        } else if (a_1 == 8) {
            if (((a_2 == 9) || (a_2 == 7)) || (a_2 == 23)) {
                return 1;
            }
        } else if (a_1 == 9) {
            if ((a_2 >= 9) && (a_2 <= 14)) {
                return 1;
            }
        } else if (a_1 == 14) {
            if (((((((((((((((((a_2 == 12) || (a_2 == 59)) || (a_2 == 60)) || (a_2 == 31)) || (a_2 == 32)) || (a_2 == 33)) || (a_2 == 34)) || (a_2 == 35)) || (a_2 == 36)) || (a_2 == 37)) || (a_2 == 38)) || (a_2 == 39)) || (a_2 == 40)) || (a_2 == 41)) || ((a_2 >= 42) && (a_2 <= 44))) || (a_2 == 54)) || (a_2 == 55)) {
                return 1;
            }
        }
    } else if (a_0 == ${player_one}) {
        if (a_1 == 2) {
            if (a_2 == 20) {
                return 1;
            }
        } else if (a_1 == 8) {
            if (((a_2 == 3) || (a_2 == 5)) || (a_2 == 9)) {
                return 1;
            }
        } else if (a_1 == 9) {
            if ((a_2 >= 5) && (a_2 <= 10)) {
                return 1;
            }
        } else if (a_1 == 14) {
            if ((((((((((((((a_2 == 82) || (a_2 == 10)) || (a_2 == 26)) || (a_2 == 27)) || (a_2 == 28)) || (a_2 == 29)) || (a_2 == 30)) || (a_2 == 31)) || (a_2 == 32)) || (a_2 == 33)) || (a_2 == 34)) || (a_2 == 35)) || (a_2 == 36)) || ((a_2 >= 37) && (a_2 <= 39))) {
                return 1;
            }
        }
    } else if (a_0 == ${player_two}) {
        if (a_1 == 8) {
            if ((a_2 == 14) || (a_2 == 7)) {
                return 1;
            }
        } else if (a_1 == 9) {
            if ((((a_2 == 8) || ((a_2 >= 9) && (a_2 <= 14))) || (a_2 == 15)) || (a_2 == 16)) {
                return 1;
            }
        } else if (a_1 == 14) {
            if ((((((((((((((a_2 == 88) || (a_2 == 12)) || (a_2 == 47)) || (a_2 == 48)) || (a_2 == 49)) || (a_2 == 50)) || (a_2 == 51)) || (a_2 == 52)) || (a_2 == 53)) || (a_2 == 54)) || (a_2 == 55)) || (a_2 == 56)) || (a_2 == 57)) || ((a_2 >= 58) && (a_2 <= 60))) {
                return 1;
            }
        }
    } else if (a_0 == ${mp_m_freemode_01}) {
        if (a_1 == 1) {
            if (a_2 > 0) {
                if (a_2 >= 26) {
                    v_5 = sub_34b26(a_0, a_2, 1, 3);
                    if (DLC1::_341DE7ED1D2A1BFD(v_5, ${hat}, 0)) {
                        return 0;
                    }
                }
                return 1;
            }
        }
    } else if (a_0 == ${mp_f_freemode_01}) {
        if (a_1 == 1) {
            if (a_2 > 0) {
                if (a_2 >= 26) {
                    v_6 = sub_34b26(a_0, a_2, 1, 4);
                    if (DLC1::_341DE7ED1D2A1BFD(v_6, ${hat}, 0)) {
                        return 0;
                    }
                }
                return 1;
            }
        }
    }
    return 0;
}

auto sub_366af(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case ${player_zero}:
        if (a_1 == 14) {
            if (((((((((a_2 == 58) || (a_2 == 61)) || ((a_2 >= 62) && (a_2 <= 69))) || ((a_2 >= 70) && (a_2 <= 79))) || ((a_2 >= 80) && (a_2 <= 89))) || (a_2 == 90)) || ((a_2 >= 91) && (a_2 <= 102))) || ((a_2 >= 103) && (a_2 <= 110))) || (a_2 == 111)) {
                return 1;
            }
        }
        break;
    case ${player_one}:
        if (a_1 == 14) {
            if ((((((((((((a_2 >= 83) && (a_2 <= 92)) || (a_2 == 93)) || (a_2 == 94)) || ((a_2 >= 95) && (a_2 <= 101))) || ((a_2 >= 102) && (a_2 <= 111))) || ((a_2 >= 112) && (a_2 <= 121))) || ((a_2 >= 122) && (a_2 <= 131))) || ((a_2 >= 132) && (a_2 <= 139))) || ((a_2 >= 140) && (a_2 <= 149))) || ((a_2 >= 150) && (a_2 <= 156))) || (a_2 == 157)) {
                return 1;
            }
        }
        break;
    case ${player_two}:
        if (a_1 == 14) {
            if ((((((((((a_2 == 89) || ((a_2 >= 90) && (a_2 <= 99))) || ((a_2 >= 100) && (a_2 <= 109))) || (a_2 == 111)) || (a_2 == 112)) || ((a_2 >= 113) && (a_2 <= 122))) || ((a_2 >= 123) && (a_2 <= 132))) || ((a_2 >= 133) && (a_2 <= 142))) || ((a_2 >= 143) && (a_2 <= 152))) || (a_2 == 153)) {
                return 1;
            }
        }
        break;
    case ${mp_m_freemode_01}:
        if (a_1 == 14) {
            if ((a_2 >= 155) && (a_2 <= 318)) {
                return 1;
            } else if (a_2 >= 327) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 14, 3), ${glasses}, 1);
            }
        }
        break;
    case ${mp_f_freemode_01}:
        if (a_1 == 14) {
            if ((a_2 >= 155) && (a_2 <= 318)) {
                return 1;
            } else if (a_2 >= 327) {
                return DLC1::_341DE7ED1D2A1BFD(sub_34b26(a_0, a_2, 14, 4), ${glasses}, 1);
            }
        }
        break;
    }
    return 0;
}

auto sub_3698e(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case ${player_zero}:
        switch (a_1) {
        case 8:
            if (a_2 == 15) {
                return 1;
            }
            break;
        case 9:
            if (a_2 == 6) {
                return 1;
            }
            break;
        }
        break;
    case ${player_one}:
        switch (a_1) {
        case 8:
            if ((a_2 == 1) || (a_2 == 10)) {
                return 1;
            }
            break;
        }
        break;
    case ${player_two}:
        switch (a_1) {
        case 8:
            if (a_2 == 4) {
                return 1;
            }
            break;
        }
        break;
    }
    return 0;
}

auto<10> sub_36a27(auto a_0, auto a_1) {
    asm .vardef<F> 5, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":9}]}]"
    for (v_4 = 0; v_4 <= 8; v_4 += 1) {
        v_5[v_4/*1*/] = -99;
    }
    switch (a_0) {
    case ${player_zero}:
        switch (a_1) {
        case 31:
            sub_37480(&v_5, 0, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 0:
            sub_37480(&v_5, 10, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 1:
            sub_37480(&v_5, 19, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 2:
            sub_37480(&v_5, 14, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 3:
            sub_37480(&v_5, 18, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 4:
            sub_37480(&v_5, 0, 59, 112, 3, 4, 5, 6, 7, 8);
            break;
        case 5:
            sub_37480(&v_5, 0, 60, 112, 3, 4, 5, 6, 7, 8);
            break;
        case 6:
            sub_37480(&v_5, 15, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 7:
            sub_37480(&v_5, 0, 60, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 8:
            sub_37480(&v_5, 55, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 9:
            sub_37480(&v_5, 0, 1, 112, 3, 4, 5, 6, 7, 8);
            break;
        default:
            sub_37356(&v_5, a_0, a_1, 10);
            break;
        }
        break;
    case ${player_one}:
        switch (a_1) {
        case 31:
            sub_37480(&v_5, 0, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 0:
            sub_37480(&v_5, 10, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 1:
            sub_37480(&v_5, 0, 82, 158, 3, 4, 5, 6, 7, 8);
            break;
        case 2:
            sub_37480(&v_5, 0, 1, 158, 3, 4, 5, 6, 7, 8);
            break;
        case 3:
            sub_37480(&v_5, 15, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 4:
            sub_37480(&v_5, 41, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 5:
            sub_37480(&v_5, 40, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 6:
            sub_37480(&v_5, 41, 95, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 7:
            sub_37480(&v_5, 0, 95, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 8:
            sub_37480(&v_5, 69, 95, 2, 3, 4, 5, 6, 7, 8);
            break;
        default:
            sub_37356(&v_5, a_0, a_1, 9);
            break;
        }
        break;
    case ${player_two}:
        switch (a_1) {
        case 31:
            sub_37480(&v_5, 0, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 0:
            sub_37480(&v_5, 11, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 1:
            sub_37480(&v_5, 17, 90, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 2:
            sub_37480(&v_5, 15, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 3:
            sub_37480(&v_5, 0, 88, 154, 3, 4, 5, 6, 7, 8);
            break;
        case 4:
            sub_37480(&v_5, 0, 1, 154, 3, 4, 5, 6, 7, 8);
            break;
        case 5:
            sub_37480(&v_5, 16, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 6:
            sub_37480(&v_5, 36, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 7:
            sub_37480(&v_5, 0, 123, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 8:
            sub_37480(&v_5, 69, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        default:
            sub_37356(&v_5, a_0, a_1, 9);
            break;
        }
        break;
    case ${mp_m_freemode_01}:
        switch (a_1) {
        case 31:
            sub_37480(&v_5, 0, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 0:
            sub_37480(&v_5, 129, 167, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 1:
            sub_37480(&v_5, 90, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 2:
            sub_37480(&v_5, 23, 251, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 3:
            sub_37480(&v_5, 36, 262, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 4:
            sub_37480(&v_5, 88, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 5:
            sub_37480(&v_5, 125, 175, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 6:
            sub_37480(&v_5, 35, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 7:
            sub_37480(&v_5, 44, 208, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 8:
            sub_37480(&v_5, 52, 189, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 9:
            sub_37480(&v_5, 0, 261, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 10:
            sub_37480(&v_5, 0, 243, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 11:
            sub_37480(&v_5, 0, 243, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 12:
            sub_37480(&v_5, 0, 212, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 13:
            sub_37480(&v_5, 64, 291, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 14:
            sub_37480(&v_5, 61, 207, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 15:
            sub_37480(&v_5, 0, 291, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 16:
            sub_37480(&v_5, 0, 208, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 17:
            sub_37480(&v_5, 0, 229, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 18:
            sub_37480(&v_5, 36, 249, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 19:
            sub_37480(&v_5, 0, 259, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 20:
            sub_37480(&v_5, 0, 174, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 21:
            sub_37480(&v_5, 35, 180, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 22:
            sub_37480(&v_5, 36, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 23:
            sub_37480(&v_5, 0, 259, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 24:
            sub_37480(&v_5, 35, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        default:
            sub_37356(&v_5, a_0, a_1, 25);
            break;
        }
        break;
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 31:
            sub_37480(&v_5, 0, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 0:
            sub_37480(&v_5, 35, 233, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 1:
            sub_37480(&v_5, 36, 178, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 2:
            sub_37480(&v_5, 53, 221, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 3:
            sub_37480(&v_5, 38, 170, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 4:
            sub_37480(&v_5, 37, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 5:
            sub_37480(&v_5, 113, 203, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 6:
            sub_37480(&v_5, 114, 183, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 7:
            sub_37480(&v_5, 0, 221, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 8:
            sub_37480(&v_5, 0, 221, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 9:
            sub_37480(&v_5, 0, 199, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 10:
            sub_37480(&v_5, 0, 182, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 11:
            sub_37480(&v_5, 0, 233, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 12:
            sub_37480(&v_5, 107, 167, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 13:
            sub_37480(&v_5, 109, 170, 2, 3, 4, 5, 323, 7, 8);
            break;
        case 14:
            sub_37480(&v_5, 119, 237, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 15:
            sub_37480(&v_5, 0, 221, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 16:
            sub_37480(&v_5, 114, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 17:
            sub_37480(&v_5, 35, 268, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 18:
            sub_37480(&v_5, 0, 266, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 19:
            sub_37480(&v_5, 42, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 20:
            sub_37480(&v_5, 76, 1, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 21:
            sub_37480(&v_5, 39, 235, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 22:
            sub_37480(&v_5, 41, 183, 2, 3, 4, 5, 6, 7, 8);
            break;
        case 23:
            sub_37480(&v_5, 111, 194, 2, 3, 4, 5, 6, 7, 8);
            break;
        default:
            sub_37356(&v_5, a_0, a_1, 25);
            break;
        }
        break;
    }
    return v_5;
}

void sub_37356(auto a_0, auto a_1, auto a_2, auto a_3) {
    if ((a_2 != 0) && (a_2 != -99)) {
        a_0[0/*1*/] = 0;
        a_0[1/*1*/] = 1;
        a_0[2/*1*/] = 2;
        a_0[3/*1*/] = 3;
        a_0[4/*1*/] = 4;
        a_0[5/*1*/] = 5;
        a_0[6/*1*/] = 6;
        a_0[7/*1*/] = 7;
        a_0[8/*1*/] = 8;
        v_6 = 0;
        if (a_1 == ${player_zero}) {
            v_6 = 0;
        } else if (a_1 == ${player_one}) {
            v_6 = 1;
        } else if (a_1 == ${player_two}) {
            v_6 = 2;
        } else if (a_1 == ${mp_m_freemode_01}) {
            v_6 = 3;
        } else if (a_1 == ${mp_f_freemode_01}) {
            v_6 = 4;
        }
        DLC1::GET_SHOP_PED_OUTFIT(a_2, &v_7);
        if (!DLC1::_IS_OUTFIT_EMPTY(v_7)) {
            for (v_19 = 0; v_19 < v_7._f3; v_19 += 1) {
                if (DLC1::_A9F9C2E0FDE11CBB(v_7._f1, v_19, &v_16) && (v_16._f2 != -1)) {
                    if (((v_16 != 0) && (v_16 != -1)) && (v_16 != ${0})) {
                        a_0[v_16._f2/*1*/] = sub_353f9(a_1, v_16, 14, v_6);
                    } else if (v_16._f1 != -1) {
                        a_0[v_16._f2/*1*/] = v_16._f1;
                    }
                }
            }
        }
    }
}

void sub_37480(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    a_0[0/*1*/] = a_1;
    a_0[1/*1*/] = a_2;
    a_0[2/*1*/] = a_3;
    a_0[3/*1*/] = a_4;
    a_0[4/*1*/] = a_5;
    a_0[5/*1*/] = a_6;
    a_0[6/*1*/] = a_7;
    a_0[7/*1*/] = a_8;
    a_0[8/*1*/] = a_9;
}

auto<16> sub_374c8(auto a_0, auto a_1) {
    asm .vardef<F> 5, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":15}]}]"
    for (v_4 = 0; v_4 <= 14; v_4 += 1) {
        v_5[v_4/*1*/] = -99;
    }
    switch (a_0) {
    case ${player_zero}:
        switch (a_1) {
        case 0:
            if (game_state._f1E27._f63._f3A[120/*1*/]) {
                sub_3956e(&v_5, -99, -99, 1, 1, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            } else { 
                sub_3956e(&v_5, -99, -99, 0, 0, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            }
            break;
        case 1:
            sub_3956e(&v_5, -99, -99, 16, 16, 6, 1, 1, 0, 1, -99, 0, 0, 0);
            break;
        case 2:
            sub_3956e(&v_5, -99, -99, 36, 21, 6, 1, 5, 0, 0, -99, 0, 0, 8);
            break;
        case 3:
            sub_3956e(&v_5, -99, -99, 65, 36, 6, 0, 2, 0, 0, -99, 0, 0, 31);
            break;
        case 4:
            sub_3956e(&v_5, -99, -99, 61, 32, 6, 0, 0, 7, 3, -99, 0, 0, 2);
            break;
        case 5:
            sub_3956e(&v_5, -99, -99, game_state._f6EA._f21B._fC4[0/*1*/], game_state._f6EA._f21B._fC8[0/*1*/], 6, 3, 0, 0, 0, -99, 0, 0, 3);
            break;
        case 6:
            sub_3956e(&v_5, -99, -99, 92, 72, 7, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 7:
            sub_3956e(&v_5, -99, -99, 85, 95, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 8:
            sub_3956e(&v_5, -99, -99, 170, 80, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 9:
            sub_3956e(&v_5, -99, -99, 171, 89, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 10:
            sub_3956e(&v_5, -99, -99, 33, 18, 8, 10, 3, 8, 0, -99, 0, 0, 4);
            break;
        case 11:
            sub_3956e(&v_5, -99, -99, 33, 18, 17, 10, 4, 8, 0, -99, 0, 0, 5);
            break;
        case 12:
            sub_3956e(&v_5, -99, -99, 35, 20, 9, 10, 23, 0, 0, -99, 0, 0, 31);
            break;
        case 13:
            sub_3956e(&v_5, -99, -99, 69, 40, 13, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 14:
            sub_3956e(&v_5, -99, -99, 62, 33, 38, 0, 8, 0, 0, -99, 0, 0, 6);
            break;
        case 15:
            sub_3956e(&v_5, -99, -99, 63, 34, 6, 10, 0, 0, 4, -99, 0, 0, 31);
            break;
        case 16:
            sub_3956e(&v_5, -99, -99, 174, 93, 18, 0, 18, 0, 0, -99, 0, 0, 31);
            break;
        case 17:
            sub_3956e(&v_5, -99, -99, 76, 46, 6, 10, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 18:
            sub_3956e(&v_5, -99, -99, 35, 20, 9, 10, 0, 4, 0, -99, 0, 0, 7);
            break;
        case 19:
            sub_3956e(&v_5, -99, -99, 64, 35, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 20:
            sub_3956e(&v_5, -99, -99, 66, 37, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 21:
            sub_3956e(&v_5, -99, -99, 67, 38, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 22:
            sub_3956e(&v_5, -99, -99, 68, 39, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 23:
            sub_3956e(&v_5, -99, -99, 177, 94, 19, 9, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 24:
            sub_3956e(&v_5, -99, -99, 35, 20, 9, 10, 4, 0, 0, -99, 0, 0, 31);
            break;
        case 25:
            sub_3956e(&v_5, -99, -99, 97, 81, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 26:
            sub_3956e(&v_5, -99, -99, 3, 3, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 27:
            sub_3956e(&v_5, -99, -99, 129, 81, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 28:
            sub_3956e(&v_5, -99, -99, 170, 80, 6, 0, 13, 0, 0, -99, 0, 0, 31);
            break;
        case 29:
            sub_3956e(&v_5, -99, -99, 2, 2, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 30:
            sub_3956e(&v_5, -99, -99, 161, 3, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 31:
            sub_3956e(&v_5, -99, -99, 3, 3, 0, 12, 0, 0, 0, -99, 0, 1, 31);
            break;
        case 32:
            sub_3956e(&v_5, -99, -99, 85, 55, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 33:
            sub_3956e(&v_5, -99, -99, 86, 4, 20, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 34:
            sub_3956e(&v_5, -99, -99, 44, 97, 6, 0, 0, 0, 0, -99, 0, 2, 31);
            break;
        case 35:
            sub_3956e(&v_5, -99, -99, 85, 81, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 36:
            sub_3956e(&v_5, -99, -99, 4, 4, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 37:
            sub_3956e(&v_5, -99, -99, 5, 5, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 38:
            sub_3956e(&v_5, -99, -99, 6, 6, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 39:
            sub_3956e(&v_5, -99, -99, 7, 7, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 40:
            sub_3956e(&v_5, -99, -99, 8, 8, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 41:
            sub_3956e(&v_5, -99, -99, 9, 9, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 42:
            sub_3956e(&v_5, -99, -99, 10, 10, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 43:
            sub_3956e(&v_5, -99, -99, 11, 11, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 44:
            sub_3956e(&v_5, -99, -99, 12, 12, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 45:
            sub_3956e(&v_5, -99, -99, 13, 13, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 46:
            sub_3956e(&v_5, -99, -99, 14, 14, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 47:
            sub_3956e(&v_5, -99, -99, 15, 15, 0, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 48:
            sub_3956e(&v_5, -99, -99, 91, 71, 14, 13, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 49:
            sub_3956e(&v_5, -99, -99, 35, 20, 9, 10, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 50:
            sub_3956e(&v_5, -99, -99, 33, 18, 8, 10, 3, 8, 0, -99, 0, 0, 9);
            break;
        case 51:
            sub_3956e(&v_5, -99, -99, 169, 95, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 52:
            sub_3956e(&v_5, -99, -99, 169, 72, 6, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        default:
            sub_3930d(&v_5, a_0, a_1, 53);
            break;
        }
        break;
    case ${player_one}:
        switch (a_1) {
        case 0:
            sub_3956e(&v_5, -99, -99, 73, 24, 18, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 1:
            sub_3956e(&v_5, -99, -99, 22, 10, 64, 0, 24, 0, 0, -99, 0, 43, 31);
            break;
        case 2:
            sub_3956e(&v_5, -99, -99, game_state._f6EA._f21B._fC4[1/*1*/], game_state._f6EA._f21B._fC8[1/*1*/], 17, 2, 26, 0, 0, -99, 0, 45, 31);
            break;
        case 3:
            sub_3956e(&v_5, -99, -99, 23, 11, 13, 5, 2, 4, 0, -99, 0, 0, 1);
            break;
        case 4:
            sub_3956e(&v_5, -99, -99, 23, 11, 34, 5, 26, 0, 0, -99, 0, 0, 2);
            break;
        case 5:
            sub_3956e(&v_5, -99, 20, 159, 69, 17, 5, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 6:
            sub_3956e(&v_5, -99, -99, 40, 13, 14, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 7:
            sub_3956e(&v_5, -99, -99, 90, 32, 17, 1, 8, 0, 1, -99, 0, 0, 3);
            break;
        case 8:
            sub_3956e(&v_5, -99, -99, 17, 5, 12, 0, 26, 0, 2, -99, 0, 0, 5);
            break;
        case 9:
            sub_3956e(&v_5, -99, -99, 16, 4, 12, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 10:
            sub_3956e(&v_5, -99, -99, 208, 71, 17, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 11:
            sub_3956e(&v_5, -99, -99, 259, 10, 35, 0, 24, 0, 0, -99, 0, 43, 31);
            break;
        case 12:
            sub_3956e(&v_5, -99, -99, 18, 6, 12, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 13:
            sub_3956e(&v_5, -99, -99, 19, 7, 12, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 14:
            sub_3956e(&v_5, -99, -99, 20, 8, 12, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 15:
            sub_3956e(&v_5, -99, -99, 21, 9, 12, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 16:
            sub_3956e(&v_5, -99, -99, 135, 40, 0, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 17:
            sub_3956e(&v_5, -99, -99, 74, 24, 52, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 18:
            sub_3956e(&v_5, -99, -99, 176, 53, 26, 5, 26, 0, 0, -99, 0, 41, 31);
            break;
        case 19:
            sub_3956e(&v_5, -99, -99, 125, 24, 18, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 20:
            sub_3956e(&v_5, -99, -99, 162, 24, 36, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 21:
            sub_3956e(&v_5, -99, -99, 75, 24, 36, 0, 26, 0, 0, -99, 0, 0, 4);
            break;
        case 22:
            sub_3956e(&v_5, -99, -99, 227, 53, 25, 0, 27, 0, 0, -99, 0, 25, 31);
            break;
        case 23:
            sub_3956e(&v_5, -99, -99, 228, 54, 25, 0, 28, 0, 0, -99, 0, 26, 31);
            break;
        case 24:
            sub_3956e(&v_5, -99, -99, 229, 55, 25, 0, 29, 0, 0, -99, 0, 27, 31);
            break;
        case 25:
            sub_3956e(&v_5, -99, -99, 230, 56, 25, 0, 30, 0, 0, -99, 0, 28, 31);
            break;
        case 26:
            sub_3956e(&v_5, -99, -99, 231, 57, 25, 0, 31, 0, 0, -99, 0, 29, 31);
            break;
        case 27:
            sub_3956e(&v_5, -99, -99, 232, 58, 25, 0, 32, 0, 0, -99, 0, 30, 31);
            break;
        case 28:
            sub_3956e(&v_5, -99, -99, 233, 59, 25, 0, 33, 0, 0, -99, 0, 31, 31);
            break;
        case 29:
            sub_3956e(&v_5, -99, -99, 234, 60, 25, 0, 34, 0, 0, -99, 0, 32, 31);
            break;
        case 30:
            sub_3956e(&v_5, -99, -99, 235, 61, 25, 0, 35, 0, 0, -99, 0, 33, 31);
            break;
        case 31:
            sub_3956e(&v_5, -99, -99, 236, 62, 25, 0, 36, 0, 0, -99, 0, 34, 31);
            break;
        case 32:
            sub_3956e(&v_5, -99, -99, 237, 63, 25, 0, 37, 0, 0, -99, 0, 35, 31);
            break;
        case 33:
            sub_3956e(&v_5, -99, -99, 238, 64, 25, 0, 38, 0, 0, -99, 0, 36, 31);
            break;
        case 34:
            sub_3956e(&v_5, -99, -99, 239, 65, 25, 0, 39, 0, 0, -99, 0, 37, 31);
            break;
        case 35:
            sub_3956e(&v_5, -99, -99, 240, 66, 25, 0, 40, 0, 0, -99, 0, 38, 31);
            break;
        case 36:
            sub_3956e(&v_5, -99, -99, 241, 67, 25, 0, 41, 0, 0, -99, 0, 39, 31);
            break;
        case 37:
            sub_3956e(&v_5, -99, -99, 242, 68, 25, 0, 42, 0, 0, -99, 0, 40, 31);
            break;
        case 38:
            sub_3956e(&v_5, -99, -99, 260, 72, 17, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 39:
            sub_3956e(&v_5, -99, -99, 125, 24, 0, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 40:
            sub_3956e(&v_5, -99, -99, 123, 24, 0, 0, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 41:
            sub_3956e(&v_5, -99, -99, 159, 69, 17, 5, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 42:
            sub_3956e(&v_5, -99, -99, 89, 22, 15, 6, 26, 0, 0, -99, 0, 0, 31);
            break;
        case 43:
            sub_3956e(&v_5, -99, -99, 317, 69, 17, 0, 0, 0, 51, -99, 0, 0, 6);
            break;
        case 44:
            sub_3956e(&v_5, -99, -99, 30, 23, 16, 0, 0, 0, 0, -99, 0, 0, 7);
            break;
        case 45:
            sub_3956e(&v_5, -99, -99, 106, 70, 17, 5, 26, 0, 0, -99, 0, 0, 8);
            break;
        case 46:
            sub_3956e(&v_5, -99, -99, 117, 24, 20, 5, 26, 0, 52, -99, 0, 0, 31);
            break;
        default:
            sub_3930d(&v_5, a_0, a_1, 47);
            break;
        }
        break;
    case ${player_two}:
        switch (a_1) {
        case 0:
            sub_3956e(&v_5, -99, -99, 0, 91, 28, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 1:
            sub_3956e(&v_5, -99, -99, 17, 5, 8, 2, 3, 0, 0, -99, 0, 0, 8);
            break;
        case 2:
            sub_3956e(&v_5, -99, -99, 43, 8, 12, 3, 5, 0, 0, -99, 0, 0, 1);
            break;
        case 3:
            sub_3956e(&v_5, -99, -99, 50, 14, 8, 0, 15, 6, 3, -99, 0, 0, 2);
            break;
        case 4:
            sub_3956e(&v_5, -99, -99, game_state._f6EA._f21B._fC4[2/*1*/], game_state._f6EA._f21B._fC8[2/*1*/], 8, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 5:
            sub_3956e(&v_5, -99, -99, 95, 33, 8, 0, 15, 0, 0, -99, 0, 0, 6);
            break;
        case 6:
            sub_3956e(&v_5, -99, -99, 49, 13, 10, 4, 6, 0, 0, -99, 0, 0, 3);
            break;
        case 7:
            sub_3956e(&v_5, -99, -99, 49, 13, 14, 4, 15, 0, 0, -99, 0, 0, 4);
            break;
        case 8:
            sub_3956e(&v_5, -99, -99, 79, 32, 8, 5, 7, 0, 0, -99, 0, 0, 31);
            break;
        case 9:
            sub_3956e(&v_5, -99, -99, 53, 17, 11, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 10:
            sub_3956e(&v_5, -99, -99, 96, 81, 8, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 11:
            sub_3956e(&v_5, -99, -99, 51, 15, 33, 0, 8, 0, 0, -99, 0, 0, 5);
            break;
        case 12:
            sub_3956e(&v_5, -99, -99, 0, 93, 29, 0, 13, 0, 0, -99, 0, 0, 31);
            break;
        case 13:
            sub_3956e(&v_5, -99, -99, 52, 16, 30, 5, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 14:
            sub_3956e(&v_5, -99, -99, 241, 92, 16, 0, 12, 0, 0, -99, 0, 0, 31);
            break;
        case 15:
            sub_3956e(&v_5, -99, -99, 97, 34, 8, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 16:
            sub_3956e(&v_5, -99, -99, 44, 9, 12, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 17:
            sub_3956e(&v_5, -99, -99, 45, 10, 12, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 18:
            sub_3956e(&v_5, -99, -99, 46, 11, 12, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 19:
            sub_3956e(&v_5, -99, -99, 47, 12, 12, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 20:
            sub_3956e(&v_5, -99, -99, 161, 53, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 21:
            sub_3956e(&v_5, -99, -99, 0, 44, 8, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 22:
            sub_3956e(&v_5, -99, -99, 98, 0, 28, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 23:
            sub_3956e(&v_5, -99, -99, 27, 0, 31, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 24:
            sub_3956e(&v_5, -99, -99, 190, 71, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 25:
            sub_3956e(&v_5, -99, -99, 191, 72, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 26:
            sub_3956e(&v_5, -99, -99, 192, 73, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 27:
            sub_3956e(&v_5, -99, -99, 193, 74, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 28:
            sub_3956e(&v_5, -99, -99, 194, 75, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 29:
            sub_3956e(&v_5, -99, -99, 195, 76, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 30:
            sub_3956e(&v_5, -99, -99, 196, 77, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 31:
            sub_3956e(&v_5, -99, -99, 197, 78, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 32:
            sub_3956e(&v_5, -99, -99, 198, 79, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 33:
            sub_3956e(&v_5, -99, -99, 199, 80, 8, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 34:
            sub_3956e(&v_5, -99, -99, 200, 62, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 35:
            sub_3956e(&v_5, -99, -99, 201, 63, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 36:
            sub_3956e(&v_5, -99, -99, 202, 64, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 37:
            sub_3956e(&v_5, -99, -99, 203, 65, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 38:
            sub_3956e(&v_5, -99, -99, 204, 66, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 39:
            sub_3956e(&v_5, -99, -99, 205, 67, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 40:
            sub_3956e(&v_5, -99, -99, 206, 68, 16, 0, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 41:
            sub_3956e(&v_5, -99, -99, 2, 43, 8, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 42:
            sub_3956e(&v_5, -99, -99, 55, 0, 28, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 43:
            sub_3956e(&v_5, -99, -99, 0, 52, 8, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 44:
            sub_3956e(&v_5, -99, -99, 70, 30, 32, 6, 15, 0, 0, -99, 0, 0, 31);
            break;
        case 45:
            sub_3956e(&v_5, -99, -99, 19, 91, 28, 0, 0, 0, 0, -99, 0, 0, 7);
            break;
        case 46:
            sub_3956e(&v_5, -99, -99, 0, 0, 28, 0, 0, 0, 0, -99, 0, 0, 31);
            break;
        case 47:
            sub_3956e(&v_5, -99, -99, 79, 32, 8, 5, 15, 0, 0, -99, 0, 0, 31);
            break;
        default:
            sub_3930d(&v_5, a_0, a_1, 48);
            break;
        }
        break;
    case ${mp_m_freemode_01}:
        switch (a_1) {
        case 0:
            sub_3956e(&v_5, -99, -99, 0, 0, 10, -99, 0, -99, -99, 0, 0, 0, 31);
            break;
        case 1:
            sub_3956e(&v_5, -99, -99, 1, 127, 38, -99, 2, 0, 0, 0, 0, 62, 0);
            break;
        case 2:
            sub_3956e(&v_5, -99, -99, 0, 248, 45, -99, 240, 0, 0, 0, 0, 144, 1);
            break;
        case 3:
            sub_3956e(&v_5, -99, -99, 4, 31, 25, -99, 240, 0, 0, 0, 0, 231, 2);
            break;
        case 4:
            sub_3956e(&v_5, -99, -99, 1, 66, 10, -99, 21, 0, 0, 0, 0, 123, 3);
            break;
        case 5:
            sub_3956e(&v_5, -99, -99, 1, 93, 141, -99, 3, 0, 0, 0, 0, 114, 4);
            break;
        case 6:
            sub_3956e(&v_5, -99, -99, 1, 116, 113, -99, 7, 0, 0, 0, 0, 113, 5);
            break;
        case 7:
            sub_3956e(&v_5, -99, -99, 1, 61, 136, -99, 27, 0, 0, 0, 0, 61, 6);
            break;
        case 8:
            sub_3956e(&v_5, -99, -99, 0, 112, 10, -99, 240, 0, 0, 0, 0, 8, 7);
            break;
        case 9:
            sub_3956e(&v_5, -99, -99, 4, 131, 24, -99, 240, 0, 0, 0, 0, 223, 8);
            break;
        case 10:
            sub_3956e(&v_5, -99, -99, 1, 209, 188, -99, 208, 0, 0, 0, 0, 64, 9);
            break;
        case 11:
            sub_3956e(&v_5, -99, -99, 1, 209, 160, -99, 211, 0, 0, 0, 43, 157, 10);
            break;
        case 12:
            sub_3956e(&v_5, -99, -99, 1, 162, 174, -99, 201, 0, 0, 0, 0, 158, 11);
            break;
        case 13:
            sub_3956e(&v_5, -99, -99, 1, 4, 240, -99, 34, 0, 0, 0, 0, 97, 12);
            break;
        case 14:
            sub_3956e(&v_5, -99, -99, 1, 128, 232, -99, 43, 0, 0, 0, 0, 102, 13);
            break;
        case 15:
            sub_3956e(&v_5, -99, -99, 1, 66, 65, -99, 224, 0, 0, 0, 0, 100, 14);
            break;
        case 16:
            sub_3956e(&v_5, -99, -99, 1, 65, 172, -99, 202, 0, 0, 0, 0, 64, 15);
            break;
        case 17:
            sub_3956e(&v_5, -99, -99, 1, 64, 10, -99, 1, 0, 0, 0, 0, 66, 16);
            break;
        case 18:
            sub_3956e(&v_5, -99, -99, 5, 98, 80, -99, 240, 0, 0, 0, 0, 87, 17);
            break;
        case 19:
            sub_3956e(&v_5, -99, -99, 5, 192, 96, -99, 240, 0, 0, 0, 0, 80, 18);
            break;
        case 20:
            sub_3956e(&v_5, -99, -99, 1, 124, 96, -99, 11, 0, 0, 0, 0, 110, 19);
            break;
        case 21:
            sub_3956e(&v_5, -99, -99, 0, 80, 114, -99, 240, 0, 0, 0, 0, 2, 20);
            break;
        case 22:
            sub_3956e(&v_5, -99, -99, 6, 43, 112, -99, 82, 0, 0, 0, 0, 48, 21);
            break;
        case 23:
            sub_3956e(&v_5, -99, -99, 1, 116, 144, -99, 2, 0, 0, 0, 0, 108, 22);
            break;
        case 24:
            sub_3956e(&v_5, -99, -99, 1, 63, 38, -99, 3, 0, 0, 0, 0, 63, 23);
            break;
        case 25:
            sub_3956e(&v_5, -99, -99, 2, 64, 10, -99, 240, 0, 0, 0, 0, 41, 24);
            break;
        default:
            sub_3930d(&v_5, a_0, a_1, 26);
            break;
        }
        break;
    case ${mp_f_freemode_01}:
        switch (a_1) {
        case 0:
            sub_3956e(&v_5, -99, -99, 0, 0, 0, -99, 0, -99, -99, 0, -99, 0, 31);
            break;
        case 1:
            sub_3956e(&v_5, -99, -99, 5, 136, 241, -99, 47, 0, 0, 0, 0, 21, 31);
            break;
        case 2:
            sub_3956e(&v_5, -99, -99, 4, 1, 96, -99, 32, 0, 0, 0, 7, 215, 0);
            break;
        case 3:
            sub_3956e(&v_5, -99, -99, 1, 73, 241, -99, 3, 0, 0, 0, 0, 25, 1);
            break;
        case 4:
            sub_3956e(&v_5, -99, -99, 2, 88, 217, -99, 32, 0, 0, 0, 0, 33, 2);
            break;
        case 5:
            sub_3956e(&v_5, -99, -99, 9, 7, 98, -99, 32, 0, 0, 0, 7, 153, 3);
            break;
        case 6:
            sub_3956e(&v_5, -99, -99, 1, 140, 241, -99, 7, 0, 0, 0, 31, 16, 4);
            break;
        case 7:
            sub_3956e(&v_5, -99, -99, 4, 139, 112, -99, 32, 0, 0, 0, 49, 78, 5);
            break;
        case 8:
            sub_3956e(&v_5, -99, -99, 1, 193, 48, -99, 108, 0, 0, 0, 0, 17, 6);
            break;
        case 9:
            sub_3956e(&v_5, -99, -99, 5, 114, 97, -99, 103, 0, 0, 0, 0, 98, 7);
            break;
        case 10:
            sub_3956e(&v_5, -99, -99, 9, 134, 239, -99, 32, 0, 0, 0, 2, 144, 8);
            break;
        case 11:
            sub_3956e(&v_5, -99, -99, 5, 152, 96, -99, 10, 0, 0, 0, 31, 96, 9);
            break;
        case 12:
            sub_3956e(&v_5, -99, -99, 6, 129, 1, -99, 96, 0, 0, 0, 5, 120, 10);
            break;
        case 13:
            sub_3956e(&v_5, -99, -99, 5, 0, 0, -99, 10, 0, 0, 0, 0, 130, 31);
            break;
        case 14:
            sub_3956e(&v_5, -99, -99, 4, 159, 96, -99, 32, 0, 0, 0, 22, 214, 11);
            break;
        case 15:
            sub_3956e(&v_5, -99, -99, 9, 232, 213, -99, 32, 0, 0, 0, 22, 147, 12);
            break;
        case 16:
            sub_3956e(&v_5, -99, -99, 2, 8, 98, -99, 32, 0, 0, 0, 33, 39, 13);
            break;
        case 17:
            sub_3956e(&v_5, -99, -99, 5, 150, 235, -99, 106, 0, 0, 0, 0, 128, 14);
            break;
        case 18:
            sub_3956e(&v_5, -99, -99, 6, 96, 97, -99, 7, 0, 0, 0, 32, 114, 15);
            break;
        case 19:
            sub_3956e(&v_5, -99, -99, 4, 48, 64, -99, 32, 0, 0, 0, 0, 89, 16);
            break;
        case 20:
            sub_3956e(&v_5, -99, -99, 4, 62, 64, -99, 32, 0, 0, 0, 0, 78, 17);
            break;
        case 21:
            sub_3956e(&v_5, -99, -99, 4, 49, 65, -99, 32, 0, 0, 0, 8, 80, 31);
            break;
        case 22:
            sub_3956e(&v_5, -99, -99, 3, 20, 16, -99, 32, 0, 0, 0, 0, 49, 18);
            break;
        case 23:
            sub_3956e(&v_5, -99, -99, 0, 73, 178, -99, 32, 0, 0, 0, 38, 11, 19);
            break;
        case 24:
            sub_3956e(&v_5, -99, -99, 5, 135, 53, -99, 9, 0, 0, 0, 29, 27, 20);
            break;
        case 25:
            sub_3956e(&v_5, -99, -99, 7, 233, 176, -99, 120, 0, 0, 0, 11, 160, 21);
            break;
        case 26:
            sub_3956e(&v_5, -99, -99, 4, 34, 179, -99, 32, 0, 0, 0, 0, 77, 22);
            break;
        case 27:
            sub_3956e(&v_5, -99, -99, 15, 131, 93, -99, 32, 0, 0, 0, 0, 250, 23);
            break;
        default:
            sub_3930d(&v_5, a_0, a_1, 28);
            break;
        }
        break;
    }
    return v_5;
}

void sub_3930d(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_0[0/*1*/] = 0;
    a_0[2/*1*/] = -99;
    a_0[3/*1*/] = 0;
    a_0[4/*1*/] = 0;
    a_0[6/*1*/] = 0;
    a_0[5/*1*/] = 0;
    a_0[8/*1*/] = 0;
    a_0[9/*1*/] = 0;
    a_0[10/*1*/] = 0;
    a_0[1/*1*/] = 0;
    a_0[7/*1*/] = 0;
    a_0[11/*1*/] = 0;
    a_0[13/*1*/] = -99;
    a_0[14/*1*/] = -99;
    v_6 = 0;
    if (a_1 == ${player_zero}) {
        v_6 = 0;
        a_0[13/*1*/] = 10 + (a_2 - a_3);
    } else if (a_1 == ${player_one}) {
        v_6 = 1;
        a_0[13/*1*/] = 9 + (a_2 - a_3);
    } else if (a_1 == ${player_two}) {
        v_6 = 2;
        a_0[13/*1*/] = 9 + (a_2 - a_3);
    } else if (a_1 == ${mp_m_freemode_01}) {
        v_6 = 3;
    } else if (a_1 == ${mp_f_freemode_01}) {
        v_6 = 4;
    }
    DLC1::_F3FBE2D50A6A8C28(v_6, 0);
    DLC1::GET_SHOP_PED_QUERY_OUTFIT(a_2 - a_3, &v_7);
    if (!DLC1::_IS_OUTFIT_EMPTY(v_7)) {
        for (v_19 = 0; v_19 < v_7._f4; v_19 += 1) {
            if (DLC1::_GET_PROP_FROM_OUTFIT(v_7._f1, v_19, &v_16)) {
                if (((v_16 != 0) && (v_16 != -1)) && (v_16 != ${0})) {
                    if (v_16._f2 == 10) {
                        a_0[sub_394be(v_16._f2)/*1*/] = v_16;
                    } else { 
                        a_0[sub_394be(v_16._f2)/*1*/] = sub_353f9(a_1, v_16, sub_394be(v_16._f2), v_6);
                    }
                } else if (v_16._f1 != -1) {
                    a_0[sub_394be(v_16._f2)/*1*/] = v_16._f1;
                }
            }
        }
        if (v_7._f3 == 0) {
            a_0[13/*1*/] = -99;
        } else { 
            a_0[13/*1*/] = v_7._f1;
        }
    }
}

auto sub_394be(auto a_0) {
    switch (a_0) {
    case 0:
        return 0;
        break;
    case 2:
        return 2;
        break;
    case 3:
        return 3;
        break;
    case 4:
        return 4;
        break;
    case 6:
        return 6;
        break;
    case 5:
        return 5;
        break;
    case 8:
        return 8;
        break;
    case 9:
        return 9;
        break;
    case 10:
        return 10;
        break;
    case 1:
        return 1;
        break;
    case 7:
        return 7;
        break;
    case 11:
        return 11;
        break;
    }
    return 0;
}

void sub_3956e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13) {
    a_0[0/*1*/] = a_1;
    a_0[2/*1*/] = a_2;
    a_0[3/*1*/] = a_3;
    a_0[4/*1*/] = a_4;
    a_0[6/*1*/] = a_5;
    a_0[5/*1*/] = a_6;
    a_0[8/*1*/] = a_7;
    a_0[9/*1*/] = a_8;
    a_0[10/*1*/] = a_9;
    a_0[1/*1*/] = a_A;
    a_0[7/*1*/] = a_B;
    a_0[11/*1*/] = a_C;
    a_0[13/*1*/] = a_D;
    a_0[14/*1*/] = -99;
}

auto<14> sub_395df(auto a_0, auto a_1, auto a_2) {
    sub_528a7();
    if (a_0 == ${mp_m_freemode_01}) {
        sub_46d59(a_1, a_2);
    } else if (a_0 == ${mp_f_freemode_01}) {
        sub_3961c(a_1, a_2);
    }
    return g_10E3A[0/*14*/];
}

void sub_3961c(auto a_0, auto a_1) {
    switch (a_0) {
    case 2:
        sub_45e8a(a_1);
        break;
    case 11:
        sub_446fc(a_1);
        break;
    case 8:
        sub_43172(a_1);
        break;
    case 9:
        sub_42ef4(a_1);
        break;
    case 3:
        sub_42d9b(a_1);
        break;
    case 4:
        sub_4173e(a_1);
        break;
    case 6:
        sub_40119(a_1);
        break;
    case 1:
        sub_3fe34(a_1);
        break;
    case 7:
        sub_3f65a(a_1);
        break;
    case 10:
        sub_3f557(a_1);
        break;
    case 14:
        sub_3c7a5(a_1);
        break;
    case 12:
        sub_3c4c8(a_1);
        break;
    case 5:
        sub_3c3c7(a_1);
        break;
    case 0:
        sub_3c12e(a_1);
        break;
    case 13:
        sub_3970c(a_1);
        break;
    }
}

void sub_3970c(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 13;
    switch (a_0) {
    case 31:
        v_9 = 0;
        v_A = 0;
        break;
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 0;
        v_A = 0;
        break;
    case 2:
        v_9 = 0;
        v_A = 0;
        break;
    case 3:
        v_9 = 0;
        v_A = 0;
        break;
    case 4:
        v_9 = 0;
        v_A = 0;
        break;
    case 5:
        v_9 = 0;
        v_A = 0;
        break;
    case 6:
        v_9 = 0;
        v_A = 0;
        break;
    case 7:
        v_9 = 0;
        v_A = 0;
        break;
    case 8:
        v_9 = 0;
        v_A = 0;
        break;
    case 9:
        v_9 = 0;
        v_A = 0;
        break;
    case 10:
        v_9 = 0;
        v_A = 0;
        break;
    case 11:
        v_9 = 0;
        v_A = 0;
        break;
    case 12:
        v_9 = 0;
        v_A = 0;
        break;
    case 13:
        v_9 = 0;
        v_A = 0;
        break;
    case 14:
        v_9 = 0;
        v_A = 0;
        break;
    case 15:
        v_9 = 0;
        v_A = 0;
        break;
    case 16:
        v_9 = 0;
        v_A = 0;
        break;
    case 17:
        v_9 = 0;
        v_A = 0;
        break;
    case 18:
        v_9 = 0;
        v_A = 0;
        break;
    case 19:
        v_9 = 0;
        v_A = 0;
        break;
    case 20:
        v_9 = 0;
        v_A = 0;
        break;
    case 21:
        v_9 = 0;
        v_A = 0;
        break;
    case 22:
        v_9 = 0;
        v_A = 0;
        break;
    case 23:
        v_9 = 0;
        v_A = 0;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_398c7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10) {
    a_0._f6 = 0;
    a_0 = a_9;
    a_0._f1 = a_2 % 32;
    a_0._f2 = a_2 / 32;
    a_0._f3 = a_4;
    a_0._f4 = a_5;
    a_0._f7 = a_6;
    a_0._f8/*"16"*/ = a_3;
    a_0._fD = a_8;
    a_0._fC = sub_3c05a(a_8);
    if (((a_0._f2 >= 10) && (a_0._f5 >= 0)) && (a_0._f5 < 3)) {
        if (!a_A) {}
        a_0._f2 = 0;
    }
    if (GAMEPLAY::GET_HASH_KEY(a_3) != GAMEPLAY::GET_HASH_KEY("NO_LABEL")) {}
    if (a_7) {
        GAMEPLAY::SET_BIT(&a_0._f6, 3);
    }
    if (a_A) {
        GAMEPLAY::SET_BIT(&a_0._f6, 0);
        if ((a_0._f5 >= 0) && (a_0._f5 < 3)) {
            GAMEPLAY::SET_BIT(&a_0._f6, 5);
        }
        GAMEPLAY::SET_BIT(&a_0._f6, 1);
        GAMEPLAY::SET_BIT(&a_0._f6, 2);
        GAMEPLAY::SET_BIT(&a_0._f6, 6);
        if (sub_10a59(14)) {
            return ;
        }
        if (a_1 == 1) {
            if (DLC1::_341DE7ED1D2A1BFD(g_280004, 0x6ce6313b, 0)) {
                GAMEPLAY::SET_BIT(&a_0._f6, 7);
            }
        }
        if (a_1 == 12) {
            if (!sub_3b771(g_280004, 1, 1, 1, -1)) {
                GAMEPLAY::CLEAR_BIT(&a_0._f6, 2);
            }
            if (!sub_3b771(g_280004, 2, 1, 1, -1)) {
                GAMEPLAY::SET_BIT(&a_0._f6, 4);
            }
        } else if (a_1 == 13) {
        } else if (a_1 == 14) {
            if (!sub_3b771(g_280004, 1, 1, 1, -1)) {
                GAMEPLAY::CLEAR_BIT(&a_0._f6, 2);
            }
            if (!sub_3b771(g_280004, 2, 1, 1, -1)) {
                GAMEPLAY::SET_BIT(&a_0._f6, 4);
            }
        } else { 
            if (!sub_3b771(g_280004, 1, 1, 1, -1)) {
                GAMEPLAY::CLEAR_BIT(&a_0._f6, 2);
            }
            if (!sub_3b771(g_280004, 2, 1, 1, -1)) {
                GAMEPLAY::SET_BIT(&a_0._f6, 4);
            }
        }
    } else if ((a_0._f5 >= 0) && (a_0._f5 < 3)) {
        GAMEPLAY::SET_BIT(&a_0._f6, 0);
        GAMEPLAY::SET_BIT(&a_0._f6, 5);
        if (sub_3a853(a_1, a_0._f5, a_0._f2, 0, a_0._f1, 0, 0)) {
            GAMEPLAY::SET_BIT(&a_0._f6, 1);
        }
        if (sub_3a853(a_1, a_0._f5, a_0._f2, 1, a_0._f1, 0, 0)) {
            GAMEPLAY::SET_BIT(&a_0._f6, 2);
        }
        if (!sub_3a853(a_1, a_0._f5, a_0._f2, 2, a_0._f1, 0, 0)) {
            GAMEPLAY::SET_BIT(&a_0._f6, 4);
        }
    } else { 
        GAMEPLAY::SET_BIT(&a_0._f6, 0);
        if (((((((((((a_1 == 11) || (a_1 == 4)) || (a_1 == 6)) || (a_1 == 1)) || (a_1 == 14)) || (a_1 == 2)) || (a_1 == 8)) || (a_1 == 9)) || (a_1 == 10)) || (a_1 == 7)) || (a_1 == 12)) {
            if (sub_10a59(14)) {
                return ;
            }
            v_D = sub_4b3f(sub_3a458(a_1, a_0._f2), g_10E38, 0);
            if (GAMEPLAY::IS_BIT_SET(v_D, a_0._f1)) {
                GAMEPLAY::SET_BIT(&a_0._f6, 1);
            }
            v_D = sub_4b3f(sub_3a05d(a_1, a_0._f2), g_10E38, 0);
            if (GAMEPLAY::IS_BIT_SET(v_D, a_0._f1)) {
                GAMEPLAY::SET_BIT(&a_0._f6, 2);
            }
            if (sub_39c58(a_1, a_0._f2, &v_E)) {
                v_D = sub_4b3f(v_E, g_10E38, 0);
                if (!GAMEPLAY::IS_BIT_SET(v_D, a_0._f1)) {
                    GAMEPLAY::SET_BIT(&a_0._f6, 4);
                }
            }
        } else { 
            GAMEPLAY::SET_BIT(&a_0._f6, 1);
            GAMEPLAY::SET_BIT(&a_0._f6, 2);
        }
    }
    if (a_1 == 14) {
        if (a_4 == -1) {
            GAMEPLAY::SET_BIT(&a_0._f6, 1);
            GAMEPLAY::SET_BIT(&a_0._f6, 2);
        }
    }
}

auto sub_39c58(auto a_0, auto a_1, auto a_2) {
    a_2 = 968;
    switch (a_1) {
    case 0:
        switch (a_0) {
        case 2:
            a_2 = 969;
            break;
        case 3:
            a_2 = 1419;
            break;
        case 4:
            a_2 = 985;
            break;
        case 6:
            a_2 = 993;
            break;
        case 8:
            a_2 = 1420;
            break;
        case 9:
            a_2 = 1428;
            break;
        case 10:
            a_2 = 1430;
            break;
        case 1:
            a_2 = 1001;
            break;
        case 7:
            a_2 = 1431;
            break;
        case 11:
            a_2 = 977;
            break;
        case 14:
            a_2 = 1009;
            break;
        case 12:
            a_2 = 1020;
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 2:
            a_2 = 970;
            break;
        case 4:
            a_2 = 986;
            break;
        case 6:
            a_2 = 994;
            break;
        case 8:
            a_2 = 1421;
            break;
        case 9:
            a_2 = 1429;
            break;
        case 7:
            a_2 = 1432;
            break;
        case 11:
            a_2 = 978;
            break;
        case 14:
            a_2 = 1010;
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 2:
            a_2 = 971;
            break;
        case 4:
            a_2 = 987;
            break;
        case 6:
            a_2 = 995;
            break;
        case 8:
            a_2 = 1422;
            break;
        case 7:
            a_2 = 1433;
            break;
        case 11:
            a_2 = 979;
            break;
        case 14:
            a_2 = 1011;
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 4:
            a_2 = 988;
            break;
        case 6:
            a_2 = 996;
            break;
        case 8:
            a_2 = 1423;
            break;
        case 11:
            a_2 = 980;
            break;
        case 14:
            a_2 = 1012;
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 4:
            a_2 = 989;
            break;
        case 6:
            a_2 = 997;
            break;
        case 8:
            a_2 = 1424;
            break;
        case 11:
            a_2 = 981;
            break;
        case 14:
            a_2 = 1013;
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 4:
            a_2 = 990;
            break;
        case 6:
            a_2 = 998;
            break;
        case 8:
            a_2 = 1425;
            break;
        case 11:
            a_2 = 982;
            break;
        case 14:
            a_2 = 1014;
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 4:
            a_2 = 991;
            break;
        case 6:
            a_2 = 999;
            break;
        case 8:
            a_2 = 1426;
            break;
        case 11:
            a_2 = 983;
            break;
        case 14:
            a_2 = 1015;
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 4:
            a_2 = 992;
            break;
        case 6:
            a_2 = 1000;
            break;
        case 8:
            a_2 = 1427;
            break;
        case 11:
            a_2 = 984;
            break;
        case 14:
            a_2 = 1016;
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 14:
            a_2 = 1017;
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 14:
            a_2 = 1018;
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 14:
            a_2 = 1019;
            break;
        }
        break;
    }
    return a_2 != 968;
}

auto sub_3a05d(auto a_0, auto a_1) {
    switch (a_1) {
    case 0:
        switch (a_0) {
        case 2:
            return 917;
            break;
        case 3:
            return 1404;
            break;
        case 4:
            return 933;
            break;
        case 6:
            return 941;
            break;
        case 8:
            return 1405;
            break;
        case 9:
            return 1413;
            break;
        case 10:
            return 1415;
            break;
        case 1:
            return 949;
            break;
        case 7:
            return 1416;
            break;
        case 11:
            return 925;
            break;
        case 14:
            return 957;
            break;
        case 12:
            return 968;
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 2:
            return 918;
            break;
        case 4:
            return 934;
            break;
        case 6:
            return 942;
            break;
        case 8:
            return 1406;
            break;
        case 9:
            return 1414;
            break;
        case 7:
            return 1417;
            break;
        case 11:
            return 926;
            break;
        case 14:
            return 958;
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 2:
            return 919;
            break;
        case 4:
            return 935;
            break;
        case 6:
            return 943;
            break;
        case 8:
            return 1407;
            break;
        case 7:
            return 1418;
            break;
        case 11:
            return 927;
            break;
        case 14:
            return 959;
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 4:
            return 936;
            break;
        case 6:
            return 944;
            break;
        case 8:
            return 1408;
            break;
        case 11:
            return 928;
            break;
        case 14:
            return 960;
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 4:
            return 937;
            break;
        case 6:
            return 945;
            break;
        case 8:
            return 1409;
            break;
        case 11:
            return 929;
            break;
        case 14:
            return 961;
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 4:
            return 938;
            break;
        case 6:
            return 946;
            break;
        case 8:
            return 1410;
            break;
        case 11:
            return 930;
            break;
        case 14:
            return 962;
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 4:
            return 939;
            break;
        case 6:
            return 947;
            break;
        case 8:
            return 1411;
            break;
        case 11:
            return 931;
            break;
        case 14:
            return 963;
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 4:
            return 940;
            break;
        case 6:
            return 948;
            break;
        case 8:
            return 1412;
            break;
        case 11:
            return 932;
            break;
        case 14:
            return 964;
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 14:
            return 965;
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 14:
            return 966;
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 14:
            return 967;
            break;
        }
        break;
    }
    return 925;
}

auto sub_3a458(auto a_0, auto a_1) {
    switch (a_1) {
    case 0:
        switch (a_0) {
        case 2:
            return 865;
            break;
        case 3:
            return 1389;
            break;
        case 4:
            return 881;
            break;
        case 6:
            return 889;
            break;
        case 8:
            return 1390;
            break;
        case 9:
            return 1398;
            break;
        case 10:
            return 1400;
            break;
        case 1:
            return 897;
            break;
        case 7:
            return 1401;
            break;
        case 11:
            return 873;
            break;
        case 14:
            return 905;
            break;
        case 12:
            return 916;
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 2:
            return 866;
            break;
        case 4:
            return 882;
            break;
        case 6:
            return 890;
            break;
        case 8:
            return 1391;
            break;
        case 9:
            return 1399;
            break;
        case 7:
            return 1402;
            break;
        case 11:
            return 874;
            break;
        case 14:
            return 906;
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 2:
            return 867;
            break;
        case 4:
            return 883;
            break;
        case 6:
            return 891;
            break;
        case 8:
            return 1392;
            break;
        case 7:
            return 1403;
            break;
        case 11:
            return 875;
            break;
        case 14:
            return 907;
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 4:
            return 884;
            break;
        case 6:
            return 892;
            break;
        case 8:
            return 1393;
            break;
        case 11:
            return 876;
            break;
        case 14:
            return 908;
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 4:
            return 885;
            break;
        case 6:
            return 893;
            break;
        case 8:
            return 1394;
            break;
        case 11:
            return 877;
            break;
        case 14:
            return 909;
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 4:
            return 886;
            break;
        case 6:
            return 894;
            break;
        case 8:
            return 1395;
            break;
        case 11:
            return 878;
            break;
        case 14:
            return 910;
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 4:
            return 887;
            break;
        case 6:
            return 895;
            break;
        case 8:
            return 1396;
            break;
        case 11:
            return 879;
            break;
        case 14:
            return 911;
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 4:
            return 888;
            break;
        case 6:
            return 896;
            break;
        case 8:
            return 1397;
            break;
        case 11:
            return 880;
            break;
        case 14:
            return 912;
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 14:
            return 913;
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 14:
            return 914;
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 14:
            return 915;
            break;
        }
        break;
    }
    return 873;
}

auto sub_3a853(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    if (a_0 == 0) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/][a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/][a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/][a_3/*1*/], a_4);
    } else if (a_0 == 1) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f4[a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f4[a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f4[a_3/*1*/], a_4);
    } else if (a_0 == 2) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f8[a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f8[a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f8[a_3/*1*/], a_4);
    } else if (a_0 == 3) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._fC[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._fC[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._fC[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f10[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f10[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f10[a_3/*1*/], a_4);
        } else if (a_2 == 2) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f14[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f14[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f14[a_3/*1*/], a_4);
        } else if (a_2 == 3) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f18[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f18[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f18[a_3/*1*/], a_4);
        } else if (a_2 == 4) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f1C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f1C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f1C[a_3/*1*/], a_4);
        } else if (a_2 == 5) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f20[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f20[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f20[a_3/*1*/], a_4);
        } else if (a_2 == 6) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f24[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f24[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f24[a_3/*1*/], a_4);
        } else if (a_2 == 7) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f28[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f28[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f28[a_3/*1*/], a_4);
        } else if (a_2 == 8) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f2C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f2C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f2C[a_3/*1*/], a_4);
        } else if (a_2 == 9) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f30[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f30[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f30[a_3/*1*/], a_4);
        }
    } else if (a_0 == 4) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f34[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f34[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f34[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f38[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f38[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f38[a_3/*1*/], a_4);
        } else if (a_2 == 2) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f3C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f3C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f3C[a_3/*1*/], a_4);
        } else if (a_2 == 3) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f40[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f40[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f40[a_3/*1*/], a_4);
        }
    } else if (a_0 == 5) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f44[a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f44[a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f44[a_3/*1*/], a_4);
    } else if (a_0 == 6) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f48[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f48[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f48[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f4C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f4C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f4C[a_3/*1*/], a_4);
        } else if (a_2 == 2) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f50[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f50[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f50[a_3/*1*/], a_4);
        } else if (a_2 == 3) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f54[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f54[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f54[a_3/*1*/], a_4);
        } else if (a_2 == 4) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f58[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f58[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f58[a_3/*1*/], a_4);
        }
    } else if (a_0 == 7) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f5C[a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f5C[a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f5C[a_3/*1*/], a_4);
    } else if (a_0 == 8) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f60[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f60[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f60[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f64[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f64[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f64[a_3/*1*/], a_4);
        } else if (a_2 == 2) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f68[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f68[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f68[a_3/*1*/], a_4);
        }
    } else if (a_0 == 9) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f6C[a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f6C[a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f6C[a_3/*1*/], a_4);
    } else if (a_0 == 10) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f70[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f70[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f70[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f74[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f74[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f74[a_3/*1*/], a_4);
        }
    } else if (a_0 == 11) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f78[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f78[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f78[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f7C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f7C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f7C[a_3/*1*/], a_4);
        }
    } else if (a_0 == 12) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f80[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f80[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f80[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f84[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f84[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f84[a_3/*1*/], a_4);
        }
    } else if (a_0 == 13) {
        if (a_5 == 1) {
            GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f88[a_3/*1*/], a_4);
        }
        if (a_6 == 1) {
            GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f88[a_3/*1*/], a_4);
        }
        return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f88[a_3/*1*/], a_4);
    } else if (a_0 == 14) {
        if (a_2 == 0) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f8C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f8C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f8C[a_3/*1*/], a_4);
        } else if (a_2 == 1) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f90[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f90[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f90[a_3/*1*/], a_4);
        } else if (a_2 == 2) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f94[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f94[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f94[a_3/*1*/], a_4);
        } else if (a_2 == 3) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f98[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f98[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f98[a_3/*1*/], a_4);
        } else if (a_2 == 4) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._f9C[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._f9C[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._f9C[a_3/*1*/], a_4);
        } else if (a_2 == 5) {
            if (a_5 == 1) {
                GAMEPLAY::SET_BIT(&game_state._f6EA[a_1/*164*/]._fA0[a_3/*1*/], a_4);
            }
            if (a_6 == 1) {
                GAMEPLAY::CLEAR_BIT(&game_state._f6EA[a_1/*164*/]._fA0[a_3/*1*/], a_4);
            }
            return GAMEPLAY::IS_BIT_SET(game_state._f6EA[a_1/*164*/]._fA0[a_3/*1*/], a_4);
        }
    }
    return 0;
}

auto sub_3b771(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    v_7 = g_10E38;
    if (a_4 != -1) {
        v_7 = a_4;
    }
    if (sub_3b7b3(a_0, a_1, &v_9, &v_8, a_2, a_3)) {
        v_A = sub_4b3f(v_9, v_7, 0);
        return GAMEPLAY::IS_BIT_SET(v_A, v_8);
    }
    return 0;
}

auto sub_3b7b3(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    a_2 = 3790;
    v_8 = -1;
    if (a_4) {
        if (g_2703B3) {
            v_8 = PED::_1E77FA7A62EE6C4C(a_0);
        } else { 
            v_8 = PED::_F033419D1B81FAE8(a_0);
        }
    } else if (a_5) {
        v_8 = PED::_1E77FA7A62EE6C4C(a_0);
    } else { 
        v_8 = PED::_F033419D1B81FAE8(a_0);
    }
    if (v_8 == -1) {
        return 0;
    }
    switch (a_1) {
    case 1:
        switch (SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_8) / 32.0)) {
        case 0:
            a_2 = 1748;
            break;
        case 1:
            a_2 = 1749;
            break;
        case 2:
            a_2 = 1750;
            break;
        case 3:
            a_2 = 1751;
            break;
        case 4:
            a_2 = 1752;
            break;
        case 5:
            a_2 = 1753;
            break;
        case 6:
            a_2 = 1760;
            break;
        case 7:
            a_2 = 1761;
            break;
        case 8:
            a_2 = 1762;
            break;
        case 9:
            a_2 = 1763;
            break;
        case 10:
            a_2 = 1764;
            break;
        case 11:
            a_2 = 1765;
            break;
        case 12:
            a_2 = 1766;
            break;
        case 13:
            a_2 = 1774;
            break;
        case 14:
            a_2 = 1775;
            break;
        case 15:
            a_2 = 1876;
            break;
        case 16:
            a_2 = 1877;
            break;
        case 17:
            a_2 = 1908;
            break;
        case 18:
            a_2 = 1922;
            break;
        case 19:
            a_2 = 1923;
            break;
        case 20:
            a_2 = 1924;
            break;
        case 21:
            a_2 = 1925;
            break;
        case 22:
            a_2 = 1926;
            break;
        case 23:
            a_2 = 2030;
            break;
        case 24:
            a_2 = 2031;
            break;
        case 25:
            a_2 = 2057;
            break;
        case 26:
            a_2 = 2058;
            break;
        case 27:
            a_2 = 2059;
            break;
        case 28:
            a_2 = 2060;
            break;
        case 29:
            a_2 = 2061;
            break;
        case 30:
            a_2 = 2062;
            break;
        case 31:
            a_2 = 2063;
            break;
        case 32:
            a_2 = 2064;
            break;
        case 33:
            a_2 = 2065;
            break;
        case 34:
            a_2 = 2066;
            break;
        case 35:
            a_2 = 2313;
            break;
        case 36:
            a_2 = 2314;
            break;
        case 37:
            a_2 = 2362;
            break;
        case 38:
            a_2 = 2363;
            break;
        case 39:
            a_2 = 2364;
            break;
        case 40:
            a_2 = 2365;
            break;
        case 41:
            a_2 = 2424;
            break;
        case 42:
            a_2 = 2425;
            break;
        case 43:
            a_2 = 2426;
            break;
        case 44:
            a_2 = 2427;
            break;
        case 45:
            a_2 = 2428;
            break;
        case 46:
            a_2 = 2429;
            break;
        case 47:
            a_2 = 2430;
            break;
        case 48:
            a_2 = 2431;
            break;
        case 49:
            a_2 = 2432;
            break;
        case 50:
            a_2 = 2433;
            break;
        case 51:
            a_2 = 2562;
            break;
        case 52:
            a_2 = 2563;
            break;
        case 53:
            a_2 = 2564;
            break;
        case 54:
            a_2 = 2565;
            break;
        case 55:
            a_2 = 2566;
            break;
        case 56:
            a_2 = 2567;
            break;
        case 57:
            a_2 = 2568;
            break;
        case 58:
            a_2 = 2569;
            break;
        case 59:
            a_2 = 2570;
            break;
        case 60:
            a_2 = 2571;
            break;
        case 61:
            a_2 = 2572;
            break;
        case 62:
            a_2 = 3168;
            break;
        case 63:
            a_2 = 3169;
            break;
        case 64:
            a_2 = 3170;
            break;
        case 65:
            a_2 = 3171;
            break;
        case 66:
            a_2 = 3172;
            break;
        case 67:
            a_2 = 3173;
            break;
        default:
            break;
        }
        break;
    case 2:
        switch (SYSTEM::FLOOR(__678_$BBDA792448DB5A89(v_8) / 32.0)) {
        case 0:
            a_2 = 1754;
            break;
        case 1:
            a_2 = 1755;
            break;
        case 2:
            a_2 = 1756;
            break;
        case 3:
            a_2 = 1757;
            break;
        case 4:
            a_2 = 1758;
            break;
        case 5:
            a_2 = 1759;
            break;
        case 6:
            a_2 = 1767;
            break;
        case 7:
            a_2 = 1768;
            break;
        case 8:
            a_2 = 1769;
            break;
        case 9:
            a_2 = 1770;
            break;
        case 10:
            a_2 = 1771;
            break;
        case 11:
            a_2 = 1772;
            break;
        case 12:
            a_2 = 1773;
            break;
        case 13:
            a_2 = 1776;
            break;
        case 14:
            a_2 = 1777;
            break;
        case 15:
            a_2 = 1878;
            break;
        case 16:
            a_2 = 1879;
            break;
        case 17:
            a_2 = 1909;
            break;
        case 18:
            a_2 = 1927;
            break;
        case 19:
            a_2 = 1928;
            break;
        case 20:
            a_2 = 1929;
            break;
        case 21:
            a_2 = 1930;
            break;
        case 22:
            a_2 = 1931;
            break;
        case 23:
            a_2 = 2032;
            break;
        case 24:
            a_2 = 2033;
            break;
        case 25:
            a_2 = 2067;
            break;
        case 26:
            a_2 = 2068;
            break;
        case 27:
            a_2 = 2069;
            break;
        case 28:
            a_2 = 2070;
            break;
        case 29:
            a_2 = 2071;
            break;
        case 30:
            a_2 = 2072;
            break;
        case 31:
            a_2 = 2073;
            break;
        case 32:
            a_2 = 2074;
            break;
        case 33:
            a_2 = 2075;
            break;
        case 34:
            a_2 = 2076;
            break;
        case 35:
            a_2 = 2315;
            break;
        case 36:
            a_2 = 2316;
            break;
        case 37:
            a_2 = 2366;
            break;
        case 38:
            a_2 = 2367;
            break;
        case 39:
            a_2 = 2368;
            break;
        case 40:
            a_2 = 2369;
            break;
        case 41:
            a_2 = 2434;
            break;
        case 42:
            a_2 = 2435;
            break;
        case 43:
            a_2 = 2436;
            break;
        case 44:
            a_2 = 2437;
            break;
        case 45:
            a_2 = 2438;
            break;
        case 46:
            a_2 = 2439;
            break;
        case 47:
            a_2 = 2440;
            break;
        case 48:
            a_2 = 2441;
            break;
        case 49:
            a_2 = 2442;
            break;
        case 50:
            a_2 = 2443;
            break;
        case 51:
            a_2 = 2573;
            break;
        case 52:
            a_2 = 2574;
            break;
        case 53:
            a_2 = 2575;
            break;
        case 54:
            a_2 = 2576;
            break;
        case 55:
            a_2 = 2577;
            break;
        case 56:
            a_2 = 2578;
            break;
        case 57:
            a_2 = 2579;
            break;
        case 58:
            a_2 = 2580;
            break;
        case 59:
            a_2 = 2581;
            break;
        case 60:
            a_2 = 2582;
            break;
        case 61:
            a_2 = 2583;
            break;
        case 62:
            a_2 = 3174;
            break;
        case 63:
            a_2 = 3175;
            break;
        case 64:
            a_2 = 3176;
            break;
        case 65:
            a_2 = 3177;
            break;
        case 66:
            a_2 = 3178;
            break;
        case 67:
            a_2 = 3179;
            break;
        default:
            break;
        }
        break;
    }
    a_3 = v_8 % 32;
    return a_2 != 3790;
}

auto sub_3c05a(auto a_0) {
    switch (a_0) {
    case -1:
        return 0;
        break;
    case 0:
        return 0;
        break;
    case 1:
        return 1;
        break;
    case 2:
        return 2;
        break;
    case 3:
        return 3;
        break;
    case 4:
        return 4;
        break;
    case 5:
        return 5;
        break;
    case 6:
        return 6;
        break;
    case 7:
        return 7;
        break;
    case 8:
        return 8;
        break;
    case 9:
        return 0;
        break;
    case 10:
        return 1;
        break;
    case 11:
        return 0;
        break;
    case 12:
        return 0;
        break;
    case 13:
        return 0;
        break;
    }
    return 0;
}

void sub_3c12e(auto a_0) {
    v_3 = 0;
    g_10E3A[0/*14*/]._f5 = 4;
    sub_3c14c(v_3, a_0, 0);
}

void sub_3c14c(auto a_0, auto a_1, auto a_2) {
    v_5 = a_1 - a_2;
    v_5 = v_5;
    if (v_5 < 0) {
        return ;
    }
    v_6 = g_10E3A[0/*14*/]._f5;
    if (a_0 == 12) {
        v_17 = 0;
        v_18 = DLC1::_F3FBE2D50A6A8C28(v_6, 0);
        for (v_16 = 0; v_16 < v_18; v_16 += 1) {
            DLC1::GET_SHOP_PED_QUERY_OUTFIT(v_16, &v_7);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_7)) {
                if (v_17 == (a_1 - a_2)) {
                    g_280004 = v_7._f1;
                    g_280005 = v_7;
                    sub_398c7(&g_10E3A[0/*14*/], a_0, a_1, &v_7._f7, 0, 0, v_7._f2, 0, -1, 2, 1);
                    return ;
                }
                v_17 += 1;
            }
        }
    } else if (a_0 == 13) {
        sub_398c7(&g_10E3A[0/*14*/], a_0, a_1, "NO_LABEL", 0, 0, 0, 1, -1, 2, 1);
    } else if (a_0 == 14) {
        DLC1::INIT_SHOP_PED_PROP(&v_19);
        v_2C = 0;
        v_2D = DLC1::_GET_NUM_PROPS_FROM_OUTFIT(v_6, 6, -1, 1, -1, -1);
        for (v_2B = 0; v_2B < v_2D; v_2B += 1) {
            DLC1::GET_SHOP_PED_QUERY_PROP(v_2B, &v_19);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_19)) {
                if (v_2C == (a_1 - a_2)) {
                    if (v_19._f6 == 0) {
                        v_2A = 9;
                    } else if (v_19._f6 == 1) {
                        v_2A = 10;
                    } else if (v_19._f6 == 2) {
                        v_2A = 2;
                    } else if (v_19._f6 == 3) {
                        v_2A = 3;
                    } else if (v_19._f6 == 4) {
                        v_2A = 4;
                    } else if (v_19._f6 == 5) {
                        v_2A = 5;
                    } else if (v_19._f6 == 6) {
                        v_2A = 6;
                    } else if (v_19._f6 == 7) {
                        v_2A = 7;
                    } else if (v_19._f6 == 8) {
                        v_2A = 8;
                    } else { 
                        v_2A = -1;
                    }
                    g_280004 = v_19._f1;
                    g_280005 = v_19;
                    sub_398c7(&g_10E3A[0/*14*/], a_0, a_1, &v_19._f9, v_19._f3, v_19._f4, v_19._f5, DLC1::_341DE7ED1D2A1BFD(v_19._f1, 0x85c5d476, 0), v_2A, 2, v_19._f1 != 0);
                    return ;
                }
                v_2C += 1;
            }
        }
    } else { 
        DLC1::INIT_SHOP_PED_COMPONENT(&v_2E);
        v_40 = 0;
        v_41 = DLC1::_GET_NUM_PROPS_FROM_OUTFIT(v_6, 6, -1, 0, -1, sub_34fc7(a_0));
        for (v_3F = 0; v_3F < v_41; v_3F += 1) {
            DLC1::GET_SHOP_PED_QUERY_COMPONENT(v_3F, &v_2E);
            if (!DLC1::_IS_OUTFIT_EMPTY(v_2E)) {
                if (v_40 == (a_1 - a_2)) {
                    g_280004 = v_2E._f1;
                    g_280005 = v_2E;
                    sub_398c7(&g_10E3A[0/*14*/], a_0, a_1, &v_2E._f9, v_2E._f3, v_2E._f4, v_2E._f5, DLC1::_341DE7ED1D2A1BFD(v_2E._f1, 0x85c5d476, 0), -1, 2, v_2E._f1 != 0);
                    return ;
                }
                v_40 += 1;
            }
        }
    }
}

void sub_3c3c7(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 5;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        break;
    case 2:
        v_9 = 2;
        v_A = 0;
        break;
    case 3:
        v_9 = 3;
        v_A = 0;
        break;
    case 4:
        v_9 = 4;
        v_A = 0;
        break;
    case 5:
        v_9 = 5;
        v_A = 0;
        break;
    case 6:
        v_9 = 6;
        v_A = 0;
        break;
    case 7:
        v_9 = 7;
        v_A = 0;
        break;
    case 8:
        v_9 = 8;
        v_A = 0;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 9);
        return ;
        break;
    }
    v_5/*"16"*/ = "HA_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_3c4c8(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 12;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_3 = 1;
        break;
    case 1:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S1";
        break;
    case 2:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S2";
        break;
    case 3:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S3";
        break;
    case 4:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S4";
        break;
    case 5:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S5";
        break;
    case 6:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S6";
        break;
    case 7:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S7";
        break;
    case 8:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_S8";
        break;
    case 9:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P1";
        break;
    case 10:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P2";
        break;
    case 11:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P3";
        break;
    case 12:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P4";
        break;
    case 13:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P5";
        break;
    case 14:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P6";
        break;
    case 15:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P7";
        break;
    case 16:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P8";
        break;
    case 17:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P9";
        break;
    case 18:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_P10";
        break;
    case 19:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B1";
        break;
    case 20:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B2";
        break;
    case 21:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B3";
        break;
    case 22:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B4";
        break;
    case 23:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B5";
        break;
    case 24:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B6";
        break;
    case 25:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B7";
        break;
    case 26:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B8";
        break;
    case 27:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMF_B9";
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 28);
        return ;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_3c7a5(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 14;
    v_E = 0;
    switch (a_0) {
    case 0:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        break;
    case 1:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        break;
    case 2:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 2;
        break;
    case 3:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 3;
        break;
    case 4:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 4;
        break;
    case 5:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 5;
        break;
    case 6:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 6;
        break;
    case 7:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 7;
        break;
    case 8:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 8;
        break;
    case 10:
        v_5/*"16"*/ = "HT_FMF_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 11:
        v_5/*"16"*/ = "HT_FMF_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 12:
        v_5/*"16"*/ = "HT_FMF_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 85;
        v_B = 0;
        v_E = 1;
        break;
    case 13:
        v_5/*"16"*/ = "HT_FMF_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 75;
        v_B = 0;
        v_E = 1;
        break;
    case 14:
        v_5/*"16"*/ = "HT_FMF_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 235;
        v_B = 0;
        v_E = 1;
        break;
    case 15:
        v_5/*"16"*/ = "HT_FMF_0_5";
        v_9 = 0;
        v_A = 5;
        v_4 = 80;
        v_B = 0;
        v_E = 1;
        break;
    case 16:
        v_5/*"16"*/ = "HT_FMF_0_6";
        v_9 = 0;
        v_A = 6;
        v_4 = 85;
        v_B = 0;
        v_E = 1;
        break;
    case 17:
        v_5/*"16"*/ = "HT_FMF_0_7";
        v_9 = 0;
        v_A = 7;
        v_4 = 90;
        v_B = 0;
        v_E = 1;
        break;
    }
    switch (a_0) {
    case 18:
        v_5/*"16"*/ = "HT_FMF_1_0";
        v_9 = 1;
        v_A = 0;
        v_B = 0;
        break;
    case 19:
        v_5/*"16"*/ = "HT_FMF_2_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 20:
        v_5/*"16"*/ = "HT_FMF_2_1";
        v_9 = 2;
        v_A = 1;
        v_4 = 5000;
        v_B = 0;
        v_E = 1;
        break;
    case 21:
        v_5/*"16"*/ = "HT_FMF_2_2";
        v_9 = 2;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 22:
        v_5/*"16"*/ = "HT_FMF_2_3";
        v_9 = 2;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 23:
        v_5/*"16"*/ = "HT_FMF_2_4";
        v_9 = 2;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 24:
        v_5/*"16"*/ = "HT_FMF_2_5";
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 25:
        v_5/*"16"*/ = "HT_FMF_2_6";
        v_9 = 2;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 26:
        v_5/*"16"*/ = "HT_FMF_2_7";
        v_9 = 2;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 27:
        v_5/*"16"*/ = "HT_FMF_3_0";
        v_9 = 3;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 28:
        v_5/*"16"*/ = "HT_FMF_3_1";
        v_9 = 3;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 29:
        v_5/*"16"*/ = "HT_FMF_3_2";
        v_9 = 3;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 30:
        v_5/*"16"*/ = "HT_FMF_3_3";
        v_9 = 3;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 31:
        v_5/*"16"*/ = "HT_FMF_3_4";
        v_9 = 3;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 32:
        v_5/*"16"*/ = "HT_FMF_3_5";
        v_9 = 3;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 33:
        v_5/*"16"*/ = "HT_FMF_3_6";
        v_9 = 3;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 34:
        v_5/*"16"*/ = "HT_FMF_3_7";
        v_9 = 3;
        v_A = 7;
        v_4 = 120;
        v_B = 0;
        v_E = 1;
        break;
    case 35:
        v_5/*"16"*/ = "HT_FMF_4_0";
        v_9 = 4;
        v_A = 0;
        v_4 = 400;
        v_B = 0;
        v_E = 1;
        break;
    case 36:
        v_5/*"16"*/ = "HT_FMF_4_1";
        v_9 = 4;
        v_A = 1;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 37:
        v_5/*"16"*/ = "HT_FMF_4_2";
        v_9 = 4;
        v_A = 2;
        v_4 = 375;
        v_B = 0;
        v_E = 1;
        break;
    case 38:
        v_5/*"16"*/ = "HT_FMF_4_3";
        v_9 = 4;
        v_A = 3;
        v_4 = 75;
        v_B = 0;
        v_E = 1;
        break;
    case 39:
        v_5/*"16"*/ = "HT_FMF_4_4";
        v_9 = 4;
        v_A = 4;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 40:
        v_5/*"16"*/ = "HT_FMF_4_5";
        v_9 = 4;
        v_A = 5;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 41:
        v_5/*"16"*/ = "HT_FMF_4_6";
        v_9 = 4;
        v_A = 6;
        v_4 = 85;
        v_B = 0;
        v_E = 1;
        break;
    case 42:
        v_5/*"16"*/ = "HT_FMF_4_7";
        v_9 = 4;
        v_A = 7;
        v_4 = 325;
        v_B = 0;
        v_E = 1;
        break;
    case 43:
        v_5/*"16"*/ = "HT_FMF_5_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 44:
        v_5/*"16"*/ = "HT_FMF_5_1";
        v_9 = 5;
        v_A = 1;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 45:
        v_5/*"16"*/ = "HT_FMF_5_2";
        v_9 = 5;
        v_A = 2;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 46:
        v_5/*"16"*/ = "HT_FMF_5_3";
        v_9 = 5;
        v_A = 3;
        v_4 = 40;
        v_B = 0;
        v_E = 1;
        break;
    case 47:
        v_5/*"16"*/ = "HT_FMF_5_4";
        v_9 = 5;
        v_A = 4;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 48:
        v_5/*"16"*/ = "HT_FMF_5_5";
        v_9 = 5;
        v_A = 5;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 49:
        v_5/*"16"*/ = "HT_FMF_5_6";
        v_9 = 5;
        v_A = 6;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 50:
        v_5/*"16"*/ = "HT_FMF_5_7";
        v_9 = 5;
        v_A = 7;
        v_4 = 255;
        v_B = 0;
        v_E = 1;
        break;
    case 51:
        v_5/*"16"*/ = "HT_FMF_6_0";
        v_9 = 6;
        v_A = 0;
        v_4 = 360;
        v_B = 0;
        v_E = 1;
        break;
    case 52:
        v_5/*"16"*/ = "HT_FMF_6_1";
        v_9 = 6;
        v_A = 1;
        v_4 = 195;
        v_B = 0;
        v_E = 1;
        break;
    case 53:
        v_5/*"16"*/ = "HT_FMF_6_2";
        v_9 = 6;
        v_A = 2;
        v_4 = 3970;
        v_B = 0;
        v_E = 1;
        break;
    case 54:
        v_5/*"16"*/ = "HT_FMF_6_3";
        v_9 = 6;
        v_A = 3;
        v_4 = 135;
        v_B = 0;
        v_E = 1;
        break;
    case 55:
        v_5/*"16"*/ = "HT_FMF_6_4";
        v_9 = 6;
        v_A = 4;
        v_4 = 1355;
        v_B = 0;
        v_E = 1;
        break;
    case 56:
        v_5/*"16"*/ = "HT_FMF_6_5";
        v_9 = 6;
        v_A = 5;
        v_4 = 110;
        v_B = 0;
        v_E = 1;
        break;
    case 57:
        v_5/*"16"*/ = "HT_FMF_6_6";
        v_9 = 6;
        v_A = 6;
        v_4 = 140;
        v_B = 0;
        v_E = 1;
        break;
    case 58:
        v_5/*"16"*/ = "HT_FMF_6_7";
        v_9 = 6;
        v_A = 7;
        v_4 = 130;
        v_B = 0;
        v_E = 1;
        break;
    case 59:
        v_5/*"16"*/ = "HT_FMF_7_0";
        v_9 = 7;
        v_A = 0;
        v_4 = 230;
        v_B = 0;
        v_E = 1;
        break;
    case 60:
        v_5/*"16"*/ = "HT_FMF_7_1";
        v_9 = 7;
        v_A = 1;
        v_4 = 195;
        v_B = 0;
        v_E = 1;
        break;
    case 61:
        v_5/*"16"*/ = "HT_FMF_7_2";
        v_9 = 7;
        v_A = 2;
        v_4 = 515;
        v_B = 0;
        v_E = 1;
        break;
    case 62:
        v_5/*"16"*/ = "HT_FMF_7_3";
        v_9 = 7;
        v_A = 3;
        v_4 = 545;
        v_B = 0;
        v_E = 1;
        break;
    case 63:
        v_5/*"16"*/ = "HT_FMF_7_4";
        v_9 = 7;
        v_A = 4;
        v_4 = 195;
        v_B = 0;
        v_E = 1;
        break;
    case 64:
        v_5/*"16"*/ = "HT_FMF_7_5";
        v_9 = 7;
        v_A = 5;
        v_4 = 155;
        v_B = 0;
        v_E = 1;
        break;
    case 65:
        v_5/*"16"*/ = "HT_FMF_7_6";
        v_9 = 7;
        v_A = 6;
        v_4 = 155;
        v_B = 0;
        v_E = 1;
        break;
    case 66:
        v_5/*"16"*/ = "HT_FMF_7_7";
        v_9 = 7;
        v_A = 7;
        v_4 = 1440;
        v_B = 0;
        v_E = 1;
        break;
    }
    switch (a_0) {
    case 67:
        v_5/*"16"*/ = "HT_FMF_8_0";
        v_9 = 8;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 68:
        v_5/*"16"*/ = "HT_FMF_8_1";
        v_9 = 8;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 69:
        v_5/*"16"*/ = "HT_FMF_8_2";
        v_9 = 8;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 70:
        v_5/*"16"*/ = "HT_FMF_8_3";
        v_9 = 8;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 71:
        v_5/*"16"*/ = "HT_FMF_8_4";
        v_9 = 8;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 72:
        v_5/*"16"*/ = "HT_FMF_8_5";
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 73:
        v_5/*"16"*/ = "HT_FMF_8_6";
        v_9 = 8;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 74:
        v_5/*"16"*/ = "HT_FMF_8_7";
        v_9 = 8;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 75:
        v_5/*"16"*/ = "HT_FMF_9_0";
        v_9 = 9;
        v_A = 0;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 76:
        v_5/*"16"*/ = "HT_FMF_9_1";
        v_9 = 9;
        v_A = 1;
        v_4 = 25;
        v_B = 0;
        v_E = 1;
        break;
    case 77:
        v_5/*"16"*/ = "HT_FMF_9_2";
        v_9 = 9;
        v_A = 2;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 78:
        v_5/*"16"*/ = "HT_FMF_9_3";
        v_9 = 9;
        v_A = 3;
        v_4 = 25;
        v_B = 0;
        v_E = 1;
        break;
    case 79:
        v_5/*"16"*/ = "HT_FMF_9_4";
        v_9 = 9;
        v_A = 4;
        v_4 = 50;
        v_B = 0;
        v_E = 1;
        break;
    case 80:
        v_5/*"16"*/ = "HT_FMF_9_5";
        v_9 = 9;
        v_A = 5;
        v_4 = 40;
        v_B = 0;
        v_E = 1;
        break;
    case 81:
        v_5/*"16"*/ = "HT_FMF_9_6";
        v_9 = 9;
        v_A = 6;
        v_4 = 575;
        v_B = 0;
        v_E = 1;
        break;
    case 82:
        v_5/*"16"*/ = "HT_FMF_9_7";
        v_9 = 9;
        v_A = 7;
        v_4 = 605;
        v_B = 0;
        v_E = 1;
        break;
    case 83:
        v_5/*"16"*/ = "HT_FMF_10_0";
        v_9 = 10;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 84:
        v_5/*"16"*/ = "HT_FMF_10_1";
        v_9 = 10;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 85:
        v_5/*"16"*/ = "HT_FMF_10_2";
        v_9 = 10;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 86:
        v_5/*"16"*/ = "HT_FMF_10_3";
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 87:
        v_5/*"16"*/ = "HT_FMF_10_4";
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 88:
        v_5/*"16"*/ = "HT_FMF_10_5";
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 89:
        v_5/*"16"*/ = "HT_FMF_10_6";
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 90:
        v_5/*"16"*/ = "HT_FMF_10_7";
        v_9 = 10;
        v_A = 7;
        v_4 = 285;
        v_B = 0;
        v_E = 1;
        break;
    case 91:
        v_5/*"16"*/ = "HT_FMF_11_0";
        v_9 = 11;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 92:
        v_5/*"16"*/ = "HT_FMF_11_1";
        v_9 = 11;
        v_A = 1;
        v_4 = 2125;
        v_B = 0;
        v_E = 1;
        break;
    case 93:
        v_5/*"16"*/ = "HT_FMF_11_2";
        v_9 = 11;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 94:
        v_5/*"16"*/ = "HT_FMF_11_3";
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 95:
        v_5/*"16"*/ = "HT_FMF_11_4";
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 96:
        v_5/*"16"*/ = "HT_FMF_11_5";
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 97:
        v_5/*"16"*/ = "HT_FMF_11_6";
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 98:
        v_5/*"16"*/ = "HT_FMF_11_7";
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 99:
        v_5/*"16"*/ = "HT_FMF_12_0";
        v_9 = 12;
        v_A = 0;
        v_4 = 75;
        v_B = 0;
        v_E = 1;
        break;
    case 100:
        v_5/*"16"*/ = "HT_FMF_12_1";
        v_9 = 12;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 101:
        v_5/*"16"*/ = "HT_FMF_12_2";
        v_9 = 12;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 102:
        v_5/*"16"*/ = "HT_FMF_12_3";
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 103:
        v_5/*"16"*/ = "HT_FMF_12_4";
        v_9 = 12;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 104:
        v_5/*"16"*/ = "HT_FMF_12_5";
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 105:
        v_5/*"16"*/ = "HT_FMF_12_6";
        v_9 = 12;
        v_A = 6;
        v_4 = 75;
        v_B = 0;
        v_E = 1;
        break;
    case 106:
        v_5/*"16"*/ = "HT_FMF_12_7";
        v_9 = 12;
        v_A = 7;
        v_4 = 295;
        v_B = 0;
        v_E = 1;
        break;
    case 107:
        v_5/*"16"*/ = "HT_FMF_13_0";
        v_9 = 13;
        v_A = 0;
        v_4 = 195;
        v_B = 0;
        v_E = 1;
        break;
    case 108:
        v_5/*"16"*/ = "HT_FMF_13_1";
        v_9 = 13;
        v_A = 1;
        v_4 = 200;
        v_B = 0;
        v_E = 1;
        break;
    case 109:
        v_5/*"16"*/ = "HT_FMF_13_2";
        v_9 = 13;
        v_A = 2;
        v_4 = 160;
        v_B = 0;
        v_E = 1;
        break;
    case 110:
        v_5/*"16"*/ = "HT_FMF_13_3";
        v_9 = 13;
        v_A = 3;
        v_4 = 855;
        v_B = 0;
        v_E = 1;
        break;
    case 111:
        v_5/*"16"*/ = "HT_FMF_13_4";
        v_9 = 13;
        v_A = 4;
        v_4 = 1615;
        v_B = 0;
        v_E = 1;
        break;
    case 112:
        v_5/*"16"*/ = "HT_FMF_13_5";
        v_9 = 13;
        v_A = 5;
        v_4 = 1130;
        v_B = 0;
        v_E = 1;
        break;
    case 113:
        v_5/*"16"*/ = "HT_FMF_13_6";
        v_9 = 13;
        v_A = 6;
        v_4 = 165;
        v_B = 0;
        v_E = 1;
        break;
    case 114:
        v_5/*"16"*/ = "HT_FMF_13_7";
        v_9 = 13;
        v_A = 7;
        v_4 = 215;
        v_B = 0;
        v_E = 1;
        break;
    case 115:
        v_5/*"16"*/ = "HT_FMF_14_0";
        v_9 = 14;
        v_A = 0;
        v_4 = 145;
        v_B = 0;
        v_E = 1;
        break;
    case 116:
        v_5/*"16"*/ = "HT_FMF_14_1";
        v_9 = 14;
        v_A = 1;
        v_4 = 250;
        v_B = 0;
        v_E = 1;
        break;
    case 117:
        v_5/*"16"*/ = "HT_FMF_14_2";
        v_9 = 14;
        v_A = 2;
        v_4 = 110;
        v_B = 0;
        v_E = 1;
        break;
    case 118:
        v_5/*"16"*/ = "HT_FMF_14_3";
        v_9 = 14;
        v_A = 3;
        v_4 = 145;
        v_B = 0;
        v_E = 1;
        break;
    case 119:
        v_5/*"16"*/ = "HT_FMF_14_4";
        v_9 = 14;
        v_A = 4;
        v_4 = 105;
        v_B = 0;
        v_E = 1;
        break;
    case 120:
        v_5/*"16"*/ = "HT_FMF_14_5";
        v_9 = 14;
        v_A = 5;
        v_4 = 105;
        v_B = 0;
        v_E = 1;
        break;
    case 121:
        v_5/*"16"*/ = "HT_FMF_14_6";
        v_9 = 14;
        v_A = 6;
        v_4 = 115;
        v_B = 0;
        v_E = 1;
        break;
    case 122:
        v_5/*"16"*/ = "HT_FMF_14_7";
        v_9 = 14;
        v_A = 7;
        v_4 = 115;
        v_B = 0;
        v_E = 1;
        break;
    case 123:
        v_5/*"16"*/ = "HT_FMF_15_0";
        v_9 = 15;
        v_A = 0;
        v_4 = 390;
        v_B = 0;
        v_E = 1;
        break;
    case 124:
        v_5/*"16"*/ = "HT_FMF_15_1";
        v_9 = 15;
        v_A = 1;
        v_4 = 395;
        v_B = 0;
        v_E = 1;
        break;
    case 125:
        v_5/*"16"*/ = "HT_FMF_15_2";
        v_9 = 15;
        v_A = 2;
        v_4 = 595;
        v_B = 0;
        v_E = 1;
        break;
    case 126:
        v_5/*"16"*/ = "HT_FMF_15_3";
        v_9 = 15;
        v_A = 3;
        v_4 = 425;
        v_B = 0;
        v_E = 1;
        break;
    case 127:
        v_5/*"16"*/ = "HT_FMF_15_4";
        v_9 = 15;
        v_A = 4;
        v_4 = 600;
        v_B = 0;
        v_E = 1;
        break;
    case 128:
        v_5/*"16"*/ = "HT_FMF_15_5";
        v_9 = 15;
        v_A = 5;
        v_4 = 590;
        v_B = 0;
        v_E = 1;
        break;
    case 129:
        v_5/*"16"*/ = "HT_FMF_15_6";
        v_9 = 15;
        v_A = 6;
        v_4 = 595;
        v_B = 0;
        v_E = 1;
        break;
    case 130:
        v_5/*"16"*/ = "HT_FMF_15_7";
        v_9 = 15;
        v_A = 7;
        v_4 = 555;
        v_B = 0;
        v_E = 1;
        break;
    }
    switch (a_0) {
    case 131:
        v_5/*"16"*/ = "HE_FMF_16_0";
        v_9 = 16;
        v_A = 0;
        v_4 = 1060;
        v_B = 0;
        v_E = 2;
        break;
    case 132:
        v_5/*"16"*/ = "HE_FMF_16_1";
        v_9 = 16;
        v_A = 1;
        v_4 = 1400;
        v_B = 0;
        v_E = 2;
        break;
    case 133:
        v_5/*"16"*/ = "HE_FMF_16_2";
        v_9 = 16;
        v_A = 2;
        v_4 = 1315;
        v_B = 0;
        v_E = 2;
        break;
    case 134:
        v_5/*"16"*/ = "HE_FMF_16_3";
        v_9 = 16;
        v_A = 3;
        v_4 = 1230;
        v_B = 0;
        v_E = 2;
        break;
    case 135:
        v_5/*"16"*/ = "HE_FMF_16_4";
        v_9 = 16;
        v_A = 4;
        v_4 = 1145;
        v_B = 0;
        v_E = 2;
        break;
    case 136:
        v_5/*"16"*/ = "HE_FMF_16_5";
        v_9 = 16;
        v_A = 5;
        v_4 = 8450;
        v_B = 0;
        v_E = 2;
        break;
    case 137:
        v_5/*"16"*/ = "HE_FMF_16_6";
        v_9 = 16;
        v_A = 6;
        v_4 = 675;
        v_B = 0;
        v_E = 2;
        break;
    case 138:
        v_5/*"16"*/ = "HE_FMF_16_7";
        v_9 = 16;
        v_A = 7;
        v_4 = 8750;
        v_B = 0;
        v_E = 2;
        break;
    case 139:
        v_5/*"16"*/ = "HE_FMF_17_0";
        v_9 = 17;
        v_A = 0;
        v_4 = 975;
        v_B = 0;
        v_E = 2;
        break;
    case 140:
        v_5/*"16"*/ = "HE_FMF_17_1";
        v_9 = 17;
        v_A = 1;
        v_4 = 750;
        v_B = 0;
        v_E = 2;
        break;
    case 141:
        v_5/*"16"*/ = "HE_FMF_17_2";
        v_9 = 17;
        v_A = 2;
        v_4 = 865;
        v_B = 0;
        v_E = 2;
        break;
    case 142:
        v_5/*"16"*/ = "HE_FMF_17_3";
        v_9 = 17;
        v_A = 3;
        v_4 = 890;
        v_B = 0;
        v_E = 2;
        break;
    case 143:
        v_5/*"16"*/ = "HE_FMF_17_4";
        v_9 = 17;
        v_A = 4;
        v_4 = 730;
        v_B = 0;
        v_E = 2;
        break;
    case 144:
        v_5/*"16"*/ = "HE_FMF_17_5";
        v_9 = 17;
        v_A = 5;
        v_4 = 650;
        v_B = 0;
        v_E = 2;
        break;
    case 145:
        v_5/*"16"*/ = "HE_FMF_17_6";
        v_9 = 17;
        v_A = 6;
        v_4 = 645;
        v_B = 0;
        v_E = 2;
        break;
    case 146:
        v_5/*"16"*/ = "HE_FMF_17_7";
        v_9 = 17;
        v_A = 7;
        v_4 = 755;
        v_B = 0;
        v_E = 2;
        break;
    case 147:
        v_5/*"16"*/ = "HE_FMF_18_0";
        v_9 = 18;
        v_A = 0;
        v_4 = 13850;
        v_B = 0;
        v_E = 2;
        break;
    case 148:
        v_5/*"16"*/ = "HE_FMF_18_1";
        v_9 = 18;
        v_A = 1;
        v_4 = 2900;
        v_B = 0;
        v_E = 2;
        break;
    case 149:
        v_5/*"16"*/ = "HE_FMF_18_2";
        v_9 = 18;
        v_A = 2;
        v_4 = 2895;
        v_B = 0;
        v_E = 2;
        break;
    case 150:
        v_5/*"16"*/ = "HE_FMF_18_3";
        v_9 = 18;
        v_A = 3;
        v_4 = 12500;
        v_B = 0;
        v_E = 2;
        break;
    case 151:
        v_5/*"16"*/ = "HE_FMF_18_4";
        v_9 = 18;
        v_A = 4;
        v_4 = 15000;
        v_B = 0;
        v_E = 2;
        break;
    case 152:
        v_5/*"16"*/ = "HE_FMF_18_5";
        v_9 = 18;
        v_A = 5;
        v_4 = 14750;
        v_B = 0;
        v_E = 2;
        break;
    case 153:
        v_5/*"16"*/ = "HE_FMF_18_6";
        v_9 = 18;
        v_A = 6;
        v_4 = 13150;
        v_B = 0;
        v_E = 2;
        break;
    case 154:
        v_5/*"16"*/ = "HE_FMF_18_7";
        v_9 = 18;
        v_A = 7;
        v_4 = 2925;
        v_B = 0;
        v_E = 2;
        break;
    }
    switch (a_0) {
    case 155:
        v_5/*"16"*/ = "G_FMF_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 156:
        v_5/*"16"*/ = "G_FMF_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 157:
        v_5/*"16"*/ = "G_FMF_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 158:
        v_5/*"16"*/ = "G_FMF_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 159:
        v_5/*"16"*/ = "G_FMF_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 160:
        v_5/*"16"*/ = "G_FMF_0_5";
        v_9 = 0;
        v_A = 5;
        v_4 = 80;
        v_B = 1;
        v_E = 3;
        break;
    case 161:
        v_5/*"16"*/ = "G_FMF_0_6";
        v_9 = 0;
        v_A = 6;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 162:
        v_5/*"16"*/ = "G_FMF_0_7";
        v_9 = 0;
        v_A = 7;
        v_4 = 90;
        v_B = 1;
        v_E = 3;
        break;
    case 163:
        v_5/*"16"*/ = "G_FMF_0_8";
        v_9 = 0;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 164:
        v_5/*"16"*/ = "G_FMF_0_9";
        v_9 = 0;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 165:
        v_5/*"16"*/ = "G_FMF_0_10";
        v_9 = 0;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 166:
        v_5/*"16"*/ = "G_FMF_1_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 160;
        v_B = 1;
        v_E = 3;
        break;
    case 167:
        v_5/*"16"*/ = "G_FMF_1_1";
        v_9 = 1;
        v_A = 1;
        v_4 = 165;
        v_B = 1;
        v_E = 3;
        break;
    case 168:
        v_5/*"16"*/ = "G_FMF_1_2";
        v_9 = 1;
        v_A = 2;
        v_4 = 170;
        v_B = 1;
        v_E = 3;
        break;
    case 169:
        v_5/*"16"*/ = "G_FMF_1_3";
        v_9 = 1;
        v_A = 3;
        v_4 = 135;
        v_B = 1;
        v_E = 3;
        break;
    case 170:
        v_5/*"16"*/ = "G_FMF_1_4";
        v_9 = 1;
        v_A = 4;
        v_4 = 120;
        v_B = 1;
        v_E = 3;
        break;
    case 171:
        v_5/*"16"*/ = "G_FMF_1_5";
        v_9 = 1;
        v_A = 5;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 172:
        v_5/*"16"*/ = "G_FMF_1_6";
        v_9 = 1;
        v_A = 6;
        v_4 = 140;
        v_B = 1;
        v_E = 3;
        break;
    case 173:
        v_5/*"16"*/ = "G_FMF_1_7";
        v_9 = 1;
        v_A = 7;
        v_4 = 130;
        v_B = 1;
        v_E = 3;
        break;
    case 174:
        v_5/*"16"*/ = "G_FMF_1_8";
        v_9 = 1;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 175:
        v_5/*"16"*/ = "G_FMF_1_9";
        v_9 = 1;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 176:
        v_5/*"16"*/ = "G_FMF_1_10";
        v_9 = 1;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 177:
        v_5/*"16"*/ = "G_FMF_2_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 180;
        v_B = 1;
        v_E = 3;
        break;
    case 178:
        v_5/*"16"*/ = "G_FMF_2_1";
        v_9 = 2;
        v_A = 1;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 179:
        v_5/*"16"*/ = "G_FMF_2_2";
        v_9 = 2;
        v_A = 2;
        v_4 = 115;
        v_B = 1;
        v_E = 3;
        break;
    case 180:
        v_5/*"16"*/ = "G_FMF_2_3";
        v_9 = 2;
        v_A = 3;
        v_4 = 120;
        v_B = 1;
        v_E = 3;
        break;
    case 181:
        v_5/*"16"*/ = "G_FMF_2_4";
        v_9 = 2;
        v_A = 4;
        v_4 = 595;
        v_B = 1;
        v_E = 3;
        break;
    case 182:
        v_5/*"16"*/ = "G_FMF_2_5";
        v_9 = 2;
        v_A = 5;
        v_4 = 160;
        v_B = 1;
        v_E = 3;
        break;
    case 183:
        v_5/*"16"*/ = "G_FMF_2_6";
        v_9 = 2;
        v_A = 6;
        v_4 = 545;
        v_B = 1;
        v_E = 3;
        break;
    case 184:
        v_5/*"16"*/ = "G_FMF_2_7";
        v_9 = 2;
        v_A = 7;
        v_4 = 590;
        v_B = 1;
        v_E = 3;
        break;
    case 185:
        v_5/*"16"*/ = "G_FMF_2_8";
        v_9 = 2;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 186:
        v_5/*"16"*/ = "G_FMF_2_9";
        v_9 = 2;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 187:
        v_5/*"16"*/ = "G_FMF_2_10";
        v_9 = 2;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 188:
        v_5/*"16"*/ = "G_FMF_3_0";
        v_9 = 3;
        v_A = 0;
        v_4 = 6250;
        v_B = 1;
        v_E = 3;
        break;
    case 189:
        v_5/*"16"*/ = "G_FMF_3_1";
        v_9 = 3;
        v_A = 1;
        v_4 = 4065;
        v_B = 1;
        v_E = 3;
        break;
    case 190:
        v_5/*"16"*/ = "G_FMF_3_2";
        v_9 = 3;
        v_A = 2;
        v_4 = 3585;
        v_B = 1;
        v_E = 3;
        break;
    case 191:
        v_5/*"16"*/ = "G_FMF_3_3";
        v_9 = 3;
        v_A = 3;
        v_4 = 4075;
        v_B = 1;
        v_E = 3;
        break;
    case 192:
        v_5/*"16"*/ = "G_FMF_3_4";
        v_9 = 3;
        v_A = 4;
        v_4 = 4935;
        v_B = 1;
        v_E = 3;
        break;
    case 193:
        v_5/*"16"*/ = "G_FMF_3_5";
        v_9 = 3;
        v_A = 5;
        v_4 = 130;
        v_B = 1;
        v_E = 3;
        break;
    case 194:
        v_5/*"16"*/ = "G_FMF_3_6";
        v_9 = 3;
        v_A = 6;
        v_4 = 5600;
        v_B = 1;
        v_E = 3;
        break;
    case 195:
        v_5/*"16"*/ = "G_FMF_3_7";
        v_9 = 3;
        v_A = 7;
        v_4 = 4790;
        v_B = 1;
        v_E = 3;
        break;
    case 196:
        v_5/*"16"*/ = "G_FMF_3_8";
        v_9 = 3;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 197:
        v_5/*"16"*/ = "G_FMF_3_9";
        v_9 = 3;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 198:
        v_5/*"16"*/ = "G_FMF_3_10";
        v_9 = 3;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 199:
        v_5/*"16"*/ = "G_FMF_4_0";
        v_9 = 4;
        v_A = 0;
        v_4 = 2245;
        v_B = 1;
        v_E = 3;
        break;
    case 200:
        v_5/*"16"*/ = "G_FMF_4_1";
        v_9 = 4;
        v_A = 1;
        v_4 = 250;
        v_B = 1;
        v_E = 3;
        break;
    case 201:
        v_5/*"16"*/ = "G_FMF_4_2";
        v_9 = 4;
        v_A = 2;
        v_4 = 210;
        v_B = 1;
        v_E = 3;
        break;
    case 202:
        v_5/*"16"*/ = "G_FMF_4_3";
        v_9 = 4;
        v_A = 3;
        v_4 = 245;
        v_B = 1;
        v_E = 3;
        break;
    case 203:
        v_5/*"16"*/ = "G_FMF_4_4";
        v_9 = 4;
        v_A = 4;
        v_4 = 1205;
        v_B = 1;
        v_E = 3;
        break;
    case 204:
        v_5/*"16"*/ = "G_FMF_4_5";
        v_9 = 4;
        v_A = 5;
        v_4 = 205;
        v_B = 1;
        v_E = 3;
        break;
    case 205:
        v_5/*"16"*/ = "G_FMF_4_6";
        v_9 = 4;
        v_A = 6;
        v_4 = 2215;
        v_B = 1;
        v_E = 3;
        break;
    case 206:
        v_5/*"16"*/ = "G_FMF_4_7";
        v_9 = 4;
        v_A = 7;
        v_4 = 215;
        v_B = 1;
        v_E = 3;
        break;
    case 207:
        v_5/*"16"*/ = "G_FMF_4_8";
        v_9 = 4;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 208:
        v_5/*"16"*/ = "G_FMF_4_9";
        v_9 = 4;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 209:
        v_5/*"16"*/ = "G_FMF_4_10";
        v_9 = 4;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 210:
        v_5/*"16"*/ = "G_FMF_5_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 211:
        v_5/*"16"*/ = "G_FMF_5_1";
        v_9 = 5;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 212:
        v_5/*"16"*/ = "G_FMF_5_2";
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 213:
        v_5/*"16"*/ = "G_FMF_5_3";
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 214:
        v_5/*"16"*/ = "G_FMF_5_4";
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 215:
        v_5/*"16"*/ = "G_FMF_5_5";
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 216:
        v_5/*"16"*/ = "G_FMF_5_6";
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 217:
        v_5/*"16"*/ = "G_FMF_5_7";
        v_9 = 5;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 218:
        v_5/*"16"*/ = "G_FMF_5_8";
        v_9 = 5;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 219:
        v_5/*"16"*/ = "G_FMF_5_9";
        v_9 = 5;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 220:
        v_5/*"16"*/ = "G_FMF_5_10";
        v_9 = 5;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 221:
        v_5/*"16"*/ = "G_FMF_6_0";
        v_9 = 6;
        v_A = 0;
        v_4 = 5000;
        v_B = 1;
        v_E = 3;
        break;
    case 222:
        v_5/*"16"*/ = "G_FMF_6_1";
        v_9 = 6;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 223:
        v_5/*"16"*/ = "G_FMF_6_2";
        v_9 = 6;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 224:
        v_5/*"16"*/ = "G_FMF_6_3";
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 225:
        v_5/*"16"*/ = "G_FMF_6_4";
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 226:
        v_5/*"16"*/ = "G_FMF_6_5";
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 227:
        v_5/*"16"*/ = "G_FMF_6_6";
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 228:
        v_5/*"16"*/ = "G_FMF_6_7";
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 229:
        v_5/*"16"*/ = "G_FMF_6_8";
        v_9 = 6;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 230:
        v_5/*"16"*/ = "G_FMF_6_9";
        v_9 = 6;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 231:
        v_5/*"16"*/ = "G_FMF_6_10";
        v_9 = 6;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 232:
        v_5/*"16"*/ = "G_FMF_7_0";
        v_9 = 7;
        v_A = 0;
        v_4 = 4815;
        v_B = 1;
        v_E = 3;
        break;
    case 233:
        v_5/*"16"*/ = "G_FMF_7_1";
        v_9 = 7;
        v_A = 1;
        v_4 = 4795;
        v_B = 1;
        v_E = 3;
        break;
    case 234:
        v_5/*"16"*/ = "G_FMF_7_2";
        v_9 = 7;
        v_A = 2;
        v_4 = 4305;
        v_B = 1;
        v_E = 3;
        break;
    case 235:
        v_5/*"16"*/ = "G_FMF_7_3";
        v_9 = 7;
        v_A = 3;
        v_4 = 4305;
        v_B = 1;
        v_E = 3;
        break;
    case 236:
        v_5/*"16"*/ = "G_FMF_7_4";
        v_9 = 7;
        v_A = 4;
        v_4 = 4965;
        v_B = 1;
        v_E = 3;
        break;
    case 237:
        v_5/*"16"*/ = "G_FMF_7_5";
        v_9 = 7;
        v_A = 5;
        v_4 = 480;
        v_B = 1;
        v_E = 3;
        break;
    case 238:
        v_5/*"16"*/ = "G_FMF_7_6";
        v_9 = 7;
        v_A = 6;
        v_4 = 465;
        v_B = 1;
        v_E = 3;
        break;
    case 239:
        v_5/*"16"*/ = "G_FMF_7_7";
        v_9 = 7;
        v_A = 7;
        v_4 = 4320;
        v_B = 1;
        v_E = 3;
        break;
    case 240:
        v_5/*"16"*/ = "G_FMF_7_8";
        v_9 = 7;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 241:
        v_5/*"16"*/ = "G_FMF_7_9";
        v_9 = 7;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 242:
        v_5/*"16"*/ = "G_FMF_7_10";
        v_9 = 7;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    }
    switch (a_0) {
    case 243:
        v_5/*"16"*/ = "G_FMF_8_0";
        v_9 = 8;
        v_A = 0;
        v_4 = 500;
        v_B = 1;
        v_E = 3;
        break;
    case 244:
        v_5/*"16"*/ = "G_FMF_8_1";
        v_9 = 8;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 245:
        v_5/*"16"*/ = "G_FMF_8_2";
        v_9 = 8;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 246:
        v_5/*"16"*/ = "G_FMF_8_3";
        v_9 = 8;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 247:
        v_5/*"16"*/ = "G_FMF_8_4";
        v_9 = 8;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 248:
        v_5/*"16"*/ = "G_FMF_8_5";
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 249:
        v_5/*"16"*/ = "G_FMF_8_6";
        v_9 = 8;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 250:
        v_5/*"16"*/ = "G_FMF_8_7";
        v_9 = 8;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 251:
        v_5/*"16"*/ = "G_FMF_8_8";
        v_9 = 8;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 252:
        v_5/*"16"*/ = "G_FMF_8_9";
        v_9 = 8;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 253:
        v_5/*"16"*/ = "G_FMF_8_10";
        v_9 = 8;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 254:
        v_5/*"16"*/ = "G_FMF_9_0";
        v_9 = 9;
        v_A = 0;
        v_4 = 70;
        v_B = 1;
        v_E = 3;
        break;
    case 255:
        v_5/*"16"*/ = "G_FMF_9_1";
        v_9 = 9;
        v_A = 1;
        v_4 = 60;
        v_B = 1;
        v_E = 3;
        break;
    case 256:
        v_5/*"16"*/ = "G_FMF_9_2";
        v_9 = 9;
        v_A = 2;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 257:
        v_5/*"16"*/ = "G_FMF_9_3";
        v_9 = 9;
        v_A = 3;
        v_4 = 570;
        v_B = 1;
        v_E = 3;
        break;
    case 258:
        v_5/*"16"*/ = "G_FMF_9_4";
        v_9 = 9;
        v_A = 4;
        v_4 = 525;
        v_B = 1;
        v_E = 3;
        break;
    case 259:
        v_5/*"16"*/ = "G_FMF_9_5";
        v_9 = 9;
        v_A = 5;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 260:
        v_5/*"16"*/ = "G_FMF_9_6";
        v_9 = 9;
        v_A = 6;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 261:
        v_5/*"16"*/ = "G_FMF_9_7";
        v_9 = 9;
        v_A = 7;
        v_4 = 90;
        v_B = 1;
        v_E = 3;
        break;
    case 262:
        v_5/*"16"*/ = "G_FMF_9_8";
        v_9 = 9;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 263:
        v_5/*"16"*/ = "G_FMF_9_9";
        v_9 = 9;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 264:
        v_5/*"16"*/ = "G_FMF_9_10";
        v_9 = 9;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 265:
        v_5/*"16"*/ = "G_FMF_10_0";
        v_9 = 10;
        v_A = 0;
        v_4 = 4065;
        v_B = 1;
        v_E = 3;
        break;
    case 266:
        v_5/*"16"*/ = "G_FMF_10_1";
        v_9 = 10;
        v_A = 1;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 267:
        v_5/*"16"*/ = "G_FMF_10_2";
        v_9 = 10;
        v_A = 2;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 268:
        v_5/*"16"*/ = "G_FMF_10_3";
        v_9 = 10;
        v_A = 3;
        v_4 = 4275;
        v_B = 1;
        v_E = 3;
        break;
    case 269:
        v_5/*"16"*/ = "G_FMF_10_4";
        v_9 = 10;
        v_A = 4;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 270:
        v_5/*"16"*/ = "G_FMF_10_5";
        v_9 = 10;
        v_A = 5;
        v_4 = 80;
        v_B = 1;
        v_E = 3;
        break;
    case 271:
        v_5/*"16"*/ = "G_FMF_10_6";
        v_9 = 10;
        v_A = 6;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 272:
        v_5/*"16"*/ = "G_FMF_10_7";
        v_9 = 10;
        v_A = 7;
        v_4 = 90;
        v_B = 1;
        v_E = 3;
        break;
    case 273:
        v_5/*"16"*/ = "G_FMF_10_8";
        v_9 = 10;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 274:
        v_5/*"16"*/ = "G_FMF_10_9";
        v_9 = 10;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 275:
        v_5/*"16"*/ = "G_FMF_10_10";
        v_9 = 10;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 276:
        v_5/*"16"*/ = "G_FMF_11_0";
        v_9 = 11;
        v_A = 0;
        v_4 = 3660;
        v_B = 1;
        v_E = 3;
        break;
    case 277:
        v_5/*"16"*/ = "G_FMF_11_1";
        v_9 = 11;
        v_A = 1;
        v_4 = 4165;
        v_B = 1;
        v_E = 3;
        break;
    case 278:
        v_5/*"16"*/ = "G_FMF_11_2";
        v_9 = 11;
        v_A = 2;
        v_4 = 3670;
        v_B = 1;
        v_E = 3;
        break;
    case 279:
        v_5/*"16"*/ = "G_FMF_11_3";
        v_9 = 11;
        v_A = 3;
        v_4 = 135;
        v_B = 1;
        v_E = 3;
        break;
    case 280:
        v_5/*"16"*/ = "G_FMF_11_4";
        v_9 = 11;
        v_A = 4;
        v_4 = 3620;
        v_B = 1;
        v_E = 3;
        break;
    case 281:
        v_5/*"16"*/ = "G_FMF_11_5";
        v_9 = 11;
        v_A = 5;
        v_4 = 3610;
        v_B = 1;
        v_E = 3;
        break;
    case 282:
        v_5/*"16"*/ = "G_FMF_11_6";
        v_9 = 11;
        v_A = 6;
        v_4 = 4140;
        v_B = 1;
        v_E = 3;
        break;
    case 283:
        v_5/*"16"*/ = "G_FMF_11_7";
        v_9 = 11;
        v_A = 7;
        v_4 = 130;
        v_B = 1;
        v_E = 3;
        break;
    case 284:
        v_5/*"16"*/ = "G_FMF_12_0";
        v_9 = 12;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 285:
        v_5/*"16"*/ = "G_FMF_12_1";
        v_9 = 12;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 286:
        v_5/*"16"*/ = "G_FMF_12_2";
        v_9 = 12;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 287:
        v_5/*"16"*/ = "G_FMF_12_3";
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 288:
        v_5/*"16"*/ = "G_FMF_12_4";
        v_9 = 12;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 289:
        v_5/*"16"*/ = "G_FMF_12_5";
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 290:
        v_5/*"16"*/ = "G_FMF_12_6";
        v_9 = 12;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 291:
        v_5/*"16"*/ = "G_FMF_12_7";
        v_9 = 12;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 292:
        v_5/*"16"*/ = "G_FMF_13_0";
        v_9 = 13;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 293:
        v_5/*"16"*/ = "G_FMF_13_1";
        v_9 = 13;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 294:
        v_5/*"16"*/ = "G_FMF_13_2";
        v_9 = 13;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 295:
        v_5/*"16"*/ = "G_FMF_13_3";
        v_9 = 13;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 296:
        v_5/*"16"*/ = "G_FMF_13_4";
        v_9 = 13;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 297:
        v_5/*"16"*/ = "G_FMF_13_5";
        v_9 = 13;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 298:
        v_5/*"16"*/ = "G_FMF_13_6";
        v_9 = 13;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 299:
        v_5/*"16"*/ = "G_FMF_13_7";
        v_9 = 13;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 300:
        v_5/*"16"*/ = "G_FMF_14_0";
        v_9 = 14;
        v_A = 0;
        v_4 = 325;
        v_B = 1;
        v_E = 3;
        break;
    case 301:
        v_5/*"16"*/ = "G_FMF_14_1";
        v_9 = 14;
        v_A = 1;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 302:
        v_5/*"16"*/ = "G_FMF_14_2";
        v_9 = 14;
        v_A = 2;
        v_4 = 115;
        v_B = 1;
        v_E = 3;
        break;
    case 303:
        v_5/*"16"*/ = "G_FMF_14_3";
        v_9 = 14;
        v_A = 3;
        v_4 = 120;
        v_B = 1;
        v_E = 3;
        break;
    case 304:
        v_5/*"16"*/ = "G_FMF_14_4";
        v_9 = 14;
        v_A = 4;
        v_4 = 135;
        v_B = 1;
        v_E = 3;
        break;
    case 305:
        v_5/*"16"*/ = "G_FMF_14_5";
        v_9 = 14;
        v_A = 5;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 306:
        v_5/*"16"*/ = "G_FMF_14_6";
        v_9 = 14;
        v_A = 6;
        v_4 = 115;
        v_B = 1;
        v_E = 3;
        break;
    case 307:
        v_5/*"16"*/ = "G_FMF_14_7";
        v_9 = 14;
        v_A = 7;
        v_4 = 120;
        v_B = 1;
        v_E = 3;
        break;
    case 308:
        v_5/*"16"*/ = "G_FMF_14_8";
        v_9 = 14;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 309:
        v_5/*"16"*/ = "G_FMF_14_9";
        v_9 = 14;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 310:
        v_5/*"16"*/ = "G_FMF_14_10";
        v_9 = 14;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 311:
        v_5/*"16"*/ = "G_FMF_15_0";
        v_9 = 15;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 312:
        v_5/*"16"*/ = "G_FMF_15_1";
        v_9 = 15;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 313:
        v_5/*"16"*/ = "G_FMF_15_2";
        v_9 = 15;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 314:
        v_5/*"16"*/ = "G_FMF_15_3";
        v_9 = 15;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 315:
        v_5/*"16"*/ = "G_FMF_15_4";
        v_9 = 15;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 316:
        v_5/*"16"*/ = "G_FMF_15_5";
        v_9 = 15;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 317:
        v_5/*"16"*/ = "G_FMF_15_6";
        v_9 = 15;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 318:
        v_5/*"16"*/ = "G_FMF_15_7";
        v_9 = 15;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 319:
        v_5/*"16"*/ = "W_FMF_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 320:
        v_5/*"16"*/ = "W_FMF_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 321:
        v_5/*"16"*/ = "W_FMF_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 322:
        v_5/*"16"*/ = "W_FMF_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 323:
        v_5/*"16"*/ = "W_FMF_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 825;
        v_B = 6;
        v_E = 4;
        break;
    case 324:
        v_5/*"16"*/ = "W_FMF_1_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 325:
        v_5/*"16"*/ = "W_FMF_1_1";
        v_9 = 1;
        v_A = 1;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 326:
        v_5/*"16"*/ = "W_FMF_1_2";
        v_9 = 1;
        v_A = 2;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    }
    if (v_E == 1) {
        v_F = a_0 - 10;
        if ((v_F >= 0) && (v_F < 121)) {
            if (v_F > 8) {
                v_F -= 1;
            }
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f7F7[v_F/*1*/]) * g_42DD3._f1A);
        }
    } else if (v_E == 2) {
        v_10 = a_0 - 131;
        if ((v_10 >= 0) && (v_10 < 24)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f870[v_10/*1*/]) * g_42DD3._f1B);
        }
    } else if (v_E == 3) {
        v_11 = a_0 - 155;
        if ((v_11 >= 0) && (v_11 < 128)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f889[v_11/*1*/]) * g_42DD3._f38);
        }
    } else if (v_E == 4) {
        v_12 = a_0 - 319;
        if ((v_12 >= 0) && (v_12 < 10)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f90A[v_12/*1*/]) * g_42DD3._f1C);
        }
    }
    if (a_0 >= 327) {
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 327);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            if (DLC1::_341DE7ED1D2A1BFD(g_280004, ${hat}, 1)) {
                g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f1A);
            } else if (DLC1::_341DE7ED1D2A1BFD(g_280004, ${glasses}, 1)) {
                g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f38);
            } else if (DLC1::_341DE7ED1D2A1BFD(g_280004, ${watch}, 1)) {
                g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f1C);
            }
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_3f557(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 10;
    switch (a_0) {
    case 0:
        v_5/*"16"*/ = "D_FMM_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        break;
    case 1:
        v_5/*"16"*/ = "D_FMM_2_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 10000;
        break;
    case 2:
        v_5/*"16"*/ = "D_FMM_1_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 5000;
        break;
    case 3:
        v_5/*"16"*/ = "D_FMM_2_0";
        v_9 = 3;
        v_A = 0;
        v_4 = 10000;
        break;
    case 4:
        v_5/*"16"*/ = "D_FMM_1_0";
        v_9 = 4;
        v_A = 0;
        v_4 = 5000;
        break;
    case 5:
        v_5/*"16"*/ = "D_FMM_2_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 10000;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 6);
        return ;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_3f65a(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 7;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        if (g_40001._f1024 != -1) {
            v_4 = g_40001._f1024;
        } else { 
            v_4 = 310;
        }
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        if (g_40001._f1025 != -1) {
            v_4 = g_40001._f1025;
        } else { 
            v_4 = 125;
        }
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        if (g_40001._f1026 != -1) {
            v_4 = g_40001._f1026;
        } else { 
            v_4 = 145;
        }
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        if (g_40001._f1027 != -1) {
            v_4 = g_40001._f1027;
        } else { 
            v_4 = 130;
        }
        break;
    case 5:
        v_9 = 1;
        v_A = 4;
        if (g_40001._f1028 != -1) {
            v_4 = g_40001._f1028;
        } else { 
            v_4 = 265;
        }
        break;
    case 6:
        v_9 = 1;
        v_A = 5;
        if (g_40001._f1029 != -1) {
            v_4 = g_40001._f1029;
        } else { 
            v_4 = 280;
        }
        break;
    case 7:
        v_9 = 2;
        v_A = 0;
        if (g_40001._f102A != -1) {
            v_4 = g_40001._f102A;
        } else { 
            v_4 = 295;
        }
        break;
    case 8:
        v_9 = 2;
        v_A = 1;
        if (g_40001._f102B != -1) {
            v_4 = g_40001._f102B;
        } else { 
            v_4 = 95;
        }
        break;
    case 9:
        v_9 = 2;
        v_A = 2;
        if (g_40001._f102C != -1) {
            v_4 = g_40001._f102C;
        } else { 
            v_4 = 85;
        }
        break;
    case 10:
        v_9 = 2;
        v_A = 3;
        if (g_40001._f102D != -1) {
            v_4 = g_40001._f102D;
        } else { 
            v_4 = 95;
        }
        break;
    case 11:
        v_9 = 2;
        v_A = 4;
        if (g_40001._f102E != -1) {
            v_4 = g_40001._f102E;
        } else { 
            v_4 = 105;
        }
        break;
    case 12:
        v_9 = 2;
        v_A = 5;
        if (g_40001._f102F != -1) {
            v_4 = g_40001._f102F;
        } else { 
            v_4 = 95;
        }
        break;
    case 13:
        v_9 = 3;
        v_A = 0;
        if (g_40001._f1030 != -1) {
            v_4 = g_40001._f1030;
        } else { 
            v_4 = 35;
        }
        break;
    case 14:
        v_9 = 3;
        v_A = 1;
        if (g_40001._f1031 != -1) {
            v_4 = g_40001._f1031;
        } else { 
            v_4 = 35;
        }
        break;
    case 15:
        v_9 = 3;
        v_A = 2;
        if (g_40001._f1032 != -1) {
            v_4 = g_40001._f1032;
        } else { 
            v_4 = 30;
        }
        break;
    case 16:
        v_9 = 3;
        v_A = 3;
        if (g_40001._f1033 != -1) {
            v_4 = g_40001._f1033;
        } else { 
            v_4 = 40;
        }
        break;
    case 17:
        v_9 = 3;
        v_A = 4;
        if (g_40001._f1034 != -1) {
            v_4 = g_40001._f1034;
        } else { 
            v_4 = 35;
        }
        break;
    case 18:
        v_9 = 3;
        v_A = 5;
        if (g_40001._f1035 != -1) {
            v_4 = g_40001._f1035;
        } else { 
            v_4 = 35;
        }
        break;
    case 19:
        v_9 = 4;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 20:
        v_9 = 4;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 21:
        v_9 = 4;
        v_A = 2;
        if (g_40001._f1036 != -1) {
            v_4 = g_40001._f1036;
        } else { 
            v_4 = 355;
        }
        break;
    case 22:
        v_9 = 4;
        v_A = 3;
        if (g_40001._f1037 != -1) {
            v_4 = g_40001._f1037;
        } else { 
            v_4 = 370;
        }
        break;
    case 23:
        v_9 = 4;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 24:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 25:
        v_9 = 5;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 26:
        v_9 = 5;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 27:
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 28:
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 29:
        v_9 = 5;
        v_A = 4;
        if (g_40001._f1038 != -1) {
            v_4 = g_40001._f1038;
        } else { 
            v_4 = 110;
        }
        break;
    case 30:
        v_9 = 5;
        v_A = 5;
        if (g_40001._f1039 != -1) {
            v_4 = g_40001._f1039;
        } else { 
            v_4 = 160;
        }
        break;
    case 31:
        v_9 = 6;
        v_A = 0;
        if (g_40001._f103A != -1) {
            v_4 = g_40001._f103A;
        } else { 
            v_4 = 385;
        }
        break;
    case 32:
        v_9 = 6;
        v_A = 1;
        if (g_40001._f103B != -1) {
            v_4 = g_40001._f103B;
        } else { 
            v_4 = 190;
        }
        break;
    case 33:
        v_9 = 6;
        v_A = 2;
        if (g_40001._f103C != -1) {
            v_4 = g_40001._f103C;
        } else { 
            v_4 = 235;
        }
        break;
    case 34:
        v_9 = 6;
        v_A = 3;
        if (g_40001._f103D != -1) {
            v_4 = g_40001._f103D;
        } else { 
            v_4 = 220;
        }
        break;
    case 35:
        v_9 = 6;
        v_A = 4;
        if (g_40001._f103E != -1) {
            v_4 = g_40001._f103E;
        } else { 
            v_4 = 250;
        }
        break;
    case 36:
        v_9 = 6;
        v_A = 5;
        if (g_40001._f103F != -1) {
            v_4 = g_40001._f103F;
        } else { 
            v_4 = 205;
        }
        break;
    case 37:
        v_9 = 7;
        v_A = 0;
        if (g_40001._f1040 != -1) {
            v_4 = g_40001._f1040;
        } else { 
            v_4 = 445;
        }
        break;
    case 38:
        v_9 = 7;
        v_A = 1;
        if (g_40001._f1041 != -1) {
            v_4 = g_40001._f1041;
        } else { 
            v_4 = 175;
        }
        break;
    case 39:
        v_9 = 7;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 40:
        v_9 = 7;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 41:
        v_9 = 7;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 42:
        v_9 = 7;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 43:
        v_9 = 8;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 44:
        v_9 = 8;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 45:
        v_9 = 8;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 46:
        v_9 = 8;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 47:
        v_9 = 8;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 48:
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 49:
        v_9 = 9;
        v_A = 0;
        if (g_40001._f1042 != -1) {
            v_4 = g_40001._f1042;
        } else { 
            v_4 = 340;
        }
        break;
    case 50:
        v_9 = 9;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 51:
        v_9 = 9;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 52:
        v_9 = 9;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 53:
        v_9 = 9;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 54:
        v_9 = 9;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 55);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f3A);
        }
        return ;
        break;
    }
    v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_42DD3._f3A);
    v_5/*"16"*/ = "T_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_3fe34(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 1;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        v_4 = 965;
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        v_4 = 960;
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        v_4 = 9500;
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        v_4 = 975;
        break;
    case 5:
        v_9 = 2;
        v_A = 0;
        v_4 = 1185;
        break;
    case 6:
        v_9 = 2;
        v_A = 1;
        v_4 = 15000;
        break;
    case 7:
        v_9 = 2;
        v_A = 2;
        v_4 = 1115;
        break;
    case 8:
        v_9 = 2;
        v_A = 3;
        v_4 = 1105;
        break;
    case 9:
        v_9 = 3;
        v_A = 0;
        v_4 = 25000;
        break;
    case 10:
        v_9 = 4;
        v_A = 0;
        v_4 = 510;
        break;
    case 11:
        v_9 = 4;
        v_A = 1;
        v_4 = 530;
        break;
    case 12:
        v_9 = 4;
        v_A = 2;
        v_4 = 5500;
        break;
    case 13:
        v_9 = 4;
        v_A = 3;
        v_4 = 535;
        break;
    case 14:
        v_9 = 5;
        v_A = 0;
        v_4 = 1510;
        break;
    case 15:
        v_9 = 5;
        v_A = 1;
        v_4 = 1530;
        break;
    case 16:
        v_9 = 5;
        v_A = 2;
        v_4 = 14500;
        break;
    case 17:
        v_9 = 5;
        v_A = 3;
        v_4 = 13000;
        break;
    case 18:
        v_9 = 6;
        v_A = 0;
        v_4 = 8000;
        break;
    case 19:
        v_9 = 6;
        v_A = 1;
        v_4 = 1265;
        break;
    case 20:
        v_9 = 6;
        v_A = 2;
        v_4 = 8500;
        break;
    case 21:
        v_9 = 6;
        v_A = 3;
        v_4 = 1210;
        break;
    case 22:
        v_9 = 7;
        v_A = 0;
        v_4 = 2360;
        break;
    case 23:
        v_9 = 7;
        v_A = 1;
        v_4 = 22500;
        break;
    case 24:
        v_9 = 7;
        v_A = 2;
        v_4 = 2375;
        break;
    case 25:
        v_9 = 7;
        v_A = 3;
        v_4 = 2485;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 26);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f1D);
        }
        return ;
        break;
    }
    v_5/*"16"*/ = "M_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    v_E = a_0 - 1;
    if ((v_E >= 0) && (v_E < 26)) {
        v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f7DC[v_E/*1*/]) * g_42DD3._f1D);
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_40119(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 6;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 1765;
        break;
    case 1:
        v_9 = 0;
        v_A = 1;
        v_4 = 760;
        break;
    case 2:
        v_9 = 0;
        v_A = 2;
        v_4 = 760;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        v_4 = 765;
        break;
    case 4:
        v_9 = 0;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 5:
        v_9 = 0;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 6:
        v_9 = 0;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 7:
        v_9 = 0;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 8:
        v_9 = 0;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 9:
        v_9 = 0;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 10:
        v_9 = 0;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 11:
        v_9 = 0;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 12:
        v_9 = 0;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 13:
        v_9 = 0;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 14:
        v_9 = 0;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 15:
        v_9 = 0;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 16:
        v_9 = 1;
        v_A = 0;
        v_4 = 85;
        break;
    case 17:
        v_9 = 1;
        v_A = 1;
        v_4 = 80;
        break;
    case 18:
        v_9 = 1;
        v_A = 2;
        v_4 = 90;
        break;
    case 19:
        v_9 = 1;
        v_A = 3;
        v_4 = 90;
        break;
    case 20:
        v_9 = 1;
        v_A = 4;
        v_4 = 95;
        break;
    case 21:
        v_9 = 1;
        v_A = 5;
        v_4 = 100;
        break;
    case 22:
        v_9 = 1;
        v_A = 6;
        v_4 = 60;
        break;
    case 23:
        v_9 = 1;
        v_A = 7;
        v_4 = 55;
        break;
    case 24:
        v_9 = 1;
        v_A = 8;
        v_4 = 100;
        break;
    case 25:
        v_9 = 1;
        v_A = 9;
        v_4 = 1255;
        break;
    case 26:
        v_9 = 1;
        v_A = 10;
        v_4 = 65;
        break;
    case 27:
        v_9 = 1;
        v_A = 11;
        v_4 = 1050;
        break;
    case 28:
        v_9 = 1;
        v_A = 12;
        v_4 = 1895;
        break;
    case 29:
        v_9 = 1;
        v_A = 13;
        v_4 = 185;
        break;
    case 30:
        v_9 = 1;
        v_A = 14;
        v_4 = 190;
        break;
    case 31:
        v_9 = 1;
        v_A = 15;
        v_4 = 115;
        break;
    }
    switch (a_0) {
    case 32:
        v_9 = 2;
        v_A = 0;
        v_4 = 415;
        break;
    case 33:
        v_9 = 2;
        v_A = 1;
        v_4 = 115;
        break;
    case 34:
        v_9 = 2;
        v_A = 2;
        v_4 = 135;
        break;
    case 35:
        v_9 = 2;
        v_A = 3;
        v_4 = 125;
        break;
    case 36:
        v_9 = 2;
        v_A = 4;
        v_4 = 105;
        break;
    case 37:
        v_9 = 2;
        v_A = 5;
        v_4 = 130;
        break;
    case 38:
        v_9 = 2;
        v_A = 6;
        v_4 = 3530;
        break;
    case 39:
        v_9 = 2;
        v_A = 7;
        v_4 = 2610;
        break;
    case 40:
        v_9 = 2;
        v_A = 8;
        v_4 = 1295;
        break;
    case 41:
        v_9 = 2;
        v_A = 9;
        v_4 = 120;
        break;
    case 42:
        v_9 = 2;
        v_A = 10;
        v_4 = 160;
        break;
    case 43:
        v_9 = 2;
        v_A = 11;
        v_4 = 160;
        break;
    case 44:
        v_9 = 2;
        v_A = 12;
        v_4 = 145;
        break;
    case 45:
        v_9 = 2;
        v_A = 13;
        v_4 = 105;
        break;
    case 46:
        v_9 = 2;
        v_A = 14;
        v_4 = 115;
        break;
    case 47:
        v_9 = 2;
        v_A = 15;
        v_4 = 150;
        break;
    case 48:
        v_9 = 3;
        v_A = 0;
        v_4 = 540;
        break;
    case 49:
        v_9 = 3;
        v_A = 1;
        v_4 = 115;
        break;
    case 50:
        v_9 = 3;
        v_A = 2;
        v_4 = 110;
        break;
    case 51:
        v_9 = 3;
        v_A = 3;
        v_4 = 120;
        break;
    case 52:
        v_9 = 3;
        v_A = 4;
        v_4 = 460;
        break;
    case 53:
        v_9 = 3;
        v_A = 5;
        v_4 = 120;
        break;
    case 54:
        v_9 = 3;
        v_A = 6;
        v_4 = 120;
        break;
    case 55:
        v_9 = 3;
        v_A = 7;
        v_4 = 415;
        break;
    case 56:
        v_9 = 3;
        v_A = 8;
        v_4 = 135;
        break;
    case 57:
        v_9 = 3;
        v_A = 9;
        v_4 = 140;
        break;
    case 58:
        v_9 = 3;
        v_A = 10;
        v_4 = 160;
        break;
    case 59:
        v_9 = 3;
        v_A = 11;
        v_4 = 120;
        break;
    case 60:
        v_9 = 3;
        v_A = 12;
        v_4 = 1025;
        break;
    case 61:
        v_9 = 3;
        v_A = 13;
        v_4 = 1560;
        break;
    case 62:
        v_9 = 3;
        v_A = 14;
        v_4 = 145;
        break;
    case 63:
        v_9 = 3;
        v_A = 15;
        v_4 = 120;
        break;
    }
    switch (a_0) {
    case 64:
        v_9 = 4;
        v_A = 0;
        v_4 = 365;
        break;
    case 65:
        v_9 = 4;
        v_A = 1;
        v_4 = 100;
        break;
    case 66:
        v_9 = 4;
        v_A = 2;
        v_4 = 65;
        break;
    case 67:
        v_9 = 4;
        v_A = 3;
        v_4 = 85;
        break;
    case 68:
        v_9 = 4;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 69:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 70:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 71:
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 72:
        v_9 = 4;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 73:
        v_9 = 4;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 74:
        v_9 = 4;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 75:
        v_9 = 4;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 76:
        v_9 = 4;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 77:
        v_9 = 4;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 78:
        v_9 = 4;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 79:
        v_9 = 4;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 80:
        v_9 = 5;
        v_A = 0;
        v_4 = 50;
        break;
    case 81:
        v_9 = 5;
        v_A = 1;
        v_4 = 35;
        break;
    case 82:
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 83:
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 84:
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 85:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 86:
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 87:
        v_9 = 5;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 88:
        v_9 = 5;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 89:
        v_9 = 5;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 90:
        v_9 = 5;
        v_A = 10;
        v_4 = 50;
        break;
    case 91:
        v_9 = 5;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 92:
        v_9 = 5;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 93:
        v_9 = 5;
        v_A = 13;
        v_4 = 50;
        break;
    case 94:
        v_9 = 5;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 95:
        v_9 = 5;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 96:
        v_9 = 6;
        v_A = 0;
        v_4 = 2395;
        break;
    case 97:
        v_9 = 6;
        v_A = 1;
        v_4 = 3675;
        break;
    case 98:
        v_9 = 6;
        v_A = 2;
        v_4 = 320;
        break;
    case 99:
        v_9 = 6;
        v_A = 3;
        v_4 = 3875;
        break;
    case 100:
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 101:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 102:
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 103:
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 104:
        v_9 = 6;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 105:
        v_9 = 6;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 106:
        v_9 = 6;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 107:
        v_9 = 6;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 108:
        v_9 = 6;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 109:
        v_9 = 6;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 110:
        v_9 = 6;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 111:
        v_9 = 6;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 112:
        v_9 = 7;
        v_A = 0;
        v_4 = 2050;
        break;
    case 113:
        v_9 = 7;
        v_A = 1;
        v_4 = 375;
        break;
    case 114:
        v_9 = 7;
        v_A = 2;
        v_4 = 2105;
        break;
    case 115:
        v_9 = 7;
        v_A = 3;
        v_4 = 345;
        break;
    case 116:
        v_9 = 7;
        v_A = 4;
        v_4 = 380;
        break;
    case 117:
        v_9 = 7;
        v_A = 5;
        v_4 = 340;
        break;
    case 118:
        v_9 = 7;
        v_A = 6;
        v_4 = 385;
        break;
    case 119:
        v_9 = 7;
        v_A = 7;
        v_4 = 4135;
        break;
    case 120:
        v_9 = 7;
        v_A = 8;
        v_4 = 370;
        break;
    case 121:
        v_9 = 7;
        v_A = 9;
        v_4 = 375;
        break;
    case 122:
        v_9 = 7;
        v_A = 10;
        v_4 = 385;
        break;
    case 123:
        v_9 = 7;
        v_A = 11;
        v_4 = 365;
        break;
    case 124:
        v_9 = 7;
        v_A = 12;
        v_4 = 325;
        break;
    case 125:
        v_9 = 7;
        v_A = 13;
        v_4 = 325;
        break;
    case 126:
        v_9 = 7;
        v_A = 14;
        v_4 = 370;
        break;
    case 127:
        v_9 = 7;
        v_A = 15;
        v_4 = 330;
        break;
    }
    switch (a_0) {
    case 128:
        v_9 = 8;
        v_A = 0;
        v_4 = 1025;
        break;
    case 129:
        v_9 = 8;
        v_A = 1;
        v_4 = 390;
        break;
    case 130:
        v_9 = 8;
        v_A = 2;
        v_4 = 400;
        break;
    case 131:
        v_9 = 8;
        v_A = 3;
        v_4 = 390;
        break;
    case 132:
        v_9 = 8;
        v_A = 4;
        v_4 = 365;
        break;
    case 133:
        v_9 = 8;
        v_A = 5;
        v_4 = 410;
        break;
    case 134:
        v_9 = 8;
        v_A = 6;
        v_4 = 4125;
        break;
    case 135:
        v_9 = 8;
        v_A = 7;
        v_4 = 4365;
        break;
    case 136:
        v_9 = 8;
        v_A = 8;
        v_4 = 5365;
        break;
    case 137:
        v_9 = 8;
        v_A = 9;
        v_4 = 6225;
        break;
    case 138:
        v_9 = 8;
        v_A = 10;
        v_4 = 3755;
        break;
    case 139:
        v_9 = 8;
        v_A = 11;
        v_4 = 405;
        break;
    case 140:
        v_9 = 8;
        v_A = 12;
        v_4 = 4115;
        break;
    case 141:
        v_9 = 8;
        v_A = 13;
        v_4 = 2240;
        break;
    case 142:
        v_9 = 8;
        v_A = 14;
        v_4 = 3850;
        break;
    case 143:
        v_9 = 8;
        v_A = 15;
        v_4 = 3110;
        break;
    case 144:
        v_9 = 9;
        v_A = 0;
        v_4 = 1950;
        break;
    case 145:
        v_9 = 9;
        v_A = 1;
        v_4 = 455;
        break;
    case 146:
        v_9 = 9;
        v_A = 2;
        v_4 = 405;
        break;
    case 147:
        v_9 = 9;
        v_A = 3;
        v_4 = 410;
        break;
    case 148:
        v_9 = 9;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 149:
        v_9 = 9;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 150:
        v_9 = 9;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 151:
        v_9 = 9;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 152:
        v_9 = 9;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 153:
        v_9 = 9;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 154:
        v_9 = 9;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 155:
        v_9 = 9;
        v_A = 11;
        v_4 = 415;
        break;
    case 156:
        v_9 = 9;
        v_A = 12;
        v_4 = 4425;
        break;
    case 157:
        v_9 = 9;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 158:
        v_9 = 9;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 159:
        v_9 = 9;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 160:
        v_9 = 10;
        v_A = 0;
        v_4 = 115;
        break;
    case 161:
        v_9 = 10;
        v_A = 1;
        v_4 = 65;
        break;
    case 162:
        v_9 = 10;
        v_A = 2;
        v_4 = 85;
        break;
    case 163:
        v_9 = 10;
        v_A = 3;
        v_4 = 75;
        break;
    case 164:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 165:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 166:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 167:
        v_9 = 10;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 168:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 169:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 170:
        v_9 = 10;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 171:
        v_9 = 10;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 172:
        v_9 = 10;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 173:
        v_9 = 10;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 174:
        v_9 = 10;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 175:
        v_9 = 10;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 176:
        v_9 = 11;
        v_A = 0;
        v_4 = 115;
        break;
    case 177:
        v_9 = 11;
        v_A = 1;
        v_4 = 360;
        break;
    case 178:
        v_9 = 11;
        v_A = 2;
        v_4 = 135;
        break;
    case 179:
        v_9 = 11;
        v_A = 3;
        v_4 = 175;
        break;
    case 180:
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 181:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 182:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 183:
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 184:
        v_9 = 11;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 185:
        v_9 = 11;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 186:
        v_9 = 11;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 187:
        v_9 = 11;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 188:
        v_9 = 11;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 189:
        v_9 = 11;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 190:
        v_9 = 11;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 191:
        v_9 = 11;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 192:
        v_9 = 12;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 193:
        v_9 = 12;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 194:
        v_9 = 12;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 195:
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 196:
        v_9 = 12;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 197:
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 198:
        v_9 = 12;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 199:
        v_9 = 12;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 200:
        v_9 = 12;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 201:
        v_9 = 12;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 202:
        v_9 = 12;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 203:
        v_9 = 12;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 204:
        v_9 = 12;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 205:
        v_9 = 12;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 206:
        v_9 = 12;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 207:
        v_9 = 12;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 208:
        v_9 = 13;
        v_A = 0;
        v_4 = 675;
        break;
    case 209:
        v_9 = 13;
        v_A = 1;
        v_4 = 100;
        break;
    case 210:
        v_9 = 13;
        v_A = 2;
        v_4 = 400;
        break;
    case 211:
        v_9 = 13;
        v_A = 3;
        v_4 = 340;
        break;
    case 212:
        v_9 = 13;
        v_A = 4;
        v_4 = 195;
        break;
    case 213:
        v_9 = 13;
        v_A = 5;
        v_4 = 215;
        break;
    case 214:
        v_9 = 13;
        v_A = 6;
        v_4 = 120;
        break;
    case 215:
        v_9 = 13;
        v_A = 7;
        v_4 = 165;
        break;
    case 216:
        v_9 = 13;
        v_A = 8;
        v_4 = 100;
        break;
    case 217:
        v_9 = 13;
        v_A = 9;
        v_4 = 1040;
        break;
    case 218:
        v_9 = 13;
        v_A = 10;
        v_4 = 100;
        break;
    case 219:
        v_9 = 13;
        v_A = 11;
        v_4 = 120;
        break;
    case 220:
        v_9 = 13;
        v_A = 12;
        v_4 = 210;
        break;
    case 221:
        v_9 = 13;
        v_A = 13;
        v_4 = 205;
        break;
    case 222:
        v_9 = 13;
        v_A = 14;
        v_4 = 200;
        break;
    case 223:
        v_9 = 13;
        v_A = 15;
        v_4 = 100;
        break;
    case 224:
        v_9 = 14;
        v_A = 0;
        v_4 = 1420;
        break;
    case 225:
        v_9 = 14;
        v_A = 1;
        v_4 = 445;
        break;
    case 226:
        v_9 = 14;
        v_A = 2;
        v_4 = 435;
        break;
    case 227:
        v_9 = 14;
        v_A = 3;
        v_4 = 420;
        break;
    case 228:
        v_9 = 14;
        v_A = 4;
        v_4 = 425;
        break;
    case 229:
        v_9 = 14;
        v_A = 5;
        v_4 = 435;
        break;
    case 230:
        v_9 = 14;
        v_A = 6;
        v_4 = 425;
        break;
    case 231:
        v_9 = 14;
        v_A = 7;
        v_4 = 430;
        break;
    case 232:
        v_9 = 14;
        v_A = 8;
        v_4 = 3215;
        break;
    case 233:
        v_9 = 14;
        v_A = 9;
        v_4 = 3320;
        break;
    case 234:
        v_9 = 14;
        v_A = 10;
        v_4 = 440;
        break;
    case 235:
        v_9 = 14;
        v_A = 11;
        v_4 = 440;
        break;
    case 236:
        v_9 = 14;
        v_A = 12;
        v_4 = 445;
        break;
    case 237:
        v_9 = 14;
        v_A = 13;
        v_4 = 450;
        break;
    case 238:
        v_9 = 14;
        v_A = 14;
        v_4 = 450;
        break;
    case 239:
        v_9 = 14;
        v_A = 15;
        v_4 = 1255;
        break;
    case 240:
        v_9 = 15;
        v_A = 0;
        v_4 = 750;
        break;
    case 241:
        v_9 = 15;
        v_A = 1;
        v_4 = 165;
        break;
    case 242:
        v_9 = 15;
        v_A = 2;
        v_4 = 460;
        break;
    case 243:
        v_9 = 15;
        v_A = 3;
        v_4 = 190;
        break;
    case 244:
        v_9 = 15;
        v_A = 4;
        v_4 = 195;
        break;
    case 245:
        v_9 = 15;
        v_A = 5;
        v_4 = 200;
        break;
    case 246:
        v_9 = 15;
        v_A = 6;
        v_4 = 205;
        break;
    case 247:
        v_9 = 15;
        v_A = 7;
        v_4 = 210;
        break;
    case 248:
        v_9 = 15;
        v_A = 8;
        v_4 = 215;
        break;
    case 249:
        v_9 = 15;
        v_A = 9;
        v_4 = 220;
        break;
    case 250:
        v_9 = 15;
        v_A = 10;
        v_4 = 455;
        break;
    case 251:
        v_9 = 15;
        v_A = 11;
        v_4 = 175;
        break;
    case 252:
        v_9 = 15;
        v_A = 12;
        v_4 = 800;
        break;
    case 253:
        v_9 = 15;
        v_A = 13;
        v_4 = 790;
        break;
    case 254:
        v_9 = 15;
        v_A = 14;
        v_4 = 175;
        break;
    case 255:
        v_9 = 15;
        v_A = 15;
        v_4 = 190;
        break;
    }
    v_5/*"16"*/ = "F_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    v_E = a_0;
    if ((v_E >= 0) && (v_E < 256)) {
        v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f6DB[v_E/*1*/]) * g_42DD3._f19);
    }
    if (a_0 >= 256) {
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 256);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f19);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_4173e(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 4;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 270;
        break;
    case 1:
        v_9 = 0;
        v_A = 1;
        v_4 = 750;
        break;
    case 2:
        v_9 = 0;
        v_A = 2;
        v_4 = 450;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        v_4 = 4875;
        break;
    case 4:
        v_9 = 0;
        v_A = 4;
        v_4 = 1760;
        break;
    case 5:
        v_9 = 0;
        v_A = 5;
        v_4 = 1090;
        break;
    case 6:
        v_9 = 0;
        v_A = 6;
        v_4 = 2465;
        break;
    case 7:
        v_9 = 0;
        v_A = 7;
        v_4 = 305;
        break;
    case 8:
        v_9 = 0;
        v_A = 8;
        v_4 = 290;
        break;
    case 9:
        v_9 = 0;
        v_A = 9;
        v_4 = 410;
        break;
    case 10:
        v_9 = 0;
        v_A = 10;
        v_4 = 255;
        break;
    case 11:
        v_9 = 0;
        v_A = 11;
        v_4 = 255;
        break;
    case 12:
        v_9 = 0;
        v_A = 12;
        v_4 = 405;
        break;
    case 13:
        v_9 = 0;
        v_A = 13;
        v_4 = 5000;
        break;
    case 14:
        v_9 = 0;
        v_A = 14;
        v_4 = 4480;
        break;
    case 15:
        v_9 = 0;
        v_A = 15;
        v_4 = 4335;
        break;
    }
    switch (a_0) {
    case 16:
        v_9 = 1;
        v_A = 0;
        v_4 = 375;
        break;
    case 17:
        v_9 = 1;
        v_A = 1;
        v_4 = 265;
        break;
    case 18:
        v_9 = 1;
        v_A = 2;
        v_4 = 275;
        break;
    case 19:
        v_9 = 1;
        v_A = 3;
        v_4 = 280;
        break;
    case 20:
        v_9 = 1;
        v_A = 4;
        v_4 = 300;
        break;
    case 21:
        v_9 = 1;
        v_A = 5;
        v_4 = 265;
        break;
    case 22:
        v_9 = 1;
        v_A = 6;
        v_4 = 255;
        break;
    case 23:
        v_9 = 1;
        v_A = 7;
        v_4 = 250;
        break;
    case 24:
        v_9 = 1;
        v_A = 8;
        v_4 = 260;
        break;
    case 25:
        v_9 = 1;
        v_A = 9;
        v_4 = 250;
        break;
    case 26:
        v_9 = 1;
        v_A = 10;
        v_4 = 225;
        break;
    case 27:
        v_9 = 1;
        v_A = 11;
        v_4 = 230;
        break;
    case 28:
        v_9 = 1;
        v_A = 12;
        v_4 = 215;
        break;
    case 29:
        v_9 = 1;
        v_A = 13;
        v_4 = 650;
        break;
    case 30:
        v_9 = 1;
        v_A = 14;
        v_4 = 425;
        break;
    case 31:
        v_9 = 1;
        v_A = 15;
        v_4 = 345;
        break;
    }
    switch (a_0) {
    case 32:
        v_9 = 2;
        v_A = 0;
        v_4 = 115;
        break;
    case 33:
        v_9 = 2;
        v_A = 1;
        v_4 = 110;
        break;
    case 34:
        v_9 = 2;
        v_A = 2;
        v_4 = 250;
        break;
    case 35:
        v_9 = 2;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 36:
        v_9 = 2;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 37:
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 38:
        v_9 = 2;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 39:
        v_9 = 2;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 40:
        v_9 = 2;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 41:
        v_9 = 2;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 42:
        v_9 = 2;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 43:
        v_9 = 2;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 44:
        v_9 = 2;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 45:
        v_9 = 2;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 46:
        v_9 = 2;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 47:
        v_9 = 2;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 48:
        v_9 = 3;
        v_A = 0;
        v_4 = 290;
        break;
    case 49:
        v_9 = 3;
        v_A = 1;
        v_4 = 115;
        break;
    case 50:
        v_9 = 3;
        v_A = 2;
        v_4 = 135;
        break;
    case 51:
        v_9 = 3;
        v_A = 3;
        v_4 = 125;
        break;
    case 52:
        v_9 = 3;
        v_A = 4;
        v_4 = 120;
        break;
    case 53:
        v_9 = 3;
        v_A = 5;
        v_4 = 130;
        break;
    case 54:
        v_9 = 3;
        v_A = 6;
        v_4 = 110;
        break;
    case 55:
        v_9 = 3;
        v_A = 7;
        v_4 = 525;
        break;
    case 56:
        v_9 = 3;
        v_A = 8;
        v_4 = 115;
        break;
    case 57:
        v_9 = 3;
        v_A = 9;
        v_4 = 535;
        break;
    case 58:
        v_9 = 3;
        v_A = 10;
        v_4 = 135;
        break;
    case 59:
        v_9 = 3;
        v_A = 11;
        v_4 = 120;
        break;
    case 60:
        v_9 = 3;
        v_A = 12;
        v_4 = 130;
        break;
    case 61:
        v_9 = 3;
        v_A = 13;
        v_4 = 140;
        break;
    case 62:
        v_9 = 3;
        v_A = 14;
        v_4 = 130;
        break;
    case 63:
        v_9 = 3;
        v_A = 15;
        v_4 = 520;
        break;
    }
    switch (a_0) {
    case 64:
        v_9 = 4;
        v_A = 0;
        v_4 = 215;
        break;
    case 65:
        v_9 = 4;
        v_A = 1;
        v_4 = 220;
        break;
    case 66:
        v_9 = 4;
        v_A = 2;
        v_4 = 225;
        break;
    case 67:
        v_9 = 4;
        v_A = 3;
        v_4 = 245;
        break;
    case 68:
        v_9 = 4;
        v_A = 4;
        v_4 = 215;
        break;
    case 69:
        v_9 = 4;
        v_A = 5;
        v_4 = 630;
        break;
    case 70:
        v_9 = 4;
        v_A = 6;
        v_4 = 250;
        break;
    case 71:
        v_9 = 4;
        v_A = 7;
        v_4 = 260;
        break;
    case 72:
        v_9 = 4;
        v_A = 8;
        v_4 = 200;
        break;
    case 73:
        v_9 = 4;
        v_A = 9;
        v_4 = 225;
        break;
    case 74:
        v_9 = 4;
        v_A = 10;
        v_4 = 230;
        break;
    case 75:
        v_9 = 4;
        v_A = 11;
        v_4 = 725;
        break;
    case 76:
        v_9 = 4;
        v_A = 12;
        v_4 = 650;
        break;
    case 77:
        v_9 = 4;
        v_A = 13;
        v_4 = 230;
        break;
    case 78:
        v_9 = 4;
        v_A = 14;
        v_4 = 230;
        break;
    case 79:
        v_9 = 4;
        v_A = 15;
        v_4 = 280;
        break;
    }
    switch (a_0) {
    case 80:
        v_9 = 5;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 81:
        v_9 = 5;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 82:
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 83:
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 84:
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 85:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 86:
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 87:
        v_9 = 5;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 88:
        v_9 = 5;
        v_A = 8;
        v_4 = 330;
        break;
    case 89:
        v_9 = 5;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 90:
        v_9 = 5;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 91:
        v_9 = 5;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 92:
        v_9 = 5;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 93:
        v_9 = 5;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 94:
        v_9 = 5;
        v_A = 14;
        v_4 = 320;
        break;
    case 95:
        v_9 = 5;
        v_A = 15;
        v_4 = 315;
        break;
    }
    switch (a_0) {
    case 96:
        v_9 = 6;
        v_A = 0;
        v_4 = 850;
        break;
    case 97:
        v_9 = 6;
        v_A = 1;
        v_4 = 535;
        break;
    case 98:
        v_9 = 6;
        v_A = 2;
        v_4 = 530;
        break;
    case 99:
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 100:
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 101:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 102:
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 103:
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 104:
        v_9 = 6;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 105:
        v_9 = 6;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 106:
        v_9 = 6;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 107:
        v_9 = 6;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 108:
        v_9 = 6;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 109:
        v_9 = 6;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 110:
        v_9 = 6;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 111:
        v_9 = 6;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 112:
        v_9 = 7;
        v_A = 0;
        v_4 = 890;
        break;
    case 113:
        v_9 = 7;
        v_A = 1;
        v_4 = 440;
        break;
    case 114:
        v_9 = 7;
        v_A = 2;
        v_4 = 455;
        break;
    case 115:
        v_9 = 7;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 116:
        v_9 = 7;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 117:
        v_9 = 7;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 118:
        v_9 = 7;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 119:
        v_9 = 7;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 120:
        v_9 = 7;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 121:
        v_9 = 7;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 122:
        v_9 = 7;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 123:
        v_9 = 7;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 124:
        v_9 = 7;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 125:
        v_9 = 7;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 126:
        v_9 = 7;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 127:
        v_9 = 7;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 128:
        v_9 = 8;
        v_A = 0;
        v_4 = 295;
        break;
    case 129:
        v_9 = 8;
        v_A = 1;
        v_4 = 180;
        break;
    case 130:
        v_9 = 8;
        v_A = 2;
        v_4 = 150;
        break;
    case 131:
        v_9 = 8;
        v_A = 3;
        v_4 = 150;
        break;
    case 132:
        v_9 = 8;
        v_A = 4;
        v_4 = 155;
        break;
    case 133:
        v_9 = 8;
        v_A = 5;
        v_4 = 840;
        break;
    case 134:
        v_9 = 8;
        v_A = 6;
        v_4 = 205;
        break;
    case 135:
        v_9 = 8;
        v_A = 7;
        v_4 = 150;
        break;
    case 136:
        v_9 = 8;
        v_A = 8;
        v_4 = 950;
        break;
    case 137:
        v_9 = 8;
        v_A = 9;
        v_4 = 580;
        break;
    case 138:
        v_9 = 8;
        v_A = 10;
        v_4 = 200;
        break;
    case 139:
        v_9 = 8;
        v_A = 11;
        v_4 = 665;
        break;
    case 140:
        v_9 = 8;
        v_A = 12;
        v_4 = 780;
        break;
    case 141:
        v_9 = 8;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 142:
        v_9 = 8;
        v_A = 14;
        v_4 = 615;
        break;
    case 143:
        v_9 = 8;
        v_A = 15;
        v_4 = 250;
        break;
    }
    switch (a_0) {
    case 144:
        v_9 = 9;
        v_A = 0;
        v_4 = 495;
        break;
    case 145:
        v_9 = 9;
        v_A = 1;
        v_4 = 435;
        break;
    case 146:
        v_9 = 9;
        v_A = 2;
        v_4 = 420;
        break;
    case 147:
        v_9 = 9;
        v_A = 3;
        v_4 = 390;
        break;
    case 148:
        v_9 = 9;
        v_A = 4;
        v_4 = 485;
        break;
    case 149:
        v_9 = 9;
        v_A = 5;
        v_4 = 380;
        break;
    case 150:
        v_9 = 9;
        v_A = 6;
        v_4 = 1295;
        break;
    case 151:
        v_9 = 9;
        v_A = 7;
        v_4 = 1135;
        break;
    case 152:
        v_9 = 9;
        v_A = 8;
        v_4 = 1425;
        break;
    case 153:
        v_9 = 9;
        v_A = 9;
        v_4 = 1645;
        break;
    case 154:
        v_9 = 9;
        v_A = 10;
        v_4 = 1925;
        break;
    case 155:
        v_9 = 9;
        v_A = 11;
        v_4 = 2250;
        break;
    case 156:
        v_9 = 9;
        v_A = 12;
        v_4 = 365;
        break;
    case 157:
        v_9 = 9;
        v_A = 13;
        v_4 = 360;
        break;
    case 158:
        v_9 = 9;
        v_A = 14;
        v_4 = 2245;
        break;
    case 159:
        v_9 = 9;
        v_A = 15;
        v_4 = 2170;
        break;
    case 160:
        v_9 = 10;
        v_A = 0;
        v_4 = 50;
        break;
    case 161:
        v_9 = 10;
        v_A = 1;
        v_4 = 100;
        break;
    case 162:
        v_9 = 10;
        v_A = 2;
        v_4 = 65;
        break;
    case 163:
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 164:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 165:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 166:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 167:
        v_9 = 10;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 168:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 169:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 170:
        v_9 = 10;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 171:
        v_9 = 10;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 172:
        v_9 = 10;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 173:
        v_9 = 10;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 174:
        v_9 = 10;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 175:
        v_9 = 10;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 176:
        v_9 = 11;
        v_A = 0;
        v_4 = 275;
        break;
    case 177:
        v_9 = 11;
        v_A = 1;
        v_4 = 300;
        break;
    case 178:
        v_9 = 11;
        v_A = 2;
        v_4 = 145;
        break;
    case 179:
        v_9 = 11;
        v_A = 3;
        v_4 = 150;
        break;
    case 180:
        v_9 = 11;
        v_A = 4;
        v_4 = 110;
        break;
    case 181:
        v_9 = 11;
        v_A = 5;
        v_4 = 95;
        break;
    case 182:
        v_9 = 11;
        v_A = 6;
        v_4 = 155;
        break;
    case 183:
        v_9 = 11;
        v_A = 7;
        v_4 = 155;
        break;
    case 184:
        v_9 = 11;
        v_A = 8;
        v_4 = 510;
        break;
    case 185:
        v_9 = 11;
        v_A = 9;
        v_4 = 165;
        break;
    case 186:
        v_9 = 11;
        v_A = 10;
        v_4 = 465;
        break;
    case 187:
        v_9 = 11;
        v_A = 11;
        v_4 = 250;
        break;
    case 188:
        v_9 = 11;
        v_A = 12;
        v_4 = 110;
        break;
    case 189:
        v_9 = 11;
        v_A = 13;
        v_4 = 470;
        break;
    case 190:
        v_9 = 11;
        v_A = 14;
        v_4 = 480;
        break;
    case 191:
        v_9 = 11;
        v_A = 15;
        v_4 = 155;
        break;
    case 192:
        v_9 = 12;
        v_A = 0;
        v_4 = 275;
        break;
    case 193:
        v_9 = 12;
        v_A = 1;
        v_4 = 395;
        break;
    case 194:
        v_9 = 12;
        v_A = 2;
        v_4 = 285;
        break;
    case 195:
        v_9 = 12;
        v_A = 3;
        v_4 = 560;
        break;
    case 196:
        v_9 = 12;
        v_A = 4;
        v_4 = 595;
        break;
    case 197:
        v_9 = 12;
        v_A = 5;
        v_4 = 295;
        break;
    case 198:
        v_9 = 12;
        v_A = 6;
        v_4 = 230;
        break;
    case 199:
        v_9 = 12;
        v_A = 7;
        v_4 = 215;
        break;
    case 200:
        v_9 = 12;
        v_A = 8;
        v_4 = 270;
        break;
    case 201:
        v_9 = 12;
        v_A = 9;
        v_4 = 295;
        break;
    case 202:
        v_9 = 12;
        v_A = 10;
        v_4 = 285;
        break;
    case 203:
        v_9 = 12;
        v_A = 11;
        v_4 = 215;
        break;
    case 204:
        v_9 = 12;
        v_A = 12;
        v_4 = 210;
        break;
    case 205:
        v_9 = 12;
        v_A = 13;
        v_4 = 290;
        break;
    case 206:
        v_9 = 12;
        v_A = 14;
        v_4 = 230;
        break;
    case 207:
        v_9 = 12;
        v_A = 15;
        v_4 = 215;
        break;
    }
    switch (a_0) {
    case 208:
        v_9 = 13;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 209:
        v_9 = 13;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 210:
        v_9 = 13;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 211:
        v_9 = 13;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 212:
        v_9 = 13;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 213:
        v_9 = 13;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 214:
        v_9 = 13;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 215:
        v_9 = 13;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 216:
        v_9 = 13;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 217:
        v_9 = 13;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 218:
        v_9 = 13;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 219:
        v_9 = 13;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 220:
        v_9 = 13;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 221:
        v_9 = 13;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 222:
        v_9 = 13;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 223:
        v_9 = 13;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 224:
        v_9 = 14;
        v_A = 0;
        v_4 = 90;
        break;
    case 225:
        v_9 = 14;
        v_A = 1;
        v_4 = 105;
        break;
    case 226:
        v_9 = 14;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 227:
        v_9 = 14;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 228:
        v_9 = 14;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 229:
        v_9 = 14;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 230:
        v_9 = 14;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 231:
        v_9 = 14;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 232:
        v_9 = 14;
        v_A = 8;
        v_4 = 100;
        break;
    case 233:
        v_9 = 14;
        v_A = 9;
        v_4 = 105;
        break;
    case 234:
        v_9 = 14;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 235:
        v_9 = 14;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 236:
        v_9 = 14;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 237:
        v_9 = 14;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 238:
        v_9 = 14;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 239:
        v_9 = 14;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 240:
        v_9 = 15;
        v_A = 0;
        v_4 = 230;
        break;
    case 241:
        v_9 = 15;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 242:
        v_9 = 15;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 243:
        v_9 = 15;
        v_A = 3;
        v_4 = 130;
        break;
    case 244:
        v_9 = 15;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 245:
        v_9 = 15;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 246:
        v_9 = 15;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 247:
        v_9 = 15;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 248:
        v_9 = 15;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 249:
        v_9 = 15;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 250:
        v_9 = 15;
        v_A = 10;
        v_4 = 350;
        break;
    case 251:
        v_9 = 15;
        v_A = 11;
        v_4 = 335;
        break;
    case 252:
        v_9 = 15;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 253:
        v_9 = 15;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 254:
        v_9 = 15;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 255:
        v_9 = 15;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    v_5/*"16"*/ = "L_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    v_E = a_0;
    if ((v_E >= 0) && (v_E < 256)) {
        v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f4D9[v_E/*1*/]) * g_42DD3._f17);
    }
    if (a_0 >= 256) {
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 256);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f17);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_42d9b(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 3;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        break;
    case 2:
        v_9 = 2;
        v_A = 0;
        break;
    case 3:
        v_9 = 3;
        v_A = 0;
        break;
    case 4:
        v_9 = 4;
        v_A = 0;
        break;
    case 5:
        v_9 = 5;
        v_A = 0;
        break;
    case 6:
        v_9 = 6;
        v_A = 0;
        break;
    case 7:
        v_9 = 7;
        v_A = 0;
        break;
    case 8:
        v_9 = 8;
        v_A = 0;
        break;
    case 9:
        v_9 = 9;
        v_A = 0;
        break;
    case 10:
        v_9 = 10;
        v_A = 0;
        break;
    case 11:
        v_9 = 11;
        v_A = 0;
        break;
    case 12:
        v_9 = 12;
        v_A = 0;
        break;
    case 13:
        v_9 = 13;
        v_A = 0;
        break;
    case 14:
        v_9 = 14;
        v_A = 0;
        break;
    case 15:
        v_9 = 15;
        v_A = 0;
        break;
    }
    if (a_0 >= 16) {
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 16);
        return ;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_42ef4(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 9;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        break;
    case 5:
        v_9 = 1;
        v_A = 4;
        break;
    case 6:
        v_9 = 2;
        v_A = 0;
        break;
    case 7:
        v_9 = 2;
        v_A = 1;
        break;
    case 8:
        v_9 = 2;
        v_A = 2;
        break;
    case 9:
        v_9 = 2;
        v_A = 3;
        break;
    case 10:
        v_9 = 2;
        v_A = 4;
        break;
    case 11:
        v_9 = 3;
        v_A = 0;
        break;
    case 12:
        v_9 = 3;
        v_A = 1;
        break;
    case 13:
        v_9 = 3;
        v_A = 2;
        break;
    case 14:
        v_9 = 3;
        v_A = 3;
        break;
    case 15:
        v_9 = 3;
        v_A = 4;
        break;
    case 16:
        v_9 = 4;
        v_A = 0;
        break;
    case 17:
        v_9 = 4;
        v_A = 1;
        break;
    case 18:
        v_9 = 4;
        v_A = 2;
        break;
    case 19:
        v_9 = 4;
        v_A = 3;
        break;
    case 20:
        v_9 = 4;
        v_A = 4;
        break;
    case 21:
        v_9 = 5;
        v_A = 0;
        break;
    case 22:
        v_9 = 5;
        v_A = 1;
        break;
    case 23:
        v_9 = 5;
        v_A = 2;
        break;
    case 24:
        v_9 = 5;
        v_A = 3;
        break;
    case 25:
        v_9 = 5;
        v_A = 4;
        break;
    case 26:
        v_9 = 6;
        v_A = 0;
        break;
    case 27:
        v_9 = 6;
        v_A = 1;
        break;
    case 28:
        v_9 = 6;
        v_A = 2;
        break;
    case 29:
        v_9 = 6;
        v_A = 3;
        break;
    case 30:
        v_9 = 6;
        v_A = 4;
        break;
    case 31:
        v_9 = 7;
        v_A = 0;
        break;
    case 32:
        v_9 = 7;
        v_A = 1;
        break;
    case 33:
        v_9 = 7;
        v_A = 2;
        break;
    case 34:
        v_9 = 7;
        v_A = 3;
        break;
    case 35:
        v_9 = 7;
        v_A = 4;
        break;
    }
    if (a_0 >= 36) {
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 36);
        return ;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_43172(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 8;
    switch (a_0) {
    case 0:
        v_5/*"16"*/ = "U_FMF_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 250;
        break;
    case 1:
        v_5/*"16"*/ = "U_FMF_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 225;
        break;
    case 2:
        v_5/*"16"*/ = "U_FMF_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 50;
        break;
    case 3:
        v_5/*"16"*/ = "U_FMF_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 40;
        break;
    case 4:
        v_5/*"16"*/ = "U_FMF_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 40;
        break;
    case 5:
        v_5/*"16"*/ = "U_FMF_0_5";
        v_9 = 0;
        v_A = 5;
        v_4 = 40;
        break;
    case 6:
        v_5/*"16"*/ = "U_FMF_0_6";
        v_9 = 0;
        v_A = 6;
        v_4 = 40;
        break;
    case 7:
        v_5/*"16"*/ = "U_FMF_0_7";
        v_9 = 0;
        v_A = 7;
        v_4 = 45;
        break;
    case 8:
        v_5/*"16"*/ = "U_FMF_0_8";
        v_9 = 0;
        v_A = 8;
        v_4 = 40;
        break;
    case 9:
        v_5/*"16"*/ = "U_FMF_0_9";
        v_9 = 0;
        v_A = 9;
        v_4 = 40;
        break;
    case 10:
        v_5/*"16"*/ = "U_FMF_0_10";
        v_9 = 0;
        v_A = 10;
        v_4 = 135;
        break;
    case 11:
        v_5/*"16"*/ = "U_FMF_0_11";
        v_9 = 0;
        v_A = 11;
        v_4 = 60;
        break;
    case 12:
        v_5/*"16"*/ = "U_FMF_0_12";
        v_9 = 0;
        v_A = 12;
        v_4 = 220;
        break;
    case 13:
        v_5/*"16"*/ = "U_FMF_0_13";
        v_9 = 0;
        v_A = 13;
        v_4 = 45;
        break;
    case 14:
        v_5/*"16"*/ = "U_FMF_0_14";
        v_9 = 0;
        v_A = 14;
        v_4 = 45;
        break;
    case 15:
        v_5/*"16"*/ = "U_FMF_0_15";
        v_9 = 0;
        v_A = 15;
        v_4 = 125;
        break;
    case 16:
        v_5/*"16"*/ = "U_FMF_0_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 250;
        break;
    case 17:
        v_5/*"16"*/ = "U_FMF_0_1";
        v_9 = 1;
        v_A = 1;
        v_4 = 60;
        break;
    case 18:
        v_5/*"16"*/ = "U_FMF_0_2";
        v_9 = 1;
        v_A = 2;
        v_4 = 50;
        break;
    case 19:
        v_5/*"16"*/ = "U_FMF_0_3";
        v_9 = 1;
        v_A = 3;
        v_4 = 40;
        break;
    case 20:
        v_5/*"16"*/ = "U_FMF_0_4";
        v_9 = 1;
        v_A = 4;
        v_4 = 40;
        break;
    case 21:
        v_5/*"16"*/ = "U_FMF_0_5";
        v_9 = 1;
        v_A = 5;
        v_4 = 40;
        break;
    case 22:
        v_5/*"16"*/ = "U_FMF_0_6";
        v_9 = 1;
        v_A = 6;
        v_4 = 40;
        break;
    case 23:
        v_5/*"16"*/ = "U_FMF_0_7";
        v_9 = 1;
        v_A = 7;
        v_4 = 45;
        break;
    case 24:
        v_5/*"16"*/ = "U_FMF_0_8";
        v_9 = 1;
        v_A = 8;
        v_4 = 40;
        break;
    case 25:
        v_5/*"16"*/ = "U_FMF_0_9";
        v_9 = 1;
        v_A = 9;
        v_4 = 40;
        break;
    case 26:
        v_5/*"16"*/ = "U_FMF_0_10";
        v_9 = 1;
        v_A = 10;
        v_4 = 135;
        break;
    case 27:
        v_5/*"16"*/ = "U_FMF_0_11";
        v_9 = 1;
        v_A = 11;
        v_4 = 60;
        break;
    case 28:
        v_5/*"16"*/ = "U_FMF_0_12";
        v_9 = 1;
        v_A = 12;
        v_4 = 220;
        break;
    case 29:
        v_5/*"16"*/ = "U_FMF_0_13";
        v_9 = 1;
        v_A = 13;
        v_4 = 45;
        break;
    case 30:
        v_5/*"16"*/ = "U_FMF_0_14";
        v_9 = 1;
        v_A = 14;
        v_4 = 45;
        break;
    case 31:
        v_5/*"16"*/ = "U_FMF_0_15";
        v_9 = 1;
        v_A = 15;
        v_4 = 125;
        break;
    case 32:
        v_9 = 2;
        v_A = 0;
        break;
    case 33:
        v_9 = 3;
        v_A = 0;
        break;
    case 34:
        v_5/*"16"*/ = "U_FMF_4_0";
        v_9 = 4;
        v_A = 0;
        v_3 = 1;
        break;
    case 35:
        v_5/*"16"*/ = "U_FMF_4_1";
        v_9 = 4;
        v_A = 1;
        v_3 = 1;
        break;
    case 36:
        v_5/*"16"*/ = "U_FMF_4_2";
        v_9 = 4;
        v_A = 2;
        v_3 = 1;
        break;
    case 37:
        v_5/*"16"*/ = "U_FMF_4_3";
        v_9 = 4;
        v_A = 3;
        v_3 = 1;
        break;
    case 38:
        v_5/*"16"*/ = "U_FMF_4_4";
        v_9 = 4;
        v_A = 4;
        v_3 = 1;
        break;
    case 39:
        v_5/*"16"*/ = "U_FMF_4_5";
        v_9 = 4;
        v_A = 5;
        v_3 = 1;
        break;
    case 40:
        v_5/*"16"*/ = "U_FMF_4_6";
        v_9 = 4;
        v_A = 6;
        v_3 = 1;
        break;
    case 41:
        v_5/*"16"*/ = "U_FMF_4_7";
        v_9 = 4;
        v_A = 7;
        v_3 = 1;
        break;
    case 42:
        v_5/*"16"*/ = "U_FMF_4_8";
        v_9 = 4;
        v_A = 8;
        v_3 = 1;
        break;
    case 43:
        v_5/*"16"*/ = "U_FMF_4_9";
        v_9 = 4;
        v_A = 9;
        v_3 = 1;
        break;
    case 44:
        v_5/*"16"*/ = "U_FMF_4_10";
        v_9 = 4;
        v_A = 10;
        v_3 = 1;
        break;
    case 45:
        v_5/*"16"*/ = "U_FMF_4_11";
        v_9 = 4;
        v_A = 11;
        v_3 = 1;
        break;
    case 46:
        v_5/*"16"*/ = "U_FMF_4_12";
        v_9 = 4;
        v_A = 12;
        v_3 = 1;
        break;
    case 47:
        v_5/*"16"*/ = "U_FMF_4_13";
        v_9 = 4;
        v_A = 13;
        v_4 = 40;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[77/*1*/]);
        break;
    case 48:
        v_5/*"16"*/ = "U_FMF_4_14";
        v_9 = 4;
        v_A = 14;
        v_4 = 40;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[78/*1*/]);
        break;
    case 49:
        v_5/*"16"*/ = "U_FMF_4_15";
        v_9 = 4;
        v_A = 15;
        v_3 = 1;
        break;
    case 50:
        v_5/*"16"*/ = "U_FMF_5_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 45;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[80/*1*/]);
        break;
    case 51:
        v_5/*"16"*/ = "U_FMF_5_1";
        v_9 = 5;
        v_A = 1;
        v_4 = 60;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[81/*1*/]);
        break;
    case 52:
        v_5/*"16"*/ = "U_FMF_5_2";
        v_9 = 5;
        v_A = 2;
        v_3 = 1;
        break;
    case 53:
        v_5/*"16"*/ = "U_FMF_5_3";
        v_9 = 5;
        v_A = 3;
        v_3 = 1;
        break;
    case 54:
        v_5/*"16"*/ = "U_FMF_5_4";
        v_9 = 5;
        v_A = 4;
        v_3 = 1;
        break;
    case 55:
        v_5/*"16"*/ = "U_FMF_5_5";
        v_9 = 5;
        v_A = 5;
        v_3 = 1;
        break;
    case 56:
        v_5/*"16"*/ = "U_FMF_5_6";
        v_9 = 5;
        v_A = 6;
        v_3 = 1;
        break;
    case 57:
        v_5/*"16"*/ = "U_FMF_5_7";
        v_9 = 5;
        v_A = 7;
        v_4 = 375;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[87/*1*/]);
        break;
    case 58:
        v_5/*"16"*/ = "U_FMF_5_8";
        v_9 = 5;
        v_A = 8;
        v_3 = 1;
        break;
    case 59:
        v_5/*"16"*/ = "U_FMF_5_9";
        v_9 = 5;
        v_A = 9;
        v_4 = 90;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[89/*1*/]);
        break;
    case 60:
        v_5/*"16"*/ = "U_FMF_5_10";
        v_9 = 5;
        v_A = 10;
        v_3 = 1;
        break;
    case 61:
        v_5/*"16"*/ = "U_FMF_5_11";
        v_9 = 5;
        v_A = 11;
        v_3 = 1;
        break;
    case 62:
        v_5/*"16"*/ = "U_FMF_5_12";
        v_9 = 5;
        v_A = 12;
        v_3 = 1;
        break;
    case 63:
        v_5/*"16"*/ = "U_FMF_5_13";
        v_9 = 5;
        v_A = 13;
        v_3 = 1;
        break;
    case 64:
        v_5/*"16"*/ = "U_FMF_5_14";
        v_9 = 5;
        v_A = 14;
        v_3 = 1;
        break;
    case 65:
        v_5/*"16"*/ = "U_FMF_5_15";
        v_9 = 5;
        v_A = 15;
        v_3 = 1;
        break;
    case 66:
        v_9 = 6;
        v_A = 0;
        break;
    case 67:
        v_9 = 7;
        v_A = 0;
        break;
    case 68:
        v_9 = 8;
        v_A = 0;
        break;
    case 69:
        v_9 = 9;
        v_A = 0;
        break;
    case 70:
        v_9 = 10;
        v_A = 0;
        break;
    case 71:
        v_5/*"16"*/ = "U_FMF_11_0";
        v_9 = 11;
        v_A = 0;
        v_4 = 90;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[176/*1*/]);
        break;
    case 72:
        v_5/*"16"*/ = "U_FMF_11_1";
        v_9 = 11;
        v_A = 1;
        v_4 = 95;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[177/*1*/]);
        break;
    case 73:
        v_5/*"16"*/ = "U_FMF_11_2";
        v_9 = 11;
        v_A = 2;
        v_4 = 95;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[178/*1*/]);
        break;
    case 74:
        v_5/*"16"*/ = "U_FMF_11_3";
        v_9 = 11;
        v_A = 3;
        v_3 = 1;
        break;
    case 75:
        v_5/*"16"*/ = "U_FMF_11_4";
        v_9 = 11;
        v_A = 4;
        v_3 = 1;
        break;
    case 76:
        v_5/*"16"*/ = "U_FMF_11_5";
        v_9 = 11;
        v_A = 5;
        v_3 = 1;
        break;
    case 77:
        v_5/*"16"*/ = "U_FMF_11_6";
        v_9 = 11;
        v_A = 6;
        v_3 = 1;
        break;
    case 78:
        v_5/*"16"*/ = "U_FMF_11_7";
        v_9 = 11;
        v_A = 7;
        v_3 = 1;
        break;
    case 79:
        v_5/*"16"*/ = "U_FMF_11_8";
        v_9 = 11;
        v_A = 8;
        v_3 = 1;
        break;
    case 80:
        v_5/*"16"*/ = "U_FMF_11_9";
        v_9 = 11;
        v_A = 9;
        v_3 = 1;
        break;
    case 81:
        v_5/*"16"*/ = "U_FMF_11_10";
        v_9 = 11;
        v_A = 10;
        v_4 = 150;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[186/*1*/]);
        break;
    case 82:
        v_5/*"16"*/ = "U_FMF_11_11";
        v_9 = 11;
        v_A = 11;
        v_4 = 65;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[187/*1*/]);
        break;
    case 83:
        v_5/*"16"*/ = "U_FMF_11_12";
        v_9 = 11;
        v_A = 12;
        v_3 = 1;
        break;
    case 84:
        v_5/*"16"*/ = "U_FMF_11_13";
        v_9 = 11;
        v_A = 13;
        v_3 = 1;
        break;
    case 85:
        v_5/*"16"*/ = "U_FMF_11_14";
        v_9 = 11;
        v_A = 14;
        v_3 = 1;
        break;
    case 86:
        v_5/*"16"*/ = "U_FMF_11_15";
        v_9 = 11;
        v_A = 15;
        v_4 = 145;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[191/*1*/]);
        break;
    case 87:
        v_5/*"16"*/ = "U_FMF_12_0";
        v_9 = 12;
        v_A = 0;
        v_3 = 1;
        break;
    case 88:
        v_5/*"16"*/ = "U_FMF_12_1";
        v_9 = 12;
        v_A = 1;
        v_3 = 1;
        break;
    case 89:
        v_5/*"16"*/ = "U_FMF_12_2";
        v_9 = 12;
        v_A = 2;
        v_3 = 1;
        break;
    case 90:
        v_5/*"16"*/ = "U_FMF_12_3";
        v_9 = 12;
        v_A = 3;
        v_3 = 1;
        break;
    case 91:
        v_5/*"16"*/ = "U_FMF_12_4";
        v_9 = 12;
        v_A = 4;
        v_3 = 1;
        break;
    case 92:
        v_5/*"16"*/ = "U_FMF_12_5";
        v_9 = 12;
        v_A = 5;
        v_3 = 1;
        break;
    case 93:
        v_5/*"16"*/ = "U_FMF_12_6";
        v_9 = 12;
        v_A = 6;
        v_3 = 1;
        break;
    case 94:
        v_5/*"16"*/ = "U_FMF_12_7";
        v_9 = 12;
        v_A = 7;
        v_4 = 1560;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[199/*1*/]);
        break;
    case 95:
        v_5/*"16"*/ = "U_FMF_12_8";
        v_9 = 12;
        v_A = 8;
        v_4 = 195;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[200/*1*/]);
        break;
    case 96:
        v_5/*"16"*/ = "U_FMF_12_9";
        v_9 = 12;
        v_A = 9;
        v_4 = 200;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[201/*1*/]);
        break;
    case 97:
        v_5/*"16"*/ = "U_FMF_12_10";
        v_9 = 12;
        v_A = 10;
        v_3 = 1;
        break;
    case 98:
        v_5/*"16"*/ = "U_FMF_12_11";
        v_9 = 12;
        v_A = 11;
        v_3 = 1;
        break;
    case 99:
        v_5/*"16"*/ = "U_FMF_12_12";
        v_9 = 12;
        v_A = 12;
        v_3 = 1;
        break;
    case 100:
        v_5/*"16"*/ = "U_FMF_12_13";
        v_9 = 12;
        v_A = 13;
        v_3 = 1;
        break;
    case 101:
        v_5/*"16"*/ = "U_FMF_12_14";
        v_9 = 12;
        v_A = 14;
        v_3 = 1;
        break;
    case 102:
        v_5/*"16"*/ = "U_FMF_12_15";
        v_9 = 12;
        v_A = 15;
        v_3 = 1;
        break;
    case 103:
        v_5/*"16"*/ = "U_FMF_13_0";
        v_9 = 13;
        v_A = 0;
        v_4 = 975;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[208/*1*/]);
        break;
    case 104:
        v_5/*"16"*/ = "U_FMF_13_1";
        v_9 = 13;
        v_A = 1;
        v_4 = 2670;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[209/*1*/]);
        break;
    case 105:
        v_5/*"16"*/ = "U_FMF_13_2";
        v_9 = 13;
        v_A = 2;
        v_4 = 480;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[210/*1*/]);
        break;
    case 106:
        v_5/*"16"*/ = "U_FMF_13_3";
        v_9 = 13;
        v_A = 3;
        v_4 = 400;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[211/*1*/]);
        break;
    case 107:
        v_5/*"16"*/ = "U_FMF_13_4";
        v_9 = 13;
        v_A = 4;
        v_4 = 2500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[212/*1*/]);
        break;
    case 108:
        v_5/*"16"*/ = "U_FMF_13_5";
        v_9 = 13;
        v_A = 5;
        v_4 = 2060;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[213/*1*/]);
        break;
    case 109:
        v_5/*"16"*/ = "U_FMF_13_6";
        v_9 = 13;
        v_A = 6;
        v_4 = 2620;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[214/*1*/]);
        break;
    case 110:
        v_5/*"16"*/ = "U_FMF_13_7";
        v_9 = 13;
        v_A = 7;
        v_4 = 475;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[215/*1*/]);
        break;
    case 111:
        v_5/*"16"*/ = "U_FMF_13_8";
        v_9 = 13;
        v_A = 8;
        v_4 = 490;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[216/*1*/]);
        break;
    case 112:
        v_5/*"16"*/ = "U_FMF_13_9";
        v_9 = 13;
        v_A = 9;
        v_4 = 2280;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[217/*1*/]);
        break;
    case 113:
        v_5/*"16"*/ = "U_FMF_13_10";
        v_9 = 13;
        v_A = 10;
        v_4 = 485;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[218/*1*/]);
        break;
    case 114:
        v_5/*"16"*/ = "U_FMF_13_11";
        v_9 = 13;
        v_A = 11;
        v_4 = 2390;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[219/*1*/]);
        break;
    case 115:
        v_5/*"16"*/ = "U_FMF_13_12";
        v_9 = 13;
        v_A = 12;
        v_4 = 2610;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[220/*1*/]);
        break;
    case 116:
        v_5/*"16"*/ = "U_FMF_13_13";
        v_9 = 13;
        v_A = 13;
        v_4 = 1450;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[221/*1*/]);
        break;
    case 117:
        v_5/*"16"*/ = "U_FMF_13_14";
        v_9 = 13;
        v_A = 14;
        v_4 = 2720;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[222/*1*/]);
        break;
    case 118:
        v_5/*"16"*/ = "U_FMF_13_15";
        v_9 = 13;
        v_A = 15;
        v_4 = 4995;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[223/*1*/]);
        break;
    case 119:
        v_9 = 14;
        v_A = 0;
        break;
    case 120:
        v_5/*"16"*/ = "U_FMF_15_0";
        v_9 = 15;
        v_A = 0;
        v_4 = 325;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[240/*1*/]);
        break;
    case 121:
        v_5/*"16"*/ = "U_FMF_15_1";
        v_9 = 15;
        v_A = 1;
        v_3 = 1;
        break;
    case 122:
        v_5/*"16"*/ = "U_FMF_15_2";
        v_9 = 15;
        v_A = 2;
        v_3 = 1;
        break;
    case 123:
        v_5/*"16"*/ = "U_FMF_15_3";
        v_9 = 15;
        v_A = 3;
        v_4 = 130;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[243/*1*/]);
        break;
    case 124:
        v_5/*"16"*/ = "U_FMF_15_4";
        v_9 = 15;
        v_A = 4;
        v_3 = 1;
        break;
    case 125:
        v_5/*"16"*/ = "U_FMF_15_5";
        v_9 = 15;
        v_A = 5;
        v_3 = 1;
        break;
    case 126:
        v_5/*"16"*/ = "U_FMF_15_6";
        v_9 = 15;
        v_A = 6;
        v_3 = 1;
        break;
    case 127:
        v_5/*"16"*/ = "U_FMF_15_7";
        v_9 = 15;
        v_A = 7;
        v_3 = 1;
        break;
    case 128:
        v_5/*"16"*/ = "U_FMF_15_8";
        v_9 = 15;
        v_A = 8;
        v_3 = 1;
        break;
    case 129:
        v_5/*"16"*/ = "U_FMF_15_9";
        v_9 = 15;
        v_A = 9;
        v_3 = 1;
        break;
    case 130:
        v_5/*"16"*/ = "U_FMF_15_10";
        v_9 = 15;
        v_A = 10;
        v_4 = 450;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[250/*1*/]);
        break;
    case 131:
        v_5/*"16"*/ = "U_FMF_15_11";
        v_9 = 15;
        v_A = 11;
        v_4 = 465;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[251/*1*/]);
        break;
    case 132:
        v_5/*"16"*/ = "U_FMF_15_12";
        v_9 = 15;
        v_A = 12;
        v_3 = 1;
        break;
    case 133:
        v_5/*"16"*/ = "U_FMF_15_13";
        v_9 = 15;
        v_A = 13;
        v_3 = 1;
        break;
    case 134:
        v_5/*"16"*/ = "U_FMF_15_14";
        v_9 = 15;
        v_A = 14;
        v_3 = 1;
        break;
    case 135:
        v_5/*"16"*/ = "U_FMF_15_15";
        v_9 = 15;
        v_A = 15;
        v_3 = 1;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 136);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f18);
        }
        return ;
        break;
    }
    if ((a_0 == 4) || (a_0 == 20)) {
        if (sub_44537(89, -1)) {
            v_5/*"16"*/ = "REW_RS";
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(1250) * g_40001._fB9D);
        } else { 
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(40) * g_40001._f5DA[4/*1*/]);
        }
    } else if ((a_0 == 7) || (a_0 == 23)) {
        if (sub_44537(88, -1)) {
            v_5/*"16"*/ = "REW_LSB";
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(450) * g_40001._fB9C);
        } else { 
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(45) * g_40001._f5DA[7/*1*/]);
        }
    } else if ((a_0 == 9) || (a_0 == 25)) {
        if (sub_44537(87, -1)) {
            v_5/*"16"*/ = "REW_REDSK";
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(500) * g_40001._fB9B);
        } else { 
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(40) * g_40001._f5DA[9/*1*/]);
        }
    } else if ((a_0 >= 0) && (a_0 < 16)) {
        v_E = a_0;
        if ((v_E >= 0) && (v_E < 256)) {
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[v_E/*1*/]);
        }
    } else if ((a_0 >= 16) && (a_0 < 32)) {
        v_F = a_0 - 16;
        if ((v_F >= 0) && (v_F < 256)) {
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[v_F/*1*/]);
        }
    }
    v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_42DD3._f18);
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

auto sub_44537(auto a_0, auto a_1) {
    if (sub_44582(a_0) == 3790) {
        return 0;
    }
    v_4 = sub_44569(a_0, a_1);
    v_5 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_4, sub_1008b(v_5));
}

auto sub_44569(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_44582(a_0), a_1, 0);
    return v_4;
}

auto sub_44582(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 1028;
            break;
        case 1:
            return 1029;
            break;
        case 2:
            return 1030;
            break;
        case 3:
            return 1031;
            break;
        case 4:
            return 1032;
            break;
        case 5:
            return 1492;
            break;
        case 6:
            return 1745;
            break;
        case 7:
            return 1939;
            break;
        case 8:
            return 1940;
            break;
        case 9:
            return 1941;
            break;
        case 10:
            return 1942;
            break;
        case 11:
            return 1943;
            break;
        case 12:
            return 1944;
            break;
        case 13:
            return 2395;
            break;
        case 14:
            return 2415;
            break;
        case 15:
            return 2418;
            break;
        case 16:
            return 2421;
            break;
        case 17:
            return 2584;
            break;
        case 18:
            return 2587;
            break;
        case 19:
            return 2590;
            break;
        }
    }
    return 3790;
}

void sub_446fc(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 11;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 250;
        break;
    case 1:
        v_9 = 0;
        v_A = 1;
        v_4 = 225;
        break;
    case 2:
        v_9 = 0;
        v_A = 2;
        v_4 = 50;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        v_4 = 40;
        break;
    case 4:
        v_9 = 0;
        v_A = 4;
        v_4 = 40;
        break;
    case 5:
        v_9 = 0;
        v_A = 5;
        v_4 = 40;
        break;
    case 6:
        v_9 = 0;
        v_A = 6;
        v_4 = 40;
        break;
    case 7:
        v_9 = 0;
        v_A = 7;
        v_4 = 45;
        break;
    case 8:
        v_9 = 0;
        v_A = 8;
        v_4 = 40;
        break;
    case 9:
        v_9 = 0;
        v_A = 9;
        v_4 = 40;
        break;
    case 10:
        v_9 = 0;
        v_A = 10;
        v_4 = 135;
        break;
    case 11:
        v_9 = 0;
        v_A = 11;
        v_4 = 60;
        break;
    case 12:
        v_9 = 0;
        v_A = 12;
        v_4 = 220;
        break;
    case 13:
        v_9 = 0;
        v_A = 13;
        v_4 = 45;
        break;
    case 14:
        v_9 = 0;
        v_A = 14;
        v_4 = 45;
        break;
    case 15:
        v_9 = 0;
        v_A = 15;
        v_4 = 125;
        break;
    }
    switch (a_0) {
    case 16:
        v_9 = 1;
        v_A = 0;
        v_4 = 390;
        break;
    case 17:
        v_9 = 1;
        v_A = 1;
        v_4 = 230;
        break;
    case 18:
        v_9 = 1;
        v_A = 2;
        v_4 = 355;
        break;
    case 19:
        v_9 = 1;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 20:
        v_9 = 1;
        v_A = 4;
        v_4 = 5000;
        break;
    case 21:
        v_9 = 1;
        v_A = 5;
        v_4 = 2725;
        break;
    case 22:
        v_9 = 1;
        v_A = 6;
        v_4 = 3265;
        break;
    case 23:
        v_9 = 1;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 24:
        v_9 = 1;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 25:
        v_9 = 1;
        v_A = 9;
        v_4 = 3625;
        break;
    case 26:
        v_9 = 1;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 27:
        v_9 = 1;
        v_A = 11;
        v_4 = 4220;
        break;
    case 28:
        v_9 = 1;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 29:
        v_9 = 1;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 30:
        v_9 = 1;
        v_A = 14;
        v_4 = 310;
        break;
    case 31:
        v_9 = 1;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 32:
        v_9 = 2;
        v_A = 0;
        v_4 = 45;
        break;
    case 33:
        v_9 = 2;
        v_A = 1;
        v_4 = 210;
        break;
    case 34:
        v_9 = 2;
        v_A = 2;
        v_4 = 75;
        break;
    case 35:
        v_9 = 2;
        v_A = 3;
        v_4 = 50;
        break;
    case 36:
        v_9 = 2;
        v_A = 4;
        v_4 = 60;
        break;
    case 37:
        v_9 = 2;
        v_A = 5;
        v_4 = 50;
        break;
    case 38:
        v_9 = 2;
        v_A = 6;
        v_4 = 295;
        break;
    case 39:
        v_9 = 2;
        v_A = 7;
        v_4 = 80;
        break;
    case 40:
        v_9 = 2;
        v_A = 8;
        v_4 = 75;
        break;
    case 41:
        v_9 = 2;
        v_A = 9;
        v_4 = 2250;
        break;
    case 42:
        v_9 = 2;
        v_A = 10;
        v_4 = 275;
        break;
    case 43:
        v_9 = 2;
        v_A = 11;
        v_4 = 445;
        break;
    case 44:
        v_9 = 2;
        v_A = 12;
        v_4 = 50;
        break;
    case 45:
        v_9 = 2;
        v_A = 13;
        v_4 = 40;
        break;
    case 46:
        v_9 = 2;
        v_A = 14;
        v_4 = 45;
        break;
    case 47:
        v_9 = 2;
        v_A = 15;
        v_4 = 470;
        break;
    }
    switch (a_0) {
    case 48:
        v_9 = 3;
        v_A = 0;
        v_4 = 95;
        break;
    case 49:
        v_9 = 3;
        v_A = 1;
        v_4 = 95;
        break;
    case 50:
        v_9 = 3;
        v_A = 2;
        v_4 = 360;
        break;
    case 51:
        v_9 = 3;
        v_A = 3;
        v_4 = 100;
        break;
    case 52:
        v_9 = 3;
        v_A = 4;
        v_4 = 60;
        break;
    case 53:
        v_9 = 3;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 54:
        v_9 = 3;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 55:
        v_9 = 3;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 56:
        v_9 = 3;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 57:
        v_9 = 3;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 58:
        v_9 = 3;
        v_A = 10;
        v_4 = 295;
        break;
    case 59:
        v_9 = 3;
        v_A = 11;
        v_4 = 460;
        break;
    case 60:
        v_9 = 3;
        v_A = 12;
        v_4 = 1980;
        break;
    case 61:
        v_9 = 3;
        v_A = 13;
        v_4 = 2110;
        break;
    case 62:
        v_9 = 3;
        v_A = 14;
        v_4 = 95;
        break;
    case 63:
        v_9 = 3;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 64:
        v_9 = 4;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 65:
        v_9 = 4;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 66:
        v_9 = 4;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 67:
        v_9 = 4;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 68:
        v_9 = 4;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 69:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 70:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 71:
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 72:
        v_9 = 4;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 73:
        v_9 = 4;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 74:
        v_9 = 4;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 75:
        v_9 = 4;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 76:
        v_9 = 4;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 77:
        v_9 = 4;
        v_A = 13;
        v_4 = 40;
        break;
    case 78:
        v_9 = 4;
        v_A = 14;
        v_4 = 40;
        break;
    case 79:
        v_9 = 4;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 80:
        v_9 = 5;
        v_A = 0;
        v_4 = 45;
        break;
    case 81:
        v_9 = 5;
        v_A = 1;
        v_4 = 60;
        break;
    case 82:
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 83:
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 84:
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 85:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 86:
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 87:
        v_9 = 5;
        v_A = 7;
        v_4 = 375;
        break;
    case 88:
        v_9 = 5;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 89:
        v_9 = 5;
        v_A = 9;
        v_4 = 90;
        break;
    case 90:
        v_9 = 5;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 91:
        v_9 = 5;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 92:
        v_9 = 5;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 93:
        v_9 = 5;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 94:
        v_9 = 5;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 95:
        v_9 = 5;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 96:
        v_9 = 6;
        v_A = 0;
        v_4 = 900;
        break;
    case 97:
        v_9 = 6;
        v_A = 1;
        v_4 = 1000;
        break;
    case 98:
        v_9 = 6;
        v_A = 2;
        v_4 = 1050;
        break;
    case 99:
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 100:
        v_9 = 6;
        v_A = 4;
        v_4 = 1000;
        break;
    case 101:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 102:
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 103:
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 104:
        v_9 = 6;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 105:
        v_9 = 6;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 106:
        v_9 = 6;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 107:
        v_9 = 6;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 108:
        v_9 = 6;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 109:
        v_9 = 6;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 110:
        v_9 = 6;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 111:
        v_9 = 6;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 112:
        v_9 = 7;
        v_A = 0;
        v_4 = 2975;
        break;
    case 113:
        v_9 = 7;
        v_A = 1;
        v_4 = 1100;
        break;
    case 114:
        v_9 = 7;
        v_A = 2;
        v_4 = 1825;
        break;
    case 115:
        v_9 = 7;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 116:
        v_9 = 7;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 117:
        v_9 = 7;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 118:
        v_9 = 7;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 119:
        v_9 = 7;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 120:
        v_9 = 7;
        v_A = 8;
        v_4 = 1750;
        break;
    case 121:
        v_9 = 7;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 122:
        v_9 = 7;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 123:
        v_9 = 7;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 124:
        v_9 = 7;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 125:
        v_9 = 7;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 126:
        v_9 = 7;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 127:
        v_9 = 7;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 128:
        v_9 = 8;
        v_A = 0;
        v_4 = 1025;
        break;
    case 129:
        v_9 = 8;
        v_A = 1;
        v_4 = 1075;
        break;
    case 130:
        v_9 = 8;
        v_A = 2;
        v_4 = 2805;
        break;
    case 131:
        v_9 = 8;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 132:
        v_9 = 8;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 133:
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 134:
        v_9 = 8;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 135:
        v_9 = 8;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 136:
        v_9 = 8;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 137:
        v_9 = 8;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 138:
        v_9 = 8;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 139:
        v_9 = 8;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 140:
        v_9 = 8;
        v_A = 12;
        v_4 = 2250;
        break;
    case 141:
        v_9 = 8;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 142:
        v_9 = 8;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 143:
        v_9 = 8;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 144:
        v_9 = 9;
        v_A = 0;
        v_4 = 495;
        break;
    case 145:
        v_9 = 9;
        v_A = 1;
        v_4 = 95;
        break;
    case 146:
        v_9 = 9;
        v_A = 2;
        v_4 = 95;
        break;
    case 147:
        v_9 = 9;
        v_A = 3;
        v_4 = 525;
        break;
    case 148:
        v_9 = 9;
        v_A = 4;
        v_4 = 100;
        break;
    case 149:
        v_9 = 9;
        v_A = 5;
        v_4 = 110;
        break;
    case 150:
        v_9 = 9;
        v_A = 6;
        v_4 = 100;
        break;
    case 151:
        v_9 = 9;
        v_A = 7;
        v_4 = 110;
        break;
    case 152:
        v_9 = 9;
        v_A = 8;
        v_4 = 130;
        break;
    case 153:
        v_9 = 9;
        v_A = 9;
        v_4 = 560;
        break;
    case 154:
        v_9 = 9;
        v_A = 10;
        v_4 = 295;
        break;
    case 155:
        v_9 = 9;
        v_A = 11;
        v_4 = 975;
        break;
    case 156:
        v_9 = 9;
        v_A = 12;
        v_4 = 160;
        break;
    case 157:
        v_9 = 9;
        v_A = 13;
        v_4 = 100;
        break;
    case 158:
        v_9 = 9;
        v_A = 14;
        v_4 = 1700;
        break;
    case 159:
        v_9 = 9;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 160:
        v_9 = 10;
        v_A = 0;
        v_4 = 380;
        break;
    case 161:
        v_9 = 10;
        v_A = 1;
        v_4 = 95;
        break;
    case 162:
        v_9 = 10;
        v_A = 2;
        v_4 = 95;
        break;
    case 163:
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 164:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 165:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 166:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 167:
        v_9 = 10;
        v_A = 7;
        v_4 = 110;
        break;
    case 168:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 169:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 170:
        v_9 = 10;
        v_A = 10;
        v_4 = 95;
        break;
    case 171:
        v_9 = 10;
        v_A = 11;
        v_4 = 90;
        break;
    case 172:
        v_9 = 10;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 173:
        v_9 = 10;
        v_A = 13;
        v_4 = 85;
        break;
    case 174:
        v_9 = 10;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 175:
        v_9 = 10;
        v_A = 15;
        v_4 = 215;
        break;
    }
    switch (a_0) {
    case 176:
        v_9 = 11;
        v_A = 0;
        v_4 = 90;
        break;
    case 177:
        v_9 = 11;
        v_A = 1;
        v_4 = 95;
        break;
    case 178:
        v_9 = 11;
        v_A = 2;
        v_4 = 95;
        break;
    case 179:
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 180:
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 181:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 182:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 183:
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 184:
        v_9 = 11;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 185:
        v_9 = 11;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 186:
        v_9 = 11;
        v_A = 10;
        v_4 = 150;
        break;
    case 187:
        v_9 = 11;
        v_A = 11;
        v_4 = 65;
        break;
    case 188:
        v_9 = 11;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 189:
        v_9 = 11;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 190:
        v_9 = 11;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 191:
        v_9 = 11;
        v_A = 15;
        v_4 = 145;
        break;
    }
    switch (a_0) {
    case 192:
        v_9 = 12;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 193:
        v_9 = 12;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 194:
        v_9 = 12;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 195:
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 196:
        v_9 = 12;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 197:
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 198:
        v_9 = 12;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 199:
        v_9 = 12;
        v_A = 7;
        v_4 = 1560;
        break;
    case 200:
        v_9 = 12;
        v_A = 8;
        v_4 = 195;
        break;
    case 201:
        v_9 = 12;
        v_A = 9;
        v_4 = 200;
        break;
    case 202:
        v_9 = 12;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 203:
        v_9 = 12;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 204:
        v_9 = 12;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 205:
        v_9 = 12;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 206:
        v_9 = 12;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 207:
        v_9 = 12;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 208:
        v_9 = 13;
        v_A = 0;
        v_4 = 975;
        break;
    case 209:
        v_9 = 13;
        v_A = 1;
        v_4 = 2670;
        break;
    case 210:
        v_9 = 13;
        v_A = 2;
        v_4 = 480;
        break;
    case 211:
        v_9 = 13;
        v_A = 3;
        v_4 = 400;
        break;
    case 212:
        v_9 = 13;
        v_A = 4;
        v_4 = 2500;
        break;
    case 213:
        v_9 = 13;
        v_A = 5;
        v_4 = 2060;
        break;
    case 214:
        v_9 = 13;
        v_A = 6;
        v_4 = 2620;
        break;
    case 215:
        v_9 = 13;
        v_A = 7;
        v_4 = 475;
        break;
    case 216:
        v_9 = 13;
        v_A = 8;
        v_4 = 490;
        break;
    case 217:
        v_9 = 13;
        v_A = 9;
        v_4 = 2280;
        break;
    case 218:
        v_9 = 13;
        v_A = 10;
        v_4 = 485;
        break;
    case 219:
        v_9 = 13;
        v_A = 11;
        v_4 = 2390;
        break;
    case 220:
        v_9 = 13;
        v_A = 12;
        v_4 = 2610;
        break;
    case 221:
        v_9 = 13;
        v_A = 13;
        v_4 = 1450;
        break;
    case 222:
        v_9 = 13;
        v_A = 14;
        v_4 = 2720;
        break;
    case 223:
        v_9 = 13;
        v_A = 15;
        v_4 = 4995;
        break;
    }
    switch (a_0) {
    case 224:
        v_9 = 14;
        v_A = 0;
        v_4 = 265;
        break;
    case 225:
        v_9 = 14;
        v_A = 1;
        v_4 = 385;
        break;
    case 226:
        v_9 = 14;
        v_A = 2;
        v_4 = 345;
        break;
    case 227:
        v_9 = 14;
        v_A = 3;
        v_4 = 330;
        break;
    case 228:
        v_9 = 14;
        v_A = 4;
        v_4 = 430;
        break;
    case 229:
        v_9 = 14;
        v_A = 5;
        v_4 = 375;
        break;
    case 230:
        v_9 = 14;
        v_A = 6;
        v_4 = 375;
        break;
    case 231:
        v_9 = 14;
        v_A = 7;
        v_4 = 295;
        break;
    case 232:
        v_9 = 14;
        v_A = 8;
        v_4 = 360;
        break;
    case 233:
        v_9 = 14;
        v_A = 9;
        v_4 = 325;
        break;
    case 234:
        v_9 = 14;
        v_A = 10;
        v_4 = 340;
        break;
    case 235:
        v_9 = 14;
        v_A = 11;
        v_4 = 435;
        break;
    case 236:
        v_9 = 14;
        v_A = 12;
        v_4 = 300;
        break;
    case 237:
        v_9 = 14;
        v_A = 13;
        v_4 = 315;
        break;
    case 238:
        v_9 = 14;
        v_A = 14;
        v_4 = 415;
        break;
    case 239:
        v_9 = 14;
        v_A = 15;
        v_4 = 420;
        break;
    }
    switch (a_0) {
    case 240:
        v_9 = 15;
        v_A = 0;
        v_4 = 325;
        break;
    case 241:
        v_9 = 15;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 242:
        v_9 = 15;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 243:
        v_9 = 15;
        v_A = 3;
        v_4 = 130;
        break;
    case 244:
        v_9 = 15;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 245:
        v_9 = 15;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 246:
        v_9 = 15;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 247:
        v_9 = 15;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 248:
        v_9 = 15;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 249:
        v_9 = 15;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 250:
        v_9 = 15;
        v_A = 10;
        v_4 = 450;
        break;
    case 251:
        v_9 = 15;
        v_A = 11;
        v_4 = 465;
        break;
    case 252:
        v_9 = 15;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 253:
        v_9 = 15;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 254:
        v_9 = 15;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 255:
        v_9 = 15;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    v_5/*"16"*/ = "U_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    if (a_0 == 4) {
        if (sub_44537(89, -1)) {
            v_5/*"16"*/ = "REW_RS";
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(1250) * g_40001._fB9D) * g_42DD3._f18);
        } else { 
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(40) * g_40001._f5DA[4/*1*/]) * g_42DD3._f18);
        }
    } else if (a_0 == 7) {
        if (sub_44537(88, -1)) {
            v_5/*"16"*/ = "REW_LSB";
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(450) * g_40001._fB9C) * g_42DD3._f18);
        } else { 
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(45) * g_40001._f5DA[7/*1*/]) * g_42DD3._f18);
        }
    } else if (a_0 == 9) {
        if (sub_44537(87, -1)) {
            v_5/*"16"*/ = "REW_REDSK";
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(500) * g_40001._fB9B) * g_42DD3._f18);
        } else { 
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(40) * g_40001._f5DA[9/*1*/]) * g_42DD3._f18);
        }
    } else { 
        v_E = a_0;
        if ((v_E >= 0) && (v_E < 256)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f5DA[v_E/*1*/]) * g_42DD3._f18);
        }
    }
    if (a_0 >= 256) {
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 256);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f18);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_45e8a(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 2;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[0/*1*/]);
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        v_4 = 500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[1/*1*/]);
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        v_4 = 495;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[2/*1*/]);
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        v_4 = 490;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[3/*1*/]);
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        v_4 = 485;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[4/*1*/]);
        break;
    case 5:
        v_9 = 1;
        v_A = 4;
        v_4 = 480;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[5/*1*/]);
        break;
    case 6:
        v_9 = 1;
        v_A = 5;
        v_4 = 0;
        break;
    case 7:
        v_9 = 2;
        v_A = 0;
        v_4 = 440;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[6/*1*/]);
        break;
    case 8:
        v_9 = 2;
        v_A = 1;
        v_4 = 435;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[7/*1*/]);
        break;
    case 9:
        v_9 = 2;
        v_A = 2;
        v_4 = 430;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[8/*1*/]);
        break;
    case 10:
        v_9 = 2;
        v_A = 3;
        v_4 = 425;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[9/*1*/]);
        break;
    case 11:
        v_9 = 2;
        v_A = 4;
        v_4 = 420;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[10/*1*/]);
        break;
    case 12:
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        break;
    case 13:
        v_9 = 3;
        v_A = 0;
        v_4 = 190;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[11/*1*/]);
        break;
    case 14:
        v_9 = 3;
        v_A = 1;
        v_4 = 185;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[12/*1*/]);
        break;
    case 15:
        v_9 = 3;
        v_A = 2;
        v_4 = 180;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[13/*1*/]);
        break;
    case 16:
        v_9 = 3;
        v_A = 3;
        v_4 = 175;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[14/*1*/]);
        break;
    case 17:
        v_9 = 3;
        v_A = 4;
        v_4 = 170;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[15/*1*/]);
        break;
    case 18:
        v_9 = 4;
        v_A = 0;
        v_4 = 295;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[16/*1*/]);
        break;
    case 19:
        v_9 = 4;
        v_A = 1;
        v_4 = 290;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[17/*1*/]);
        break;
    case 20:
        v_9 = 4;
        v_A = 2;
        v_4 = 285;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[18/*1*/]);
        break;
    case 21:
        v_9 = 4;
        v_A = 3;
        v_4 = 280;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[19/*1*/]);
        break;
    case 22:
        v_9 = 4;
        v_A = 4;
        v_4 = 275;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[20/*1*/]);
        break;
    case 23:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        break;
    case 24:
        v_9 = 5;
        v_A = 0;
        v_4 = 2000;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[21/*1*/]);
        break;
    case 25:
        v_9 = 5;
        v_A = 1;
        v_4 = 1995;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[22/*1*/]);
        break;
    case 26:
        v_9 = 5;
        v_A = 2;
        v_4 = 1990;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[23/*1*/]);
        break;
    case 27:
        v_9 = 5;
        v_A = 3;
        v_4 = 1985;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[24/*1*/]);
        break;
    case 28:
        v_9 = 5;
        v_A = 4;
        v_4 = 1980;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[25/*1*/]);
        break;
    case 29:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        break;
    case 30:
        v_9 = 6;
        v_A = 0;
        v_4 = 1150;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[26/*1*/]);
        break;
    case 31:
        v_9 = 6;
        v_A = 1;
        v_4 = 1145;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[27/*1*/]);
        break;
    case 32:
        v_9 = 6;
        v_A = 2;
        v_4 = 1140;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[28/*1*/]);
        break;
    case 33:
        v_9 = 6;
        v_A = 3;
        v_4 = 1135;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[29/*1*/]);
        break;
    case 34:
        v_9 = 6;
        v_A = 4;
        v_4 = 1130;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[30/*1*/]);
        break;
    case 35:
        v_9 = 7;
        v_A = 0;
        v_4 = 550;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[31/*1*/]);
        break;
    case 36:
        v_9 = 7;
        v_A = 1;
        v_4 = 545;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[32/*1*/]);
        break;
    case 37:
        v_9 = 7;
        v_A = 2;
        v_4 = 540;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[33/*1*/]);
        break;
    case 38:
        v_9 = 7;
        v_A = 3;
        v_4 = 535;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[34/*1*/]);
        break;
    case 39:
        v_9 = 7;
        v_A = 4;
        v_4 = 530;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[35/*1*/]);
        break;
    case 40:
        v_9 = 7;
        v_A = 5;
        v_4 = 0;
        break;
    case 41:
        v_9 = 8;
        v_A = 0;
        v_4 = 580;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[36/*1*/]);
        break;
    case 42:
        v_9 = 8;
        v_A = 1;
        v_4 = 575;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[37/*1*/]);
        break;
    case 43:
        v_9 = 8;
        v_A = 2;
        v_4 = 570;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[38/*1*/]);
        break;
    case 44:
        v_9 = 8;
        v_A = 3;
        v_4 = 565;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[39/*1*/]);
        break;
    case 45:
        v_9 = 8;
        v_A = 4;
        v_4 = 560;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[40/*1*/]);
        break;
    case 46:
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        break;
    case 47:
        v_9 = 9;
        v_A = 0;
        v_4 = 1100;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[41/*1*/]);
        break;
    case 48:
        v_9 = 9;
        v_A = 1;
        v_4 = 1095;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[42/*1*/]);
        break;
    case 49:
        v_9 = 9;
        v_A = 2;
        v_4 = 1090;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[43/*1*/]);
        break;
    case 50:
        v_9 = 9;
        v_A = 3;
        v_4 = 1085;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[44/*1*/]);
        break;
    case 51:
        v_9 = 9;
        v_A = 4;
        v_4 = 1080;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[45/*1*/]);
        break;
    case 52:
        v_9 = 9;
        v_A = 5;
        v_4 = 0;
        break;
    case 53:
        v_9 = 10;
        v_A = 0;
        v_4 = 520;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[46/*1*/]);
        break;
    case 54:
        v_9 = 10;
        v_A = 1;
        v_4 = 515;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[47/*1*/]);
        break;
    case 55:
        v_9 = 10;
        v_A = 2;
        v_4 = 510;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[48/*1*/]);
        break;
    case 56:
        v_9 = 10;
        v_A = 3;
        v_4 = 505;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[49/*1*/]);
        break;
    case 57:
        v_9 = 10;
        v_A = 4;
        v_4 = 500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[50/*1*/]);
        break;
    case 58:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        break;
    case 59:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        break;
    case 60:
        v_9 = 11;
        v_A = 0;
        v_4 = 395;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[51/*1*/]);
        break;
    case 61:
        v_9 = 11;
        v_A = 1;
        v_4 = 390;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[52/*1*/]);
        break;
    case 62:
        v_9 = 11;
        v_A = 2;
        v_4 = 385;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[53/*1*/]);
        break;
    case 63:
        v_9 = 11;
        v_A = 3;
        v_4 = 380;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[54/*1*/]);
        break;
    case 64:
        v_9 = 11;
        v_A = 4;
        v_4 = 375;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[55/*1*/]);
        break;
    case 65:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        break;
    case 66:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        break;
    case 67:
        v_9 = 12;
        v_A = 0;
        v_4 = 1050;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[56/*1*/]);
        break;
    case 68:
        v_9 = 12;
        v_A = 1;
        v_4 = 1045;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[57/*1*/]);
        break;
    case 69:
        v_9 = 12;
        v_A = 2;
        v_4 = 1040;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[58/*1*/]);
        break;
    case 70:
        v_9 = 12;
        v_A = 3;
        v_4 = 1035;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[59/*1*/]);
        break;
    case 71:
        v_9 = 12;
        v_A = 4;
        v_4 = 1030;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[60/*1*/]);
        break;
    case 72:
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        break;
    case 73:
        v_9 = 13;
        v_A = 0;
        v_4 = 1200;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[61/*1*/]);
        break;
    case 74:
        v_9 = 13;
        v_A = 1;
        v_4 = 1195;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[62/*1*/]);
        break;
    case 75:
        v_9 = 13;
        v_A = 2;
        v_4 = 1190;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[63/*1*/]);
        break;
    case 76:
        v_9 = 13;
        v_A = 3;
        v_4 = 1185;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[64/*1*/]);
        break;
    case 77:
        v_9 = 13;
        v_A = 4;
        v_4 = 1180;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[65/*1*/]);
        break;
    case 78:
        v_9 = 13;
        v_A = 5;
        v_4 = 0;
        break;
    case 79:
        v_9 = 14;
        v_A = 0;
        v_4 = 475;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[66/*1*/]);
        break;
    case 80:
        v_9 = 14;
        v_A = 1;
        v_4 = 470;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[67/*1*/]);
        break;
    case 81:
        v_9 = 14;
        v_A = 2;
        v_4 = 465;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[68/*1*/]);
        break;
    case 82:
        v_9 = 14;
        v_A = 3;
        v_4 = 460;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[69/*1*/]);
        break;
    case 83:
        v_9 = 14;
        v_A = 4;
        v_4 = 455;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[70/*1*/]);
        break;
    case 84:
        v_9 = 14;
        v_A = 5;
        v_4 = 0;
        break;
    case 85:
        v_9 = 15;
        v_A = 0;
        v_4 = 950;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[71/*1*/]);
        break;
    case 86:
        v_9 = 15;
        v_A = 1;
        v_4 = 945;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[72/*1*/]);
        break;
    case 87:
        v_9 = 15;
        v_A = 2;
        v_4 = 940;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[73/*1*/]);
        break;
    case 88:
        v_9 = 15;
        v_A = 3;
        v_4 = 935;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[74/*1*/]);
        break;
    case 89:
        v_9 = 15;
        v_A = 4;
        v_4 = 930;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f991[75/*1*/]);
        break;
    case 90:
        v_9 = 15;
        v_A = 5;
        v_4 = 0;
        break;
    case 91:
        v_9 = 15;
        v_A = 6;
        v_4 = 0;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 4;
        sub_3c14c(v_D, a_0, 92);
        return ;
        break;
    }
    v_5/*"16"*/ = "H_FMF_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_46d59(auto a_0, auto a_1) {
    switch (a_0) {
    case 2:
        sub_519ef(a_1);
        break;
    case 11:
        sub_5043a(a_1);
        break;
    case 8:
        sub_4df24(a_1);
        break;
    case 9:
        sub_4dc0a(a_1);
        break;
    case 3:
        sub_4dab5(a_1);
        break;
    case 4:
        sub_4c484(a_1);
        break;
    case 6:
        sub_4ae48(a_1);
        break;
    case 1:
        sub_4ab93(a_1);
        break;
    case 7:
        sub_4a29d(a_1);
        break;
    case 10:
        sub_4a17e(a_1);
        break;
    case 14:
        sub_473e1(a_1);
        break;
    case 12:
        sub_47132(a_1);
        break;
    case 5:
        sub_47031(a_1);
        break;
    case 0:
        sub_47013(a_1);
        break;
    case 13:
        sub_46e49(a_1);
        break;
    }
}

void sub_46e49(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 13;
    switch (a_0) {
    case 31:
        v_9 = 0;
        v_A = 0;
        break;
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 0;
        v_A = 0;
        break;
    case 2:
        v_9 = 0;
        v_A = 0;
        break;
    case 3:
        v_9 = 0;
        v_A = 0;
        break;
    case 4:
        v_9 = 0;
        v_A = 0;
        break;
    case 5:
        v_9 = 0;
        v_A = 0;
        break;
    case 6:
        v_9 = 0;
        v_A = 0;
        break;
    case 7:
        v_9 = 0;
        v_A = 0;
        break;
    case 8:
        v_9 = 0;
        v_A = 0;
        break;
    case 9:
        v_9 = 0;
        v_A = 0;
        break;
    case 10:
        v_9 = 0;
        v_A = 0;
        break;
    case 11:
        v_9 = 0;
        v_A = 0;
        break;
    case 12:
        v_9 = 0;
        v_A = 0;
        break;
    case 13:
        v_9 = 0;
        v_A = 0;
        break;
    case 14:
        v_9 = 0;
        v_A = 0;
        break;
    case 15:
        v_9 = 0;
        v_A = 0;
        break;
    case 16:
        v_9 = 0;
        v_A = 0;
        break;
    case 17:
        v_9 = 0;
        v_A = 0;
        break;
    case 18:
        v_9 = 0;
        v_A = 0;
        break;
    case 19:
        v_9 = 0;
        v_A = 0;
        break;
    case 20:
        v_9 = 0;
        v_A = 0;
        break;
    case 21:
        v_9 = 0;
        v_A = 0;
        break;
    case 22:
        v_9 = 0;
        v_A = 0;
        break;
    case 23:
        v_9 = 0;
        v_A = 0;
        break;
    case 24:
        v_9 = 0;
        v_A = 0;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_47013(auto a_0) {
    v_3 = 0;
    g_10E3A[0/*14*/]._f5 = 3;
    sub_3c14c(v_3, a_0, 0);
}

void sub_47031(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 5;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        break;
    case 2:
        v_9 = 2;
        v_A = 0;
        break;
    case 3:
        v_9 = 3;
        v_A = 0;
        break;
    case 4:
        v_9 = 4;
        v_A = 0;
        break;
    case 5:
        v_9 = 5;
        v_A = 0;
        break;
    case 6:
        v_9 = 6;
        v_A = 0;
        break;
    case 7:
        v_9 = 7;
        v_A = 0;
        break;
    case 8:
        v_9 = 8;
        v_A = 0;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 9);
        return ;
        break;
    }
    v_5/*"16"*/ = "HA_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_47132(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 12;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_3 = 1;
        break;
    case 1:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S1";
        break;
    case 2:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S2";
        break;
    case 3:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S3";
        break;
    case 4:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S4";
        break;
    case 5:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S5";
        break;
    case 6:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S6";
        break;
    case 7:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S7";
        break;
    case 8:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S8";
        break;
    case 9:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_S9";
        break;
    case 10:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P1";
        break;
    case 11:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P2";
        break;
    case 12:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P3";
        break;
    case 13:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P4";
        break;
    case 14:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P5";
        break;
    case 15:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P6";
        break;
    case 16:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P7";
        break;
    case 17:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_P8";
        break;
    case 18:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B1";
        break;
    case 19:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B2";
        break;
    case 20:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B3";
        break;
    case 21:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B4";
        break;
    case 22:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B5";
        break;
    case 23:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B6";
        break;
    case 24:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B7";
        break;
    case 25:
        v_9 = 0;
        v_A = 0;
        v_5/*"16"*/ = "O_FMM_B8";
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 26);
        return ;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_473e1(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 14;
    v_E = 0;
    switch (a_0) {
    case 0:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        break;
    case 1:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        break;
    case 2:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 2;
        break;
    case 3:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 3;
        break;
    case 4:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 4;
        break;
    case 5:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 5;
        break;
    case 6:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 6;
        break;
    case 7:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 7;
        break;
    case 8:
        v_9 = -1;
        v_A = 0;
        v_4 = 0;
        v_B = 8;
        break;
    case 10:
        v_5/*"16"*/ = "HT_FMM_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 11:
        v_5/*"16"*/ = "HT_FMM_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 12:
        v_5/*"16"*/ = "HT_FMM_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 85;
        v_B = 0;
        v_E = 1;
        break;
    case 13:
        v_5/*"16"*/ = "HT_FMM_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 75;
        v_B = 0;
        v_E = 1;
        break;
    case 14:
        v_5/*"16"*/ = "HT_FMM_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 235;
        v_B = 0;
        v_E = 1;
        break;
    case 15:
        v_5/*"16"*/ = "HT_FMM_0_5";
        v_9 = 0;
        v_A = 5;
        v_4 = 80;
        v_B = 0;
        v_E = 1;
        break;
    case 16:
        v_5/*"16"*/ = "HT_FMM_0_6";
        v_9 = 0;
        v_A = 6;
        v_4 = 85;
        v_B = 0;
        v_E = 1;
        break;
    case 17:
        v_5/*"16"*/ = "HT_FMM_0_7";
        v_9 = 0;
        v_A = 7;
        v_4 = 90;
        v_B = 0;
        v_E = 1;
        break;
    }
    switch (a_0) {
    case 18:
        v_5/*"16"*/ = "HT_FMM_1_0";
        v_9 = 1;
        v_A = 0;
        v_B = 0;
        break;
    case 19:
        v_5/*"16"*/ = "HT_FMM_2_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 20:
        v_5/*"16"*/ = "HT_FMM_2_1";
        v_9 = 2;
        v_A = 1;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 21:
        v_5/*"16"*/ = "HT_FMM_2_2";
        v_9 = 2;
        v_A = 2;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 22:
        v_5/*"16"*/ = "HT_FMM_2_3";
        v_9 = 2;
        v_A = 3;
        v_4 = 320;
        v_B = 0;
        v_E = 1;
        break;
    case 23:
        v_5/*"16"*/ = "HT_FMM_2_4";
        v_9 = 2;
        v_A = 4;
        v_4 = 185;
        v_B = 0;
        v_E = 1;
        break;
    case 24:
        v_5/*"16"*/ = "HT_FMM_2_5";
        v_9 = 2;
        v_A = 5;
        v_4 = 245;
        v_B = 0;
        v_E = 1;
        break;
    case 25:
        v_5/*"16"*/ = "HT_FMM_2_6";
        v_9 = 2;
        v_A = 6;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 26:
        v_5/*"16"*/ = "HT_FMM_2_7";
        v_9 = 2;
        v_A = 7;
        v_4 = 40;
        v_B = 0;
        v_E = 1;
        break;
    case 27:
        v_5/*"16"*/ = "HT_FMM_3_0";
        v_9 = 3;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 28:
        v_5/*"16"*/ = "HT_FMM_3_1";
        v_9 = 3;
        v_A = 1;
        v_4 = 60;
        v_B = 0;
        v_E = 1;
        break;
    case 29:
        v_5/*"16"*/ = "HT_FMM_3_2";
        v_9 = 3;
        v_A = 2;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 30:
        v_5/*"16"*/ = "HT_FMM_3_3";
        v_9 = 3;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 31:
        v_5/*"16"*/ = "HT_FMM_3_4";
        v_9 = 3;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 32:
        v_5/*"16"*/ = "HT_FMM_3_5";
        v_9 = 3;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 33:
        v_5/*"16"*/ = "HT_FMM_3_6";
        v_9 = 3;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 34:
        v_5/*"16"*/ = "HT_FMM_3_7";
        v_9 = 3;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 35:
        v_5/*"16"*/ = "HT_FMM_4_0";
        v_9 = 4;
        v_A = 0;
        v_4 = 415;
        v_B = 0;
        v_E = 1;
        break;
    case 36:
        v_5/*"16"*/ = "HT_FMM_4_1";
        v_9 = 4;
        v_A = 1;
        v_4 = 315;
        v_B = 0;
        v_E = 1;
        break;
    case 37:
        v_5/*"16"*/ = "HT_FMM_4_2";
        v_9 = 4;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 38:
        v_5/*"16"*/ = "HT_FMM_4_3";
        v_9 = 4;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 39:
        v_5/*"16"*/ = "HT_FMM_4_4";
        v_9 = 4;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 40:
        v_5/*"16"*/ = "HT_FMM_4_5";
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 41:
        v_5/*"16"*/ = "HT_FMM_4_6";
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 42:
        v_5/*"16"*/ = "HT_FMM_4_7";
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 43:
        v_5/*"16"*/ = "HT_FMM_5_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 75;
        v_B = 0;
        v_E = 1;
        break;
    case 44:
        v_5/*"16"*/ = "HT_FMM_5_1";
        v_9 = 5;
        v_A = 1;
        v_4 = 60;
        v_B = 0;
        v_E = 1;
        break;
    case 45:
        v_5/*"16"*/ = "HT_FMM_5_2";
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 46:
        v_5/*"16"*/ = "HT_FMM_5_3";
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 47:
        v_5/*"16"*/ = "HT_FMM_5_4";
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 48:
        v_5/*"16"*/ = "HT_FMM_5_5";
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 49:
        v_5/*"16"*/ = "HT_FMM_5_6";
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 50:
        v_5/*"16"*/ = "HT_FMM_5_7";
        v_9 = 5;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 51:
        v_5/*"16"*/ = "HT_FMM_6_0";
        v_9 = 6;
        v_A = 0;
        v_4 = 160;
        v_B = 0;
        v_E = 1;
        break;
    case 52:
        v_5/*"16"*/ = "HT_FMM_6_1";
        v_9 = 6;
        v_A = 1;
        v_4 = 265;
        v_B = 0;
        v_E = 1;
        break;
    case 53:
        v_5/*"16"*/ = "HT_FMM_6_2";
        v_9 = 6;
        v_A = 2;
        v_4 = 170;
        v_B = 0;
        v_E = 1;
        break;
    case 54:
        v_5/*"16"*/ = "HT_FMM_6_3";
        v_9 = 6;
        v_A = 3;
        v_4 = 135;
        v_B = 0;
        v_E = 1;
        break;
    case 55:
        v_5/*"16"*/ = "HT_FMM_6_4";
        v_9 = 6;
        v_A = 4;
        v_4 = 570;
        v_B = 0;
        v_E = 1;
        break;
    case 56:
        v_5/*"16"*/ = "HT_FMM_6_5";
        v_9 = 6;
        v_A = 5;
        v_4 = 560;
        v_B = 0;
        v_E = 1;
        break;
    case 57:
        v_5/*"16"*/ = "HT_FMM_6_6";
        v_9 = 6;
        v_A = 6;
        v_4 = 140;
        v_B = 0;
        v_E = 1;
        break;
    case 58:
        v_5/*"16"*/ = "HT_FMM_6_7";
        v_9 = 6;
        v_A = 7;
        v_4 = 130;
        v_B = 0;
        v_E = 1;
        break;
    case 59:
        v_5/*"16"*/ = "HT_FMM_7_0";
        v_9 = 7;
        v_A = 0;
        v_4 = 260;
        v_B = 0;
        v_E = 1;
        break;
    case 60:
        v_5/*"16"*/ = "HT_FMM_7_1";
        v_9 = 7;
        v_A = 1;
        v_4 = 215;
        v_B = 0;
        v_E = 1;
        break;
    case 61:
        v_5/*"16"*/ = "HT_FMM_7_2";
        v_9 = 7;
        v_A = 2;
        v_4 = 430;
        v_B = 0;
        v_E = 1;
        break;
    case 62:
        v_5/*"16"*/ = "HT_FMM_7_3";
        v_9 = 7;
        v_A = 3;
        v_4 = 160;
        v_B = 0;
        v_E = 1;
        break;
    case 63:
        v_5/*"16"*/ = "HT_FMM_7_4";
        v_9 = 7;
        v_A = 4;
        v_4 = 200;
        v_B = 0;
        v_E = 1;
        break;
    case 64:
        v_5/*"16"*/ = "HT_FMM_7_5";
        v_9 = 7;
        v_A = 5;
        v_4 = 155;
        v_B = 0;
        v_E = 1;
        break;
    case 65:
        v_5/*"16"*/ = "HT_FMM_7_6";
        v_9 = 7;
        v_A = 6;
        v_4 = 155;
        v_B = 0;
        v_E = 1;
        break;
    case 66:
        v_5/*"16"*/ = "HT_FMM_7_7";
        v_9 = 7;
        v_A = 7;
        v_4 = 165;
        v_B = 0;
        v_E = 1;
        break;
    }
    switch (a_0) {
    case 67:
        v_5/*"16"*/ = "HT_FMM_8_0";
        v_9 = 8;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 68:
        v_5/*"16"*/ = "HT_FMM_8_1";
        v_9 = 8;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 69:
        v_5/*"16"*/ = "HT_FMM_8_2";
        v_9 = 8;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 70:
        v_5/*"16"*/ = "HT_FMM_8_3";
        v_9 = 8;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 71:
        v_5/*"16"*/ = "HT_FMM_8_4";
        v_9 = 8;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 72:
        v_5/*"16"*/ = "HT_FMM_8_5";
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 73:
        v_5/*"16"*/ = "HT_FMM_8_6";
        v_9 = 8;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 74:
        v_5/*"16"*/ = "HT_FMM_8_7";
        v_9 = 8;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 75:
        v_5/*"16"*/ = "HT_FMM_9_0";
        v_9 = 9;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 76:
        v_5/*"16"*/ = "HT_FMM_9_1";
        v_9 = 9;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 77:
        v_5/*"16"*/ = "HT_FMM_9_2";
        v_9 = 9;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 78:
        v_5/*"16"*/ = "HT_FMM_9_3";
        v_9 = 9;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 79:
        v_5/*"16"*/ = "HT_FMM_9_4";
        v_9 = 9;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 80:
        v_5/*"16"*/ = "HT_FMM_9_5";
        v_9 = 9;
        v_A = 5;
        v_4 = 100;
        v_B = 0;
        v_E = 1;
        break;
    case 81:
        v_5/*"16"*/ = "HT_FMM_9_6";
        v_9 = 9;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 82:
        v_5/*"16"*/ = "HT_FMM_9_7";
        v_9 = 9;
        v_A = 7;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 83:
        v_5/*"16"*/ = "HT_FMM_10_0";
        v_9 = 10;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 84:
        v_5/*"16"*/ = "HT_FMM_10_1";
        v_9 = 10;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 85:
        v_5/*"16"*/ = "HT_FMM_10_2";
        v_9 = 10;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 86:
        v_5/*"16"*/ = "HT_FMM_10_3";
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 87:
        v_5/*"16"*/ = "HT_FMM_10_4";
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 88:
        v_5/*"16"*/ = "HT_FMM_10_5";
        v_9 = 10;
        v_A = 5;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 89:
        v_5/*"16"*/ = "HT_FMM_10_6";
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 90:
        v_5/*"16"*/ = "HT_FMM_10_7";
        v_9 = 10;
        v_A = 7;
        v_4 = 65;
        v_B = 0;
        v_E = 1;
        break;
    case 91:
        v_5/*"16"*/ = "HT_FMM_11_0";
        v_9 = 11;
        v_A = 0;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 92:
        v_5/*"16"*/ = "HT_FMM_11_1";
        v_9 = 11;
        v_A = 1;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 93:
        v_5/*"16"*/ = "HT_FMM_11_2";
        v_9 = 11;
        v_A = 2;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 94:
        v_5/*"16"*/ = "HT_FMM_11_3";
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 95:
        v_5/*"16"*/ = "HT_FMM_11_4";
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 96:
        v_5/*"16"*/ = "HT_FMM_11_5";
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 97:
        v_5/*"16"*/ = "HT_FMM_11_6";
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 98:
        v_5/*"16"*/ = "HT_FMM_11_7";
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 99:
        v_5/*"16"*/ = "HT_FMM_12_0";
        v_9 = 12;
        v_A = 0;
        v_4 = 1715;
        v_B = 0;
        v_E = 1;
        break;
    case 100:
        v_5/*"16"*/ = "HT_FMM_12_1";
        v_9 = 12;
        v_A = 1;
        v_4 = 3900;
        v_B = 0;
        v_E = 1;
        break;
    case 101:
        v_5/*"16"*/ = "HT_FMM_12_2";
        v_9 = 12;
        v_A = 2;
        v_4 = 1550;
        v_B = 0;
        v_E = 1;
        break;
    case 102:
        v_5/*"16"*/ = "HT_FMM_12_3";
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 103:
        v_5/*"16"*/ = "HT_FMM_12_4";
        v_9 = 12;
        v_A = 4;
        v_4 = 4250;
        v_B = 0;
        v_E = 1;
        break;
    case 104:
        v_5/*"16"*/ = "HT_FMM_12_5";
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        v_B = 0;
        v_E = 1;
        v_3 = 1;
        break;
    case 105:
        v_5/*"16"*/ = "HT_FMM_12_6";
        v_9 = 12;
        v_A = 6;
        v_4 = 4460;
        v_B = 0;
        v_E = 1;
        break;
    case 106:
        v_5/*"16"*/ = "HT_FMM_12_7";
        v_9 = 12;
        v_A = 7;
        v_4 = 4970;
        v_B = 0;
        v_E = 1;
        break;
    case 107:
        v_5/*"16"*/ = "HT_FMM_13_0";
        v_9 = 13;
        v_A = 0;
        v_4 = 290;
        v_B = 0;
        v_E = 1;
        break;
    case 108:
        v_5/*"16"*/ = "HT_FMM_13_1";
        v_9 = 13;
        v_A = 1;
        v_4 = 305;
        v_B = 0;
        v_E = 1;
        break;
    case 109:
        v_5/*"16"*/ = "HT_FMM_13_2";
        v_9 = 13;
        v_A = 2;
        v_4 = 4170;
        v_B = 0;
        v_E = 1;
        break;
    case 110:
        v_5/*"16"*/ = "HT_FMM_13_3";
        v_9 = 13;
        v_A = 3;
        v_4 = 335;
        v_B = 0;
        v_E = 1;
        break;
    case 111:
        v_5/*"16"*/ = "HT_FMM_13_4";
        v_9 = 13;
        v_A = 4;
        v_4 = 4940;
        v_B = 0;
        v_E = 1;
        break;
    case 112:
        v_5/*"16"*/ = "HT_FMM_13_5";
        v_9 = 13;
        v_A = 5;
        v_4 = 275;
        v_B = 0;
        v_E = 1;
        break;
    case 113:
        v_5/*"16"*/ = "HT_FMM_13_6";
        v_9 = 13;
        v_A = 6;
        v_4 = 5000;
        v_B = 0;
        v_E = 1;
        break;
    case 114:
        v_5/*"16"*/ = "HT_FMM_13_7";
        v_9 = 13;
        v_A = 7;
        v_4 = 3620;
        v_B = 0;
        v_E = 1;
        break;
    case 115:
        v_5/*"16"*/ = "HT_FMM_14_0";
        v_9 = 14;
        v_A = 0;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 116:
        v_5/*"16"*/ = "HT_FMM_14_1";
        v_9 = 14;
        v_A = 1;
        v_4 = 25;
        v_B = 0;
        v_E = 1;
        break;
    case 117:
        v_5/*"16"*/ = "HT_FMM_14_2";
        v_9 = 14;
        v_A = 2;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 118:
        v_5/*"16"*/ = "HT_FMM_14_3";
        v_9 = 14;
        v_A = 3;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 119:
        v_5/*"16"*/ = "HT_FMM_14_4";
        v_9 = 14;
        v_A = 4;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 120:
        v_5/*"16"*/ = "HT_FMM_14_5";
        v_9 = 14;
        v_A = 5;
        v_4 = 30;
        v_B = 0;
        v_E = 1;
        break;
    case 121:
        v_5/*"16"*/ = "HT_FMM_14_6";
        v_9 = 14;
        v_A = 6;
        v_4 = 350;
        v_B = 0;
        v_E = 1;
        break;
    case 122:
        v_5/*"16"*/ = "HT_FMM_14_7";
        v_9 = 14;
        v_A = 7;
        v_4 = 35;
        v_B = 0;
        v_E = 1;
        break;
    case 123:
        v_5/*"16"*/ = "HT_FMM_15_0";
        v_9 = 15;
        v_A = 0;
        v_4 = 365;
        v_B = 0;
        v_E = 1;
        break;
    case 124:
        v_5/*"16"*/ = "HT_FMM_15_1";
        v_9 = 15;
        v_A = 1;
        v_4 = 380;
        v_B = 0;
        v_E = 1;
        break;
    case 125:
        v_5/*"16"*/ = "HT_FMM_15_2";
        v_9 = 15;
        v_A = 2;
        v_4 = 595;
        v_B = 0;
        v_E = 1;
        break;
    case 126:
        v_5/*"16"*/ = "HT_FMM_15_3";
        v_9 = 15;
        v_A = 3;
        v_4 = 595;
        v_B = 0;
        v_E = 1;
        break;
    case 127:
        v_5/*"16"*/ = "HT_FMM_15_4";
        v_9 = 15;
        v_A = 4;
        v_4 = 600;
        v_B = 0;
        v_E = 1;
        break;
    case 128:
        v_5/*"16"*/ = "HT_FMM_15_5";
        v_9 = 15;
        v_A = 5;
        v_4 = 590;
        v_B = 0;
        v_E = 1;
        break;
    case 129:
        v_5/*"16"*/ = "HT_FMM_15_6";
        v_9 = 15;
        v_A = 6;
        v_4 = 395;
        v_B = 0;
        v_E = 1;
        break;
    case 130:
        v_5/*"16"*/ = "HT_FMM_15_7";
        v_9 = 15;
        v_A = 7;
        v_4 = 555;
        v_B = 0;
        v_E = 1;
        break;
    }
    switch (a_0) {
    case 131:
        v_5/*"16"*/ = "HE_FMM_16_0";
        v_9 = 16;
        v_A = 0;
        v_4 = 1060;
        v_B = 0;
        v_E = 2;
        break;
    case 132:
        v_5/*"16"*/ = "HE_FMM_16_1";
        v_9 = 16;
        v_A = 1;
        v_4 = 1400;
        v_B = 0;
        v_E = 2;
        break;
    case 133:
        v_5/*"16"*/ = "HE_FMM_16_2";
        v_9 = 16;
        v_A = 2;
        v_4 = 1315;
        v_B = 0;
        v_E = 2;
        break;
    case 134:
        v_5/*"16"*/ = "HE_FMM_16_3";
        v_9 = 16;
        v_A = 3;
        v_4 = 1230;
        v_B = 0;
        v_E = 2;
        break;
    case 135:
        v_5/*"16"*/ = "HE_FMM_16_4";
        v_9 = 16;
        v_A = 4;
        v_4 = 1145;
        v_B = 0;
        v_E = 2;
        break;
    case 136:
        v_5/*"16"*/ = "HE_FMM_16_5";
        v_9 = 16;
        v_A = 5;
        v_4 = 8450;
        v_B = 0;
        v_E = 2;
        break;
    case 137:
        v_5/*"16"*/ = "HE_FMM_16_6";
        v_9 = 16;
        v_A = 6;
        v_4 = 675;
        v_B = 0;
        v_E = 2;
        break;
    case 138:
        v_5/*"16"*/ = "HE_FMM_16_7";
        v_9 = 16;
        v_A = 7;
        v_4 = 8750;
        v_B = 0;
        v_E = 2;
        break;
    case 139:
        v_5/*"16"*/ = "HE_FMM_17_0";
        v_9 = 17;
        v_A = 0;
        v_4 = 975;
        v_B = 0;
        v_E = 2;
        break;
    case 140:
        v_5/*"16"*/ = "HE_FMM_17_1";
        v_9 = 17;
        v_A = 1;
        v_4 = 750;
        v_B = 0;
        v_E = 2;
        break;
    case 141:
        v_5/*"16"*/ = "HE_FMM_17_2";
        v_9 = 17;
        v_A = 2;
        v_4 = 865;
        v_B = 0;
        v_E = 2;
        break;
    case 142:
        v_5/*"16"*/ = "HE_FMM_17_3";
        v_9 = 17;
        v_A = 3;
        v_4 = 890;
        v_B = 0;
        v_E = 2;
        break;
    case 143:
        v_5/*"16"*/ = "HE_FMM_17_4";
        v_9 = 17;
        v_A = 4;
        v_4 = 730;
        v_B = 0;
        v_E = 2;
        break;
    case 144:
        v_5/*"16"*/ = "HE_FMM_17_5";
        v_9 = 17;
        v_A = 5;
        v_4 = 650;
        v_B = 0;
        v_E = 2;
        break;
    case 145:
        v_5/*"16"*/ = "HE_FMM_17_6";
        v_9 = 17;
        v_A = 6;
        v_4 = 645;
        v_B = 0;
        v_E = 2;
        break;
    case 146:
        v_5/*"16"*/ = "HE_FMM_17_7";
        v_9 = 17;
        v_A = 7;
        v_4 = 755;
        v_B = 0;
        v_E = 2;
        break;
    case 147:
        v_5/*"16"*/ = "HE_FMM_18_0";
        v_9 = 18;
        v_A = 0;
        v_4 = 13850;
        v_B = 0;
        v_E = 2;
        break;
    case 148:
        v_5/*"16"*/ = "HE_FMM_18_1";
        v_9 = 18;
        v_A = 1;
        v_4 = 2900;
        v_B = 0;
        v_E = 2;
        break;
    case 149:
        v_5/*"16"*/ = "HE_FMM_18_2";
        v_9 = 18;
        v_A = 2;
        v_4 = 2895;
        v_B = 0;
        v_E = 2;
        break;
    case 150:
        v_5/*"16"*/ = "HE_FMM_18_3";
        v_9 = 18;
        v_A = 3;
        v_4 = 12500;
        v_B = 0;
        v_E = 2;
        break;
    case 151:
        v_5/*"16"*/ = "HE_FMM_18_4";
        v_9 = 18;
        v_A = 4;
        v_4 = 15000;
        v_B = 0;
        v_E = 2;
        break;
    case 152:
        v_5/*"16"*/ = "HE_FMM_18_5";
        v_9 = 18;
        v_A = 5;
        v_4 = 14750;
        v_B = 0;
        v_E = 2;
        break;
    case 153:
        v_5/*"16"*/ = "HE_FMM_18_6";
        v_9 = 18;
        v_A = 6;
        v_4 = 13150;
        v_B = 0;
        v_E = 2;
        break;
    case 154:
        v_5/*"16"*/ = "HE_FMM_18_7";
        v_9 = 18;
        v_A = 7;
        v_4 = 2925;
        v_B = 0;
        v_E = 2;
        break;
    }
    switch (a_0) {
    case 155:
        v_5/*"16"*/ = "G_FMM_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 156:
        v_5/*"16"*/ = "G_FMM_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 157:
        v_5/*"16"*/ = "G_FMM_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 158:
        v_5/*"16"*/ = "G_FMM_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 159:
        v_5/*"16"*/ = "G_FMM_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 160:
        v_5/*"16"*/ = "G_FMM_0_5";
        v_9 = 0;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 161:
        v_5/*"16"*/ = "G_FMM_0_6";
        v_9 = 0;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 162:
        v_5/*"16"*/ = "G_FMM_0_7";
        v_9 = 0;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 163:
        v_5/*"16"*/ = "G_FMM_0_8";
        v_9 = 0;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 164:
        v_5/*"16"*/ = "G_FMM_0_9";
        v_9 = 0;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 165:
        v_5/*"16"*/ = "G_FMM_0_10";
        v_9 = 0;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 166:
        v_5/*"16"*/ = "G_FMM_1_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 167:
        v_5/*"16"*/ = "G_FMM_1_1";
        v_9 = 1;
        v_A = 1;
        v_4 = 180;
        v_B = 1;
        v_E = 3;
        break;
    case 168:
        v_5/*"16"*/ = "G_FMM_1_2";
        v_9 = 1;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 169:
        v_5/*"16"*/ = "G_FMM_1_3";
        v_9 = 1;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 170:
        v_5/*"16"*/ = "G_FMM_1_4";
        v_9 = 1;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 171:
        v_5/*"16"*/ = "G_FMM_1_5";
        v_9 = 1;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 172:
        v_5/*"16"*/ = "G_FMM_1_6";
        v_9 = 1;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 173:
        v_5/*"16"*/ = "G_FMM_1_7";
        v_9 = 1;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 174:
        v_5/*"16"*/ = "G_FMM_2_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 175:
        v_5/*"16"*/ = "G_FMM_2_1";
        v_9 = 2;
        v_A = 1;
        v_4 = 140;
        v_B = 1;
        v_E = 3;
        break;
    case 176:
        v_5/*"16"*/ = "G_FMM_2_2";
        v_9 = 2;
        v_A = 2;
        v_4 = 380;
        v_B = 1;
        v_E = 3;
        break;
    case 177:
        v_5/*"16"*/ = "G_FMM_2_3";
        v_9 = 2;
        v_A = 3;
        v_4 = 135;
        v_B = 1;
        v_E = 3;
        break;
    case 178:
        v_5/*"16"*/ = "G_FMM_2_4";
        v_9 = 2;
        v_A = 4;
        v_4 = 130;
        v_B = 1;
        v_E = 3;
        break;
    case 179:
        v_5/*"16"*/ = "G_FMM_2_5";
        v_9 = 2;
        v_A = 5;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 180:
        v_5/*"16"*/ = "G_FMM_2_6";
        v_9 = 2;
        v_A = 6;
        v_4 = 140;
        v_B = 1;
        v_E = 3;
        break;
    case 181:
        v_5/*"16"*/ = "G_FMM_2_7";
        v_9 = 2;
        v_A = 7;
        v_4 = 390;
        v_B = 1;
        v_E = 3;
        break;
    case 182:
        v_5/*"16"*/ = "G_FMM_2_8";
        v_9 = 2;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 183:
        v_5/*"16"*/ = "G_FMM_2_9";
        v_9 = 2;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 184:
        v_5/*"16"*/ = "G_FMM_2_10";
        v_9 = 2;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 185:
        v_5/*"16"*/ = "G_FMM_3_0";
        v_9 = 3;
        v_A = 0;
        v_4 = 70;
        v_B = 1;
        v_E = 3;
        break;
    case 186:
        v_5/*"16"*/ = "G_FMM_3_1";
        v_9 = 3;
        v_A = 1;
        v_4 = 60;
        v_B = 1;
        v_E = 3;
        break;
    case 187:
        v_5/*"16"*/ = "G_FMM_3_2";
        v_9 = 3;
        v_A = 2;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 188:
        v_5/*"16"*/ = "G_FMM_3_3";
        v_9 = 3;
        v_A = 3;
        v_4 = 95;
        v_B = 1;
        v_E = 3;
        break;
    case 189:
        v_5/*"16"*/ = "G_FMM_3_4";
        v_9 = 3;
        v_A = 4;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 190:
        v_5/*"16"*/ = "G_FMM_3_5";
        v_9 = 3;
        v_A = 5;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 191:
        v_5/*"16"*/ = "G_FMM_3_6";
        v_9 = 3;
        v_A = 6;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 192:
        v_5/*"16"*/ = "G_FMM_3_7";
        v_9 = 3;
        v_A = 7;
        v_4 = 90;
        v_B = 1;
        v_E = 3;
        break;
    case 193:
        v_5/*"16"*/ = "G_FMM_3_8";
        v_9 = 3;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 194:
        v_5/*"16"*/ = "G_FMM_3_9";
        v_9 = 3;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 195:
        v_5/*"16"*/ = "G_FMM_3_10";
        v_9 = 3;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 196:
        v_5/*"16"*/ = "G_FMM_4_0";
        v_9 = 4;
        v_A = 0;
        v_4 = 245;
        v_B = 1;
        v_E = 3;
        break;
    case 197:
        v_5/*"16"*/ = "G_FMM_4_1";
        v_9 = 4;
        v_A = 1;
        v_4 = 250;
        v_B = 1;
        v_E = 3;
        break;
    case 198:
        v_5/*"16"*/ = "G_FMM_4_2";
        v_9 = 4;
        v_A = 2;
        v_4 = 210;
        v_B = 1;
        v_E = 3;
        break;
    case 199:
        v_5/*"16"*/ = "G_FMM_4_3";
        v_9 = 4;
        v_A = 3;
        v_4 = 245;
        v_B = 1;
        v_E = 3;
        break;
    case 200:
        v_5/*"16"*/ = "G_FMM_4_4";
        v_9 = 4;
        v_A = 4;
        v_4 = 205;
        v_B = 1;
        v_E = 3;
        break;
    case 201:
        v_5/*"16"*/ = "G_FMM_4_5";
        v_9 = 4;
        v_A = 5;
        v_4 = 205;
        v_B = 1;
        v_E = 3;
        break;
    case 202:
        v_5/*"16"*/ = "G_FMM_4_6";
        v_9 = 4;
        v_A = 6;
        v_4 = 215;
        v_B = 1;
        v_E = 3;
        break;
    case 203:
        v_5/*"16"*/ = "G_FMM_4_7";
        v_9 = 4;
        v_A = 7;
        v_4 = 215;
        v_B = 1;
        v_E = 3;
        break;
    case 204:
        v_5/*"16"*/ = "G_FMM_4_8";
        v_9 = 4;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 205:
        v_5/*"16"*/ = "G_FMM_4_9";
        v_9 = 4;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 206:
        v_5/*"16"*/ = "G_FMM_4_10";
        v_9 = 4;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 207:
        v_5/*"16"*/ = "G_FMM_5_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 4050;
        v_B = 1;
        v_E = 3;
        break;
    case 208:
        v_5/*"16"*/ = "G_FMM_5_1";
        v_9 = 5;
        v_A = 1;
        v_4 = 4060;
        v_B = 1;
        v_E = 3;
        break;
    case 209:
        v_5/*"16"*/ = "G_FMM_5_2";
        v_9 = 5;
        v_A = 2;
        v_4 = 170;
        v_B = 1;
        v_E = 3;
        break;
    case 210:
        v_5/*"16"*/ = "G_FMM_5_3";
        v_9 = 5;
        v_A = 3;
        v_4 = 135;
        v_B = 1;
        v_E = 3;
        break;
    case 211:
        v_5/*"16"*/ = "G_FMM_5_4";
        v_9 = 5;
        v_A = 4;
        v_4 = 120;
        v_B = 1;
        v_E = 3;
        break;
    case 212:
        v_5/*"16"*/ = "G_FMM_5_5";
        v_9 = 5;
        v_A = 5;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 213:
        v_5/*"16"*/ = "G_FMM_5_6";
        v_9 = 5;
        v_A = 6;
        v_4 = 140;
        v_B = 1;
        v_E = 3;
        break;
    case 214:
        v_5/*"16"*/ = "G_FMM_5_7";
        v_9 = 5;
        v_A = 7;
        v_4 = 130;
        v_B = 1;
        v_E = 3;
        break;
    case 215:
        v_5/*"16"*/ = "G_FMM_5_8";
        v_9 = 5;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 216:
        v_5/*"16"*/ = "G_FMM_5_9";
        v_9 = 5;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 217:
        v_5/*"16"*/ = "G_FMM_5_10";
        v_9 = 5;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 218:
        v_5/*"16"*/ = "G_FMM_6_0";
        v_9 = 6;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 219:
        v_5/*"16"*/ = "G_FMM_6_1";
        v_9 = 6;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 220:
        v_5/*"16"*/ = "G_FMM_6_2";
        v_9 = 6;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 221:
        v_5/*"16"*/ = "G_FMM_6_3";
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 222:
        v_5/*"16"*/ = "G_FMM_6_4";
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 223:
        v_5/*"16"*/ = "G_FMM_6_5";
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 224:
        v_5/*"16"*/ = "G_FMM_6_6";
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 225:
        v_5/*"16"*/ = "G_FMM_6_7";
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 226:
        v_5/*"16"*/ = "G_FMM_7_0";
        v_9 = 7;
        v_A = 0;
        v_4 = 180;
        v_B = 1;
        v_E = 3;
        break;
    case 227:
        v_5/*"16"*/ = "G_FMM_7_1";
        v_9 = 7;
        v_A = 1;
        v_4 = 500;
        v_B = 1;
        v_E = 3;
        break;
    case 228:
        v_5/*"16"*/ = "G_FMM_7_2";
        v_9 = 7;
        v_A = 2;
        v_4 = 115;
        v_B = 1;
        v_E = 3;
        break;
    case 229:
        v_5/*"16"*/ = "G_FMM_7_3";
        v_9 = 7;
        v_A = 3;
        v_4 = 220;
        v_B = 1;
        v_E = 3;
        break;
    case 230:
        v_5/*"16"*/ = "G_FMM_7_4";
        v_9 = 7;
        v_A = 4;
        v_4 = 185;
        v_B = 1;
        v_E = 3;
        break;
    case 231:
        v_5/*"16"*/ = "G_FMM_7_5";
        v_9 = 7;
        v_A = 5;
        v_4 = 1445;
        v_B = 1;
        v_E = 3;
        break;
    case 232:
        v_5/*"16"*/ = "G_FMM_7_6";
        v_9 = 7;
        v_A = 6;
        v_4 = 530;
        v_B = 1;
        v_E = 3;
        break;
    case 233:
        v_5/*"16"*/ = "G_FMM_7_7";
        v_9 = 7;
        v_A = 7;
        v_4 = 650;
        v_B = 1;
        v_E = 3;
        break;
    case 234:
        v_5/*"16"*/ = "G_FMM_7_8";
        v_9 = 7;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 235:
        v_5/*"16"*/ = "G_FMM_7_9";
        v_9 = 7;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 236:
        v_5/*"16"*/ = "G_FMM_7_10";
        v_9 = 7;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    }
    switch (a_0) {
    case 237:
        v_5/*"16"*/ = "G_FMM_8_0";
        v_9 = 8;
        v_A = 0;
        v_4 = 4260;
        v_B = 1;
        v_E = 3;
        break;
    case 238:
        v_5/*"16"*/ = "G_FMM_8_1";
        v_9 = 8;
        v_A = 1;
        v_4 = 4310;
        v_B = 1;
        v_E = 3;
        break;
    case 239:
        v_5/*"16"*/ = "G_FMM_8_2";
        v_9 = 8;
        v_A = 2;
        v_4 = 4130;
        v_B = 1;
        v_E = 3;
        break;
    case 240:
        v_5/*"16"*/ = "G_FMM_8_3";
        v_9 = 8;
        v_A = 3;
        v_4 = 135;
        v_B = 1;
        v_E = 3;
        break;
    case 241:
        v_5/*"16"*/ = "G_FMM_8_4";
        v_9 = 8;
        v_A = 4;
        v_4 = 120;
        v_B = 1;
        v_E = 3;
        break;
    case 242:
        v_5/*"16"*/ = "G_FMM_8_5";
        v_9 = 8;
        v_A = 5;
        v_4 = 110;
        v_B = 1;
        v_E = 3;
        break;
    case 243:
        v_5/*"16"*/ = "G_FMM_8_6";
        v_9 = 8;
        v_A = 6;
        v_4 = 140;
        v_B = 1;
        v_E = 3;
        break;
    case 244:
        v_5/*"16"*/ = "G_FMM_8_7";
        v_9 = 8;
        v_A = 7;
        v_4 = 130;
        v_B = 1;
        v_E = 3;
        break;
    case 245:
        v_5/*"16"*/ = "G_FMM_8_8";
        v_9 = 8;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 246:
        v_5/*"16"*/ = "G_FMM_8_9";
        v_9 = 8;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 247:
        v_5/*"16"*/ = "G_FMM_8_10";
        v_9 = 8;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 248:
        v_5/*"16"*/ = "G_FMM_9_0";
        v_9 = 9;
        v_A = 0;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 249:
        v_5/*"16"*/ = "G_FMM_9_1";
        v_9 = 9;
        v_A = 1;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 250:
        v_5/*"16"*/ = "G_FMM_9_2";
        v_9 = 9;
        v_A = 2;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 251:
        v_5/*"16"*/ = "G_FMM_9_3";
        v_9 = 9;
        v_A = 3;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 252:
        v_5/*"16"*/ = "G_FMM_9_4";
        v_9 = 9;
        v_A = 4;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 253:
        v_5/*"16"*/ = "G_FMM_9_5";
        v_9 = 9;
        v_A = 5;
        v_4 = 4290;
        v_B = 1;
        v_E = 3;
        break;
    case 254:
        v_5/*"16"*/ = "G_FMM_9_6";
        v_9 = 9;
        v_A = 6;
        v_4 = 4150;
        v_B = 1;
        v_E = 3;
        break;
    case 255:
        v_5/*"16"*/ = "G_FMM_9_7";
        v_9 = 9;
        v_A = 7;
        v_4 = 4295;
        v_B = 1;
        v_E = 3;
        break;
    case 256:
        v_5/*"16"*/ = "G_FMM_9_8";
        v_9 = 9;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 257:
        v_5/*"16"*/ = "G_FMM_9_9";
        v_9 = 9;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 258:
        v_5/*"16"*/ = "G_FMM_9_10";
        v_9 = 9;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 259:
        v_5/*"16"*/ = "G_FMM_10_0";
        v_9 = 10;
        v_A = 0;
        v_4 = 6240;
        v_B = 1;
        v_E = 3;
        break;
    case 260:
        v_5/*"16"*/ = "G_FMM_10_1";
        v_9 = 10;
        v_A = 1;
        v_4 = 4955;
        v_B = 1;
        v_E = 3;
        break;
    case 261:
        v_5/*"16"*/ = "G_FMM_10_2";
        v_9 = 10;
        v_A = 2;
        v_4 = 5590;
        v_B = 1;
        v_E = 3;
        break;
    case 262:
        v_5/*"16"*/ = "G_FMM_10_3";
        v_9 = 10;
        v_A = 3;
        v_4 = 4920;
        v_B = 1;
        v_E = 3;
        break;
    case 263:
        v_5/*"16"*/ = "G_FMM_10_4";
        v_9 = 10;
        v_A = 4;
        v_4 = 4990;
        v_B = 1;
        v_E = 3;
        break;
    case 264:
        v_5/*"16"*/ = "G_FMM_10_5";
        v_9 = 10;
        v_A = 5;
        v_4 = 4780;
        v_B = 1;
        v_E = 3;
        break;
    case 265:
        v_5/*"16"*/ = "G_FMM_10_6";
        v_9 = 10;
        v_A = 6;
        v_4 = 4775;
        v_B = 1;
        v_E = 3;
        break;
    case 266:
        v_5/*"16"*/ = "G_FMM_10_7";
        v_9 = 10;
        v_A = 7;
        v_4 = 4800;
        v_B = 1;
        v_E = 3;
        break;
    case 267:
        v_5/*"16"*/ = "G_FMM_10_8";
        v_9 = 10;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 268:
        v_5/*"16"*/ = "G_FMM_10_9";
        v_9 = 10;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 269:
        v_5/*"16"*/ = "G_FMM_10_10";
        v_9 = 10;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 270:
        v_5/*"16"*/ = "G_FMM_11_0";
        v_9 = 11;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 271:
        v_5/*"16"*/ = "G_FMM_11_1";
        v_9 = 11;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 272:
        v_5/*"16"*/ = "G_FMM_11_2";
        v_9 = 11;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 273:
        v_5/*"16"*/ = "G_FMM_11_3";
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 274:
        v_5/*"16"*/ = "G_FMM_11_4";
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 275:
        v_5/*"16"*/ = "G_FMM_11_5";
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 277:
        v_5/*"16"*/ = "G_FMM_11_7";
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 278:
        v_5/*"16"*/ = "G_FMM_12_0";
        v_9 = 12;
        v_A = 0;
        v_4 = 385;
        v_B = 1;
        v_E = 3;
        break;
    case 279:
        v_5/*"16"*/ = "G_FMM_12_1";
        v_9 = 12;
        v_A = 1;
        v_4 = 310;
        v_B = 1;
        v_E = 3;
        break;
    case 280:
        v_5/*"16"*/ = "G_FMM_12_2";
        v_9 = 12;
        v_A = 2;
        v_4 = 3655;
        v_B = 1;
        v_E = 3;
        break;
    case 281:
        v_5/*"16"*/ = "G_FMM_12_3";
        v_9 = 12;
        v_A = 3;
        v_4 = 4055;
        v_B = 1;
        v_E = 3;
        break;
    case 282:
        v_5/*"16"*/ = "G_FMM_12_4";
        v_9 = 12;
        v_A = 4;
        v_4 = 3595;
        v_B = 1;
        v_E = 3;
        break;
    case 283:
        v_5/*"16"*/ = "G_FMM_12_5";
        v_9 = 12;
        v_A = 5;
        v_4 = 3605;
        v_B = 1;
        v_E = 3;
        break;
    case 284:
        v_5/*"16"*/ = "G_FMM_12_6";
        v_9 = 12;
        v_A = 6;
        v_4 = 3645;
        v_B = 1;
        v_E = 3;
        break;
    case 285:
        v_5/*"16"*/ = "G_FMM_12_7";
        v_9 = 12;
        v_A = 7;
        v_4 = 320;
        v_B = 1;
        v_E = 3;
        break;
    case 286:
        v_5/*"16"*/ = "G_FMM_12_8";
        v_9 = 12;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 287:
        v_5/*"16"*/ = "G_FMM_12_9";
        v_9 = 12;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 288:
        v_5/*"16"*/ = "G_FMM_12_10";
        v_9 = 12;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 289:
        v_5/*"16"*/ = "G_FMM_13_0";
        v_9 = 13;
        v_A = 0;
        v_4 = 230;
        v_B = 1;
        v_E = 3;
        break;
    case 290:
        v_5/*"16"*/ = "G_FMM_13_1";
        v_9 = 13;
        v_A = 1;
        v_4 = 1605;
        v_B = 1;
        v_E = 3;
        break;
    case 291:
        v_5/*"16"*/ = "G_FMM_13_2";
        v_9 = 13;
        v_A = 2;
        v_4 = 2230;
        v_B = 1;
        v_E = 3;
        break;
    case 292:
        v_5/*"16"*/ = "G_FMM_13_3";
        v_9 = 13;
        v_A = 3;
        v_4 = 220;
        v_B = 1;
        v_E = 3;
        break;
    case 293:
        v_5/*"16"*/ = "G_FMM_13_4";
        v_9 = 13;
        v_A = 4;
        v_4 = 185;
        v_B = 1;
        v_E = 3;
        break;
    case 294:
        v_5/*"16"*/ = "G_FMM_13_5";
        v_9 = 13;
        v_A = 5;
        v_4 = 2070;
        v_B = 1;
        v_E = 3;
        break;
    case 295:
        v_5/*"16"*/ = "G_FMM_13_6";
        v_9 = 13;
        v_A = 6;
        v_4 = 2205;
        v_B = 1;
        v_E = 3;
        break;
    case 296:
        v_5/*"16"*/ = "G_FMM_13_7";
        v_9 = 13;
        v_A = 7;
        v_4 = 1690;
        v_B = 1;
        v_E = 3;
        break;
    case 297:
        v_5/*"16"*/ = "G_FMM_13_8";
        v_9 = 13;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 298:
        v_5/*"16"*/ = "G_FMM_13_9";
        v_9 = 13;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 299:
        v_5/*"16"*/ = "G_FMM_13_10";
        v_9 = 13;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 300:
        v_5/*"16"*/ = "G_FMM_14_0";
        v_9 = 14;
        v_A = 0;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 301:
        v_5/*"16"*/ = "G_FMM_14_1";
        v_9 = 14;
        v_A = 1;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 302:
        v_5/*"16"*/ = "G_FMM_14_2";
        v_9 = 14;
        v_A = 2;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 303:
        v_5/*"16"*/ = "G_FMM_14_3";
        v_9 = 14;
        v_A = 3;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 304:
        v_5/*"16"*/ = "G_FMM_14_4";
        v_9 = 14;
        v_A = 4;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 305:
        v_5/*"16"*/ = "G_FMM_14_5";
        v_9 = 14;
        v_A = 5;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 306:
        v_5/*"16"*/ = "G_FMM_14_6";
        v_9 = 14;
        v_A = 6;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 307:
        v_5/*"16"*/ = "G_FMM_14_7";
        v_9 = 14;
        v_A = 7;
        v_4 = 0;
        v_B = 1;
        v_E = 3;
        v_3 = 1;
        break;
    case 308:
        v_5/*"16"*/ = "G_FMM_15_0";
        v_9 = 15;
        v_A = 0;
        v_4 = 515;
        v_B = 1;
        v_E = 3;
        break;
    case 309:
        v_5/*"16"*/ = "G_FMM_15_1";
        v_9 = 15;
        v_A = 1;
        v_4 = 60;
        v_B = 1;
        v_E = 3;
        break;
    case 310:
        v_5/*"16"*/ = "G_FMM_15_2";
        v_9 = 15;
        v_A = 2;
        v_4 = 65;
        v_B = 1;
        v_E = 3;
        break;
    case 311:
        v_5/*"16"*/ = "G_FMM_15_3";
        v_9 = 15;
        v_A = 3;
        v_4 = 95;
        v_B = 1;
        v_E = 3;
        break;
    case 312:
        v_5/*"16"*/ = "G_FMM_15_4";
        v_9 = 15;
        v_A = 4;
        v_4 = 85;
        v_B = 1;
        v_E = 3;
        break;
    case 313:
        v_5/*"16"*/ = "G_FMM_15_5";
        v_9 = 15;
        v_A = 5;
        v_4 = 75;
        v_B = 1;
        v_E = 3;
        break;
    case 314:
        v_5/*"16"*/ = "G_FMM_15_6";
        v_9 = 15;
        v_A = 6;
        v_4 = 485;
        v_B = 1;
        v_E = 3;
        break;
    case 315:
        v_5/*"16"*/ = "G_FMM_15_7";
        v_9 = 15;
        v_A = 7;
        v_4 = 545;
        v_B = 1;
        v_E = 3;
        break;
    case 316:
        v_5/*"16"*/ = "G_FMM_15_8";
        v_9 = 15;
        v_A = 8;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 317:
        v_5/*"16"*/ = "G_FMM_15_9";
        v_9 = 15;
        v_A = 9;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    case 318:
        v_5/*"16"*/ = "G_FMM_15_10";
        v_9 = 15;
        v_A = 10;
        v_4 = 50;
        v_B = 1;
        v_E = 3;
        break;
    }
    switch (a_0) {
    case 319:
        v_5/*"16"*/ = "W_FMM_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 5000;
        v_B = 6;
        v_E = 4;
        break;
    case 320:
        v_5/*"16"*/ = "W_FMM_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 321:
        v_5/*"16"*/ = "W_FMM_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 322:
        v_5/*"16"*/ = "W_FMM_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 323:
        v_5/*"16"*/ = "W_FMM_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 324:
        v_5/*"16"*/ = "W_FMM_1_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 695;
        v_B = 6;
        v_E = 4;
        break;
    case 325:
        v_5/*"16"*/ = "W_FMM_1_1";
        v_9 = 1;
        v_A = 1;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    case 326:
        v_5/*"16"*/ = "W_FMM_1_2";
        v_9 = 1;
        v_A = 2;
        v_4 = 0;
        v_B = 6;
        v_E = 4;
        v_3 = 1;
        break;
    }
    if (v_E == 1) {
        v_F = a_0 - 10;
        if ((v_F >= 0) && (v_F < 121)) {
            if (v_F > 8) {
                v_F -= 1;
            }
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f3B6[v_F/*1*/]) * g_42DD3._f12);
        }
    } else if (v_E == 2) {
        v_10 = a_0 - 131;
        if ((v_10 >= 0) && (v_10 < 24)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f42F[v_10/*1*/]) * g_42DD3._f13);
        }
    } else if (v_E == 3) {
        v_11 = a_0 - 155;
        if ((v_11 >= 0) && (v_11 < 128)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f448[v_11/*1*/]) * g_42DD3._f14);
        }
    } else if (v_E == 4) {
        v_12 = a_0 - 319;
        if ((v_12 >= 0) && (v_12 < 15)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f4C9[v_12/*1*/]) * g_42DD3._f15);
        }
    }
    if (a_0 >= 327) {
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 327);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            if (DLC1::_341DE7ED1D2A1BFD(g_280004, ${hat}, 1)) {
                g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f12);
            } else if (DLC1::_341DE7ED1D2A1BFD(g_280004, ${glasses}, 1)) {
                g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f14);
            } else if (DLC1::_341DE7ED1D2A1BFD(g_280004, ${watch}, 1)) {
                g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f15);
            }
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_4a17e(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 10;
    switch (a_0) {
    case 0:
        v_5/*"16"*/ = "D_FMM_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        break;
    case 1:
        v_5/*"16"*/ = "D_FMM_1_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 5000;
        break;
    case 2:
        v_5/*"16"*/ = "D_FMM_2_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 10000;
        break;
    case 3:
        v_5/*"16"*/ = "D_FMM_1_0";
        v_9 = 3;
        v_A = 0;
        v_4 = 5000;
        break;
    case 4:
        v_5/*"16"*/ = "D_FMM_2_0";
        v_9 = 4;
        v_A = 0;
        v_4 = 10000;
        break;
    case 5:
        v_5/*"16"*/ = "D_FMM_1_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 5000;
        break;
    case 6:
        v_5/*"16"*/ = "D_FMM_2_0";
        v_9 = 6;
        v_A = 0;
        v_4 = 10000;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 7);
        return ;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_4a29d(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 7;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 4:
        v_9 = 2;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 5:
        v_9 = 2;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 6:
        v_9 = 2;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 7:
        v_9 = 3;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 8:
        v_9 = 3;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 9:
        v_9 = 3;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 10:
        v_9 = 4;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 11:
        v_9 = 4;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 12:
        v_9 = 4;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 13:
        v_9 = 4;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 14:
        v_9 = 4;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 15:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 16:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 17:
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 18:
        v_9 = 4;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 19:
        v_9 = 4;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 20:
        v_9 = 4;
        v_A = 10;
        v_3 = 1;
        break;
    case 21:
        v_9 = 4;
        v_A = 11;
        v_3 = 1;
        break;
    case 22:
        v_9 = 4;
        v_A = 12;
        v_3 = 1;
        break;
    case 23:
        v_9 = 4;
        v_A = 13;
        v_3 = 1;
        break;
    case 24:
        v_9 = 4;
        v_A = 14;
        v_3 = 1;
        break;
    case 25:
        v_9 = 4;
        v_A = 15;
        v_3 = 1;
        break;
    case 26:
        v_9 = 5;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 27:
        v_9 = 5;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 28:
        v_9 = 5;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 29:
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 30:
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 31:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 32:
        v_9 = 6;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 33:
        v_9 = 6;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 34:
        v_9 = 6;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 35:
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 36:
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 37:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 38:
        v_9 = 7;
        v_A = 0;
        break;
    case 39:
        v_9 = 8;
        v_A = 0;
        break;
    case 40:
        v_9 = 9;
        v_A = 0;
        break;
    case 41:
        v_9 = 10;
        v_A = 0;
        if (g_40001._f1043 != -1) {
            v_4 = g_40001._f1043;
        } else { 
            v_4 = 115;
        }
        break;
    case 42:
        v_9 = 10;
        v_A = 1;
        if (g_40001._f1044 != -1) {
            v_4 = g_40001._f1044;
        } else { 
            v_4 = 125;
        }
        break;
    case 43:
        v_9 = 10;
        v_A = 2;
        if (g_40001._f1045 != -1) {
            v_4 = g_40001._f1045;
        } else { 
            v_4 = 130;
        }
        break;
    case 44:
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 45:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 46:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 47:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 48:
        v_9 = 10;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 49:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 50:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 51:
        v_9 = 10;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 52:
        v_9 = 10;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 53:
        v_9 = 10;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 54:
        v_9 = 10;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 55:
        v_9 = 10;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 56:
        v_9 = 10;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 57:
        v_9 = 11;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 58:
        v_9 = 11;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 59:
        v_9 = 11;
        v_A = 2;
        if (g_40001._f1049 != -1) {
            v_4 = g_40001._f1049;
        } else { 
            v_4 = 725;
        }
        break;
    case 60:
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 61:
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 62:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 63:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 64:
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 65:
        v_9 = 11;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 66:
        v_9 = 11;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 67:
        v_9 = 11;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 68:
        v_9 = 11;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 69:
        v_9 = 11;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 70:
        v_9 = 11;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 71:
        v_9 = 11;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 72:
        v_9 = 11;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 73:
        v_9 = 12;
        v_A = 0;
        if (g_40001._f1046 != -1) {
            v_4 = g_40001._f1046;
        } else { 
            v_4 = 65;
        }
        break;
    case 74:
        v_9 = 12;
        v_A = 1;
        if (g_40001._f1047 != -1) {
            v_4 = g_40001._f1047;
        } else { 
            v_4 = 65;
        }
        break;
    case 75:
        v_9 = 12;
        v_A = 2;
        if (g_40001._f1048 != -1) {
            v_4 = g_40001._f1048;
        } else { 
            v_4 = 95;
        }
        break;
    case 76:
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 77:
        v_9 = 12;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 78:
        v_9 = 12;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 79:
        v_9 = 12;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 80:
        v_9 = 12;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 81:
        v_9 = 12;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 82:
        v_9 = 12;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 83:
        v_9 = 12;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 84:
        v_9 = 12;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 85:
        v_9 = 12;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 86:
        v_9 = 12;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 87:
        v_9 = 12;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 88:
        v_9 = 12;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 89:
        v_9 = 13;
        v_A = 0;
        break;
    case 90:
        v_9 = 14;
        v_A = 0;
        break;
    case 91:
        v_9 = 15;
        v_A = 0;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 92);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f39);
        }
        return ;
        break;
    }
    v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_42DD3._f39);
    v_5/*"16"*/ = "T_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_4ab93(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 1;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        v_4 = 965;
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        v_4 = 960;
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        v_4 = 9500;
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        v_4 = 975;
        break;
    case 5:
        v_9 = 2;
        v_A = 0;
        v_4 = 1185;
        break;
    case 6:
        v_9 = 2;
        v_A = 1;
        v_4 = 15000;
        break;
    case 7:
        v_9 = 2;
        v_A = 2;
        v_4 = 1115;
        break;
    case 8:
        v_9 = 2;
        v_A = 3;
        v_4 = 1105;
        break;
    case 9:
        v_9 = 3;
        v_A = 0;
        v_4 = 25000;
        break;
    case 10:
        v_9 = 4;
        v_A = 0;
        v_4 = 510;
        break;
    case 11:
        v_9 = 4;
        v_A = 1;
        v_4 = 530;
        break;
    case 12:
        v_9 = 4;
        v_A = 2;
        v_4 = 5500;
        break;
    case 13:
        v_9 = 4;
        v_A = 3;
        v_4 = 535;
        break;
    case 14:
        v_9 = 5;
        v_A = 0;
        v_4 = 1510;
        break;
    case 15:
        v_9 = 5;
        v_A = 1;
        v_4 = 1530;
        break;
    case 16:
        v_9 = 5;
        v_A = 2;
        v_4 = 14500;
        break;
    case 17:
        v_9 = 5;
        v_A = 3;
        v_4 = 13000;
        break;
    case 18:
        v_9 = 6;
        v_A = 0;
        v_4 = 8000;
        break;
    case 19:
        v_9 = 6;
        v_A = 1;
        v_4 = 1265;
        break;
    case 20:
        v_9 = 6;
        v_A = 2;
        v_4 = 8500;
        break;
    case 21:
        v_9 = 6;
        v_A = 3;
        v_4 = 1210;
        break;
    case 22:
        v_9 = 7;
        v_A = 0;
        v_4 = 2360;
        break;
    case 23:
        v_9 = 7;
        v_A = 1;
        v_4 = 22500;
        break;
    case 24:
        v_9 = 7;
        v_A = 2;
        v_4 = 2375;
        break;
    case 25:
        v_9 = 7;
        v_A = 3;
        v_4 = 2485;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 26);
        return ;
        break;
    }
    v_5/*"16"*/ = "M_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    v_E = a_0 - 1;
    if ((v_E >= 0) && (v_E < 26)) {
        v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f39B[v_E/*1*/]) * g_42DD3._f16);
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_4ae48(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 6;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 1:
        v_9 = 0;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 2:
        v_9 = 0;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 4:
        v_9 = 0;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 5:
        v_9 = 0;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 6:
        v_9 = 0;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 7:
        v_9 = 0;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 8:
        v_9 = 0;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 9:
        v_9 = 0;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 10:
        v_9 = 0;
        v_A = 10;
        v_4 = 300;
        break;
    case 11:
        v_9 = 0;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 12:
        v_9 = 0;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 13:
        v_9 = 0;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 14:
        v_9 = 0;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 15:
        v_9 = 0;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 16:
        v_9 = 1;
        v_A = 0;
        v_4 = 285;
        break;
    case 17:
        v_9 = 1;
        v_A = 1;
        v_4 = 180;
        break;
    case 18:
        v_9 = 1;
        v_A = 2;
        v_4 = 190;
        break;
    case 19:
        v_9 = 1;
        v_A = 3;
        v_4 = 190;
        break;
    case 20:
        v_9 = 1;
        v_A = 4;
        v_4 = 165;
        break;
    case 21:
        v_9 = 1;
        v_A = 5;
        v_4 = 200;
        break;
    case 22:
        v_9 = 1;
        v_A = 6;
        v_4 = 480;
        break;
    case 23:
        v_9 = 1;
        v_A = 7;
        v_4 = 155;
        break;
    case 24:
        v_9 = 1;
        v_A = 8;
        v_4 = 350;
        break;
    case 25:
        v_9 = 1;
        v_A = 9;
        v_4 = 290;
        break;
    case 26:
        v_9 = 1;
        v_A = 10;
        v_4 = 165;
        break;
    case 27:
        v_9 = 1;
        v_A = 11;
        v_4 = 165;
        break;
    case 28:
        v_9 = 1;
        v_A = 12;
        v_4 = 170;
        break;
    case 29:
        v_9 = 1;
        v_A = 13;
        v_4 = 155;
        break;
    case 30:
        v_9 = 1;
        v_A = 14;
        v_4 = 165;
        break;
    case 31:
        v_9 = 1;
        v_A = 15;
        v_4 = 165;
        break;
    }
    switch (a_0) {
    case 32:
        v_9 = 2;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 33:
        v_9 = 2;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 34:
        v_9 = 2;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 35:
        v_9 = 2;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 36:
        v_9 = 2;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 37:
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 38:
        v_9 = 2;
        v_A = 6;
        v_4 = 160;
        break;
    case 39:
        v_9 = 2;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 40:
        v_9 = 2;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 41:
        v_9 = 2;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 42:
        v_9 = 2;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 43:
        v_9 = 2;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 44:
        v_9 = 2;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 45:
        v_9 = 2;
        v_A = 13;
        v_4 = 205;
        break;
    case 46:
        v_9 = 2;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 47:
        v_9 = 2;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 48:
        v_9 = 3;
        v_A = 0;
        v_4 = 560;
        break;
    case 49:
        v_9 = 3;
        v_A = 1;
        v_4 = 275;
        break;
    case 50:
        v_9 = 3;
        v_A = 2;
        v_4 = 290;
        break;
    case 51:
        v_9 = 3;
        v_A = 3;
        v_4 = 300;
        break;
    case 52:
        v_9 = 3;
        v_A = 4;
        v_4 = 360;
        break;
    case 53:
        v_9 = 3;
        v_A = 5;
        v_4 = 270;
        break;
    case 54:
        v_9 = 3;
        v_A = 6;
        v_4 = 265;
        break;
    case 55:
        v_9 = 3;
        v_A = 7;
        v_4 = 295;
        break;
    case 56:
        v_9 = 3;
        v_A = 8;
        v_4 = 355;
        break;
    case 57:
        v_9 = 3;
        v_A = 9;
        v_4 = 340;
        break;
    case 58:
        v_9 = 3;
        v_A = 10;
        v_4 = 285;
        break;
    case 59:
        v_9 = 3;
        v_A = 11;
        v_4 = 310;
        break;
    case 60:
        v_9 = 3;
        v_A = 12;
        v_4 = 350;
        break;
    case 61:
        v_9 = 3;
        v_A = 13;
        v_4 = 305;
        break;
    case 62:
        v_9 = 3;
        v_A = 14;
        v_4 = 280;
        break;
    case 63:
        v_9 = 3;
        v_A = 15;
        v_4 = 320;
        break;
    }
    switch (a_0) {
    case 64:
        v_9 = 4;
        v_A = 0;
        v_4 = 115;
        break;
    case 65:
        v_9 = 4;
        v_A = 1;
        v_4 = 115;
        break;
    case 66:
        v_9 = 4;
        v_A = 2;
        v_4 = 110;
        break;
    case 67:
        v_9 = 4;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 68:
        v_9 = 4;
        v_A = 4;
        v_4 = 125;
        break;
    case 69:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 70:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 71:
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 72:
        v_9 = 4;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 73:
        v_9 = 4;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 74:
        v_9 = 4;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 75:
        v_9 = 4;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 76:
        v_9 = 4;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 77:
        v_9 = 4;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 78:
        v_9 = 4;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 79:
        v_9 = 4;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 80:
        v_9 = 5;
        v_A = 0;
        v_4 = 50;
        break;
    case 81:
        v_9 = 5;
        v_A = 1;
        v_4 = 35;
        break;
    case 82:
        v_9 = 5;
        v_A = 2;
        v_4 = 50;
        break;
    case 83:
        v_9 = 5;
        v_A = 3;
        v_4 = 50;
        break;
    case 84:
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 85:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 86:
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 87:
        v_9 = 5;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 88:
        v_9 = 5;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 89:
        v_9 = 5;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 90:
        v_9 = 5;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 91:
        v_9 = 5;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 92:
        v_9 = 5;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 93:
        v_9 = 5;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 94:
        v_9 = 5;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 95:
        v_9 = 5;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 96:
        v_9 = 6;
        v_A = 0;
        v_4 = 65;
        break;
    case 97:
        v_9 = 6;
        v_A = 1;
        v_4 = 65;
        break;
    case 98:
        v_9 = 6;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 99:
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 100:
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 101:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 102:
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 103:
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 104:
        v_9 = 6;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 105:
        v_9 = 6;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 106:
        v_9 = 6;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 107:
        v_9 = 6;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 108:
        v_9 = 6;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 109:
        v_9 = 6;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 110:
        v_9 = 6;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 111:
        v_9 = 6;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 112:
        v_9 = 7;
        v_A = 0;
        v_4 = 165;
        break;
    case 113:
        v_9 = 7;
        v_A = 1;
        v_4 = 165;
        break;
    case 114:
        v_9 = 7;
        v_A = 2;
        v_4 = 185;
        break;
    case 115:
        v_9 = 7;
        v_A = 3;
        v_4 = 175;
        break;
    case 116:
        v_9 = 7;
        v_A = 4;
        v_4 = 185;
        break;
    case 117:
        v_9 = 7;
        v_A = 5;
        v_4 = 460;
        break;
    case 118:
        v_9 = 7;
        v_A = 6;
        v_4 = 185;
        break;
    case 119:
        v_9 = 7;
        v_A = 7;
        v_4 = 190;
        break;
    case 120:
        v_9 = 7;
        v_A = 8;
        v_4 = 165;
        break;
    case 121:
        v_9 = 7;
        v_A = 9;
        v_4 = 165;
        break;
    case 122:
        v_9 = 7;
        v_A = 10;
        v_4 = 185;
        break;
    case 123:
        v_9 = 7;
        v_A = 11;
        v_4 = 175;
        break;
    case 124:
        v_9 = 7;
        v_A = 12;
        v_4 = 235;
        break;
    case 125:
        v_9 = 7;
        v_A = 13;
        v_4 = 445;
        break;
    case 126:
        v_9 = 7;
        v_A = 14;
        v_4 = 185;
        break;
    case 127:
        v_9 = 7;
        v_A = 15;
        v_4 = 190;
        break;
    }
    switch (a_0) {
    case 128:
        v_9 = 8;
        v_A = 0;
        v_4 = 175;
        break;
    case 129:
        v_9 = 8;
        v_A = 1;
        v_4 = 215;
        break;
    case 130:
        v_9 = 8;
        v_A = 2;
        v_4 = 225;
        break;
    case 131:
        v_9 = 8;
        v_A = 3;
        v_4 = 230;
        break;
    case 132:
        v_9 = 8;
        v_A = 4;
        v_4 = 235;
        break;
    case 133:
        v_9 = 8;
        v_A = 5;
        v_4 = 215;
        break;
    case 134:
        v_9 = 8;
        v_A = 6;
        v_4 = 205;
        break;
    case 135:
        v_9 = 8;
        v_A = 7;
        v_4 = 245;
        break;
    case 136:
        v_9 = 8;
        v_A = 8;
        v_4 = 225;
        break;
    case 137:
        v_9 = 8;
        v_A = 9;
        v_4 = 215;
        break;
    case 138:
        v_9 = 8;
        v_A = 10;
        v_4 = 225;
        break;
    case 139:
        v_9 = 8;
        v_A = 11;
        v_4 = 230;
        break;
    case 140:
        v_9 = 8;
        v_A = 12;
        v_4 = 235;
        break;
    case 141:
        v_9 = 8;
        v_A = 13;
        v_4 = 215;
        break;
    case 142:
        v_9 = 8;
        v_A = 14;
        v_4 = 425;
        break;
    case 143:
        v_9 = 8;
        v_A = 15;
        v_4 = 245;
        break;
    case 144:
        v_9 = 9;
        v_A = 0;
        v_4 = 225;
        break;
    case 145:
        v_9 = 9;
        v_A = 1;
        v_4 = 135;
        break;
    case 146:
        v_9 = 9;
        v_A = 2;
        v_4 = 130;
        break;
    case 147:
        v_9 = 9;
        v_A = 3;
        v_4 = 110;
        break;
    case 148:
        v_9 = 9;
        v_A = 4;
        v_4 = 140;
        break;
    case 149:
        v_9 = 9;
        v_A = 5;
        v_4 = 95;
        break;
    case 150:
        v_9 = 9;
        v_A = 6;
        v_4 = 100;
        break;
    case 151:
        v_9 = 9;
        v_A = 7;
        v_4 = 110;
        break;
    case 152:
        v_9 = 9;
        v_A = 8;
        v_4 = 95;
        break;
    case 153:
        v_9 = 9;
        v_A = 9;
        v_4 = 105;
        break;
    case 154:
        v_9 = 9;
        v_A = 10;
        v_4 = 105;
        break;
    case 155:
        v_9 = 9;
        v_A = 11;
        v_4 = 115;
        break;
    case 156:
        v_9 = 9;
        v_A = 12;
        v_4 = 115;
        break;
    case 157:
        v_9 = 9;
        v_A = 13;
        v_4 = 115;
        break;
    case 158:
        v_9 = 9;
        v_A = 14;
        v_4 = 500;
        break;
    case 159:
        v_9 = 9;
        v_A = 15;
        v_4 = 440;
        break;
    }
    switch (a_0) {
    case 160:
        v_9 = 10;
        v_A = 0;
        v_4 = 1090;
        break;
    case 161:
        v_9 = 10;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 162:
        v_9 = 10;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 163:
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 164:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 165:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 166:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 167:
        v_9 = 10;
        v_A = 7;
        v_4 = 600;
        break;
    case 168:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 169:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 170:
        v_9 = 10;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 171:
        v_9 = 10;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 172:
        v_9 = 10;
        v_A = 12;
        v_4 = 1865;
        break;
    case 173:
        v_9 = 10;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 174:
        v_9 = 10;
        v_A = 14;
        v_4 = 490;
        break;
    case 175:
        v_9 = 10;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 176:
        v_9 = 11;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 177:
        v_9 = 11;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 178:
        v_9 = 11;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 179:
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 180:
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 181:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 182:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 183:
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 184:
        v_9 = 11;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 185:
        v_9 = 11;
        v_A = 9;
        v_4 = 470;
        break;
    case 186:
        v_9 = 11;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 187:
        v_9 = 11;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 188:
        v_9 = 11;
        v_A = 12;
        v_4 = 1795;
        break;
    case 189:
        v_9 = 11;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 190:
        v_9 = 11;
        v_A = 14;
        v_4 = 1830;
        break;
    case 191:
        v_9 = 11;
        v_A = 15;
        v_4 = 455;
        break;
    }
    switch (a_0) {
    case 192:
        v_9 = 12;
        v_A = 0;
        v_4 = 455;
        break;
    case 193:
        v_9 = 12;
        v_A = 1;
        v_4 = 2110;
        break;
    case 194:
        v_9 = 12;
        v_A = 2;
        v_4 = 380;
        break;
    case 195:
        v_9 = 12;
        v_A = 3;
        v_4 = 1655;
        break;
    case 196:
        v_9 = 12;
        v_A = 4;
        v_4 = 2500;
        break;
    case 197:
        v_9 = 12;
        v_A = 5;
        v_4 = 415;
        break;
    case 198:
        v_9 = 12;
        v_A = 6;
        v_4 = 730;
        break;
    case 199:
        v_9 = 12;
        v_A = 7;
        v_4 = 445;
        break;
    case 200:
        v_9 = 12;
        v_A = 8;
        v_4 = 425;
        break;
    case 201:
        v_9 = 12;
        v_A = 9;
        v_4 = 410;
        break;
    case 202:
        v_9 = 12;
        v_A = 10;
        v_4 = 480;
        break;
    case 203:
        v_9 = 12;
        v_A = 11;
        v_4 = 485;
        break;
    case 204:
        v_9 = 12;
        v_A = 12;
        v_4 = 480;
        break;
    case 205:
        v_9 = 12;
        v_A = 13;
        v_4 = 395;
        break;
    case 206:
        v_9 = 12;
        v_A = 14;
        v_4 = 495;
        break;
    case 207:
        v_9 = 12;
        v_A = 15;
        v_4 = 2090;
        break;
    case 208:
        v_9 = 13;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 209:
        v_9 = 13;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 210:
        v_9 = 13;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 211:
        v_9 = 13;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 212:
        v_9 = 13;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 213:
        v_9 = 13;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 214:
        v_9 = 13;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 215:
        v_9 = 13;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 216:
        v_9 = 13;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 217:
        v_9 = 13;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 218:
        v_9 = 13;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 219:
        v_9 = 13;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 220:
        v_9 = 13;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 221:
        v_9 = 13;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 222:
        v_9 = 13;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 223:
        v_9 = 13;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 224:
        v_9 = 14;
        v_A = 0;
        v_4 = 450;
        break;
    case 225:
        v_9 = 14;
        v_A = 1;
        v_4 = 685;
        break;
    case 226:
        v_9 = 14;
        v_A = 2;
        v_4 = 420;
        break;
    case 227:
        v_9 = 14;
        v_A = 3;
        v_4 = 365;
        break;
    case 228:
        v_9 = 14;
        v_A = 4;
        v_4 = 465;
        break;
    case 229:
        v_9 = 14;
        v_A = 5;
        v_4 = 405;
        break;
    case 230:
        v_9 = 14;
        v_A = 6;
        v_4 = 400;
        break;
    case 231:
        v_9 = 14;
        v_A = 7;
        v_4 = 440;
        break;
    case 232:
        v_9 = 14;
        v_A = 8;
        v_4 = 385;
        break;
    case 233:
        v_9 = 14;
        v_A = 9;
        v_4 = 435;
        break;
    case 234:
        v_9 = 14;
        v_A = 10;
        v_4 = 375;
        break;
    case 235:
        v_9 = 14;
        v_A = 11;
        v_4 = 390;
        break;
    case 236:
        v_9 = 14;
        v_A = 12;
        v_4 = 475;
        break;
    case 237:
        v_9 = 14;
        v_A = 13;
        v_4 = 430;
        break;
    case 238:
        v_9 = 14;
        v_A = 14;
        v_4 = 490;
        break;
    case 239:
        v_9 = 14;
        v_A = 15;
        v_4 = 490;
        break;
    case 240:
        v_9 = 15;
        v_A = 0;
        v_4 = 615;
        break;
    case 241:
        v_9 = 15;
        v_A = 1;
        v_4 = 315;
        break;
    case 242:
        v_9 = 15;
        v_A = 2;
        v_4 = 415;
        break;
    case 243:
        v_9 = 15;
        v_A = 3;
        v_4 = 425;
        break;
    case 244:
        v_9 = 15;
        v_A = 4;
        v_4 = 435;
        break;
    case 245:
        v_9 = 15;
        v_A = 5;
        v_4 = 445;
        break;
    case 246:
        v_9 = 15;
        v_A = 6;
        v_4 = 640;
        break;
    case 247:
        v_9 = 15;
        v_A = 7;
        v_4 = 460;
        break;
    case 248:
        v_9 = 15;
        v_A = 8;
        v_4 = 465;
        break;
    case 249:
        v_9 = 15;
        v_A = 9;
        v_4 = 745;
        break;
    case 250:
        v_9 = 15;
        v_A = 10;
        v_4 = 845;
        break;
    case 251:
        v_9 = 15;
        v_A = 11;
        v_4 = 1420;
        break;
    case 252:
        v_9 = 15;
        v_A = 12;
        v_4 = 475;
        break;
    case 253:
        v_9 = 15;
        v_A = 13;
        v_4 = 470;
        break;
    case 254:
        v_9 = 15;
        v_A = 14;
        v_4 = 1000;
        break;
    case 255:
        v_9 = 15;
        v_A = 15;
        v_4 = 690;
        break;
    }
    v_E = a_0;
    if ((v_E >= 0) && (v_E < 256)) {
        v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f29A[v_E/*1*/]) * g_42DD3._f11);
    }
    v_5/*"16"*/ = "F_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    if (a_0 >= 256) {
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 256);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f11);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_4c484(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 4;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 335;
        break;
    case 1:
        v_9 = 0;
        v_A = 1;
        v_4 = 460;
        break;
    case 2:
        v_9 = 0;
        v_A = 2;
        v_4 = 455;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        v_4 = 470;
        break;
    case 4:
        v_9 = 0;
        v_A = 4;
        v_4 = 650;
        break;
    case 5:
        v_9 = 0;
        v_A = 5;
        v_4 = 385;
        break;
    case 6:
        v_9 = 0;
        v_A = 6;
        v_4 = 455;
        break;
    case 7:
        v_9 = 0;
        v_A = 7;
        v_4 = 2150;
        break;
    case 8:
        v_9 = 0;
        v_A = 8;
        v_4 = 375;
        break;
    case 9:
        v_9 = 0;
        v_A = 9;
        v_4 = 2190;
        break;
    case 10:
        v_9 = 0;
        v_A = 10;
        v_4 = 285;
        break;
    case 11:
        v_9 = 0;
        v_A = 11;
        v_4 = 295;
        break;
    case 12:
        v_9 = 0;
        v_A = 12;
        v_4 = 445;
        break;
    case 13:
        v_9 = 0;
        v_A = 13;
        v_4 = 2240;
        break;
    case 14:
        v_9 = 0;
        v_A = 14;
        v_4 = 465;
        break;
    case 15:
        v_9 = 0;
        v_A = 15;
        v_4 = 1740;
        break;
    case 16:
        v_9 = 1;
        v_A = 0;
        v_4 = 1415;
        break;
    case 17:
        v_9 = 1;
        v_A = 1;
        v_4 = 325;
        break;
    case 18:
        v_9 = 1;
        v_A = 2;
        v_4 = 345;
        break;
    case 19:
        v_9 = 1;
        v_A = 3;
        v_4 = 355;
        break;
    case 20:
        v_9 = 1;
        v_A = 4;
        v_4 = 395;
        break;
    case 21:
        v_9 = 1;
        v_A = 5;
        v_4 = 315;
        break;
    case 22:
        v_9 = 1;
        v_A = 6;
        v_4 = 275;
        break;
    case 23:
        v_9 = 1;
        v_A = 7;
        v_4 = 265;
        break;
    case 24:
        v_9 = 1;
        v_A = 8;
        v_4 = 305;
        break;
    case 25:
        v_9 = 1;
        v_A = 9;
        v_4 = 255;
        break;
    case 26:
        v_9 = 1;
        v_A = 10;
        v_4 = 235;
        break;
    case 27:
        v_9 = 1;
        v_A = 11;
        v_4 = 245;
        break;
    case 28:
        v_9 = 1;
        v_A = 12;
        v_4 = 215;
        break;
    case 29:
        v_9 = 1;
        v_A = 13;
        v_4 = 1865;
        break;
    case 30:
        v_9 = 1;
        v_A = 14;
        v_4 = 450;
        break;
    case 31:
        v_9 = 1;
        v_A = 15;
        v_4 = 415;
        break;
    case 32:
        v_9 = 2;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 33:
        v_9 = 2;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 34:
        v_9 = 2;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 35:
        v_9 = 2;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 36:
        v_9 = 2;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 37:
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 38:
        v_9 = 2;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 39:
        v_9 = 2;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 40:
        v_9 = 2;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 41:
        v_9 = 2;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 42:
        v_9 = 2;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 43:
        v_9 = 2;
        v_A = 11;
        v_4 = 100;
        break;
    case 44:
        v_9 = 2;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 45:
        v_9 = 2;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 46:
        v_9 = 2;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 47:
        v_9 = 2;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 48:
        v_9 = 3;
        v_A = 0;
        v_4 = 55;
        break;
    case 49:
        v_9 = 3;
        v_A = 1;
        v_4 = 60;
        break;
    case 50:
        v_9 = 3;
        v_A = 2;
        v_4 = 100;
        break;
    case 51:
        v_9 = 3;
        v_A = 3;
        v_4 = 65;
        break;
    case 52:
        v_9 = 3;
        v_A = 4;
        v_4 = 65;
        break;
    case 53:
        v_9 = 3;
        v_A = 5;
        v_4 = 100;
        break;
    case 54:
        v_9 = 3;
        v_A = 6;
        v_4 = 100;
        break;
    case 55:
        v_9 = 3;
        v_A = 7;
        v_4 = 65;
        break;
    case 56:
        v_9 = 3;
        v_A = 8;
        v_4 = 90;
        break;
    case 57:
        v_9 = 3;
        v_A = 9;
        v_4 = 75;
        break;
    case 58:
        v_9 = 3;
        v_A = 10;
        v_4 = 65;
        break;
    case 59:
        v_9 = 3;
        v_A = 11;
        v_4 = 100;
        break;
    case 60:
        v_9 = 3;
        v_A = 12;
        v_4 = 100;
        break;
    case 61:
        v_9 = 3;
        v_A = 13;
        v_4 = 225;
        break;
    case 62:
        v_9 = 3;
        v_A = 14;
        v_4 = 205;
        break;
    case 63:
        v_9 = 3;
        v_A = 15;
        v_4 = 215;
        break;
    case 64:
        v_9 = 4;
        v_A = 0;
        v_4 = 490;
        break;
    case 65:
        v_9 = 4;
        v_A = 1;
        v_4 = 485;
        break;
    case 66:
        v_9 = 4;
        v_A = 2;
        v_4 = 2500;
        break;
    case 67:
        v_9 = 4;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 68:
        v_9 = 4;
        v_A = 4;
        v_4 = 485;
        break;
    case 69:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 70:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 71:
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 72:
        v_9 = 4;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 73:
        v_9 = 4;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 74:
        v_9 = 4;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 75:
        v_9 = 4;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 76:
        v_9 = 4;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 77:
        v_9 = 4;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 78:
        v_9 = 4;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 79:
        v_9 = 4;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 80:
        v_9 = 5;
        v_A = 0;
        v_4 = 100;
        break;
    case 81:
        v_9 = 5;
        v_A = 1;
        v_4 = 105;
        break;
    case 82:
        v_9 = 5;
        v_A = 2;
        v_4 = 80;
        break;
    case 83:
        v_9 = 5;
        v_A = 3;
        v_4 = 90;
        break;
    case 84:
        v_9 = 5;
        v_A = 4;
        v_4 = 100;
        break;
    case 85:
        v_9 = 5;
        v_A = 5;
        v_4 = 95;
        break;
    case 86:
        v_9 = 5;
        v_A = 6;
        v_4 = 100;
        break;
    case 87:
        v_9 = 5;
        v_A = 7;
        v_4 = 90;
        break;
    case 88:
        v_9 = 5;
        v_A = 8;
        v_4 = 85;
        break;
    case 89:
        v_9 = 5;
        v_A = 9;
        v_4 = 80;
        break;
    case 90:
        v_9 = 5;
        v_A = 10;
        v_4 = 80;
        break;
    case 91:
        v_9 = 5;
        v_A = 11;
        v_4 = 100;
        break;
    case 92:
        v_9 = 5;
        v_A = 12;
        v_4 = 95;
        break;
    case 93:
        v_9 = 5;
        v_A = 13;
        v_4 = 440;
        break;
    case 94:
        v_9 = 5;
        v_A = 14;
        v_4 = 380;
        break;
    case 95:
        v_9 = 5;
        v_A = 15;
        v_4 = 80;
        break;
    case 96:
        v_9 = 6;
        v_A = 0;
        v_4 = 115;
        break;
    case 97:
        v_9 = 6;
        v_A = 1;
        v_4 = 140;
        break;
    case 98:
        v_9 = 6;
        v_A = 2;
        v_4 = 135;
        break;
    case 99:
        v_9 = 6;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 100:
        v_9 = 6;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 101:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 102:
        v_9 = 6;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 103:
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 104:
        v_9 = 6;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 105:
        v_9 = 6;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 106:
        v_9 = 6;
        v_A = 10;
        v_4 = 255;
        break;
    case 107:
        v_9 = 6;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 108:
        v_9 = 6;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 109:
        v_9 = 6;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 110:
        v_9 = 6;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 111:
        v_9 = 6;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 112:
        v_9 = 7;
        v_A = 0;
        v_4 = 325;
        break;
    case 113:
        v_9 = 7;
        v_A = 1;
        v_4 = 115;
        break;
    case 114:
        v_9 = 7;
        v_A = 2;
        v_4 = 135;
        break;
    case 115:
        v_9 = 7;
        v_A = 3;
        v_4 = 125;
        break;
    case 116:
        v_9 = 7;
        v_A = 4;
        v_4 = 120;
        break;
    case 117:
        v_9 = 7;
        v_A = 5;
        v_4 = 130;
        break;
    case 118:
        v_9 = 7;
        v_A = 6;
        v_4 = 110;
        break;
    case 119:
        v_9 = 7;
        v_A = 7;
        v_4 = 345;
        break;
    case 120:
        v_9 = 7;
        v_A = 8;
        v_4 = 745;
        break;
    case 121:
        v_9 = 7;
        v_A = 9;
        v_4 = 120;
        break;
    case 122:
        v_9 = 7;
        v_A = 10;
        v_4 = 135;
        break;
    case 123:
        v_9 = 7;
        v_A = 11;
        v_4 = 345;
        break;
    case 124:
        v_9 = 7;
        v_A = 12;
        v_4 = 130;
        break;
    case 125:
        v_9 = 7;
        v_A = 13;
        v_4 = 140;
        break;
    case 126:
        v_9 = 7;
        v_A = 14;
        v_4 = 130;
        break;
    case 127:
        v_9 = 7;
        v_A = 15;
        v_4 = 660;
        break;
    case 128:
        v_9 = 8;
        v_A = 0;
        v_4 = 150;
        break;
    case 129:
        v_9 = 8;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 130:
        v_9 = 8;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 131:
        v_9 = 8;
        v_A = 3;
        v_4 = 150;
        break;
    case 132:
        v_9 = 8;
        v_A = 4;
        v_4 = 150;
        break;
    case 133:
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 134:
        v_9 = 8;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 135:
        v_9 = 8;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 136:
        v_9 = 8;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 137:
        v_9 = 8;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 138:
        v_9 = 8;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 139:
        v_9 = 8;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 140:
        v_9 = 8;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 141:
        v_9 = 8;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 142:
        v_9 = 8;
        v_A = 14;
        v_4 = 150;
        break;
    case 143:
        v_9 = 8;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 144:
        v_9 = 9;
        v_A = 0;
        v_4 = 75;
        break;
    case 145:
        v_9 = 9;
        v_A = 1;
        v_4 = 90;
        break;
    case 146:
        v_9 = 9;
        v_A = 2;
        v_4 = 145;
        break;
    case 147:
        v_9 = 9;
        v_A = 3;
        v_4 = 150;
        break;
    case 148:
        v_9 = 9;
        v_A = 4;
        v_4 = 110;
        break;
    case 149:
        v_9 = 9;
        v_A = 5;
        v_4 = 95;
        break;
    case 150:
        v_9 = 9;
        v_A = 6;
        v_4 = 155;
        break;
    case 151:
        v_9 = 9;
        v_A = 7;
        v_4 = 255;
        break;
    case 152:
        v_9 = 9;
        v_A = 8;
        v_4 = 165;
        break;
    case 153:
        v_9 = 9;
        v_A = 9;
        v_4 = 1150;
        break;
    case 154:
        v_9 = 9;
        v_A = 10;
        v_4 = 1150;
        break;
    case 155:
        v_9 = 9;
        v_A = 11;
        v_4 = 1210;
        break;
    case 156:
        v_9 = 9;
        v_A = 12;
        v_4 = 1125;
        break;
    case 157:
        v_9 = 9;
        v_A = 13;
        v_4 = 1135;
        break;
    case 158:
        v_9 = 9;
        v_A = 14;
        v_4 = 1145;
        break;
    case 159:
        v_9 = 9;
        v_A = 15;
        v_4 = 1145;
        break;
    case 160:
        v_9 = 10;
        v_A = 0;
        v_4 = 845;
        break;
    case 161:
        v_9 = 10;
        v_A = 1;
        v_4 = 480;
        break;
    case 162:
        v_9 = 10;
        v_A = 2;
        v_4 = 475;
        break;
    case 163:
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 164:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 165:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 166:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 167:
        v_9 = 10;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 168:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 169:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 170:
        v_9 = 10;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 171:
        v_9 = 10;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 172:
        v_9 = 10;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 173:
        v_9 = 10;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 174:
        v_9 = 10;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 175:
        v_9 = 10;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 176:
        v_9 = 11;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 177:
        v_9 = 11;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 178:
        v_9 = 11;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 179:
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 180:
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 181:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 182:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 183:
        v_9 = 11;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 184:
        v_9 = 11;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 185:
        v_9 = 11;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 186:
        v_9 = 11;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 187:
        v_9 = 11;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 188:
        v_9 = 11;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 189:
        v_9 = 11;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 190:
        v_9 = 11;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 191:
        v_9 = 11;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 192:
        v_9 = 12;
        v_A = 0;
        v_4 = 220;
        break;
    case 193:
        v_9 = 12;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 194:
        v_9 = 12;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 195:
        v_9 = 12;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 196:
        v_9 = 12;
        v_A = 4;
        v_4 = 100;
        break;
    case 197:
        v_9 = 12;
        v_A = 5;
        v_4 = 65;
        break;
    case 198:
        v_9 = 12;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 199:
        v_9 = 12;
        v_A = 7;
        v_4 = 50;
        break;
    case 200:
        v_9 = 12;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 201:
        v_9 = 12;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 202:
        v_9 = 12;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 203:
        v_9 = 12;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 204:
        v_9 = 12;
        v_A = 12;
        v_4 = 100;
        break;
    case 205:
        v_9 = 12;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 206:
        v_9 = 12;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 207:
        v_9 = 12;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 208:
        v_9 = 13;
        v_A = 0;
        v_4 = 460;
        break;
    case 209:
        v_9 = 13;
        v_A = 1;
        v_4 = 475;
        break;
    case 210:
        v_9 = 13;
        v_A = 2;
        v_4 = 470;
        break;
    case 211:
        v_9 = 13;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 212:
        v_9 = 13;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 213:
        v_9 = 13;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 214:
        v_9 = 13;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 215:
        v_9 = 13;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 216:
        v_9 = 13;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 217:
        v_9 = 13;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 218:
        v_9 = 13;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 219:
        v_9 = 13;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 220:
        v_9 = 13;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 221:
        v_9 = 13;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 222:
        v_9 = 13;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 223:
        v_9 = 13;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 224:
        v_9 = 14;
        v_A = 0;
        v_4 = 50;
        break;
    case 225:
        v_9 = 14;
        v_A = 1;
        v_4 = 100;
        break;
    case 226:
        v_9 = 14;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 227:
        v_9 = 14;
        v_A = 3;
        v_4 = 100;
        break;
    case 228:
        v_9 = 14;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 229:
        v_9 = 14;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 230:
        v_9 = 14;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 231:
        v_9 = 14;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 232:
        v_9 = 14;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 233:
        v_9 = 14;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 234:
        v_9 = 14;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 235:
        v_9 = 14;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 236:
        v_9 = 14;
        v_A = 12;
        v_4 = 100;
        break;
    case 237:
        v_9 = 14;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 238:
        v_9 = 14;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 239:
        v_9 = 14;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 240:
        v_9 = 15;
        v_A = 0;
        v_4 = 90;
        break;
    case 241:
        v_9 = 15;
        v_A = 1;
        v_4 = 105;
        break;
    case 242:
        v_9 = 15;
        v_A = 2;
        v_4 = 100;
        break;
    case 243:
        v_9 = 15;
        v_A = 3;
        v_4 = 240;
        break;
    case 244:
        v_9 = 15;
        v_A = 4;
        v_4 = 95;
        break;
    case 245:
        v_9 = 15;
        v_A = 5;
        v_4 = 95;
        break;
    case 246:
        v_9 = 15;
        v_A = 6;
        v_4 = 100;
        break;
    case 247:
        v_9 = 15;
        v_A = 7;
        v_4 = 105;
        break;
    case 248:
        v_9 = 15;
        v_A = 8;
        v_4 = 100;
        break;
    case 249:
        v_9 = 15;
        v_A = 9;
        v_4 = 295;
        break;
    case 250:
        v_9 = 15;
        v_A = 10;
        v_4 = 250;
        break;
    case 251:
        v_9 = 15;
        v_A = 11;
        v_4 = 285;
        break;
    case 252:
        v_9 = 15;
        v_A = 12;
        v_4 = 275;
        break;
    case 253:
        v_9 = 15;
        v_A = 13;
        v_4 = 105;
        break;
    case 254:
        v_9 = 15;
        v_A = 14;
        v_4 = 100;
        break;
    case 255:
        v_9 = 15;
        v_A = 15;
        v_4 = 95;
        break;
    }
    v_5/*"16"*/ = "L_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    v_E = a_0;
    if ((v_E >= 0) && (v_E < 256)) {
        v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._fAB[v_E/*1*/]) * g_42DD3._fF);
    }
    if (a_0 >= 256) {
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 256);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._fF);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_4dab5(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 3;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        break;
    case 2:
        v_9 = 2;
        v_A = 0;
        break;
    case 3:
        v_9 = 3;
        v_A = 0;
        break;
    case 4:
        v_9 = 4;
        v_A = 0;
        break;
    case 5:
        v_9 = 5;
        v_A = 0;
        break;
    case 6:
        v_9 = 6;
        v_A = 0;
        break;
    case 7:
        v_9 = 7;
        v_A = 0;
        break;
    case 8:
        v_9 = 8;
        v_A = 0;
        break;
    case 9:
        v_9 = 9;
        v_A = 0;
        break;
    case 10:
        v_9 = 10;
        v_A = 0;
        break;
    case 11:
        v_9 = 11;
        v_A = 0;
        break;
    case 12:
        v_9 = 12;
        v_A = 0;
        break;
    case 13:
        v_9 = 13;
        v_A = 0;
        break;
    case 14:
        v_9 = 14;
        v_A = 0;
        break;
    case 15:
        v_9 = 15;
        v_A = 0;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 16);
        return ;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_4dc0a(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 9;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        break;
    case 5:
        v_9 = 1;
        v_A = 4;
        break;
    case 6:
        v_9 = 2;
        v_A = 0;
        break;
    case 7:
        v_9 = 2;
        v_A = 1;
        break;
    case 8:
        v_9 = 2;
        v_A = 2;
        break;
    case 9:
        v_9 = 2;
        v_A = 3;
        break;
    case 10:
        v_9 = 2;
        v_A = 4;
        break;
    case 11:
        v_9 = 3;
        v_A = 0;
        break;
    case 12:
        v_9 = 3;
        v_A = 1;
        break;
    case 13:
        v_9 = 3;
        v_A = 2;
        break;
    case 14:
        v_9 = 3;
        v_A = 3;
        break;
    case 15:
        v_9 = 3;
        v_A = 4;
        break;
    case 16:
        v_9 = 4;
        v_A = 0;
        break;
    case 17:
        v_9 = 4;
        v_A = 1;
        break;
    case 18:
        v_9 = 4;
        v_A = 2;
        break;
    case 19:
        v_9 = 4;
        v_A = 3;
        break;
    case 20:
        v_9 = 4;
        v_A = 4;
        break;
    case 21:
        v_9 = 5;
        v_A = 0;
        break;
    case 22:
        v_9 = 5;
        v_A = 1;
        break;
    case 23:
        v_9 = 5;
        v_A = 2;
        break;
    case 24:
        v_9 = 5;
        v_A = 3;
        break;
    case 25:
        v_9 = 5;
        v_A = 4;
        break;
    case 26:
        v_9 = 6;
        v_A = 0;
        break;
    case 27:
        v_9 = 6;
        v_A = 1;
        break;
    case 28:
        v_9 = 6;
        v_A = 2;
        break;
    case 29:
        v_9 = 6;
        v_A = 3;
        break;
    case 30:
        v_9 = 6;
        v_A = 4;
        break;
    case 31:
        v_9 = 7;
        v_A = 0;
        break;
    case 32:
        v_9 = 7;
        v_A = 1;
        break;
    case 33:
        v_9 = 7;
        v_A = 2;
        break;
    case 34:
        v_9 = 7;
        v_A = 3;
        break;
    case 35:
        v_9 = 7;
        v_A = 4;
        break;
    case 36:
        v_9 = 8;
        v_A = 0;
        break;
    case 37:
        v_9 = 8;
        v_A = 1;
        break;
    case 38:
        v_9 = 8;
        v_A = 2;
        break;
    case 39:
        v_9 = 8;
        v_A = 3;
        break;
    case 40:
        v_9 = 8;
        v_A = 4;
        break;
    case 41:
        v_9 = 9;
        v_A = 0;
        break;
    case 42:
        v_9 = 9;
        v_A = 1;
        break;
    case 43:
        v_9 = 9;
        v_A = 2;
        break;
    case 44:
        v_9 = 9;
        v_A = 3;
        break;
    case 45:
        v_9 = 9;
        v_A = 4;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 46);
        return ;
        break;
    }
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_4df24(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 8;
    switch (a_0) {
    case 0:
        v_5/*"16"*/ = "U_FMM_0_0";
        v_9 = 0;
        v_A = 0;
        v_4 = 250;
        break;
    case 1:
        v_5/*"16"*/ = "U_FMM_0_1";
        v_9 = 0;
        v_A = 1;
        v_4 = 210;
        break;
    case 2:
        v_5/*"16"*/ = "U_FMM_0_2";
        v_9 = 0;
        v_A = 2;
        v_4 = 50;
        break;
    case 3:
        v_5/*"16"*/ = "U_FMM_0_3";
        v_9 = 0;
        v_A = 3;
        v_4 = 90;
        break;
    case 4:
        v_5/*"16"*/ = "U_FMM_0_4";
        v_9 = 0;
        v_A = 4;
        v_4 = 210;
        break;
    case 5:
        v_5/*"16"*/ = "U_FMM_0_5";
        v_9 = 0;
        v_A = 5;
        v_4 = 200;
        break;
    case 6:
        v_5/*"16"*/ = "U_FMM_0_6";
        v_9 = 0;
        v_A = 6;
        v_3 = 1;
        break;
    case 7:
        v_5/*"16"*/ = "U_FMM_0_7";
        v_9 = 0;
        v_A = 7;
        v_4 = 130;
        break;
    case 8:
        v_5/*"16"*/ = "U_FMM_0_8";
        v_9 = 0;
        v_A = 8;
        v_4 = 220;
        break;
    case 9:
        v_5/*"16"*/ = "U_FMM_0_9";
        v_9 = 0;
        v_A = 9;
        v_3 = 1;
        break;
    case 10:
        v_5/*"16"*/ = "U_FMM_0_10";
        v_9 = 0;
        v_A = 10;
        v_3 = 1;
        break;
    case 11:
        v_5/*"16"*/ = "U_FMM_0_11";
        v_9 = 0;
        v_A = 11;
        v_4 = 220;
        break;
    case 12:
        v_5/*"16"*/ = "U_FMM_0_12";
        v_9 = 0;
        v_A = 12;
        v_3 = 1;
        break;
    case 13:
        v_5/*"16"*/ = "U_FMM_0_13";
        v_9 = 0;
        v_A = 13;
        v_3 = 1;
        break;
    case 14:
        v_5/*"16"*/ = "U_FMM_0_14";
        v_9 = 0;
        v_A = 14;
        v_3 = 1;
        break;
    case 15:
        v_5/*"16"*/ = "U_FMM_0_15";
        v_9 = 0;
        v_A = 15;
        v_3 = 1;
        break;
    case 16:
        v_5/*"16"*/ = "U_FMM_1_0";
        v_9 = 1;
        v_A = 0;
        v_4 = 45;
        break;
    case 17:
        v_5/*"16"*/ = "U_FMM_1_1";
        v_9 = 1;
        v_A = 1;
        v_4 = 60;
        break;
    case 18:
        v_5/*"16"*/ = "U_FMM_1_2";
        v_9 = 1;
        v_A = 2;
        v_3 = 1;
        break;
    case 19:
        v_5/*"16"*/ = "U_FMM_1_3";
        v_9 = 1;
        v_A = 3;
        v_4 = 40;
        break;
    case 20:
        v_5/*"16"*/ = "U_FMM_1_4";
        v_9 = 1;
        v_A = 4;
        v_4 = 315;
        break;
    case 21:
        v_5/*"16"*/ = "U_FMM_1_5";
        v_9 = 1;
        v_A = 5;
        v_4 = 215;
        break;
    case 22:
        v_5/*"16"*/ = "U_FMM_1_6";
        v_9 = 1;
        v_A = 6;
        v_4 = 265;
        break;
    case 23:
        v_5/*"16"*/ = "U_FMM_1_7";
        v_9 = 1;
        v_A = 7;
        v_4 = 45;
        break;
    case 24:
        v_5/*"16"*/ = "U_FMM_1_8";
        v_9 = 1;
        v_A = 8;
        v_4 = 205;
        break;
    case 25:
        v_5/*"16"*/ = "U_FMM_1_9";
        v_9 = 1;
        v_A = 9;
        v_3 = 1;
        break;
    case 26:
        v_5/*"16"*/ = "U_FMM_1_10";
        v_9 = 1;
        v_A = 10;
        v_3 = 1;
        break;
    case 27:
        v_5/*"16"*/ = "U_FMM_1_11";
        v_9 = 1;
        v_A = 11;
        v_4 = 60;
        break;
    case 28:
        v_5/*"16"*/ = "U_FMM_1_12";
        v_9 = 1;
        v_A = 12;
        v_4 = 55;
        break;
    case 29:
        v_5/*"16"*/ = "U_FMM_1_13";
        v_9 = 1;
        v_A = 13;
        v_3 = 1;
        break;
    case 30:
        v_5/*"16"*/ = "U_FMM_1_14";
        v_9 = 1;
        v_A = 14;
        v_4 = 170;
        break;
    case 31:
        v_5/*"16"*/ = "U_FMM_1_15";
        v_9 = 1;
        v_A = 15;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 32:
        v_5/*"16"*/ = "U_FMM_0_0";
        v_9 = 2;
        v_A = 0;
        v_4 = 250;
        break;
    case 33:
        v_5/*"16"*/ = "U_FMM_0_1";
        v_9 = 2;
        v_A = 1;
        v_4 = 210;
        break;
    case 34:
        v_5/*"16"*/ = "U_FMM_0_2";
        v_9 = 2;
        v_A = 2;
        v_4 = 50;
        break;
    case 35:
        v_5/*"16"*/ = "U_FMM_0_3";
        v_9 = 2;
        v_A = 3;
        v_4 = 90;
        break;
    case 36:
        v_5/*"16"*/ = "U_FMM_0_4";
        v_9 = 2;
        v_A = 4;
        v_4 = 210;
        break;
    case 37:
        v_5/*"16"*/ = "U_FMM_0_5";
        v_9 = 2;
        v_A = 5;
        v_4 = 200;
        break;
    case 38:
        v_5/*"16"*/ = "U_FMM_0_6";
        v_9 = 2;
        v_A = 6;
        v_3 = 1;
        break;
    case 39:
        v_5/*"16"*/ = "U_FMM_0_7";
        v_9 = 2;
        v_A = 7;
        v_4 = 130;
        break;
    case 40:
        v_5/*"16"*/ = "U_FMM_0_8";
        v_9 = 2;
        v_A = 8;
        v_4 = 220;
        break;
    case 41:
        v_5/*"16"*/ = "U_FMM_0_9";
        v_9 = 2;
        v_A = 9;
        v_3 = 1;
        break;
    case 42:
        v_5/*"16"*/ = "U_FMM_0_10";
        v_9 = 2;
        v_A = 10;
        v_3 = 1;
        break;
    case 43:
        v_5/*"16"*/ = "U_FMM_0_11";
        v_9 = 2;
        v_A = 11;
        v_4 = 220;
        break;
    case 44:
        v_5/*"16"*/ = "U_FMM_0_12";
        v_9 = 2;
        v_A = 12;
        v_3 = 1;
        break;
    case 45:
        v_5/*"16"*/ = "U_FMM_0_13";
        v_9 = 2;
        v_A = 13;
        v_3 = 1;
        break;
    case 46:
        v_5/*"16"*/ = "U_FMM_0_14";
        v_9 = 2;
        v_A = 14;
        v_3 = 1;
        break;
    case 47:
        v_5/*"16"*/ = "U_FMM_0_15";
        v_9 = 2;
        v_A = 15;
        v_3 = 1;
        break;
    case 48:
        v_5/*"16"*/ = "SP_FMM_3_0";
        v_9 = 3;
        v_A = 0;
        if (g_40001._f104C != -1) {
            v_4 = g_40001._f104C;
        } else { 
            v_4 = 165;
        }
        break;
    case 49:
        v_5/*"16"*/ = "SP_FMM_3_1";
        v_9 = 3;
        v_A = 1;
        if (g_40001._f1054 != -1) {
            v_4 = g_40001._f1054;
        } else { 
            v_4 = 120;
        }
        break;
    case 50:
        v_5/*"16"*/ = "SP_FMM_3_2";
        v_9 = 3;
        v_A = 2;
        if (g_40001._f104F != -1) {
            v_4 = g_40001._f104F;
        } else { 
            v_4 = 115;
        }
        break;
    case 51:
        v_5/*"16"*/ = "SP_FMM_3_3";
        v_9 = 3;
        v_A = 3;
        v_3 = 1;
        break;
    case 52:
        v_5/*"16"*/ = "SP_FMM_3_4";
        v_9 = 3;
        v_A = 4;
        v_3 = 1;
        break;
    case 53:
        v_5/*"16"*/ = "SP_FMM_3_5";
        v_9 = 3;
        v_A = 5;
        v_3 = 1;
        break;
    case 54:
        v_5/*"16"*/ = "SP_FMM_3_6";
        v_9 = 3;
        v_A = 6;
        v_3 = 1;
        break;
    case 55:
        v_5/*"16"*/ = "SP_FMM_3_7";
        v_9 = 3;
        v_A = 7;
        v_3 = 1;
        break;
    case 56:
        v_5/*"16"*/ = "SP_FMM_3_8";
        v_9 = 3;
        v_A = 8;
        v_3 = 1;
        break;
    case 57:
        v_5/*"16"*/ = "SP_FMM_3_9";
        v_9 = 3;
        v_A = 9;
        v_3 = 1;
        break;
    case 58:
        v_5/*"16"*/ = "SP_FMM_3_10";
        v_9 = 3;
        v_A = 10;
        v_3 = 1;
        break;
    case 59:
        v_5/*"16"*/ = "SP_FMM_3_11";
        v_9 = 3;
        v_A = 11;
        v_3 = 1;
        break;
    case 60:
        v_5/*"16"*/ = "SP_FMM_3_12";
        v_9 = 3;
        v_A = 12;
        v_3 = 1;
        break;
    case 61:
        v_5/*"16"*/ = "SP_FMM_3_13";
        v_9 = 3;
        v_A = 13;
        v_3 = 1;
        break;
    case 62:
        v_5/*"16"*/ = "SP_FMM_3_14";
        v_9 = 3;
        v_A = 14;
        v_3 = 1;
        break;
    case 63:
        v_5/*"16"*/ = "SP_FMM_3_15";
        v_9 = 3;
        v_A = 15;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 64:
        v_5/*"16"*/ = "SP_FMM_3_0";
        v_9 = 4;
        v_A = 0;
        if (g_40001._f104C != -1) {
            v_4 = g_40001._f104C;
        } else { 
            v_4 = 165;
        }
        break;
    case 65:
        v_5/*"16"*/ = "SP_FMM_3_1";
        v_9 = 4;
        v_A = 1;
        if (g_40001._f1054 != -1) {
            v_4 = g_40001._f1054;
        } else { 
            v_4 = 120;
        }
        break;
    case 66:
        v_5/*"16"*/ = "SP_FMM_3_2";
        v_9 = 4;
        v_A = 2;
        if (g_40001._f104F != -1) {
            v_4 = g_40001._f104F;
        } else { 
            v_4 = 115;
        }
        break;
    case 67:
        v_5/*"16"*/ = "SP_FMM_3_3";
        v_9 = 4;
        v_A = 3;
        v_3 = 1;
        break;
    case 68:
        v_5/*"16"*/ = "SP_FMM_3_4";
        v_9 = 4;
        v_A = 4;
        v_3 = 1;
        break;
    case 69:
        v_5/*"16"*/ = "SP_FMM_3_5";
        v_9 = 4;
        v_A = 5;
        v_3 = 1;
        break;
    case 70:
        v_5/*"16"*/ = "SP_FMM_3_6";
        v_9 = 4;
        v_A = 6;
        v_3 = 1;
        break;
    case 71:
        v_5/*"16"*/ = "SP_FMM_3_7";
        v_9 = 4;
        v_A = 7;
        v_3 = 1;
        break;
    case 72:
        v_5/*"16"*/ = "SP_FMM_3_8";
        v_9 = 4;
        v_A = 8;
        v_3 = 1;
        break;
    case 73:
        v_5/*"16"*/ = "SP_FMM_3_9";
        v_9 = 4;
        v_A = 9;
        v_3 = 1;
        break;
    case 74:
        v_5/*"16"*/ = "SP_FMM_3_10";
        v_9 = 4;
        v_A = 10;
        v_3 = 1;
        break;
    case 75:
        v_5/*"16"*/ = "SP_FMM_3_11";
        v_9 = 4;
        v_A = 11;
        v_3 = 1;
        break;
    case 76:
        v_5/*"16"*/ = "SP_FMM_3_12";
        v_9 = 4;
        v_A = 12;
        v_3 = 1;
        break;
    case 77:
        v_5/*"16"*/ = "SP_FMM_3_13";
        v_9 = 4;
        v_A = 13;
        v_3 = 1;
        break;
    case 78:
        v_5/*"16"*/ = "SP_FMM_3_14";
        v_9 = 4;
        v_A = 14;
        v_3 = 1;
        break;
    case 79:
        v_5/*"16"*/ = "SP_FMM_3_15";
        v_9 = 4;
        v_A = 15;
        v_3 = 1;
        break;
    case 80:
        v_5/*"16"*/ = "U_FMM_5_0";
        v_9 = 5;
        v_A = 0;
        v_4 = 80;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[80/*1*/]);
        break;
    case 81:
        v_5/*"16"*/ = "U_FMM_5_1";
        v_9 = 5;
        v_A = 1;
        v_4 = 45;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[81/*1*/]);
        break;
    case 82:
        v_5/*"16"*/ = "U_FMM_5_2";
        v_9 = 5;
        v_A = 2;
        v_4 = 50;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[82/*1*/]);
        break;
    case 83:
        v_5/*"16"*/ = "U_FMM_5_3";
        v_9 = 5;
        v_A = 3;
        v_3 = 1;
        break;
    case 84:
        v_5/*"16"*/ = "U_FMM_5_4";
        v_9 = 5;
        v_A = 4;
        v_3 = 1;
        break;
    case 85:
        v_5/*"16"*/ = "U_FMM_5_5";
        v_9 = 5;
        v_A = 5;
        v_3 = 1;
        break;
    case 86:
        v_5/*"16"*/ = "U_FMM_5_6";
        v_9 = 5;
        v_A = 6;
        v_3 = 1;
        break;
    case 87:
        v_5/*"16"*/ = "U_FMM_5_7";
        v_9 = 5;
        v_A = 7;
        v_4 = 50;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[87/*1*/]);
        break;
    case 88:
        v_5/*"16"*/ = "U_FMM_5_8";
        v_9 = 5;
        v_A = 8;
        v_3 = 1;
        break;
    case 89:
        v_5/*"16"*/ = "U_FMM_5_9";
        v_9 = 5;
        v_A = 9;
        v_3 = 1;
        break;
    case 90:
        v_5/*"16"*/ = "U_FMM_5_10";
        v_9 = 5;
        v_A = 10;
        v_3 = 1;
        break;
    case 91:
        v_5/*"16"*/ = "U_FMM_5_11";
        v_9 = 5;
        v_A = 11;
        v_3 = 1;
        break;
    case 92:
        v_5/*"16"*/ = "U_FMM_5_12";
        v_9 = 5;
        v_A = 12;
        v_3 = 1;
        break;
    case 93:
        v_5/*"16"*/ = "U_FMM_5_13";
        v_9 = 5;
        v_A = 13;
        v_3 = 1;
        break;
    case 94:
        v_5/*"16"*/ = "U_FMM_5_14";
        v_9 = 5;
        v_A = 14;
        v_3 = 1;
        break;
    case 95:
        v_5/*"16"*/ = "U_FMM_5_15";
        v_9 = 5;
        v_A = 15;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 96:
        v_5/*"16"*/ = "SP_FMM_6_0";
        v_9 = 6;
        v_A = 0;
        if (g_40001._f1061 != -1) {
            v_4 = g_40001._f1061;
        } else { 
            v_4 = 420;
        }
        break;
    case 97:
        v_5/*"16"*/ = "SP_FMM_6_1";
        v_9 = 6;
        v_A = 1;
        if (g_40001._f105F != -1) {
            v_4 = g_40001._f105F;
        } else { 
            v_4 = 415;
        }
        break;
    case 98:
        v_5/*"16"*/ = "SP_FMM_6_2";
        v_9 = 6;
        v_A = 2;
        if (g_40001._f104B != -1) {
            v_4 = g_40001._f104B;
        } else { 
            v_4 = 440;
        }
        break;
    case 99:
        v_5/*"16"*/ = "SP_FMM_6_3";
        v_9 = 6;
        v_A = 3;
        if (g_40001._f1059 != -1) {
            v_4 = g_40001._f1059;
        } else { 
            v_4 = 400;
        }
        break;
    case 100:
        v_5/*"16"*/ = "SP_FMM_6_4";
        v_9 = 6;
        v_A = 4;
        if (g_40001._f104A != -1) {
            v_4 = g_40001._f104A;
        } else { 
            v_4 = 400;
        }
        break;
    case 101:
        v_5/*"16"*/ = "SP_FMM_6_5";
        v_9 = 6;
        v_A = 5;
        if (g_40001._f105B != -1) {
            v_4 = g_40001._f105B;
        } else { 
            v_4 = 410;
        }
        break;
    case 102:
        v_5/*"16"*/ = "SP_FMM_6_6";
        v_9 = 6;
        v_A = 6;
        if (g_40001._f105E != -1) {
            v_4 = g_40001._f105E;
        } else { 
            v_4 = 435;
        }
        break;
    case 103:
        v_5/*"16"*/ = "SP_FMM_6_7";
        v_9 = 6;
        v_A = 7;
        if (g_40001._f105A != -1) {
            v_4 = g_40001._f105A;
        } else { 
            v_4 = 425;
        }
        break;
    case 104:
        v_5/*"16"*/ = "SP_FMM_6_8";
        v_9 = 6;
        v_A = 8;
        if (g_40001._f1053 != -1) {
            v_4 = g_40001._f1053;
        } else { 
            v_4 = 435;
        }
        break;
    case 105:
        v_5/*"16"*/ = "SP_FMM_6_9";
        v_9 = 6;
        v_A = 9;
        if (g_40001._f1058 != -1) {
            v_4 = g_40001._f1058;
        } else { 
            v_4 = 420;
        }
        break;
    case 106:
        v_5/*"16"*/ = "SP_FMM_6_10";
        v_9 = 6;
        v_A = 10;
        if (g_40001._f1056 != -1) {
            v_4 = g_40001._f1056;
        } else { 
            v_4 = 425;
        }
        break;
    case 107:
        v_5/*"16"*/ = "SP_FMM_6_11";
        v_9 = 6;
        v_A = 11;
        if (g_40001._f1060 != -1) {
            v_4 = g_40001._f1060;
        } else { 
            v_4 = 425;
        }
        break;
    case 108:
        v_5/*"16"*/ = "SP_FMM_6_12";
        v_9 = 6;
        v_A = 12;
        if (g_40001._f1052 != -1) {
            v_4 = g_40001._f1052;
        } else { 
            v_4 = 435;
        }
        break;
    case 109:
        v_5/*"16"*/ = "SP_FMM_6_13";
        v_9 = 6;
        v_A = 13;
        if (g_40001._f104D != -1) {
            v_4 = g_40001._f104D;
        } else { 
            v_4 = 750;
        }
        break;
    case 110:
        v_5/*"16"*/ = "SP_FMM_6_14";
        v_9 = 6;
        v_A = 14;
        if (g_40001._f105C != -1) {
            v_4 = g_40001._f105C;
        } else { 
            v_4 = 400;
        }
        break;
    case 111:
        v_5/*"16"*/ = "SP_FMM_6_15";
        v_9 = 6;
        v_A = 15;
        if (g_40001._f1055 != -1) {
            v_4 = g_40001._f1055;
        } else { 
            v_4 = 435;
        }
        break;
    case 112:
        v_5/*"16"*/ = "SP_FMM_6_0";
        v_9 = 7;
        v_A = 0;
        if (g_40001._f1061 != -1) {
            v_4 = g_40001._f1061;
        } else { 
            v_4 = 420;
        }
        break;
    case 113:
        v_5/*"16"*/ = "SP_FMM_6_1";
        v_9 = 7;
        v_A = 1;
        if (g_40001._f105F != -1) {
            v_4 = g_40001._f105F;
        } else { 
            v_4 = 415;
        }
        break;
    case 114:
        v_5/*"16"*/ = "SP_FMM_6_2";
        v_9 = 7;
        v_A = 2;
        if (g_40001._f104B != -1) {
            v_4 = g_40001._f104B;
        } else { 
            v_4 = 440;
        }
        break;
    case 115:
        v_5/*"16"*/ = "SP_FMM_6_3";
        v_9 = 7;
        v_A = 3;
        if (g_40001._f1059 != -1) {
            v_4 = g_40001._f1059;
        } else { 
            v_4 = 400;
        }
        break;
    case 116:
        v_5/*"16"*/ = "SP_FMM_6_4";
        v_9 = 7;
        v_A = 4;
        if (g_40001._f104A != -1) {
            v_4 = g_40001._f104A;
        } else { 
            v_4 = 400;
        }
        break;
    case 117:
        v_5/*"16"*/ = "SP_FMM_6_5";
        v_9 = 7;
        v_A = 5;
        if (g_40001._f105B != -1) {
            v_4 = g_40001._f105B;
        } else { 
            v_4 = 410;
        }
        break;
    case 118:
        v_5/*"16"*/ = "SP_FMM_6_6";
        v_9 = 7;
        v_A = 6;
        if (g_40001._f105E != -1) {
            v_4 = g_40001._f105E;
        } else { 
            v_4 = 435;
        }
        break;
    case 119:
        v_5/*"16"*/ = "SP_FMM_6_7";
        v_9 = 7;
        v_A = 7;
        if (g_40001._f105A != -1) {
            v_4 = g_40001._f105A;
        } else { 
            v_4 = 425;
        }
        break;
    case 120:
        v_5/*"16"*/ = "SP_FMM_6_8";
        v_9 = 7;
        v_A = 8;
        if (g_40001._f1053 != -1) {
            v_4 = g_40001._f1053;
        } else { 
            v_4 = 435;
        }
        break;
    case 121:
        v_5/*"16"*/ = "SP_FMM_6_9";
        v_9 = 7;
        v_A = 9;
        if (g_40001._f1058 != -1) {
            v_4 = g_40001._f1058;
        } else { 
            v_4 = 420;
        }
        break;
    case 122:
        v_5/*"16"*/ = "SP_FMM_6_10";
        v_9 = 7;
        v_A = 10;
        if (g_40001._f1056 != -1) {
            v_4 = g_40001._f1056;
        } else { 
            v_4 = 425;
        }
        break;
    case 123:
        v_5/*"16"*/ = "SP_FMM_6_11";
        v_9 = 7;
        v_A = 11;
        if (g_40001._f1060 != -1) {
            v_4 = g_40001._f1060;
        } else { 
            v_4 = 425;
        }
        break;
    case 124:
        v_5/*"16"*/ = "SP_FMM_6_12";
        v_9 = 7;
        v_A = 12;
        if (g_40001._f1052 != -1) {
            v_4 = g_40001._f1052;
        } else { 
            v_4 = 435;
        }
        break;
    case 125:
        v_5/*"16"*/ = "SP_FMM_6_13";
        v_9 = 7;
        v_A = 13;
        if (g_40001._f104D != -1) {
            v_4 = g_40001._f104D;
        } else { 
            v_4 = 750;
        }
        break;
    case 126:
        v_5/*"16"*/ = "SP_FMM_6_14";
        v_9 = 7;
        v_A = 14;
        if (g_40001._f105C != -1) {
            v_4 = g_40001._f105C;
        } else { 
            v_4 = 400;
        }
        break;
    case 127:
        v_5/*"16"*/ = "SP_FMM_6_15";
        v_9 = 7;
        v_A = 15;
        if (g_40001._f1055 != -1) {
            v_4 = g_40001._f1055;
        } else { 
            v_4 = 435;
        }
        break;
    }
    switch (a_0) {
    case 128:
        v_5/*"16"*/ = "U_FMM_8_0";
        v_9 = 8;
        v_A = 0;
        v_4 = 45;
        break;
    case 129:
        v_5/*"16"*/ = "U_FMM_8_1";
        v_9 = 8;
        v_A = 1;
        v_3 = 1;
        break;
    case 130:
        v_5/*"16"*/ = "U_FMM_8_2";
        v_9 = 8;
        v_A = 2;
        v_3 = 1;
        break;
    case 131:
        v_5/*"16"*/ = "U_FMM_8_3";
        v_9 = 8;
        v_A = 3;
        v_3 = 1;
        break;
    case 132:
        v_5/*"16"*/ = "U_FMM_8_4";
        v_9 = 8;
        v_A = 4;
        v_3 = 1;
        break;
    case 133:
        v_5/*"16"*/ = "U_FMM_8_5";
        v_9 = 8;
        v_A = 5;
        v_3 = 1;
        break;
    case 134:
        v_5/*"16"*/ = "U_FMM_8_6";
        v_9 = 8;
        v_A = 6;
        v_3 = 1;
        break;
    case 135:
        v_5/*"16"*/ = "U_FMM_8_7";
        v_9 = 8;
        v_A = 7;
        v_3 = 1;
        break;
    case 136:
        v_5/*"16"*/ = "U_FMM_8_8";
        v_9 = 8;
        v_A = 8;
        v_3 = 1;
        break;
    case 137:
        v_5/*"16"*/ = "U_FMM_8_9";
        v_9 = 8;
        v_A = 9;
        v_3 = 1;
        break;
    case 138:
        v_5/*"16"*/ = "U_FMM_8_10";
        v_9 = 8;
        v_A = 10;
        v_4 = 65;
        break;
    case 139:
        v_5/*"16"*/ = "U_FMM_8_11";
        v_9 = 8;
        v_A = 11;
        v_3 = 1;
        break;
    case 140:
        v_5/*"16"*/ = "U_FMM_8_12";
        v_9 = 8;
        v_A = 12;
        v_3 = 1;
        break;
    case 141:
        v_5/*"16"*/ = "U_FMM_8_13";
        v_9 = 8;
        v_A = 13;
        v_4 = 40;
        break;
    case 142:
        v_5/*"16"*/ = "U_FMM_8_14";
        v_9 = 8;
        v_A = 14;
        v_4 = 45;
        break;
    case 143:
        v_5/*"16"*/ = "U_FMM_8_15";
        v_9 = 8;
        v_A = 15;
        v_3 = 1;
        break;
    case 144:
        v_5/*"16"*/ = "U_FMM_9_0";
        v_9 = 9;
        v_A = 0;
        v_4 = 265;
        break;
    case 145:
        v_5/*"16"*/ = "U_FMM_9_1";
        v_9 = 9;
        v_A = 1;
        v_4 = 340;
        break;
    case 146:
        v_5/*"16"*/ = "U_FMM_9_2";
        v_9 = 9;
        v_A = 2;
        v_4 = 335;
        break;
    case 147:
        v_5/*"16"*/ = "U_FMM_9_3";
        v_9 = 9;
        v_A = 3;
        v_4 = 330;
        break;
    case 148:
        v_5/*"16"*/ = "U_FMM_9_4";
        v_9 = 9;
        v_A = 4;
        v_4 = 345;
        break;
    case 149:
        v_5/*"16"*/ = "U_FMM_9_5";
        v_9 = 9;
        v_A = 5;
        v_4 = 550;
        break;
    case 150:
        v_5/*"16"*/ = "U_FMM_9_6";
        v_9 = 9;
        v_A = 6;
        v_4 = 340;
        break;
    case 151:
        v_5/*"16"*/ = "U_FMM_9_7";
        v_9 = 9;
        v_A = 7;
        v_4 = 295;
        break;
    case 152:
        v_5/*"16"*/ = "U_FMM_9_8";
        v_9 = 9;
        v_A = 8;
        v_3 = 1;
        break;
    case 153:
        v_5/*"16"*/ = "U_FMM_9_9";
        v_9 = 9;
        v_A = 9;
        v_3 = 1;
        break;
    case 154:
        v_5/*"16"*/ = "U_FMM_9_10";
        v_9 = 9;
        v_A = 10;
        v_4 = 545;
        break;
    case 155:
        v_5/*"16"*/ = "U_FMM_9_11";
        v_9 = 9;
        v_A = 11;
        v_4 = 345;
        break;
    case 156:
        v_5/*"16"*/ = "U_FMM_9_12";
        v_9 = 9;
        v_A = 12;
        v_4 = 315;
        break;
    case 157:
        v_5/*"16"*/ = "U_FMM_9_13";
        v_9 = 9;
        v_A = 13;
        v_4 = 520;
        break;
    case 158:
        v_5/*"16"*/ = "U_FMM_9_14";
        v_9 = 9;
        v_A = 14;
        v_4 = 325;
        break;
    case 159:
        v_5/*"16"*/ = "U_FMM_9_15";
        v_9 = 9;
        v_A = 15;
        v_4 = 330;
        break;
    }
    switch (a_0) {
    case 160:
        v_5/*"16"*/ = "SP_FMM_10_0";
        v_9 = 10;
        v_A = 0;
        if (g_40001._f1061 != -1) {
            v_4 = g_40001._f1061;
        } else { 
            v_4 = 405;
        }
        break;
    case 161:
        v_5/*"16"*/ = "SP_FMM_10_1";
        v_9 = 10;
        v_A = 1;
        if (g_40001._f105F != -1) {
            v_4 = g_40001._f105F;
        } else { 
            v_4 = 400;
        }
        break;
    case 162:
        v_5/*"16"*/ = "SP_FMM_10_2";
        v_9 = 10;
        v_A = 2;
        if (g_40001._f1051 != -1) {
            v_4 = g_40001._f1051;
        } else { 
            v_4 = 425;
        }
        break;
    case 163:
        v_5/*"16"*/ = "SP_FMM_10_3";
        v_9 = 10;
        v_A = 3;
        if (g_40001._f1059 != -1) {
            v_4 = g_40001._f1059;
        } else { 
            v_4 = 385;
        }
        break;
    case 164:
        v_5/*"16"*/ = "SP_FMM_10_4";
        v_9 = 10;
        v_A = 4;
        if (g_40001._f104A != -1) {
            v_4 = g_40001._f104A;
        } else { 
            v_4 = 385;
        }
        break;
    case 165:
        v_5/*"16"*/ = "SP_FMM_10_5";
        v_9 = 10;
        v_A = 5;
        if (g_40001._f105B != -1) {
            v_4 = g_40001._f105B;
        } else { 
            v_4 = 395;
        }
        break;
    case 166:
        v_5/*"16"*/ = "SP_FMM_10_6";
        v_9 = 10;
        v_A = 6;
        if (g_40001._f1050 != -1) {
            v_4 = g_40001._f1050;
        } else { 
            v_4 = 500;
        }
        break;
    case 167:
        v_5/*"16"*/ = "SP_FMM_10_7";
        v_9 = 10;
        v_A = 7;
        if (g_40001._f105E != -1) {
            v_4 = g_40001._f105E;
        } else { 
            v_4 = 420;
        }
        break;
    case 168:
        v_5/*"16"*/ = "SP_FMM_10_8";
        v_9 = 10;
        v_A = 8;
        if (g_40001._f105A != -1) {
            v_4 = g_40001._f105A;
        } else { 
            v_4 = 410;
        }
        break;
    case 169:
        v_5/*"16"*/ = "SP_FMM_10_9";
        v_9 = 10;
        v_A = 9;
        if (g_40001._f1053 != -1) {
            v_4 = g_40001._f1053;
        } else { 
            v_4 = 420;
        }
        break;
    case 170:
        v_5/*"16"*/ = "SP_FMM_10_10";
        v_9 = 10;
        v_A = 10;
        if (g_40001._f1058 != -1) {
            v_4 = g_40001._f1058;
        } else { 
            v_4 = 405;
        }
        break;
    case 171:
        v_5/*"16"*/ = "SP_FMM_10_11";
        v_9 = 10;
        v_A = 11;
        if (g_40001._f1056 != -1) {
            v_4 = g_40001._f1056;
        } else { 
            v_4 = 410;
        }
        break;
    case 172:
        v_5/*"16"*/ = "SP_FMM_10_12";
        v_9 = 10;
        v_A = 12;
        if (g_40001._f104E != -1) {
            v_4 = g_40001._f104E;
        } else { 
            v_4 = 420;
        }
        break;
    case 173:
        v_5/*"16"*/ = "SP_FMM_10_13";
        v_9 = 10;
        v_A = 13;
        if (g_40001._f105D != -1) {
            v_4 = g_40001._f105D;
        } else { 
            v_4 = 420;
        }
        break;
    case 174:
        v_5/*"16"*/ = "SP_FMM_10_14";
        v_9 = 10;
        v_A = 14;
        if (g_40001._f1060 != -1) {
            v_4 = g_40001._f1060;
        } else { 
            v_4 = 410;
        }
        break;
    case 175:
        v_5/*"16"*/ = "SP_FMM_10_15";
        v_9 = 10;
        v_A = 15;
        if (g_40001._f1057 != -1) {
            v_4 = g_40001._f1057;
        } else { 
            v_4 = 460;
        }
        break;
    case 176:
        v_5/*"16"*/ = "SP_FMM_10_0";
        v_9 = 11;
        v_A = 0;
        if (g_40001._f1061 != -1) {
            v_4 = g_40001._f1061;
        } else { 
            v_4 = 405;
        }
        break;
    case 177:
        v_5/*"16"*/ = "SP_FMM_10_1";
        v_9 = 11;
        v_A = 1;
        if (g_40001._f105F != -1) {
            v_4 = g_40001._f105F;
        } else { 
            v_4 = 400;
        }
        break;
    case 178:
        v_5/*"16"*/ = "SP_FMM_10_2";
        v_9 = 11;
        v_A = 2;
        if (g_40001._f1051 != -1) {
            v_4 = g_40001._f1051;
        } else { 
            v_4 = 425;
        }
        break;
    case 179:
        v_5/*"16"*/ = "SP_FMM_10_3";
        v_9 = 11;
        v_A = 3;
        if (g_40001._f1059 != -1) {
            v_4 = g_40001._f1059;
        } else { 
            v_4 = 385;
        }
        break;
    case 180:
        v_5/*"16"*/ = "SP_FMM_10_4";
        v_9 = 11;
        v_A = 4;
        if (g_40001._f104A != -1) {
            v_4 = g_40001._f104A;
        } else { 
            v_4 = 385;
        }
        break;
    case 181:
        v_5/*"16"*/ = "SP_FMM_10_5";
        v_9 = 11;
        v_A = 5;
        if (g_40001._f105B != -1) {
            v_4 = g_40001._f105B;
        } else { 
            v_4 = 395;
        }
        break;
    case 182:
        v_5/*"16"*/ = "SP_FMM_10_6";
        v_9 = 11;
        v_A = 6;
        if (g_40001._f1050 != -1) {
            v_4 = g_40001._f1050;
        } else { 
            v_4 = 500;
        }
        break;
    case 183:
        v_5/*"16"*/ = "SP_FMM_10_7";
        v_9 = 11;
        v_A = 7;
        if (g_40001._f105E != -1) {
            v_4 = g_40001._f105E;
        } else { 
            v_4 = 420;
        }
        break;
    case 184:
        v_5/*"16"*/ = "SP_FMM_10_8";
        v_9 = 11;
        v_A = 8;
        if (g_40001._f105A != -1) {
            v_4 = g_40001._f105A;
        } else { 
            v_4 = 410;
        }
        break;
    case 185:
        v_5/*"16"*/ = "SP_FMM_10_9";
        v_9 = 11;
        v_A = 9;
        if (g_40001._f1053 != -1) {
            v_4 = g_40001._f1053;
        } else { 
            v_4 = 420;
        }
        break;
    case 186:
        v_5/*"16"*/ = "SP_FMM_10_10";
        v_9 = 11;
        v_A = 10;
        if (g_40001._f1058 != -1) {
            v_4 = g_40001._f1058;
        } else { 
            v_4 = 405;
        }
        break;
    case 187:
        v_5/*"16"*/ = "SP_FMM_10_11";
        v_9 = 11;
        v_A = 11;
        if (g_40001._f1056 != -1) {
            v_4 = g_40001._f1056;
        } else { 
            v_4 = 410;
        }
        break;
    case 188:
        v_5/*"16"*/ = "SP_FMM_10_12";
        v_9 = 11;
        v_A = 12;
        if (g_40001._f104E != -1) {
            v_4 = g_40001._f104E;
        } else { 
            v_4 = 420;
        }
        break;
    case 189:
        v_5/*"16"*/ = "SP_FMM_10_13";
        v_9 = 11;
        v_A = 13;
        if (g_40001._f105D != -1) {
            v_4 = g_40001._f105D;
        } else { 
            v_4 = 420;
        }
        break;
    case 190:
        v_5/*"16"*/ = "SP_FMM_10_14";
        v_9 = 11;
        v_A = 14;
        if (g_40001._f1060 != -1) {
            v_4 = g_40001._f1060;
        } else { 
            v_4 = 410;
        }
        break;
    case 191:
        v_5/*"16"*/ = "SP_FMM_10_15";
        v_9 = 11;
        v_A = 15;
        if (g_40001._f1057 != -1) {
            v_4 = g_40001._f1057;
        } else { 
            v_4 = 460;
        }
        break;
    }
    switch (a_0) {
    case 192:
        v_5/*"16"*/ = "U_FMM_12_0";
        v_9 = 12;
        v_A = 0;
        v_4 = 420;
        break;
    case 193:
        v_5/*"16"*/ = "U_FMM_12_1";
        v_9 = 12;
        v_A = 1;
        v_4 = 415;
        break;
    case 194:
        v_5/*"16"*/ = "U_FMM_12_2";
        v_9 = 12;
        v_A = 2;
        v_4 = 695;
        break;
    case 195:
        v_5/*"16"*/ = "U_FMM_12_3";
        v_9 = 12;
        v_A = 3;
        v_4 = 385;
        break;
    case 196:
        v_5/*"16"*/ = "U_FMM_12_4";
        v_9 = 12;
        v_A = 4;
        v_4 = 330;
        break;
    case 197:
        v_5/*"16"*/ = "U_FMM_12_5";
        v_9 = 12;
        v_A = 5;
        v_4 = 345;
        break;
    case 198:
        v_5/*"16"*/ = "U_FMM_12_6";
        v_9 = 12;
        v_A = 6;
        v_4 = 340;
        break;
    case 199:
        v_5/*"16"*/ = "U_FMM_12_7";
        v_9 = 12;
        v_A = 7;
        v_4 = 450;
        break;
    case 200:
        v_5/*"16"*/ = "U_FMM_12_8";
        v_9 = 12;
        v_A = 8;
        v_4 = 295;
        break;
    case 201:
        v_5/*"16"*/ = "U_FMM_12_9";
        v_9 = 12;
        v_A = 9;
        v_4 = 340;
        break;
    case 202:
        v_5/*"16"*/ = "U_FMM_12_10";
        v_9 = 12;
        v_A = 10;
        v_4 = 1060;
        break;
    case 203:
        v_5/*"16"*/ = "U_FMM_12_11";
        v_9 = 12;
        v_A = 11;
        v_4 = 1040;
        break;
    case 204:
        v_5/*"16"*/ = "U_FMM_12_12";
        v_9 = 12;
        v_A = 12;
        v_3 = 1;
        break;
    case 205:
        v_5/*"16"*/ = "U_FMM_12_13";
        v_9 = 12;
        v_A = 13;
        v_3 = 1;
        break;
    case 206:
        v_5/*"16"*/ = "U_FMM_12_14";
        v_9 = 12;
        v_A = 14;
        v_3 = 1;
        break;
    case 207:
        v_5/*"16"*/ = "U_FMM_12_15";
        v_9 = 12;
        v_A = 15;
        v_3 = 1;
        break;
    case 208:
        v_5/*"16"*/ = "U_FMM_13_0";
        v_9 = 13;
        v_A = 0;
        v_4 = 420;
        break;
    case 209:
        v_5/*"16"*/ = "U_FMM_13_1";
        v_9 = 13;
        v_A = 1;
        v_4 = 415;
        break;
    case 210:
        v_5/*"16"*/ = "U_FMM_13_2";
        v_9 = 13;
        v_A = 2;
        v_4 = 680;
        break;
    case 211:
        v_5/*"16"*/ = "U_FMM_13_3";
        v_9 = 13;
        v_A = 3;
        v_4 = 385;
        break;
    case 212:
        v_5/*"16"*/ = "U_FMM_13_4";
        v_9 = 13;
        v_A = 4;
        v_3 = 1;
        break;
    case 213:
        v_5/*"16"*/ = "U_FMM_13_5";
        v_9 = 13;
        v_A = 5;
        v_4 = 345;
        break;
    case 214:
        v_5/*"16"*/ = "U_FMM_13_6";
        v_9 = 13;
        v_A = 6;
        v_3 = 1;
        break;
    case 215:
        v_5/*"16"*/ = "U_FMM_13_7";
        v_9 = 13;
        v_A = 7;
        v_3 = 1;
        break;
    case 216:
        v_5/*"16"*/ = "U_FMM_13_8";
        v_9 = 13;
        v_A = 8;
        v_3 = 1;
        break;
    case 217:
        v_5/*"16"*/ = "U_FMM_13_9";
        v_9 = 13;
        v_A = 9;
        v_3 = 1;
        break;
    case 218:
        v_5/*"16"*/ = "U_FMM_13_10";
        v_9 = 13;
        v_A = 10;
        v_3 = 1;
        break;
    case 219:
        v_5/*"16"*/ = "U_FMM_13_11";
        v_9 = 13;
        v_A = 11;
        v_3 = 1;
        break;
    case 220:
        v_5/*"16"*/ = "U_FMM_13_12";
        v_9 = 13;
        v_A = 12;
        v_3 = 1;
        break;
    case 221:
        v_5/*"16"*/ = "U_FMM_13_13";
        v_9 = 13;
        v_A = 13;
        v_4 = 1065;
        break;
    case 222:
        v_5/*"16"*/ = "U_FMM_13_14";
        v_9 = 13;
        v_A = 14;
        v_3 = 1;
        break;
    case 223:
        v_5/*"16"*/ = "U_FMM_13_15";
        v_9 = 13;
        v_A = 15;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 224:
        v_5/*"16"*/ = "U_FMM_1_0";
        v_9 = 14;
        v_A = 0;
        v_4 = 45;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[16/*1*/]);
        break;
    case 225:
        v_5/*"16"*/ = "U_FMM_1_1";
        v_9 = 14;
        v_A = 1;
        v_4 = 60;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[17/*1*/]);
        break;
    case 226:
        v_5/*"16"*/ = "U_FMM_1_2";
        v_9 = 14;
        v_A = 2;
        v_3 = 1;
        break;
    case 227:
        v_5/*"16"*/ = "U_FMM_1_3";
        v_9 = 14;
        v_A = 3;
        v_4 = 40;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[19/*1*/]);
        break;
    case 228:
        v_5/*"16"*/ = "U_FMM_1_4";
        v_9 = 14;
        v_A = 4;
        v_4 = 315;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[20/*1*/]);
        break;
    case 229:
        v_5/*"16"*/ = "U_FMM_1_5";
        v_9 = 14;
        v_A = 5;
        v_4 = 215;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[21/*1*/]);
        break;
    case 230:
        v_5/*"16"*/ = "U_FMM_1_6";
        v_9 = 14;
        v_A = 6;
        v_4 = 265;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[22/*1*/]);
        break;
    case 231:
        v_5/*"16"*/ = "U_FMM_1_7";
        v_9 = 14;
        v_A = 7;
        v_4 = 45;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[23/*1*/]);
        break;
    case 232:
        v_5/*"16"*/ = "U_FMM_1_8";
        v_9 = 14;
        v_A = 8;
        v_4 = 205;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[24/*1*/]);
        break;
    case 233:
        v_5/*"16"*/ = "U_FMM_1_9";
        v_9 = 14;
        v_A = 9;
        v_3 = 1;
        break;
    case 234:
        v_5/*"16"*/ = "U_FMM_1_10";
        v_9 = 14;
        v_A = 10;
        v_3 = 1;
        break;
    case 235:
        v_5/*"16"*/ = "U_FMM_1_11";
        v_9 = 14;
        v_A = 11;
        v_4 = 60;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[27/*1*/]);
        break;
    case 236:
        v_5/*"16"*/ = "U_FMM_1_12";
        v_9 = 14;
        v_A = 12;
        v_4 = 55;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[28/*1*/]);
        break;
    case 237:
        v_5/*"16"*/ = "U_FMM_1_13";
        v_9 = 14;
        v_A = 13;
        v_3 = 1;
        break;
    case 238:
        v_5/*"16"*/ = "U_FMM_1_14";
        v_9 = 14;
        v_A = 14;
        v_4 = 170;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[30/*1*/]);
        break;
    case 239:
        v_5/*"16"*/ = "U_FMM_1_15";
        v_9 = 14;
        v_A = 15;
        v_3 = 1;
        break;
    case 240:
        v_5/*"16"*/ = "U_FMM_15_0";
        v_9 = 15;
        v_A = 0;
        v_4 = 0;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[32/*1*/]);
        break;
    }
    if ((a_0 == 23) || (a_0 == 231)) {
        if (sub_44537(89, -1)) {
            v_5/*"16"*/ = "REW_RS";
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(1250) * g_40001._fB9D);
        } else { 
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(45) * g_40001._f1AC[23/*1*/]);
        }
    } else if ((a_0 == 17) || (a_0 == 225)) {
        if (sub_44537(88, -1)) {
            v_5/*"16"*/ = "REW_LSB";
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(450) * g_40001._fB9C);
        } else { 
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(60) * g_40001._f1AC[17/*1*/]);
        }
    } else if ((a_0 == 28) || (a_0 == 236)) {
        if (sub_44537(87, -1)) {
            v_5/*"16"*/ = "REW_REDSK";
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(500) * g_40001._fB9B);
        } else { 
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(55) * g_40001._f1AC[28/*1*/]);
        }
    } else if ((a_0 >= 0) && (a_0 < 32)) {
        v_E = a_0;
        if ((v_E >= 0) && (v_E < 237)) {
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[v_E/*1*/]);
        }
    } else if ((a_0 >= 32) && (a_0 < 48)) {
        v_F = a_0 - 32;
        if ((v_F >= 0) && (v_F < 237)) {
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[v_F/*1*/]);
        }
    } else if ((a_0 >= 128) && (a_0 < 160)) {
        v_10 = (a_0 - 160) + 124;
        if ((v_10 >= 0) && (v_10 < 237)) {
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[v_10/*1*/]);
        }
    } else if ((a_0 >= 192) && (a_0 < 224)) {
        v_11 = (a_0 - 160) + 188;
        if ((v_11 >= 0) && (v_11 < 237)) {
            v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[v_11/*1*/]);
        }
    }
    v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_42DD3._f10);
    if (a_0 >= 241) {
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 241);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f10);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_5043a(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 11;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 250;
        break;
    case 1:
        v_9 = 0;
        v_A = 1;
        v_4 = 210;
        break;
    case 2:
        v_9 = 0;
        v_A = 2;
        v_4 = 50;
        break;
    case 3:
        v_9 = 0;
        v_A = 3;
        v_4 = 90;
        break;
    case 4:
        v_9 = 0;
        v_A = 4;
        v_4 = 210;
        break;
    case 5:
        v_9 = 0;
        v_A = 5;
        v_4 = 200;
        break;
    case 6:
        v_9 = 0;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 7:
        v_9 = 0;
        v_A = 7;
        v_4 = 130;
        break;
    case 8:
        v_9 = 0;
        v_A = 8;
        v_4 = 220;
        break;
    case 9:
        v_9 = 0;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 10:
        v_9 = 0;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 11:
        v_9 = 0;
        v_A = 11;
        v_4 = 220;
        break;
    case 12:
        v_9 = 0;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 13:
        v_9 = 0;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 14:
        v_9 = 0;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 15:
        v_9 = 0;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 16:
        v_9 = 1;
        v_A = 0;
        v_4 = 45;
        break;
    case 17:
        v_9 = 1;
        v_A = 1;
        v_4 = 60;
        break;
    case 18:
        v_9 = 1;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 19:
        v_9 = 1;
        v_A = 3;
        v_4 = 40;
        break;
    case 20:
        v_9 = 1;
        v_A = 4;
        v_4 = 315;
        break;
    case 21:
        v_9 = 1;
        v_A = 5;
        v_4 = 215;
        break;
    case 22:
        v_9 = 1;
        v_A = 6;
        v_4 = 265;
        break;
    case 23:
        v_9 = 1;
        v_A = 7;
        v_4 = 45;
        break;
    case 24:
        v_9 = 1;
        v_A = 8;
        v_4 = 205;
        break;
    case 25:
        v_9 = 1;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 26:
        v_9 = 1;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 27:
        v_9 = 1;
        v_A = 11;
        v_4 = 60;
        break;
    case 28:
        v_9 = 1;
        v_A = 12;
        v_4 = 55;
        break;
    case 29:
        v_9 = 1;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 30:
        v_9 = 1;
        v_A = 14;
        v_4 = 170;
        break;
    case 31:
        v_9 = 1;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 32:
        v_9 = 2;
        v_A = 0;
        v_4 = 0;
        v_3 = 1;
        break;
    case 33:
        v_9 = 2;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 34:
        v_9 = 2;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 35:
        v_9 = 2;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 36:
        v_9 = 2;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 37:
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 38:
        v_9 = 2;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 39:
        v_9 = 2;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 40:
        v_9 = 2;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 41:
        v_9 = 2;
        v_A = 9;
        v_4 = 160;
        break;
    case 42:
        v_9 = 2;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 43:
        v_9 = 2;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 44:
        v_9 = 2;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 45:
        v_9 = 2;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 46:
        v_9 = 2;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 47:
        v_9 = 2;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 48:
        v_9 = 3;
        v_A = 0;
        v_4 = 205;
        break;
    case 49:
        v_9 = 3;
        v_A = 1;
        v_4 = 110;
        break;
    case 50:
        v_9 = 3;
        v_A = 2;
        v_4 = 150;
        break;
    case 51:
        v_9 = 3;
        v_A = 3;
        v_4 = 115;
        break;
    case 52:
        v_9 = 3;
        v_A = 4;
        v_4 = 115;
        break;
    case 53:
        v_9 = 3;
        v_A = 5;
        v_4 = 150;
        break;
    case 54:
        v_9 = 3;
        v_A = 6;
        v_4 = 150;
        break;
    case 55:
        v_9 = 3;
        v_A = 7;
        v_4 = 115;
        break;
    case 56:
        v_9 = 3;
        v_A = 8;
        v_4 = 140;
        break;
    case 57:
        v_9 = 3;
        v_A = 9;
        v_4 = 125;
        break;
    case 58:
        v_9 = 3;
        v_A = 10;
        v_4 = 115;
        break;
    case 59:
        v_9 = 3;
        v_A = 11;
        v_4 = 150;
        break;
    case 60:
        v_9 = 3;
        v_A = 12;
        v_4 = 150;
        break;
    case 61:
        v_9 = 3;
        v_A = 13;
        v_4 = 275;
        break;
    case 62:
        v_9 = 3;
        v_A = 14;
        v_4 = 460;
        break;
    case 63:
        v_9 = 3;
        v_A = 15;
        v_4 = 260;
        break;
    }
    switch (a_0) {
    case 64:
        v_9 = 4;
        v_A = 0;
        v_4 = 965;
        break;
    case 65:
        v_9 = 4;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 66:
        v_9 = 4;
        v_A = 2;
        v_4 = 2520;
        break;
    case 67:
        v_9 = 4;
        v_A = 3;
        v_4 = 350;
        break;
    case 68:
        v_9 = 4;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 69:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 70:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 71:
        v_9 = 4;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 72:
        v_9 = 4;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 73:
        v_9 = 4;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 74:
        v_9 = 4;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 75:
        v_9 = 4;
        v_A = 11;
        v_4 = 150;
        break;
    case 76:
        v_9 = 4;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 77:
        v_9 = 4;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 78:
        v_9 = 4;
        v_A = 14;
        v_4 = 3125;
        break;
    case 79:
        v_9 = 4;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 80:
        v_9 = 5;
        v_A = 0;
        v_4 = 80;
        break;
    case 81:
        v_9 = 5;
        v_A = 1;
        v_4 = 45;
        break;
    case 82:
        v_9 = 5;
        v_A = 2;
        v_4 = 50;
        break;
    case 83:
        v_9 = 5;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 84:
        v_9 = 5;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 85:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 86:
        v_9 = 5;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 87:
        v_9 = 5;
        v_A = 7;
        v_4 = 50;
        break;
    case 88:
        v_9 = 5;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 89:
        v_9 = 5;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 90:
        v_9 = 5;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 91:
        v_9 = 5;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 92:
        v_9 = 5;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 93:
        v_9 = 5;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 94:
        v_9 = 5;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 95:
        v_9 = 5;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 96:
        v_9 = 6;
        v_A = 0;
        v_4 = 2485;
        break;
    case 97:
        v_9 = 6;
        v_A = 1;
        v_4 = 535;
        break;
    case 98:
        v_9 = 6;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 99:
        v_9 = 6;
        v_A = 3;
        v_4 = 2945;
        break;
    case 100:
        v_9 = 6;
        v_A = 4;
        v_4 = 3080;
        break;
    case 101:
        v_9 = 6;
        v_A = 5;
        v_4 = 2990;
        break;
    case 102:
        v_9 = 6;
        v_A = 6;
        v_4 = 3750;
        break;
    case 103:
        v_9 = 6;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 104:
        v_9 = 6;
        v_A = 8;
        v_4 = 515;
        break;
    case 105:
        v_9 = 6;
        v_A = 9;
        v_4 = 530;
        break;
    case 106:
        v_9 = 6;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 107:
        v_9 = 6;
        v_A = 11;
        v_4 = 2810;
        break;
    case 108:
        v_9 = 7;
        v_A = 0;
        v_4 = 150;
        break;
    case 109:
        v_9 = 7;
        v_A = 1;
        v_4 = 155;
        break;
    case 110:
        v_9 = 7;
        v_A = 2;
        v_4 = 320;
        break;
    case 111:
        v_9 = 7;
        v_A = 3;
        v_4 = 140;
        break;
    case 112:
        v_9 = 7;
        v_A = 4;
        v_4 = 150;
        break;
    case 113:
        v_9 = 7;
        v_A = 5;
        v_4 = 145;
        break;
    case 114:
        v_9 = 7;
        v_A = 6;
        v_4 = 150;
        break;
    case 115:
        v_9 = 7;
        v_A = 7;
        v_4 = 140;
        break;
    case 116:
        v_9 = 7;
        v_A = 8;
        v_4 = 135;
        break;
    case 117:
        v_9 = 7;
        v_A = 9;
        v_4 = 130;
        break;
    case 118:
        v_9 = 7;
        v_A = 10;
        v_4 = 130;
        break;
    case 119:
        v_9 = 7;
        v_A = 11;
        v_4 = 150;
        break;
    case 120:
        v_9 = 7;
        v_A = 12;
        v_4 = 145;
        break;
    case 121:
        v_9 = 7;
        v_A = 13;
        v_4 = 740;
        break;
    case 122:
        v_9 = 7;
        v_A = 14;
        v_4 = 790;
        break;
    case 123:
        v_9 = 7;
        v_A = 15;
        v_4 = 130;
        break;
    }
    switch (a_0) {
    case 124:
        v_9 = 8;
        v_A = 0;
        v_4 = 45;
        break;
    case 125:
        v_9 = 8;
        v_A = 1;
        v_4 = 0;
        v_3 = 1;
        break;
    case 126:
        v_9 = 8;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 127:
        v_9 = 8;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 128:
        v_9 = 8;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 129:
        v_9 = 8;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 130:
        v_9 = 8;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 131:
        v_9 = 8;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 132:
        v_9 = 8;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 133:
        v_9 = 8;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 134:
        v_9 = 8;
        v_A = 10;
        v_4 = 65;
        break;
    case 135:
        v_9 = 8;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 136:
        v_9 = 8;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 137:
        v_9 = 8;
        v_A = 13;
        v_4 = 40;
        break;
    case 138:
        v_9 = 8;
        v_A = 14;
        v_4 = 45;
        break;
    case 139:
        v_9 = 8;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 140:
        v_9 = 9;
        v_A = 0;
        v_4 = 265;
        break;
    case 141:
        v_9 = 9;
        v_A = 1;
        v_4 = 340;
        break;
    case 142:
        v_9 = 9;
        v_A = 2;
        v_4 = 335;
        break;
    case 143:
        v_9 = 9;
        v_A = 3;
        v_4 = 330;
        break;
    case 144:
        v_9 = 9;
        v_A = 4;
        v_4 = 345;
        break;
    case 145:
        v_9 = 9;
        v_A = 5;
        v_4 = 550;
        break;
    case 146:
        v_9 = 9;
        v_A = 6;
        v_4 = 340;
        break;
    case 147:
        v_9 = 9;
        v_A = 7;
        v_4 = 295;
        break;
    case 148:
        v_9 = 9;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 149:
        v_9 = 9;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 150:
        v_9 = 9;
        v_A = 10;
        v_4 = 545;
        break;
    case 151:
        v_9 = 9;
        v_A = 11;
        v_4 = 345;
        break;
    case 152:
        v_9 = 9;
        v_A = 12;
        v_4 = 315;
        break;
    case 153:
        v_9 = 9;
        v_A = 13;
        v_4 = 520;
        break;
    case 154:
        v_9 = 9;
        v_A = 14;
        v_4 = 325;
        break;
    case 155:
        v_9 = 9;
        v_A = 15;
        v_4 = 330;
        break;
    }
    switch (a_0) {
    case 156:
        v_9 = 10;
        v_A = 0;
        v_4 = 505;
        break;
    case 157:
        v_9 = 10;
        v_A = 1;
        v_4 = 470;
        break;
    case 158:
        v_9 = 10;
        v_A = 2;
        v_4 = 475;
        break;
    case 159:
        v_9 = 10;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 160:
        v_9 = 10;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 161:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 162:
        v_9 = 10;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 163:
        v_9 = 10;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 164:
        v_9 = 10;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 165:
        v_9 = 10;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 166:
        v_9 = 10;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 167:
        v_9 = 10;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 168:
        v_9 = 10;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 169:
        v_9 = 10;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 170:
        v_9 = 10;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 171:
        v_9 = 10;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 172:
        v_9 = 11;
        v_A = 0;
        v_4 = 120;
        break;
    case 173:
        v_9 = 11;
        v_A = 1;
        v_4 = 360;
        break;
    case 174:
        v_9 = 11;
        v_A = 2;
        v_4 = 0;
        v_3 = 1;
        break;
    case 175:
        v_9 = 11;
        v_A = 3;
        v_4 = 0;
        v_3 = 1;
        break;
    case 176:
        v_9 = 11;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 177:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        v_3 = 1;
        break;
    case 178:
        v_9 = 11;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 179:
        v_9 = 11;
        v_A = 7;
        v_4 = 90;
        break;
    case 180:
        v_9 = 11;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 181:
        v_9 = 11;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 182:
        v_9 = 11;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 183:
        v_9 = 11;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 184:
        v_9 = 11;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 185:
        v_9 = 11;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 186:
        v_9 = 11;
        v_A = 14;
        v_4 = 2450;
        break;
    case 187:
        v_9 = 11;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 188:
        v_9 = 12;
        v_A = 0;
        v_4 = 420;
        break;
    case 189:
        v_9 = 12;
        v_A = 1;
        v_4 = 415;
        break;
    case 190:
        v_9 = 12;
        v_A = 2;
        v_4 = 695;
        break;
    case 191:
        v_9 = 12;
        v_A = 3;
        v_4 = 385;
        break;
    case 192:
        v_9 = 12;
        v_A = 4;
        v_4 = 330;
        break;
    case 193:
        v_9 = 12;
        v_A = 5;
        v_4 = 345;
        break;
    case 194:
        v_9 = 12;
        v_A = 6;
        v_4 = 340;
        break;
    case 195:
        v_9 = 12;
        v_A = 7;
        v_4 = 450;
        break;
    case 196:
        v_9 = 12;
        v_A = 8;
        v_4 = 295;
        break;
    case 197:
        v_9 = 12;
        v_A = 9;
        v_4 = 340;
        break;
    case 198:
        v_9 = 12;
        v_A = 10;
        v_4 = 1060;
        break;
    case 199:
        v_9 = 12;
        v_A = 11;
        v_4 = 1040;
        break;
    case 200:
        v_9 = 12;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 201:
        v_9 = 12;
        v_A = 13;
        v_4 = 0;
        v_3 = 1;
        break;
    case 202:
        v_9 = 12;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 203:
        v_9 = 12;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    case 204:
        v_9 = 13;
        v_A = 0;
        v_4 = 420;
        break;
    case 205:
        v_9 = 13;
        v_A = 1;
        v_4 = 415;
        break;
    case 206:
        v_9 = 13;
        v_A = 2;
        v_4 = 680;
        break;
    case 207:
        v_9 = 13;
        v_A = 3;
        v_4 = 385;
        break;
    case 208:
        v_9 = 13;
        v_A = 4;
        v_4 = 0;
        v_3 = 1;
        break;
    case 209:
        v_9 = 13;
        v_A = 5;
        v_4 = 345;
        break;
    case 210:
        v_9 = 13;
        v_A = 6;
        v_4 = 0;
        v_3 = 1;
        break;
    case 211:
        v_9 = 13;
        v_A = 7;
        v_4 = 0;
        v_3 = 1;
        break;
    case 212:
        v_9 = 13;
        v_A = 8;
        v_4 = 0;
        v_3 = 1;
        break;
    case 213:
        v_9 = 13;
        v_A = 9;
        v_4 = 0;
        v_3 = 1;
        break;
    case 214:
        v_9 = 13;
        v_A = 10;
        v_4 = 0;
        v_3 = 1;
        break;
    case 215:
        v_9 = 13;
        v_A = 11;
        v_4 = 0;
        v_3 = 1;
        break;
    case 216:
        v_9 = 13;
        v_A = 12;
        v_4 = 0;
        v_3 = 1;
        break;
    case 217:
        v_9 = 13;
        v_A = 13;
        v_4 = 1065;
        break;
    case 218:
        v_9 = 13;
        v_A = 14;
        v_4 = 0;
        v_3 = 1;
        break;
    case 219:
        v_9 = 13;
        v_A = 15;
        v_4 = 0;
        v_3 = 1;
        break;
    }
    switch (a_0) {
    case 220:
        v_9 = 14;
        v_A = 0;
        v_4 = 420;
        break;
    case 221:
        v_9 = 14;
        v_A = 1;
        v_4 = 415;
        break;
    case 222:
        v_9 = 14;
        v_A = 2;
        v_4 = 440;
        break;
    case 223:
        v_9 = 14;
        v_A = 3;
        v_4 = 385;
        break;
    case 224:
        v_9 = 14;
        v_A = 4;
        v_4 = 330;
        break;
    case 225:
        v_9 = 14;
        v_A = 5;
        v_4 = 445;
        break;
    case 226:
        v_9 = 14;
        v_A = 6;
        v_4 = 340;
        break;
    case 227:
        v_9 = 14;
        v_A = 7;
        v_4 = 440;
        break;
    case 228:
        v_9 = 14;
        v_A = 8;
        v_4 = 295;
        break;
    case 229:
        v_9 = 14;
        v_A = 9;
        v_4 = 340;
        break;
    case 230:
        v_9 = 14;
        v_A = 10;
        v_4 = 325;
        break;
    case 231:
        v_9 = 14;
        v_A = 11;
        v_4 = 435;
        break;
    case 232:
        v_9 = 14;
        v_A = 12;
        v_4 = 445;
        break;
    case 233:
        v_9 = 14;
        v_A = 13;
        v_4 = 440;
        break;
    case 234:
        v_9 = 14;
        v_A = 14;
        v_4 = 325;
        break;
    case 235:
        v_9 = 14;
        v_A = 15;
        v_4 = 325;
        break;
    case 236:
        v_9 = 15;
        v_A = 0;
        break;
    }
    v_5/*"16"*/ = "U_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    if (a_0 == 23) {
        if (sub_44537(89, -1)) {
            v_5/*"16"*/ = "REW_RS";
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(1250) * g_40001._fB9D) * g_42DD3._f10);
        } else { 
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(45) * g_40001._f1AC[23/*1*/]) * g_42DD3._f10);
        }
    } else if (a_0 == 17) {
        if (sub_44537(88, -1)) {
            v_5/*"16"*/ = "REW_LSB";
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(450) * g_40001._fB9C) * g_42DD3._f10);
        } else { 
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(60) * g_40001._f1AC[17/*1*/]) * g_42DD3._f10);
        }
    } else if (a_0 == 28) {
        if (sub_44537(87, -1)) {
            v_5/*"16"*/ = "REW_REDSK";
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(500) * g_40001._fB9B) * g_42DD3._f10);
        } else { 
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(55) * g_40001._f1AC[28/*1*/]) * g_42DD3._f10);
        }
    } else { 
        v_E = a_0;
        if ((v_E >= 0) && (v_E < 237)) {
            v_4 = SYSTEM::ROUND((__678_$BBDA792448DB5A89(v_4) * g_40001._f1AC[v_E/*1*/]) * g_42DD3._f10);
        }
    }
    if (a_0 >= 237) {
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 237);
        if (g_10E3A[0/*14*/]._f7 > 0) {
            g_10E3A[0/*14*/]._f7 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(g_10E3A[0/*14*/]._f7) * g_42DD3._f10);
        }
    } else { 
        sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
    }
}

void sub_519ef(auto a_0) {
    v_3 = 0;
    v_4 = 10;
    v_9 = 0;
    v_A = 0;
    v_B = -1;
    v_C = 2;
    v_D = 2;
    switch (a_0) {
    case 0:
        v_9 = 0;
        v_A = 0;
        v_4 = 500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[0/*1*/]);
        break;
    case 1:
        v_9 = 1;
        v_A = 0;
        v_4 = 190;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[1/*1*/]);
        break;
    case 2:
        v_9 = 1;
        v_A = 1;
        v_4 = 185;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[2/*1*/]);
        break;
    case 3:
        v_9 = 1;
        v_A = 2;
        v_4 = 180;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[3/*1*/]);
        break;
    case 4:
        v_9 = 1;
        v_A = 3;
        v_4 = 175;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[4/*1*/]);
        break;
    case 5:
        v_9 = 1;
        v_A = 4;
        v_4 = 170;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[5/*1*/]);
        break;
    case 6:
        v_9 = 1;
        v_A = 5;
        v_4 = 0;
        break;
    case 7:
        v_9 = 2;
        v_A = 0;
        v_4 = 580;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[6/*1*/]);
        break;
    case 8:
        v_9 = 2;
        v_A = 1;
        v_4 = 575;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[7/*1*/]);
        break;
    case 9:
        v_9 = 2;
        v_A = 2;
        v_4 = 570;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[8/*1*/]);
        break;
    case 10:
        v_9 = 2;
        v_A = 3;
        v_4 = 565;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[9/*1*/]);
        break;
    case 11:
        v_9 = 2;
        v_A = 4;
        v_4 = 560;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[10/*1*/]);
        break;
    case 12:
        v_9 = 2;
        v_A = 5;
        v_4 = 0;
        break;
    case 13:
        v_9 = 3;
        v_A = 0;
        v_4 = 1100;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[11/*1*/]);
        break;
    case 14:
        v_9 = 3;
        v_A = 1;
        v_4 = 1095;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[12/*1*/]);
        break;
    case 15:
        v_9 = 3;
        v_A = 2;
        v_4 = 1090;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[13/*1*/]);
        break;
    case 16:
        v_9 = 3;
        v_A = 3;
        v_4 = 1085;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[14/*1*/]);
        break;
    case 17:
        v_9 = 3;
        v_A = 4;
        v_4 = 1080;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[15/*1*/]);
        break;
    case 18:
        v_9 = 3;
        v_A = 5;
        v_4 = 0;
        break;
    case 19:
        v_9 = 4;
        v_A = 0;
        v_4 = 520;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[16/*1*/]);
        break;
    case 20:
        v_9 = 4;
        v_A = 1;
        v_4 = 515;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[17/*1*/]);
        break;
    case 21:
        v_9 = 4;
        v_A = 2;
        v_4 = 510;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[18/*1*/]);
        break;
    case 22:
        v_9 = 4;
        v_A = 3;
        v_4 = 505;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[19/*1*/]);
        break;
    case 23:
        v_9 = 4;
        v_A = 4;
        v_4 = 500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[20/*1*/]);
        break;
    case 24:
        v_9 = 4;
        v_A = 5;
        v_4 = 0;
        break;
    case 25:
        v_9 = 4;
        v_A = 6;
        v_4 = 0;
        break;
    case 26:
        v_9 = 5;
        v_A = 0;
        v_4 = 295;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[21/*1*/]);
        break;
    case 27:
        v_9 = 5;
        v_A = 1;
        v_4 = 290;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[22/*1*/]);
        break;
    case 28:
        v_9 = 5;
        v_A = 2;
        v_4 = 285;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[23/*1*/]);
        break;
    case 29:
        v_9 = 5;
        v_A = 3;
        v_4 = 280;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[24/*1*/]);
        break;
    case 30:
        v_9 = 5;
        v_A = 4;
        v_4 = 275;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[25/*1*/]);
        break;
    case 31:
        v_9 = 5;
        v_A = 5;
        v_4 = 0;
        break;
    case 32:
        v_9 = 6;
        v_A = 0;
        v_4 = 950;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[26/*1*/]);
        break;
    case 33:
        v_9 = 6;
        v_A = 1;
        v_4 = 945;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[27/*1*/]);
        break;
    case 34:
        v_9 = 6;
        v_A = 2;
        v_4 = 940;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[28/*1*/]);
        break;
    case 35:
        v_9 = 6;
        v_A = 3;
        v_4 = 935;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[29/*1*/]);
        break;
    case 36:
        v_9 = 6;
        v_A = 4;
        v_4 = 930;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[30/*1*/]);
        break;
    case 37:
        v_9 = 6;
        v_A = 5;
        v_4 = 0;
        break;
    case 38:
        v_9 = 7;
        v_A = 0;
        v_4 = 440;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[31/*1*/]);
        break;
    case 39:
        v_9 = 7;
        v_A = 1;
        v_4 = 435;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[32/*1*/]);
        break;
    case 40:
        v_9 = 7;
        v_A = 2;
        v_4 = 430;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[33/*1*/]);
        break;
    case 41:
        v_9 = 7;
        v_A = 3;
        v_4 = 425;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[34/*1*/]);
        break;
    case 42:
        v_9 = 7;
        v_A = 4;
        v_4 = 420;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[35/*1*/]);
        break;
    case 43:
        v_9 = 7;
        v_A = 5;
        v_4 = 0;
        break;
    case 44:
        v_9 = 7;
        v_A = 6;
        v_4 = 0;
        break;
    case 45:
        v_9 = 8;
        v_A = 0;
        v_4 = 1150;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[36/*1*/]);
        break;
    case 46:
        v_9 = 8;
        v_A = 1;
        v_4 = 1145;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[37/*1*/]);
        break;
    case 47:
        v_9 = 8;
        v_A = 2;
        v_4 = 1140;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[38/*1*/]);
        break;
    case 48:
        v_9 = 8;
        v_A = 3;
        v_4 = 1135;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[39/*1*/]);
        break;
    case 49:
        v_9 = 8;
        v_A = 4;
        v_4 = 1130;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[40/*1*/]);
        break;
    case 50:
        v_9 = 9;
        v_A = 0;
        v_4 = 395;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[41/*1*/]);
        break;
    case 51:
        v_9 = 9;
        v_A = 1;
        v_4 = 390;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[42/*1*/]);
        break;
    case 52:
        v_9 = 9;
        v_A = 2;
        v_4 = 385;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[43/*1*/]);
        break;
    case 53:
        v_9 = 9;
        v_A = 3;
        v_4 = 380;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[44/*1*/]);
        break;
    case 54:
        v_9 = 9;
        v_A = 4;
        v_4 = 375;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[45/*1*/]);
        break;
    case 55:
        v_9 = 9;
        v_A = 5;
        v_4 = 0;
        break;
    case 56:
        v_9 = 9;
        v_A = 6;
        v_4 = 0;
        break;
    case 57:
        v_9 = 10;
        v_A = 0;
        v_4 = 500;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[46/*1*/]);
        break;
    case 58:
        v_9 = 10;
        v_A = 1;
        v_4 = 495;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[47/*1*/]);
        break;
    case 59:
        v_9 = 10;
        v_A = 2;
        v_4 = 490;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[48/*1*/]);
        break;
    case 60:
        v_9 = 10;
        v_A = 3;
        v_4 = 485;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[49/*1*/]);
        break;
    case 61:
        v_9 = 10;
        v_A = 4;
        v_4 = 480;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[50/*1*/]);
        break;
    case 62:
        v_9 = 10;
        v_A = 5;
        v_4 = 0;
        break;
    case 63:
        v_9 = 11;
        v_A = 0;
        v_4 = 1050;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[51/*1*/]);
        break;
    case 64:
        v_9 = 11;
        v_A = 1;
        v_4 = 1045;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[52/*1*/]);
        break;
    case 65:
        v_9 = 11;
        v_A = 2;
        v_4 = 1040;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[53/*1*/]);
        break;
    case 66:
        v_9 = 11;
        v_A = 3;
        v_4 = 1035;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[54/*1*/]);
        break;
    case 67:
        v_9 = 11;
        v_A = 4;
        v_4 = 1030;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[55/*1*/]);
        break;
    case 68:
        v_9 = 11;
        v_A = 5;
        v_4 = 0;
        break;
    case 69:
        v_9 = 12;
        v_A = 0;
        v_4 = 550;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[56/*1*/]);
        break;
    case 70:
        v_9 = 12;
        v_A = 1;
        v_4 = 545;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[57/*1*/]);
        break;
    case 71:
        v_9 = 12;
        v_A = 2;
        v_4 = 540;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[58/*1*/]);
        break;
    case 72:
        v_9 = 12;
        v_A = 3;
        v_4 = 535;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[59/*1*/]);
        break;
    case 73:
        v_9 = 12;
        v_A = 4;
        v_4 = 530;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[60/*1*/]);
        break;
    case 74:
        v_9 = 13;
        v_A = 0;
        v_4 = 1200;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[61/*1*/]);
        break;
    case 75:
        v_9 = 13;
        v_A = 1;
        v_4 = 1195;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[62/*1*/]);
        break;
    case 76:
        v_9 = 13;
        v_A = 2;
        v_4 = 1190;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[63/*1*/]);
        break;
    case 77:
        v_9 = 13;
        v_A = 3;
        v_4 = 1185;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[64/*1*/]);
        break;
    case 78:
        v_9 = 13;
        v_A = 4;
        v_4 = 1180;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[65/*1*/]);
        break;
    case 79:
        v_9 = 13;
        v_A = 5;
        v_4 = 0;
        break;
    case 80:
        v_9 = 14;
        v_A = 0;
        v_4 = 2000;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[66/*1*/]);
        break;
    case 81:
        v_9 = 14;
        v_A = 1;
        v_4 = 1995;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[67/*1*/]);
        break;
    case 82:
        v_9 = 14;
        v_A = 2;
        v_4 = 1990;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[68/*1*/]);
        break;
    case 83:
        v_9 = 14;
        v_A = 3;
        v_4 = 1985;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[69/*1*/]);
        break;
    case 84:
        v_9 = 14;
        v_A = 4;
        v_4 = 1980;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[70/*1*/]);
        break;
    case 85:
        v_9 = 15;
        v_A = 0;
        v_4 = 475;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[71/*1*/]);
        break;
    case 86:
        v_9 = 15;
        v_A = 1;
        v_4 = 470;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[72/*1*/]);
        break;
    case 87:
        v_9 = 15;
        v_A = 2;
        v_4 = 465;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[73/*1*/]);
        break;
    case 88:
        v_9 = 15;
        v_A = 3;
        v_4 = 460;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[74/*1*/]);
        break;
    case 89:
        v_9 = 15;
        v_A = 4;
        v_4 = 455;
        v_4 = SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_4) * g_40001._f9DE[75/*1*/]);
        break;
    case 90:
        v_9 = 15;
        v_A = 5;
        v_4 = 0;
        break;
    default:
        g_10E3A[0/*14*/]._f5 = 3;
        sub_3c14c(v_D, a_0, 91);
        return ;
        break;
    }
    v_5/*"16"*/ = "H_FMM_";
    v_5/*16*/ += v_9;
    v_5/*16*/ += "_";
    v_5/*16*/ += v_A;
    sub_398c7(&g_10E3A[0/*14*/], v_D, a_0, &v_5, v_9, v_A, v_4, v_3, v_B, v_C, 0);
}

void sub_528a7() {
    g_10E3A[0/*14*/]._f1 = -1;
    g_10E3A[0/*14*/]._f2 = -1;
    g_10E3A[0/*14*/]._f5 = -1;
    g_10E3A[0/*14*/]._f3 = -1;
    g_10E3A[0/*14*/]._f4 = -1;
    g_10E3A[0/*14*/]._f7 = 0;
    g_10E3A[0/*14*/]._f6 = 0;
    g_10E3A[0/*14*/]._fD = -1;
    g_10E3A[0/*14*/]._fC = 0;
    g_10E3A[0/*14*/] = 0;
    g_10E3A[0/*14*/]._f8/*"16"*/ = "NO_LABEL";
}

auto sub_52920(auto a_0) {
    v_3 = g_1837E7[PLAYER::PLAYER_ID()/*410*/]._f55._f1C;
    if ((v_3 != -1) && (v_3 < 4)) {
        if ((sub_52995(v_3) != -1) && (sub_52995(v_3) != 0)) {
            return 1;
        } else { }
    } else { }
    if (!PED::IS_PED_INJURED(a_0)) {
        if (ENTITY::GET_ENTITY_MODEL(a_0) == ${mp_m_freemode_01}) {
            if (PED::GET_PED_DRAWABLE_VARIATION(a_0, 11) == 15) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_52995(auto a_0) {
    if ((a_0 <= -1) || (a_0 >= 4)) {
        return -1;
    }
    return g_252348._f1645[a_0/*1*/];
}

auto sub_529bd(auto a_0) {
    if (!PED::IS_PED_INJURED(a_0)) {
        if (ENTITY::GET_ENTITY_MODEL(a_0) == ${mp_m_freemode_01}) {
            v_3 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 11);
            v_4 = PED::GET_PED_TEXTURE_VARIATION(a_0, 11);
            switch (v_3) {
            case 0:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 7:
                case 8:
                case 11:
                    return 1;
                    break;
                }
                break;
            case 1:
                switch (v_4) {
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 14:
                    return 1;
                    break;
                case 1:
                case 7:
                case 12:
                    v_5 = sub_5315c(${mp_f_freemode_01}, 11, sub_350d8(a_0, 11, -1), 0);
                    if ((((v_4 == 1) && (v_5 == 88)) || ((v_4 == 7) && (v_5 == 89))) || ((v_4 == 12) && (v_5 == 87))) {
                        return 1;
                    }
                    break;
                }
                break;
            case 2:
                switch (v_4) {
                case 9:
                    return 1;
                    break;
                }
                break;
            default:
                if (v_3 > 15) {
                    v_6 = sub_350d8(a_0, 11, -1);
                    if (v_6 >= 237) {
                        v_7 = sub_34b26(${mp_m_freemode_01}, v_6, 11, 3);
                        if ((DLC1::_341DE7ED1D2A1BFD(v_7, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_7, ${multi_decal}, 0)) || DLC1::_341DE7ED1D2A1BFD(v_7, 0x159b376c, 0)) {
                            return 1;
                        }
                    }
                } else { }
                break;
            }
            v_3 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 8);
            v_4 = PED::GET_PED_TEXTURE_VARIATION(a_0, 8);
            switch (v_3) {
            case 0:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 7:
                case 8:
                case 11:
                    return 1;
                    break;
                }
                break;
            case 1:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 12:
                case 14:
                    return 1;
                    break;
                }
                break;
            case 2:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 7:
                case 8:
                case 11:
                    return 1;
                    break;
                }
                break;
            case 14:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 12:
                case 14:
                    return 1;
                    break;
                }
                break;
            default:
                if (v_3 > 15) {
                    v_8 = sub_350d8(a_0, 8, -1);
                    if (v_8 >= 241) {
                        v_9 = sub_34b26(${mp_m_freemode_01}, v_8, 8, 3);
                        if ((DLC1::_341DE7ED1D2A1BFD(v_9, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_9, ${multi_decal}, 0)) || DLC1::_341DE7ED1D2A1BFD(v_9, 0x159b376c, 0)) {
                            return 1;
                        }
                    }
                } else { }
                break;
            }
        } else if (ENTITY::GET_ENTITY_MODEL(a_0) == ${mp_f_freemode_01}) {
            v_3 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 11);
            v_4 = PED::GET_PED_TEXTURE_VARIATION(a_0, 11);
            switch (v_3) {
            case 0:
                switch (v_4) {
                case 1:
                case 2:
                    return 1;
                    break;
                case 4:
                case 7:
                case 9:
                    v_A = sub_5315c(${mp_f_freemode_01}, 11, sub_350d8(a_0, 11, -1), 0);
                    if ((((v_4 == 7) && (v_A == 88)) || ((v_4 == 4) && (v_A == 89))) || ((v_4 == 9) && (v_A == 87))) {
                        return 1;
                    }
                    break;
                }
                break;
            case 2:
                switch (v_4) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    return 1;
                    break;
                }
                break;
            case 3:
                switch (v_4) {
                case 14:
                    return 1;
                    break;
                }
                break;
            case 11:
                switch (v_4) {
                case 10:
                case 11:
                case 15:
                    return 1;
                    break;
                }
                break;
            default:
                if (v_3 > 15) {
                    v_B = sub_350d8(a_0, 11, -1);
                    if (v_B >= 256) {
                        v_C = sub_34b26(${mp_f_freemode_01}, v_B, 11, 4);
                        if ((DLC1::_341DE7ED1D2A1BFD(v_C, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_C, ${multi_decal}, 0)) || DLC1::_341DE7ED1D2A1BFD(v_C, 0x159b376c, 0)) {
                            return 1;
                        }
                    }
                } else { }
                break;
            }
            v_3 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 8);
            v_4 = PED::GET_PED_TEXTURE_VARIATION(a_0, 8);
            switch (v_3) {
            case 0:
                switch (v_4) {
                case 1:
                case 2:
                    return 1;
                    break;
                case 4:
                case 7:
                case 9:
                    v_D = sub_5315c(${mp_f_freemode_01}, 11, sub_350d8(a_0, 11, -1), 0);
                    if ((((v_4 == 7) && (v_D == 88)) || ((v_4 == 4) && (v_D == 89))) || ((v_4 == 9) && (v_D == 87))) {
                        return 1;
                    }
                    break;
                }
                break;
            case 1:
                switch (v_4) {
                case 1:
                case 2:
                    return 1;
                    break;
                case 4:
                case 7:
                case 9:
                    v_E = sub_5315c(${mp_f_freemode_01}, 11, sub_350d8(a_0, 11, -1), 0);
                    if ((((v_4 == 7) && (v_E == 88)) || ((v_4 == 4) && (v_E == 89))) || ((v_4 == 9) && (v_E == 87))) {
                        return 1;
                    }
                    break;
                }
                break;
            case 2:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 7:
                case 8:
                case 11:
                    return 1;
                    break;
                }
                break;
            case 11:
                switch (v_4) {
                case 10:
                case 11:
                case 15:
                    return 1;
                    break;
                }
                break;
            case 14:
                switch (v_4) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 12:
                case 14:
                    return 1;
                    break;
                }
                break;
            default:
                if (v_3 > 15) {
                    v_F = sub_350d8(a_0, 8, -1);
                    if (v_F >= 136) {
                        v_10 = sub_34b26(${mp_f_freemode_01}, v_F, 8, 4);
                        if ((DLC1::_341DE7ED1D2A1BFD(v_10, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_10, ${multi_decal}, 0)) || DLC1::_341DE7ED1D2A1BFD(v_10, 0x159b376c, 0)) {
                            return 1;
                        }
                    }
                } else { }
                break;
            }
        }
        if (sub_530f9(a_0)) {
            return 1;
        }
    }
    return 0;
}

auto sub_530f9(auto a_0) {
    v_14 = ENTITY::GET_ENTITY_MODEL(a_0) == ${mp_m_freemode_01};
    v_15 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 11);
    v_16 = PED::GET_PED_TEXTURE_VARIATION(a_0, 11);
    if (v_14) {
        DLC1::GET_SHOP_PED_COMPONENT(0x6329d15, &v_3);
    } else { 
        DLC1::GET_SHOP_PED_COMPONENT(0xfe25d2a6, &v_3);
    }
    if ((v_15 == v_3._f3) && (v_16 == v_3._f4)) {
        return 1;
    }
    return 0;
}

auto sub_5315c(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0 == ${mp_m_freemode_01}) {
        if (a_1 == 11) {
            if (a_2 == 1) {
                return 73;
            } else if (a_2 == 3) {
                return 74;
            } else if (a_2 == 5) {
                return 75;
            } else if (a_2 == 7) {
                return 76;
            } else if (a_2 == 4) {
                return 77;
            } else if (a_2 == 8) {
                return 78;
            } else if (a_2 == 11) {
                return 79;
            } else if (a_2 == 19) {
                return 80;
            } else if (a_2 == 21) {
                return 81;
            } else if (a_2 == 22) {
                return 82;
            } else if (a_2 == 24) {
                return 83;
            } else if (a_2 == 20) {
                return 84;
            } else if (a_2 == 30) {
                return 85;
            } else if (a_2 == 23) {
                if (sub_44537(89, -1)) {
                    return 89;
                }
            } else if (a_2 == 17) {
                if (sub_44537(88, -1)) {
                    return 88;
                }
            } else if (a_2 == 28) {
                if (sub_44537(87, -1)) {
                    return 87;
                }
            } else if (a_2 == 41) {
                return 86;
            } else if (a_2 >= 237) {
                v_6 = sub_34b26(a_0, a_2, 11, 3);
                if (v_6 != -1) {
                    if (DLC1::_341DE7ED1D2A1BFD(v_6, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_6, 0x159b376c, 0)) {
                        v_7 = DLC1::_GET_NUM_FORCED_COMPONENTS(v_6);
                        for (v_8 = 0; v_8 < v_7; v_8 += 1) {
                            DLC1::GET_FORCED_COMPONENT(v_6, v_8, &v_9, &v_A, &v_B);
                            if (v_B == 10) {
                                if ((v_9 != 0) && (v_9 != ${0})) {
                                    return sub_539bc(v_9, 3);
                                } else { 
                                    return v_A;
                                }
                            }
                        }
                    } else if (DLC1::_341DE7ED1D2A1BFD(v_6, ${multi_decal}, 0)) {
                        if (a_3 == 0) {
                            a_3 = sub_4b3f(1746, -1, 0);
                        }
                        return sub_539bc(a_3, 3);
                    }
                }
            }
        } else if (a_1 == 8) {
            if (a_2 == 1) {
                return 73;
            } else if (a_2 == 3) {
                return 74;
            } else if (a_2 == 5) {
                return 75;
            } else if (a_2 == 7) {
                return 76;
            } else if (a_2 == 4) {
                return 77;
            } else if (a_2 == 8) {
                return 78;
            } else if (a_2 == 11) {
                return 79;
            } else if (a_2 == 23) {
                if (sub_44537(89, -1)) {
                    return 89;
                }
            } else if (a_2 == 17) {
                if (sub_44537(88, -1)) {
                    return 88;
                }
            } else if (a_2 == 28) {
                if (sub_44537(87, -1)) {
                    return 87;
                }
            } else if (a_2 == 33) {
                return 73;
            } else if (a_2 == 35) {
                return 74;
            } else if (a_2 == 37) {
                return 75;
            } else if (a_2 == 39) {
                return 76;
            } else if (a_2 == 36) {
                return 77;
            } else if (a_2 == 40) {
                return 78;
            } else if (a_2 == 43) {
                return 79;
            } else if (a_2 == 19) {
                return 80;
            } else if (a_2 == 21) {
                return 81;
            } else if (a_2 == 22) {
                return 82;
            } else if (a_2 == 24) {
                return 83;
            } else if (a_2 == 20) {
                return 84;
            } else if (a_2 == 30) {
                return 85;
            } else if (a_2 == 227) {
                return 80;
            } else if (a_2 == 229) {
                return 81;
            } else if (a_2 == 230) {
                return 82;
            } else if (a_2 == 232) {
                return 83;
            } else if (a_2 == 228) {
                return 84;
            } else if (a_2 == 238) {
                return 85;
            } else if (a_2 == 231) {
                if (sub_44537(89, -1)) {
                    return 89;
                }
            } else if (a_2 == 225) {
                if (sub_44537(88, -1)) {
                    return 88;
                }
            } else if (a_2 == 236) {
                if (sub_44537(87, -1)) {
                    return 87;
                }
            } else if (a_2 >= 241) {
                v_C = sub_34b26(a_0, a_2, 8, 3);
                if (v_C != -1) {
                    if (DLC1::_341DE7ED1D2A1BFD(v_C, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_C, 0x159b376c, 0)) {
                        v_D = DLC1::_GET_NUM_FORCED_COMPONENTS(v_C);
                        for (v_E = 0; v_E < v_D; v_E += 1) {
                            DLC1::GET_FORCED_COMPONENT(v_C, v_E, &v_F, &v_10, &v_11);
                            if (v_11 == 10) {
                                if ((v_F != 0) && (v_F != ${0})) {
                                    return sub_539bc(v_F, 3);
                                } else { 
                                    return v_10;
                                }
                            }
                        }
                    } else if (DLC1::_341DE7ED1D2A1BFD(v_C, ${multi_decal}, 0)) {
                        if (a_3 == 0) {
                            a_3 = sub_4b3f(1746, -1, 0);
                        }
                        return sub_539bc(a_3, 3);
                    }
                }
            }
        }
    } else if (a_0 == ${mp_f_freemode_01}) {
        if (a_1 == 11) {
            if (a_2 == 1) {
                return 75;
            } else if (a_2 == 2) {
                return 77;
            } else if (a_2 == 4) {
                if (sub_44537(89, -1)) {
                    return 89;
                }
            } else if (a_2 == 7) {
                if (sub_44537(88, -1)) {
                    return 88;
                }
            } else if (a_2 == 9) {
                if (sub_44537(87, -1)) {
                    return 87;
                }
            } else if (a_2 == 32) {
                return 78;
            } else if (a_2 == 33) {
                return 79;
            } else if (a_2 == 34) {
                return 80;
            } else if (a_2 == 35) {
                return 81;
            } else if (a_2 == 36) {
                return 82;
            } else if (a_2 == 62) {
                return 76;
            } else if (a_2 == 63) {
                return 83;
            } else if (a_2 == 186) {
                return 84;
            } else if (a_2 == 187) {
                return 85;
            } else if (a_2 == 191) {
                return 74;
            } else if (a_2 >= 256) {
                v_12 = sub_34b26(a_0, a_2, 11, 4);
                if (v_12 != -1) {
                    if (DLC1::_341DE7ED1D2A1BFD(v_12, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_12, 0x159b376c, 0)) {
                        v_13 = DLC1::_GET_NUM_FORCED_COMPONENTS(v_12);
                        for (v_14 = 0; v_14 < v_13; v_14 += 1) {
                            DLC1::GET_FORCED_COMPONENT(v_12, v_14, &v_15, &v_16, &v_17);
                            if (v_17 == 10) {
                                if ((v_15 != 0) && (v_15 != ${0})) {
                                    return sub_539bc(v_15, 4);
                                } else { 
                                    return v_16;
                                }
                            }
                        }
                    } else if (DLC1::_341DE7ED1D2A1BFD(v_12, ${multi_decal}, 0)) {
                        if (a_3 == 0) {
                            a_3 = sub_4b3f(1746, -1, 0);
                        }
                        return sub_539bc(a_3, 4);
                    }
                }
            }
        } else if (a_1 == 8) {
            if (a_2 == 1) {
                return 75;
            } else if (a_2 == 2) {
                return 77;
            } else if (a_2 == 4) {
                if (sub_44537(89, -1)) {
                    return 89;
                }
            } else if (a_2 == 7) {
                if (sub_44537(88, -1)) {
                    return 88;
                }
            } else if (a_2 == 9) {
                if (sub_44537(87, -1)) {
                    return 87;
                }
            } else if (a_2 == 17) {
                return 75;
            } else if (a_2 == 18) {
                return 77;
            } else if (a_2 == 20) {
                if (sub_44537(89, -1)) {
                    return 89;
                }
            } else if (a_2 == 23) {
                if (sub_44537(88, -1)) {
                    return 88;
                }
            } else if (a_2 == 25) {
                if (sub_44537(87, -1)) {
                    return 87;
                }
            } else if (a_2 == 81) {
                return 84;
            } else if (a_2 == 82) {
                return 85;
            } else if (a_2 == 86) {
                return 74;
            } else if (a_2 >= 136) {
                v_18 = sub_34b26(a_0, a_2, 8, 4);
                if (v_18 != -1) {
                    if (DLC1::_341DE7ED1D2A1BFD(v_18, ${tat_decl}, 0) || DLC1::_341DE7ED1D2A1BFD(v_18, 0x159b376c, 0)) {
                        v_19 = DLC1::_GET_NUM_FORCED_COMPONENTS(v_18);
                        for (v_1A = 0; v_1A < v_19; v_1A += 1) {
                            DLC1::GET_FORCED_COMPONENT(v_18, v_1A, &v_1B, &v_1C, &v_1D);
                            if (v_1D == 10) {
                                if ((v_1B != 0) && (v_1B != ${0})) {
                                    return sub_539bc(v_1B, 4);
                                } else { 
                                    return v_1C;
                                }
                            }
                        }
                    } else if (DLC1::_341DE7ED1D2A1BFD(v_18, ${multi_decal}, 0)) {
                        if (a_3 == 0) {
                            a_3 = sub_4b3f(1746, -1, 0);
                        }
                        return sub_539bc(a_3, 4);
                    }
                }
            }
        }
    }
    return -1;
}

auto sub_539bc(auto a_0, auto a_1) {
    if (a_1 == 3) {
        if (sub_5490b(a_0, &v_4)) {
            return v_4;
        }
    } else if (a_1 == 4) {
        if (sub_53a2d(a_0, &v_4)) {
            return v_4;
        }
    }
    v_6 = DLC1::_278F76C3B0A8F109(a_1);
    for (v_5 = 0; v_5 < v_6; v_5 += 1) {
        if (DLC1::_FF56381874F82086(a_1, v_5, &v_7)) {
            if (a_0 == v_7._f3) {
                return 129 + v_5;
            }
        }
    }
    return -1;
}

auto sub_53a2d(auto a_0, auto a_1) {
    v_4 = -1;
    switch (a_0) {
    case ${mp_bea_f_chest_002}:
        v_4 = 0;
        break;
    case ${mp_bea_f_back_001}:
        v_4 = 1;
        break;
    case ${mp_bea_f_larm_000}:
        v_4 = 2;
        break;
    case ${mp_bea_f_back_000}:
        v_4 = 3;
        break;
    case ${mp_bea_f_should_001}:
        v_4 = 4;
        break;
    case ${mp_bea_f_back_002}:
        v_4 = 5;
        break;
    case ${mp_bea_f_rside_000}:
        v_4 = 6;
        break;
    case ${mp_bea_f_rleg_000}:
        v_4 = 7;
        break;
    case ${mp_bea_f_neck_000}:
        v_4 = 8;
        break;
    case ${mp_bea_f_stom_001}:
        v_4 = 9;
        break;
    case ${mp_bea_f_stom_002}:
        v_4 = 10;
        break;
    case ${mp_bea_f_should_000}:
        v_4 = 11;
        break;
    case ${mp_bea_f_chest_000}:
        v_4 = 12;
        break;
    case ${mp_bea_f_chest_001}:
        v_4 = 13;
        break;
    case ${mp_bea_f_stom_000}:
        v_4 = 14;
        break;
    case ${mp_bea_f_rarm_001}:
        v_4 = 15;
        break;
    case ${mp_bea_f_larm_001}:
        v_4 = 16;
        break;
    case ${mp_val_f_tshirt_a}:
        v_4 = 17;
        break;
    case ${mp_val_f_tshirt_b}:
        v_4 = 18;
        break;
    case ${mp_val_f_tshirt_c}:
        v_4 = 19;
        break;
    case ${mp_val_f_tshirt_d}:
        v_4 = 20;
        break;
    case ${mp_val_f_tshirt_e}:
        v_4 = 21;
        break;
    case ${mp_val_f_tshirt_f}:
        v_4 = 22;
        break;
    case ${mp_val_f_tshirt_g}:
        v_4 = 23;
        break;
    case ${mp_val_f_tshirt_h}:
        v_4 = 24;
        break;
    case ${mp_val_f_tshirt_i}:
        v_4 = 25;
        break;
    case ${mp_val_f_tshirt_j}:
        v_4 = 26;
        break;
    case ${mp_val_f_tshirt_k}:
        v_4 = 27;
        break;
    case ${mp_val_f_tshirt_l}:
        v_4 = 28;
        break;
    case ${mp_val_f_tshirt_m}:
        v_4 = 29;
        break;
    case ${mp_val_f_tshirt_n}:
        v_4 = 30;
        break;
    case ${mp_val_f_tshirt_o}:
        v_4 = 31;
        break;
    case ${mp_val_f_tshirt_p}:
        v_4 = 32;
        break;
    case ${mp_val_f_tshirt_q}:
        v_4 = 33;
        break;
    case ${mp_val_f_tshirt_r}:
        v_4 = 34;
        break;
    case ${mp_val_f_tshirt_s}:
        v_4 = 35;
        break;
    case ${mp_val_f_tshirt_t}:
        v_4 = 36;
        break;
    case ${mp_buis_f_back_000}:
        v_4 = 37;
        break;
    case ${mp_buis_f_back_001}:
        v_4 = 38;
        break;
    case ${mp_buis_f_chest_000}:
        v_4 = 39;
        break;
    case ${mp_buis_f_chest_001}:
        v_4 = 40;
        break;
    case ${mp_buis_f_chest_002}:
        v_4 = 41;
        break;
    case ${mp_buis_f_larm_000}:
        v_4 = 42;
        break;
    case ${mp_buis_f_lleg_000}:
        v_4 = 43;
        break;
    case ${mp_buis_f_neck_000}:
        v_4 = 44;
        break;
    case ${mp_buis_f_neck_001}:
        v_4 = 45;
        break;
    case ${mp_buis_f_rarm_000}:
        v_4 = 46;
        break;
    case ${mp_buis_f_rleg_000}:
        v_4 = 47;
        break;
    case ${mp_buis_f_stom_000}:
        v_4 = 48;
        break;
    case ${mp_buis_f_stom_001}:
        v_4 = 49;
        break;
    case ${mp_buis_f_stom_002}:
        v_4 = 50;
        break;
    case ${mp_female_crew_tat_000}:
        v_4 = 51;
        break;
    case ${mp_female_crew_tat_001}:
        v_4 = 52;
        break;
    case ${fm_bus_f_hair_a}:
        v_4 = 53;
        break;
    case ${fm_bus_f_hair_b}:
        v_4 = 54;
        break;
    case ${fm_bus_f_hair_c}:
        v_4 = 55;
        break;
    case ${fm_bus_f_hair_d}:
        v_4 = 56;
        break;
    case ${fm_bus_f_hair_e}:
        v_4 = 57;
        break;
    case 0x7396bbeb:
        v_4 = 58;
        break;
    case 0xc425dd08:
        v_4 = 59;
        break;
    case 0xcef3f2a4:
        v_4 = 60;
        break;
    case 0xa9dba874:
        v_4 = 61;
        break;
    case 0xfc30cd21:
        v_4 = 62;
        break;
    case 0x611e0e3:
        v_4 = 63;
        break;
    case 0xd7db0476:
        v_4 = 64;
        break;
    case 0xe6bca239:
        v_4 = 65;
        break;
    case 0x396ec79c:
        v_4 = 66;
        break;
    case 0x528af9d4:
        v_4 = 67;
        break;
    case 0x99e7872c:
        v_4 = 68;
        break;
    case 0xc74661e9:
        v_4 = 69;
        break;
    case 0xbc7d4c57:
        v_4 = 70;
        break;
    case 0xe1629625:
        v_4 = 71;
        break;
    case 0xfb772ce:
        v_4 = 72;
        break;
    case 0x229d7b3:
        v_4 = 73;
        break;
    case 0x2fb2b2c4:
        v_4 = 74;
        break;
    case 0x249c9c98:
        v_4 = 75;
        break;
    case 0x53ee7b3b:
        v_4 = 76;
        break;
    case 0x39134585:
        v_4 = 77;
        break;
    case 0x9fc80d19:
        v_4 = 78;
        break;
    case 0xa97f2087:
        v_4 = 79;
        break;
    case 0x9735fbf5:
        v_4 = 80;
        break;
    case 0xb6f4bb6a:
        v_4 = 81;
        break;
    case 0x8936dfef:
        v_4 = 82;
        break;
    case 0x926ff261:
        v_4 = 83;
        break;
    case 0x64a916d4:
        v_4 = 84;
        break;
    case 0x6ded295c:
        v_4 = 85;
        break;
    case 0x3fd54d39:
        v_4 = 86;
        break;
    case 0x499460b7:
        v_4 = 87;
        break;
    case 0xd311f2c4:
        v_4 = 88;
        break;
    case 0xa95f9f60:
        v_4 = 89;
        break;
    case 0xb208b0b2:
        v_4 = 90;
        break;
    case 0x83cad437:
        v_4 = 91;
        break;
    case 0x5e8a89b7:
        v_4 = 92;
        break;
    case 0x70542d4a:
        v_4 = 93;
        break;
    case 0x41254ef9:
        v_4 = 94;
        break;
    case 0x4b5b6365:
        v_4 = 95;
        break;
    case 0x1d9987e2:
        v_4 = 96;
        break;
    case 0x3357335d:
        v_4 = 97;
        break;
    case 0x5489f90a:
        v_4 = 98;
        break;
    case 0x6a5e2446:
        v_4 = 99;
        break;
    case 0x7c14c7b3:
        v_4 = 100;
        break;
    }
    switch (a_0) {
    case 0x8ee9ed5d:
        v_4 = 101;
        break;
    case 0x9ca788d8:
        v_4 = 102;
        break;
    case 0xb393b6b0:
        v_4 = 103;
        break;
    case 0xc13e5205:
        v_4 = 104;
        break;
    case 0xd390f6aa:
        v_4 = 105;
        break;
    case 0xe141920f:
        v_4 = 106;
        break;
    case 0xcfa5f9af:
        v_4 = 107;
        break;
    case 0xa16b1d3a:
        v_4 = 108;
        break;
    case 0xab2830b4:
        v_4 = 109;
        break;
    case 0x9acc9009:
        v_4 = 110;
        break;
    case 0xa854ab19:
        v_4 = 111;
        break;
    case 0x41335883:
        v_4 = 112;
        break;
    case 0x3355bcc8:
        v_4 = 113;
        break;
    case 0x23f41e05:
        v_4 = 114;
        break;
    case 0x76b2c385:
        v_4 = 115;
        break;
    case 0xf7e745ec:
        v_4 = 116;
        break;
    case 0x73fb9e0:
        v_4 = 117;
        break;
    case 0xce4247f6:
        v_4 = 118;
        break;
    case 0xe7ec7b4a:
        v_4 = 119;
        break;
    case 0xb9ae9ecf:
        v_4 = 120;
        break;
    case 0xc311b195:
        v_4 = 121;
        break;
    case 0x214d0182:
        v_4 = 122;
        break;
    case 0x21ee82c9:
        v_4 = 123;
        break;
    case 0x20717fcf:
        v_4 = 124;
        break;
    case 0x46f4ccd5:
        v_4 = 125;
        break;
    case 0x34c22870:
        v_4 = 126;
        break;
    case 0x91fd1a6a:
        v_4 = 127;
        break;
    case 0xa34bbd07:
        v_4 = 128;
        break;
    case 0x659b41a3:
        v_4 = 129;
        break;
    case 0x76d0e40e:
        v_4 = 130;
        break;
    case 0x492388b4:
        v_4 = 131;
        break;
    case 0xe03796f2:
        v_4 = 132;
        break;
    case 0x1271fb66:
        v_4 = 133;
        break;
    case 0x4a35fc9:
        v_4 = 134;
        break;
    case 0xef41353d:
        v_4 = 135;
        break;
    case 0x4a51eb29:
        v_4 = 136;
        break;
    case 0x12c3fc42:
        v_4 = 137;
        break;
    case 0xfe78d3ac:
        v_4 = 138;
        break;
    case 0x14f4806f:
        v_4 = 139;
        break;
    case 0x8727e4d4:
        v_4 = 140;
        break;
    case 0x39614948:
        v_4 = 141;
        break;
    case 0xf9b69257:
        v_4 = 142;
        break;
    case 0x2db4fa53:
        v_4 = 143;
        break;
    case 0x1c21d72d:
        v_4 = 144;
        break;
    case 0x42e8a4ba:
        v_4 = 145;
        break;
    case 0x309c0021:
        v_4 = 146;
        break;
    case 0x450428ed:
        v_4 = 147;
        break;
    case 0x33370553:
        v_4 = 148;
        break;
    case 0x791e1128:
        v_4 = 149;
        break;
    case 0x57b7ce54:
        v_4 = 150;
        break;
    case 0x9be956be:
        v_4 = 151;
        break;
    case 0xed8ef6a8:
        v_4 = 152;
        break;
    case 0x1fde5b46:
        v_4 = 153;
        break;
    case 0xd2243fd3:
        v_4 = 154;
        break;
    case 0x5b421729:
        v_4 = 155;
        break;
    case 0x766a4d79:
        v_4 = 156;
        break;
    case 0x7fb86015:
        v_4 = 157;
        break;
    case 0x71e18a:
        v_4 = 158;
        break;
    case 0x125c855f:
        v_4 = 159;
        break;
    case 0x2ceeba83:
        v_4 = 160;
        break;
    case 0x3ec05e26:
        v_4 = 161;
        break;
    case 0xd6880dbb:
        v_4 = 162;
        break;
    case 0xc449693e:
        v_4 = 163;
        break;
    case 0xab0936be:
        v_4 = 164;
        break;
    case 0x54336010:
        v_4 = 165;
        break;
    case 0x4559c25d:
        v_4 = 166;
        break;
    case 0x37a026ea:
        v_4 = 167;
        break;
    case 0xafb616c4:
        v_4 = 168;
        break;
    case 0x4d541059:
        v_4 = 169;
        break;
    case 0xcdf19192:
        v_4 = 170;
        break;
    case 0xdfb0350f:
        v_4 = 171;
        break;
    case 0x57c0449d:
        v_4 = 172;
        break;
    case 0x6a4969af:
        v_4 = 173;
        break;
    case 0x3c068d2a:
        v_4 = 174;
        break;
    case 0xcc19ad16:
        v_4 = 175;
        break;
    case 0x20a2d663:
        v_4 = 176;
        break;
    case 0x337dfc19:
        v_4 = 177;
        break;
    case 0x82e01aa4:
        v_4 = 178;
        break;
    case 0x91223728:
        v_4 = 179;
        break;
    case 0xde905203:
        v_4 = 180;
        break;
    case 0xfc750cb0:
        v_4 = 181;
        break;
    case 0x2d1fee05:
        v_4 = 182;
        break;
    case 0x1b284a16:
        v_4 = 183;
        break;
    case 0x97a9431e:
        v_4 = 184;
        break;
    case 0xc5599e7e:
        v_4 = 185;
        break;
    case 0xf228781b:
        v_4 = 186;
        break;
    case 0x5ce14d8b:
        v_4 = 187;
        break;
    case 0x7b6a8aa1:
        v_4 = 188;
        break;
    case 0xb848e6a4:
        v_4 = 189;
        break;
    case 0x82147a3c:
        v_4 = 190;
        break;
    case 0x73c6dda1:
        v_4 = 191;
        break;
    case 0x91f199f6:
        v_4 = 192;
        break;
    case 0x3aefd73:
        v_4 = 193;
        break;
    case 0xad3d508d:
        v_4 = 194;
        break;
    case 0x9f02b418:
        v_4 = 195;
        break;
    case 0x5ae968af:
        v_4 = 196;
        break;
    case 0xff52f2a1:
        v_4 = 197;
        break;
    case 0x1ec26307:
        v_4 = 198;
        break;
    case 0xc2549d88:
        v_4 = 199;
        break;
    }
    switch (a_0) {
    case 0x3cf43504:
        v_4 = 200;
        break;
    case 0x9c089fbe:
        v_4 = 201;
        break;
    case 0xbca2504c:
        v_4 = 202;
        break;
    case 0x633dee6:
        v_4 = 203;
        break;
    case 0x33d4ba23:
        v_4 = 204;
        break;
    case 0x479ae1af:
        v_4 = 205;
        break;
    case 0x3d54cd23:
        v_4 = 206;
        break;
    case 0x9d8e0d90:
        v_4 = 207;
        break;
    case 0xcad0e815:
        v_4 = 208;
        break;
    case 0xc27cd76d:
        v_4 = 209;
        break;
    case 0xf0c2b3f8:
        v_4 = 210;
        break;
    case 0x70a933c3:
        v_4 = 211;
        break;
    case 0xe7c0a2d0:
        v_4 = 212;
        break;
    case 0xdcae8cac:
        v_4 = 213;
        break;
    case 0xc3e6bcb:
        v_4 = 214;
        break;
    case 0x813455b5:
        v_4 = 215;
        break;
    case 0xaec730de:
        v_4 = 216;
        break;
    case 0xa3a11a92:
        v_4 = 217;
        break;
    case 0x355836:
        v_4 = 218;
        break;
    case 0xeefb35c2:
        v_4 = 219;
        break;
    case 0x71b044ba:
        v_4 = 220;
        break;
    case 0x7f56e007:
        v_4 = 221;
        break;
    case 0x5d7c0ba4:
        v_4 = 222;
        break;
    case 0x3fb5d014:
        v_4 = 223;
        break;
    case 0xa1108caf:
        v_4 = 224;
        break;
    case 0x2e117694:
        v_4 = 225;
        break;
    case 0x88d62c24:
        v_4 = 226;
        break;
    case 0xd39cc1b0:
        v_4 = 227;
        break;
    case 0xe6aa67cb:
        v_4 = 228;
        break;
    case 0xd0693b49:
        v_4 = 229;
        break;
    case 0x5240bef2:
        v_4 = 230;
        break;
    case 0x9bc75206:
        v_4 = 231;
        break;
    case 0xa75f6936:
        v_4 = 232;
        break;
    case 0x78158aa3:
        v_4 = 233;
        break;
    case 0x1369c141:
        v_4 = 234;
        break;
    case 0xb9240dd3:
        v_4 = 235;
        break;
    case 0x96c94922:
        v_4 = 236;
        break;
    case 0xab9572ba:
        v_4 = 237;
        break;
    case 0x82271fde:
        v_4 = 238;
        break;
    case 0x8fe8bb61:
        v_4 = 239;
        break;
    case 0x54b744f7:
        v_4 = 240;
        break;
    case 0x62ade0e4:
        v_4 = 241;
        break;
    case 0x38638c50:
        v_4 = 242;
        break;
    case 0x46db293f:
        v_4 = 243;
        break;
    case 0x1db5d6f9:
        v_4 = 244;
        break;
    case 0x1340b5a3:
        v_4 = 245;
        break;
    case 0xb1007124:
        v_4 = 246;
        break;
    case 0xce91ac46:
        v_4 = 247;
        break;
    case 0xe05f4fe1:
        v_4 = 248;
        break;
    case 0xee2ceb7c:
        v_4 = 249;
        break;
    case 0x6c04e72a:
        v_4 = 250;
        break;
    case 0x79cd82bf:
        v_4 = 251;
        break;
    case 0x977fbe23:
        v_4 = 252;
        break;
    case 0xa5115946:
        v_4 = 253;
        break;
    case 0x1d91310:
        v_4 = 254;
        break;
    case 0x90d662b0:
        v_4 = 255;
        break;
    case 0x8065c1cf:
        v_4 = 256;
        break;
    case 0xd51dba5:
        v_4 = 257;
        break;
    case 0xfafeb6ff:
        v_4 = 258;
        break;
    case 0xe7c01082:
        v_4 = 259;
        break;
    case 0xc717cf32:
        v_4 = 260;
        break;
    case 0x9c217d3a:
        v_4 = 261;
        break;
    case 0x7dde40b4:
        v_4 = 262;
        break;
    case 0xe73d9345:
        v_4 = 263;
        break;
    case 0x197b77c0:
        v_4 = 264;
        break;
    case 0x5d9705b5:
        v_4 = 265;
        break;
    case 0x9f73095c:
        v_4 = 266;
        break;
    case 0xd57f7574:
        v_4 = 267;
        break;
    case 0x386a1a2e:
        v_4 = 268;
        break;
    case 0xab297fab:
        v_4 = 269;
        break;
    case 0x1a945fc1:
        v_4 = 270;
        break;
    case 0x2871fb7c:
        v_4 = 271;
        break;
    case 0xcd0f59cd:
        v_4 = 272;
        break;
    case 0x9a33f417:
        v_4 = 273;
        break;
    case 0x63dd47ac:
        v_4 = 274;
        break;
    }
    if (v_4 != -1) {
        a_1 = 129 + v_4;
        return 1;
    }
    return 0;
}

auto sub_5490b(auto a_0, auto a_1) {
    v_4 = -1;
    switch (a_0) {
    case ${mp_bea_m_larm_001}:
        v_4 = 0;
        break;
    case ${mp_bea_m_back_000}:
        v_4 = 1;
        break;
    case ${mp_bea_m_chest_000}:
        v_4 = 2;
        break;
    case ${mp_bea_m_chest_001}:
        v_4 = 3;
        break;
    case ${mp_bea_m_head_000}:
        v_4 = 4;
        break;
    case ${mp_bea_m_head_001}:
        v_4 = 5;
        break;
    case ${mp_bea_m_stom_000}:
        v_4 = 6;
        break;
    case ${mp_bea_m_larm_000}:
        v_4 = 7;
        break;
    case ${mp_bea_m_rleg_000}:
        v_4 = 8;
        break;
    case ${mp_bea_m_rarm_000}:
        v_4 = 9;
        break;
    case ${mp_bea_m_lleg_000}:
        v_4 = 10;
        break;
    case ${mp_bea_m_neck_000}:
        v_4 = 11;
        break;
    case ${mp_bea_m_neck_001}:
        v_4 = 12;
        break;
    case ${mp_bea_m_rarm_001}:
        v_4 = 13;
        break;
    case ${mp_bea_m_head_002}:
        v_4 = 14;
        break;
    case ${mp_bea_m_stom_001}:
        v_4 = 15;
        break;
    case 0xd69bb0a5:
        v_4 = 16;
        break;
    case 0xa867d43e:
        v_4 = 17;
        break;
    case 0xa5eccf44:
        v_4 = 18;
        break;
    case 0xaf5fe22a:
        v_4 = 19;
        break;
    case 0x8b2899bc:
        v_4 = 20;
        break;
    case 0x9d363dd7:
        v_4 = 21;
        break;
    case 0x6ce35d32:
        v_4 = 22;
        break;
    case 0x7698709c:
        v_4 = 23;
        break;
    case 0x484e9409:
        v_4 = 24;
        break;
    case 0x24344bd5:
        v_4 = 25;
        break;
    case 0x3427ebb8:
        v_4 = 26;
        break;
    case 0x58a834b8:
        v_4 = 27;
        break;
    case 0xfbd22e3:
        v_4 = 28;
        break;
    case 0x5e80f39:
        v_4 = 29;
        break;
    case 0xf171e64d:
        v_4 = 30;
        break;
    case 0xdfc442f2:
        v_4 = 31;
        break;
    case 0xd695b095:
        v_4 = 32;
        break;
    case 0xcd369dd7:
        v_4 = 33;
        break;
    case 0xa5d6cf14:
        v_4 = 34;
        break;
    case 0xd29ea8a3:
        v_4 = 35;
        break;
    case ${mp_buis_m_back_000}:
        v_4 = 36;
        break;
    case ${mp_buis_m_chest_000}:
        v_4 = 37;
        break;
    case ${mp_buis_m_chest_001}:
        v_4 = 38;
        break;
    case ${mp_buis_m_leftarm_000}:
        v_4 = 39;
        break;
    case ${mp_buis_m_leftarm_001}:
        v_4 = 40;
        break;
    case ${mp_buis_m_neck_000}:
        v_4 = 41;
        break;
    case ${mp_buis_m_neck_001}:
        v_4 = 42;
        break;
    case ${mp_buis_m_neck_002}:
        v_4 = 43;
        break;
    case ${mp_buis_m_neck_003}:
        v_4 = 44;
        break;
    case ${mp_buis_m_rightarm_000}:
        v_4 = 45;
        break;
    case ${mp_buis_m_rightarm_001}:
        v_4 = 46;
        break;
    case ${mp_buis_m_stomach_000}:
        v_4 = 47;
        break;
    case ${mp_male_crew_tat_000}:
        v_4 = 48;
        break;
    case ${mp_male_crew_tat_001}:
        v_4 = 49;
        break;
    case ${fm_bus_m_hair_000_a}:
        v_4 = 50;
        break;
    case ${fm_bus_m_hair_000_b}:
        v_4 = 51;
        break;
    case ${fm_bus_m_hair_000_c}:
        v_4 = 52;
        break;
    case ${fm_bus_m_hair_000_d}:
        v_4 = 53;
        break;
    case ${fm_bus_m_hair_000_e}:
        v_4 = 54;
        break;
    case ${fm_bus_m_hair_001_a}:
        v_4 = 55;
        break;
    case ${fm_bus_m_hair_001_b}:
        v_4 = 56;
        break;
    case ${fm_bus_m_hair_001_c}:
        v_4 = 57;
        break;
    case ${fm_bus_m_hair_001_d}:
        v_4 = 58;
        break;
    case ${fm_bus_m_hair_001_e}:
        v_4 = 59;
        break;
    case 0x44fd42a7:
        v_4 = 60;
        break;
    case 0x291bdd1:
        v_4 = 61;
        break;
    case 0xefe21872:
        v_4 = 62;
        break;
    case 0x1e1c74e6:
        v_4 = 63;
        break;
    case 0xf2dd709:
        v_4 = 64;
        break;
    case 0xc569c382:
        v_4 = 65;
        break;
    case 0xbb18aee0:
        v_4 = 66;
        break;
    case 0x705f996f:
        v_4 = 67;
        break;
    case 0xd69665db:
        v_4 = 68;
        break;
    case 0x8bc25034:
        v_4 = 69;
        break;
    case 0x16e5f311:
        v_4 = 70;
        break;
    case 0xe9fa993b:
        v_4 = 71;
        break;
    case 0xfab03aa6:
        v_4 = 72;
        break;
    case 0x6d73202e:
        v_4 = 73;
        break;
    case 0xc421cd8a:
        v_4 = 74;
        break;
    case 0xd30d6b61:
        v_4 = 75;
        break;
    case 0xb7d634f3:
        v_4 = 76;
        break;
    case 0x4f6ae432:
        v_4 = 77;
        break;
    case 0x20f50747:
        v_4 = 78;
        break;
    case 0x33542c05:
        v_4 = 79;
        break;
    case 0x9d6cff09:
        v_4 = 80;
        break;
    case 0xfacd39c8:
        v_4 = 81;
        break;
    case 0x4ca15d6f:
        v_4 = 82;
        break;
    case 0x1f30028d:
        v_4 = 83;
        break;
    case 0x3110a64e:
        v_4 = 84;
        break;
    case 0xb593af56:
        v_4 = 85;
        break;
    case 0x75a52e2:
        v_4 = 86;
        break;
    case 0x1608f03f:
        v_4 = 87;
        break;
    case 0xebe79bfd:
        v_4 = 88;
        break;
    case 0x532eea9a:
        v_4 = 89;
        break;
    case 0x6a3f1bea:
        v_4 = 90;
        break;
    case 0xd8a178ad:
        v_4 = 91;
        break;
    case 0xbedc4523:
        v_4 = 92;
        break;
    case 0x1f4185ec:
        v_4 = 93;
        break;
    case 0x92f8ed89:
        v_4 = 94;
        break;
    case 0x7ca7c0e7:
        v_4 = 95;
        break;
    case 0x6e5d2452:
        v_4 = 96;
        break;
    case 0xe618139a:
        v_4 = 97;
        break;
    case 0x545b701f:
        v_4 = 98;
        break;
    case 0x4aa45cb1:
        v_4 = 99;
        break;
    case 0x354330f3:
        v_4 = 100;
        break;
    }
    switch (a_0) {
    case 0x1942f8f3:
        v_4 = 101;
        break;
    case 0xaa889b80:
        v_4 = 102;
        break;
    case 0xe44e8f0b:
        v_4 = 103;
        break;
    case 0xee0ba285:
        v_4 = 104;
        break;
    case 0xd62bf2a6:
        v_4 = 105;
        break;
    case 0xcaef5c2d:
        v_4 = 106;
        break;
    case 0xb92cb8a8:
        v_4 = 107;
        break;
    case 0xf6d6528:
        v_4 = 108;
        break;
    case 0x398ea4f7:
        v_4 = 109;
        break;
    case 0x2ad8078a:
        v_4 = 110;
        break;
    case 0x74d29b7e:
        v_4 = 111;
        break;
    case 0x478940ec:
        v_4 = 112;
        break;
    case 0x90465265:
        v_4 = 113;
        break;
    case 0x9be4c61b:
        v_4 = 114;
        break;
    case 0x8a3522bc:
        v_4 = 115;
        break;
    case 0x79778141:
        v_4 = 116;
        break;
    case 0xf1fbf258:
        v_4 = 117;
        break;
    case 0xe5a9d9b4:
        v_4 = 118;
        break;
    case 0xd868c8fd:
        v_4 = 119;
        break;
    case 0xe9d96bde:
        v_4 = 120;
        break;
    case 0xb487013a:
        v_4 = 121;
        break;
    case 0xc64ca4c5:
        v_4 = 122;
        break;
    case 0xec9b5be:
        v_4 = 123;
        break;
    case 0x20e0d9ec:
        v_4 = 124;
        break;
    case 0x6ba4ef73:
        v_4 = 125;
        break;
    case 0xfd6612f7:
        v_4 = 126;
        break;
    case 0x45df23e8:
        v_4 = 127;
        break;
    case 0x57bcc7a3:
        v_4 = 128;
        break;
    case 0x815b9bbc:
        v_4 = 129;
        break;
    case 0x931e3f41:
        v_4 = 130;
        break;
    case 0xca542db4:
        v_4 = 131;
        break;
    case 0xee957636:
        v_4 = 132;
        break;
    case 0x25fa64ff:
        v_4 = 133;
        break;
    case 0xb82f896b:
        v_4 = 134;
        break;
    case 0x135bbfc2:
        v_4 = 135;
        break;
    case 0x139cc044:
        v_4 = 136;
        break;
    case 0x6e8ff629:
        v_4 = 137;
        break;
    case 0xc91a9d:
        v_4 = 138;
        break;
    case 0x713d015f:
        v_4 = 139;
        break;
    case 0x8365a5b0:
        v_4 = 140;
        break;
    case 0x949fc824:
        v_4 = 141;
        break;
    case 0x38dcae02:
        v_4 = 142;
        break;
    case 0x22e38210:
        v_4 = 143;
        break;
    case 0x1d2ef6a7:
        v_4 = 144;
        break;
    case 0xc875558:
        v_4 = 145;
        break;
    case 0x6de01818:
        v_4 = 146;
        break;
    case 0xa099fd8b:
        v_4 = 147;
        break;
    case 0x53646311:
        v_4 = 148;
        break;
    case 0x45b2c7ae:
        v_4 = 149;
        break;
    case 0x87154a76:
        v_4 = 150;
        break;
    case 0xb0609d0c:
        v_4 = 151;
        break;
    case 0xa98c8e50:
        v_4 = 152;
        break;
    case 0xb7e32afd:
        v_4 = 153;
        break;
    case 0x7b1eb175:
        v_4 = 154;
        break;
    case 0xd8686c07:
        v_4 = 155;
        break;
    case 0x63e7b8ea:
        v_4 = 156;
        break;
    case 0x98da22d2:
        v_4 = 157;
        break;
    case 0x96a71e6c:
        v_4 = 158;
        break;
    case 0x87d4ab7c:
        v_4 = 159;
        break;
    case 0x758986e6:
        v_4 = 160;
        break;
    case 0xea5ff091:
        v_4 = 161;
        break;
    case 0xd82dcc2d:
        v_4 = 162;
        break;
    case 0xcf0c39ea:
        v_4 = 163;
        break;
    case 0xbf6b9aa9:
        v_4 = 164;
        break;
    case 0x20c95d63:
        v_4 = 165;
        break;
    case 0x55c8c769:
        v_4 = 166;
        break;
    case 0x404a3da:
        v_4 = 167;
        break;
    case 0x88d42e9b:
        v_4 = 168;
        break;
    case 0x571d4b2e:
        v_4 = 169;
        break;
    case 0x9306c300:
        v_4 = 170;
        break;
    case 0xb15dffae:
        v_4 = 171;
        break;
    case 0xb66c89cb:
        v_4 = 172;
        break;
    case 0xc4daa6a7:
        v_4 = 173;
        break;
    case 0xd9f2d0d7:
        v_4 = 174;
        break;
    case 0xfd8617fd:
        v_4 = 175;
        break;
    case 0x8cabb916:
        v_4 = 176;
        break;
    case 0x7f151de9:
        v_4 = 177;
        break;
    case 0x685ef07d:
        v_4 = 178;
        break;
    case 0x5a9354e6:
        v_4 = 179;
        break;
    case 0x8ae63573:
        v_4 = 180;
        break;
    case 0x77940ecf:
        v_4 = 181;
        break;
    case 0x6159e25b:
        v_4 = 182;
        break;
    case 0x25b99291:
        v_4 = 183;
        break;
    case 0xf4ac37ac:
        v_4 = 184;
        break;
    case 0x28f2a05:
        v_4 = 185;
        break;
    case 0xa9106a68:
        v_4 = 186;
        break;
    case 0xdbe0f2df:
        v_4 = 187;
        break;
    case 0xdb709e8d:
        v_4 = 188;
        break;
    case 0xe56621d3:
        v_4 = 189;
        break;
    case 0x2c10f3d1:
        v_4 = 190;
        break;
    case 0x1d8656bc:
        v_4 = 191;
        break;
    case 0x9b76d29b:
        v_4 = 192;
        break;
    case 0x46c7293d:
        v_4 = 193;
        break;
    case 0x39018db2:
        v_4 = 194;
        break;
    case 0x622be006:
        v_4 = 195;
        break;
    case 0xe47e64a9:
        v_4 = 196;
        break;
    case 0x8fbebb2b:
        v_4 = 197;
        break;
    case 0x81fb1fa4:
        v_4 = 198;
        break;
    case 0x12babded:
        v_4 = 199;
        break;
    case 0x59a1cbba:
        v_4 = 200;
        break;
    }
    switch (a_0) {
    case 0x6f01f67a:
        v_4 = 201;
        break;
    case 0x2a3a6cf0:
        v_4 = 202;
        break;
    case 0xb8090887:
        v_4 = 203;
        break;
    case 0x6a7a5cb:
        v_4 = 204;
        break;
    case 0xfe46634a:
        v_4 = 205;
        break;
    case 0x93178cee:
        v_4 = 206;
        break;
    case 0xe0f70831:
        v_4 = 207;
        break;
    case 0xf385ad4e:
        v_4 = 208;
        break;
    case 0xee805531:
        v_4 = 209;
        break;
    case 0x13e7aad:
        v_4 = 210;
        break;
    case 0xfaa56790:
        v_4 = 211;
        break;
    case 0x93821599:
        v_4 = 212;
        break;
    case 0xa150b136:
        v_4 = 213;
        break;
    case 0xb706dca2:
        v_4 = 214;
        break;
    case 0xc4be7811:
        v_4 = 215;
        break;
    case 0xcc2786e7:
        v_4 = 216;
        break;
    case 0xda402318:
        v_4 = 217;
        break;
    case 0xeda249dc:
        v_4 = 218;
        break;
    case 0xfdb7ea07:
        v_4 = 219;
        break;
    case 0x211f30d5:
        v_4 = 220;
        break;
    case 0x37665d63:
        v_4 = 221;
        break;
    case 0x8347f445:
        v_4 = 222;
        break;
    case 0x718150b8:
        v_4 = 223;
        break;
    case 0xa0abaf0c:
        v_4 = 224;
        break;
    case 0x8eee0b91:
        v_4 = 225;
        break;
    case 0xc3b0f516:
        v_4 = 226;
        break;
    case 0xb18350bb:
        v_4 = 227;
        break;
    case 0xe732bc1d:
        v_4 = 228;
        break;
    case 0xfd23e7ff:
        v_4 = 229;
        break;
    case 0xeaa64304:
        v_4 = 230;
        break;
    case 0x209caef0:
        v_4 = 231;
        break;
    case 0x430960c9:
        v_4 = 232;
        break;
    case 0x34f5c4a2:
        v_4 = 233;
        break;
    case 0x27afaa16:
        v_4 = 234;
        break;
    case 0x19810db9:
        v_4 = 235;
        break;
    case 0x42d7606d:
        v_4 = 236;
        break;
    case 0x350fc4de:
        v_4 = 237;
        break;
    case 0x26cda85a:
        v_4 = 238;
        break;
    case 0x19330d25:
        v_4 = 239;
        break;
    case 0x61301d1e:
        v_4 = 240;
        break;
    case 0x8c0772cc:
        v_4 = 241;
        break;
    case 0xda917ddf:
        v_4 = 242;
        break;
    case 0x6446914b:
        v_4 = 243;
        break;
    case 0x3ce9c28e:
        v_4 = 244;
        break;
    case 0x4ea46603:
        v_4 = 245;
        break;
    case 0x216d0b95:
        v_4 = 246;
        break;
    case 0x332eaf18:
        v_4 = 247;
        break;
    case 0xfe274392:
        v_4 = 248;
        break;
    case 0xec72a029:
        v_4 = 249;
        break;
    case 0xa9791a37:
        v_4 = 250;
        break;
    case 0xff7e733:
        v_4 = 251;
        break;
    case 0x5d9705b5:
        v_4 = 252;
        break;
    case 0x9f73095c:
        v_4 = 253;
        break;
    case 0xd57f7574:
        v_4 = 254;
        break;
    case 0x386a1a2e:
        v_4 = 255;
        break;
    case 0xab297fab:
        v_4 = 256;
        break;
    case 0x1a945fc1:
        v_4 = 257;
        break;
    case 0x2871fb7c:
        v_4 = 258;
        break;
    case 0xcd0f59cd:
        v_4 = 259;
        break;
    case 0x9a33f417:
        v_4 = 260;
        break;
    case 0xcc89b230:
        v_4 = 261;
        break;
    }
    if (v_4 != -1) {
        a_1 = 129 + v_4;
        return 1;
    }
    return 0;
}

auto sub_5568a(auto a_0) {
    switch (ENTITY::GET_ENTITY_MODEL(a_0)) {
    case ${player_zero}:
        return 0;
        break;
    case ${player_one}:
        return 1;
        break;
    case ${player_two}:
        return 2;
        break;
    case ${mp_m_freemode_01}:
        return 3;
        break;
    case ${mp_f_freemode_01}:
        return 4;
        break;
    }
    return 0;
}

void sub_556df(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7) {
    g_16416._f50C/*{4}*/ = a_0;
    g_16416._f510 = a_4;
    g_16416._f511 = a_5;
    g_16416._f512 = a_6;
    g_16416._f513 = a_7;
}

auto sub_55718(auto a_0, auto a_1, auto a_2) {
    if (a_2 <= 0) {
        return 1;
    }
    if ((a_0 == ${weapon_sniperrifle}) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${trevor2}) != 0)) {
        if ((a_1 == ${component_at_scope_max}) || (a_1 == ${component_at_ar_supp_02})) {
            return 1;
        }
    }
    return 0;
}

void sub_55763(auto a_0) {
    if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (a_0 != 0)) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            v_5 = sub_2cfd6(a_0, 0);
            for (v_3 = 0; v_3 < v_5; v_3 += 1) {
                if (sub_27537(&l_4E7, a_0, v_3, 0)) {
                    v_4 = sub_1be7f(a_0, l_4E7._f9, l_4E7._fA);
                    if (v_4 != 0) {
                        if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                            if (((((l_4E7._fA == 0) && (l_4E7._f9 == l_41F)) || ((l_4E7._fA == 2) && (l_4E7._f9 == l_41F))) || ((l_4E7._fA == 3) && (l_4E7._f9 == l_420))) || ((l_4E7._fA == 1) && (l_4E7._f9 == l_422))) {
                                sub_5585f(v_4, 1, -1);
                            } else { 
                                sub_5585f(v_4, 0, -1);
                            }
                        } else { 
                            sub_5585f(v_4, 0, -1);
                        }
                    }
                }
            }
        }
    }
}

void sub_5585f(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        if (!sub_55a1f(a_0, a_2)) {
            sub_55898(a_0, 1, a_2);
        }
    } else if (sub_55a1f(a_0, a_2)) {
        sub_55898(a_0, 0, a_2);
    }
}

void sub_55898(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_55a06(a_0, a_2);
    v_6 = a_0;
    if (v_6 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_558e6(a_0), v_5, a_2, 1);
    } else { }
}

auto sub_558e6(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 695;
            break;
        case 1:
            return 696;
            break;
        case 2:
            return 697;
            break;
        case 3:
            return 698;
            break;
        case 4:
            return 699;
            break;
        case 5:
            return 700;
            break;
        case 6:
            return 701;
            break;
        case 7:
            return 702;
            break;
        case 8:
            return 703;
            break;
        case 9:
            return 2043;
            break;
        case 10:
            return 2055;
            break;
        case 11:
            return 2082;
            break;
        case 12:
            return 2402;
            break;
        case 13:
            return 2920;
            break;
        }
    }
    return 3790;
}

auto sub_55a06(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_558e6(a_0), a_1, 0);
    return v_4;
}

auto sub_55a1f(auto a_0, auto a_1) {
    if (sub_1bd98()) {
        return 0;
    }
    v_4 = sub_55a06(a_0, a_1);
    v_5 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_4, sub_1008b(v_5));
}

void sub_55a4c(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_55b79(a_0)) {
            sub_55a7d(a_0, 1);
        }
    } else if (sub_55b79(a_0)) {
        sub_55a7d(a_0, 0);
    }
}

void sub_55a7d(auto a_0, auto a_1) {
    v_4 = sub_55b61(a_0);
    v_5 = a_0;
    if (v_5 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_4, sub_1008b(v_5));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_4, sub_1008b(v_5));
        }
        sub_84ba(sub_55ac8(a_0), v_4, -1, 1);
    } else { }
}

auto sub_55ac8(auto a_0) {
    v_3 = a_0;
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 714;
            break;
        case 1:
            return 715;
            break;
        case 2:
            return 716;
            break;
        case 3:
            return 717;
            break;
        case 4:
            return 718;
            break;
        }
    }
    return 3790;
}

auto sub_55b61(auto a_0) {
    v_3 = sub_4b3f(sub_55ac8(a_0), -1, 0);
    return v_3;
}

auto sub_55b79(auto a_0) {
    if (sub_1bd98()) {
        return 0;
    }
    v_3 = sub_55b61(a_0);
    v_4 = a_0;
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

void sub_55ba4(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_1 = 255;
    a_2 = 255;
    a_3 = 255;
    switch (a_0) {
    case 0:
        a_1 = 255;
        a_2 = 255;
        a_3 = 255;
        break;
    case 1:
        a_1 = 255;
        a_2 = 0;
        a_3 = 0;
        break;
    case 2:
        a_1 = 255;
        a_2 = 165;
        a_3 = 0;
        break;
    case 3:
        a_1 = 255;
        a_2 = 255;
        a_3 = 0;
        break;
    case 4:
        a_1 = 0;
        a_2 = 0;
        a_3 = 255;
        break;
    case 5:
        a_1 = 20;
        a_2 = 20;
        a_3 = 20;
        break;
    case 6:
        a_1 = g_1418CE;
        a_2 = g_1418CF;
        a_3 = g_1418D0;
        break;
    case 7:
        a_1 = 0;
        a_2 = 0;
        a_3 = 0;
        break;
    }
}

void sub_55c7f(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        if (!sub_55de8(a_0, a_1, -1)) {
            sub_55cba(a_0, a_1, 1);
        }
    } else if (sub_55de8(a_0, a_1, -1)) {
        sub_55cba(a_0, a_1, 0);
    }
}

void sub_55cba(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_55dcd(a_0, a_1, -1);
    v_6 = sub_1ea29(a_0, a_1);
    if (v_6 > -1) {
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_55d10(a_0, a_1), v_5, -1, 1);
    } else { }
}

auto sub_55d10(auto a_0, auto a_1) {
    v_4 = sub_1ea29(a_0, a_1);
    v_5 = sub_10156(v_4);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_5) {
        case 0:
            return 677;
            break;
        case 1:
            return 678;
            break;
        case 2:
            return 679;
            break;
        case 3:
            return 680;
            break;
        case 4:
            return 1742;
            break;
        case 5:
            return 2408;
            break;
        case 6:
            return 2800;
            break;
        }
    }
    return 1742;
}

auto sub_55dcd(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_4b3f(sub_55d10(a_0, a_1), a_2, 0);
    return v_5;
}

auto sub_55de8(auto a_0, auto a_1, auto a_2) {
    if (sub_1bd98()) {
        return 0;
    }
    v_5 = sub_55dcd(a_0, a_1, a_2);
    v_6 = sub_1ea29(a_0, a_1);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

void sub_55e1d(auto a_0) {
    if ((!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) && (a_0 != 0)) {
        v_3 = 0;
        while (sub_21a3b(&v_4, a_0, v_3, 0)) {
            if (v_4 != 0) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    sub_55c7f(v_4, a_0, WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), a_0, v_4));
                }
            }
            v_3 += 1;
        }
    }
}

auto sub_55e75(auto a_0, auto a_1, auto a_2) {
    WEAPON::GET_MAX_AMMO(PLAYER::PLAYER_PED_ID(), a_0, &v_5);
    if (a_0 == ${weapon_grenadelauncher}) {
        v_6 = a_1 / a_2;
        a_2 -= WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0);
        a_1 = a_2 * v_6;
        return 1;
    } else if (((a_0 == ${weapon_rpg}) || (a_0 == 0x63ab0442)) || (a_0 == 0x7f7497e5)) {
        v_6 = a_1 / a_2;
        v_7 = v_5 - WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0);
        if (v_7 < a_2) {
            a_2 = v_7;
        }
        a_1 = a_2 * v_6;
        return 1;
    }
    return 0;
}

auto sub_55f18(auto a_0, auto a_1) {
    v_6 = 1.0;
    if (WEAPON::GET_MAX_AMMO(PLAYER::PLAYER_PED_ID(), a_0, &v_4)) {
        v_5 = v_4 - WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0);
    }
    for (; v_5 > a_1; v_5 -= a_1) {
        v_6 += 1.0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        WEAPON::GET_MAX_AMMO(PLAYER::PLAYER_PED_ID(), a_0, &v_4);
        if (a_0 == ${weapon_grenadelauncher}) {
            a_1 -= WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0);
            v_6 = ((float)a_1) / __678_$BBDA792448DB5A89(v_4);
        } else if (((a_0 == ${weapon_rpg}) || (a_0 == 0x63ab0442)) || (a_0 == 0x7f7497e5)) {
            v_7 = v_4 - WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0);
            v_6 = __678_$BBDA792448DB5A89(v_7) / __678_$BBDA792448DB5A89(a_1);
        } else { }
    } else { }
    return v_6;
}

auto sub_55fe1(auto a_0, auto a_1) {
    v_4 = a_1 + 1;
    while (sub_27537(&l_4E7, a_0, sub_2afad(a_0, v_4), 1)) {
        if (sub_2b34d(a_0, l_4E7._f9, l_4E7._fA)) {
            a_1 = v_4;
            return 1;
        }
        v_4 += 1;
    }
    return 0;
}

auto sub_5602b(auto a_0, auto a_1) {
    v_4 = a_1 + 1;
    while (sub_21a3b(&l_4E1, a_0, v_4, 1)) {
        if (l_4E1._f2 != -1) {
            a_1 = v_4;
            return 1;
        }
        v_4 += 1;
    }
    return 0;
}

auto sub_56065() {
    return g_4369._f15E5;
}

auto sub_56073(auto a_0, auto a_1) {
    for (v_4 = a_1 - 1; v_4 >= 0; v_4 -= 1) {
        if (sub_27537(&l_4E7, a_0, sub_2afad(a_0, v_4), 1)) {
            if (sub_2b34d(a_0, l_4E7._f9, l_4E7._fA)) {
                a_1 = v_4;
                return 1;
            }
        }
    }
    return 0;
}

auto sub_560c3(auto a_0, auto a_1) {
    for (v_4 = a_1 - 1; v_4 >= 0; v_4 -= 1) {
        if (sub_21a3b(&l_4E1, a_0, v_4, 1)) {
            if (l_4E1._f2 != -1) {
                a_1 = v_4;
                return 1;
            }
        }
    }
    return 0;
}

auto sub_56103(auto a_0, auto a_1) {
    a_1 = -1;
    for (v_4 = 19; v_4 >= 0; v_4 -= 1) {
        if (sub_21a3b(&l_4E1, a_0, v_4, 1)) {
            if (l_4E1._f2 != -1) {
                a_1 = v_4;
                return 1;
            }
        }
    }
    return 0;
}

auto sub_56144(auto a_0, auto a_1) {
    a_1 = -1;
    for (v_4 = sub_2cfd6(a_0, 1) - 1; v_4 >= 0; v_4 -= 1) {
        if (sub_27537(&l_4E7, a_0, sub_2afad(a_0, v_4), 1)) {
            if (sub_2b34d(a_0, l_4E7._f9, l_4E7._fA)) {
                a_1 = v_4;
                return 1;
            }
        }
    }
    return 0;
}

auto sub_5619c(auto a_0, auto a_1) {
    return 0;
}

auto sub_561a5(auto a_0, auto a_1) {
    if (a_1 > 51) {
        return a_1 - 52;
    } else if (a_1 > 46) {
        return a_1 - 47;
    } else if (a_1 > 26) {
        return a_1 - 27;
    } else if (a_1 > 0) {
        return a_1 - 1;
    } else { 
        return a_1;
    }
}

auto sub_561f5(auto a_0, auto a_1) {
    v_4 = PED::GET_PED_DRAWABLE_VARIATION(a_0, 11);
    if (PED::GET_PED_DRAWABLE_VARIATION(a_0, 9) != 0) {
        v_5 = 1;
    }
    v_6 = ENTITY::GET_ENTITY_MODEL(a_0);
    v_7 = DLC1::GET_HASH_NAME_FOR_COMPONENT(a_0, 8, PED::GET_PED_DRAWABLE_VARIATION(a_0, 8), PED::GET_PED_TEXTURE_VARIATION(a_0, 8));
    if (DLC1::_341DE7ED1D2A1BFD(v_7, 0xe556105, 8)) {
        if (a_1 > 51) {
            return 51;
        } else if (a_1 > 46) {
            return 51;
        } else if (a_1 > 26) {
            return 50;
        } else if (a_1 > 0) {
            return 49;
        } else { 
            return 48;
        }
    }
    v_8 = 0;
    if ((a_1 > 51) && (a_1 <= 61)) {
        return a_1;
    } else if (a_1 > 46) {
        v_8 = 30;
    } else if (a_1 > 26) {
        v_8 = 20;
    } else if (a_1 > 0) {
        v_8 = 9;
    } else { 
        v_8 = 0;
    }
    if (v_4 > 15) {
        v_9 = DLC1::GET_HASH_NAME_FOR_COMPONENT(a_0, 11, v_4, PED::GET_PED_TEXTURE_VARIATION(a_0, 11));
        if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x270bbe67, 0)) {
            if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xe067789f, 0)) {
            if (v_5) {
                return 6 + v_8;
            } else { 
                return 6 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xd575d399, 0)) {
            if (a_1 > 46) {
                return 39;
            } else if (a_1 > 26) {
                return 29;
            } else if (a_1 > 0) {
                return 18;
            } else { 
                return 19;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x8fc4ebaa, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (v_5) {
                    return 8 + v_8;
                } else { 
                    return 2 + v_8;
                }
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xed110f62, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (v_5) {
                    return 8 + v_8;
                } else { 
                    return 2 + v_8;
                }
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x5b97677d, 0)) {
            v_A = sub_57274(v_9, 0);
            if (v_6 == ${mp_m_freemode_01}) {
                switch (v_A) {
                case 0:
                    return 2 + v_8;
                    break;
                case 2:
                    if (a_1 > 46) {
                        return 39;
                    } else if (a_1 > 26) {
                        return 29;
                    } else if (a_1 > 0) {
                        return 18;
                    } else { 
                        return 19;
                    }
                    break;
                default:
                    v_4 = sub_57112(v_9);
                    break;
                }
            } else { 
                switch (v_A) {
                case 2:
                    return 7 + v_8;
                    break;
                default:
                    v_4 = sub_57112(v_9);
                    break;
                }
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xecb259f, 0)) {
            if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xafaefeb6, 0)) {
                return 3 + v_8;
            } else { 
                return 7 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x17a179aa, 0)) {
            v_B = sub_56f72(v_9, 0);
            switch (v_B) {
            case 4:
                if (a_1 > 46) {
                    return 39;
                } else if (a_1 > 26) {
                    return 28;
                } else if (a_1 > 0) {
                    return 17;
                } else { 
                    return 8;
                }
                break;
            case 14:
                if (a_1 > 46) {
                    return 39;
                } else if (a_1 > 26) {
                    return 29;
                } else if (a_1 > 0) {
                    return 18;
                } else { 
                    return 19;
                }
                break;
            default:
                v_4 = sub_57112(v_9);
                break;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xd184a7b3, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (v_5) {
                    return 8 + v_8;
                } else { 
                    return 3 + v_8;
                }
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xbd49dd4f, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 1 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x82a8e806, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 2 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x6a57b764, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 2 + v_8;
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 1 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xa028a30d, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 4 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x75d24e59, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x7d1ddcdc, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 2 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xa7483138, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (a_1 > 46) {
                    return 39;
                } else if (a_1 > 26) {
                    return 29;
                } else if (a_1 > 0) {
                    return 18;
                } else { 
                    return 19;
                }
            } else { 
                return 4 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x998795b7, 0) || DLC1::_341DE7ED1D2A1BFD(v_9, 0x555369f8, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xb40ecac5, 0) || DLC1::_341DE7ED1D2A1BFD(v_9, 0x66b90cc3, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x36644f6a, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 2 + v_8;
            }
        } else if ((DLC1::_341DE7ED1D2A1BFD(v_9, 0xbf41032c, 0) || DLC1::_341DE7ED1D2A1BFD(v_9, 0x62be456, 0)) || DLC1::_341DE7ED1D2A1BFD(v_9, 0xc4b605f4, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (v_5) {
                    return 8 + v_8;
                } else { 
                    return 6 + v_8;
                }
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 7 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x79dc15f7, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (a_1 > 46) {
                    return 39;
                } else if (a_1 > 26) {
                    return 29;
                } else if (a_1 > 0) {
                    return 18;
                } else { 
                    return 19;
                }
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x878db15a, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xc090a35f, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (v_5) {
                    return 8 + v_8;
                } else { 
                    return 2 + v_8;
                }
            } else { 
                return 4 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xab5f78fd, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 8 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xc12fa4ad, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                if (v_5) {
                    return 8 + v_8;
                } else { 
                    return 2 + v_8;
                }
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xaf010050, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 4 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xe5b26db2, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xd370c92f, 0)) {
            if (v_6 == ${mp_f_freemode_01}) {
                if (v_5) {
                    if (a_1 > 51) {
                        return 51;
                    } else if (a_1 > 46) {
                        return 51;
                    } else if (a_1 > 26) {
                        return 50;
                    } else if (a_1 > 0) {
                        return 49;
                    } else { 
                        return 48;
                    }
                } else { 
                    return 2 + v_8;
                }
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x8999b582, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
            } else { 
                return 8 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, ${vest_shirt}, 0) && (v_6 == ${mp_f_freemode_01})) {
            if (v_5) {
                return 8 + v_8;
            } else { 
                return 1 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0x78cbc617, 0) && (v_6 == ${mp_f_freemode_01})) {
            if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
        } else if (DLC1::_341DE7ED1D2A1BFD(v_9, 0xabe76b56, 0)) {
            if (v_6 == ${mp_m_freemode_01}) {
                return 3 + v_8;
            } else { 
                return 8 + v_8;
            }
        } else if ((DLC1::_341DE7ED1D2A1BFD(v_9, 0x87b7c5e2, 0) || DLC1::_341DE7ED1D2A1BFD(v_9, 0x1319d76e, 0)) || DLC1::_341DE7ED1D2A1BFD(v_9, 0xcec22d5d, 0)) {
            return 7 + v_8;
        } else { 
            v_4 = sub_57112(v_9);
        }
    }
    if (v_6 == ${mp_m_freemode_01}) {
        switch (v_4) {
        case 0:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 1:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 2:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 7 + v_8;
            }
            break;
        case 3:
            if (v_5) {
                return 3 + v_8;
            } else { 
                return 3 + v_8;
            }
            break;
        case 4:
            if (v_5) {
                return 3 + v_8;
            } else { 
                return 3 + v_8;
            }
            break;
        case 5:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 6:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 2 + v_8;
            }
            break;
        case 7:
            if (v_5) {
                return 3 + v_8;
            } else { 
                return 3 + v_8;
            }
            break;
        case 8:
            if (v_5) {
                return 8 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 9:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 10:
            if (v_5) {
                return 3 + v_8;
            } else { 
                return 3 + v_8;
            }
            break;
        case 11:
            if (v_5) {
                return 8 + v_8;
            } else { 
                return 2 + v_8;
            }
            break;
        case 12:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 13:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 2 + v_8;
            }
            break;
        case 14:
            if (v_5) {
                return 6 + v_8;
            } else { 
                return 6 + v_8;
            }
            break;
        case 15:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 5 + v_8;
            }
            break;
        }
    } else { 
        switch (v_4) {
        case 0:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 1:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 7 + v_8;
            }
            break;
        case 2:
            if (v_5) {
                return 4 + v_8;
            } else { 
                return 3 + v_8;
            }
            break;
        case 3:
            if (v_5) {
                return 6 + v_8;
            } else { 
                return 5 + v_8;
            }
            break;
        case 4:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 5:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 6:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 7 + v_8;
            }
            break;
        case 7:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 7 + v_8;
            }
            break;
        case 8:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 7 + v_8;
            }
            break;
        case 9:
            return 2 + v_8;
            break;
        case 10:
            if (v_5) {
                return 7 + v_8;
            } else { 
                return 7 + v_8;
            }
            break;
        case 11:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 12:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 13:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        case 14:
            if (v_5) {
                return 8 + v_8;
            } else { 
                return 4 + v_8;
            }
            break;
        case 15:
            if (v_5) {
                return 2 + v_8;
            } else { 
                return 1 + v_8;
            }
            break;
        }
    }
    return 1 + v_8;
    return 0;
}

auto sub_56f72(auto a_0, auto a_1) {
    v_4 = -1;
    if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x86366e0, a_1)) {
        v_4 = 0;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x6f19b453, a_1)) {
        v_4 = 1;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x7d8a5134, a_1)) {
        v_4 = 2;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xd29cfb58, a_1)) {
        v_4 = 3;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x6105982b, a_1)) {
        v_4 = 4;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x28d427c5, a_1)) {
        v_4 = 5;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x36a2c362, a_1)) {
        v_4 = 6;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x8c676eee, a_1)) {
        v_4 = 7;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x1a540ac5, a_1)) {
        v_4 = 8;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xfcaf5b3, a_1)) {
        v_4 = 9;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xbcc696c3, a_1)) {
        v_4 = 10;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xcf14bb5f, a_1)) {
        v_4 = 11;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x92aaf8a, a_1)) {
        v_4 = 12;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xd7e4ccff, a_1)) {
        v_4 = 13;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x221e6171, a_1)) {
        v_4 = 14;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xf44f85d4, a_1)) {
        v_4 = 15;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x4ed03adc, a_1)) {
        v_4 = 16;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x20aa5e89, a_1)) {
        v_4 = 17;
    }
    return v_4;
}

auto sub_57112(auto a_0) {
    v_3 = -1;
    if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_0}, 0)) {
        v_3 = 0;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_1}, 0)) {
        v_3 = 1;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_2}, 0)) {
        v_3 = 2;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_3}, 0)) {
        v_3 = 3;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_4}, 0)) {
        v_3 = 4;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_5}, 0)) {
        v_3 = 5;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_6}, 0)) {
        v_3 = 6;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_7}, 0)) {
        v_3 = 7;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_8}, 0)) {
        v_3 = 8;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_9}, 0)) {
        v_3 = 9;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_10}, 0)) {
        v_3 = 10;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_11}, 0)) {
        v_3 = 11;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_12}, 0)) {
        v_3 = 12;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_13}, 0)) {
        v_3 = 13;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xa056f170, 0)) {
        v_3 = 14;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, ${draw_15}, 0)) {
        v_3 = 15;
    }
    return v_3;
}

auto sub_57274(auto a_0, auto a_1) {
    v_4 = -1;
    if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xcc23b7a3, a_1)) {
        v_4 = 0;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xb9f8134c, a_1)) {
        v_4 = 1;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xcc38b7d1, a_1)) {
        v_4 = 2;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xb9d11302, a_1)) {
        v_4 = 3;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xafaefeb6, a_1)) {
        v_4 = 4;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x9d585a09, a_1)) {
        v_4 = 5;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x827b244f, a_1)) {
        v_4 = 6;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x70dd8114, a_1)) {
        v_4 = 7;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x65f36b40, a_1)) {
        v_4 = 8;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x5472c83f, a_1)) {
        v_4 = 9;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x61d7669c, a_1)) {
        v_4 = 10;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x29ad7649, a_1)) {
        v_4 = 11;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0x1772d1d4, a_1)) {
        v_4 = 12;
    } else if (DLC1::_341DE7ED1D2A1BFD(a_0, 0xce1bcb2, a_1)) {
        v_4 = 13;
    }
    return v_4;
}

auto sub_573b8(auto a_0) {
    return sub_573c8(a_0, 10);
}

auto sub_573c8(auto a_0, auto a_1) {
    return GAMEPLAY::IS_BIT_SET(g_188C6B[a_0/*109*/]._f9._f4, a_1);
}

auto sub_573e2(auto a_0) {
    return sub_573f4(PLAYER::PLAYER_ID(), a_0);
}

auto sub_573f4(auto a_0, auto a_1) {
    if (!a_1) {
        if (sub_57427(a_0)) {
            return 0;
        }
    }
    return g_188C6B[a_0/*109*/]._f9 != sub_5741e();
}

auto sub_5741e() {
    return -1;
}

auto sub_57427(auto a_0) {
    if (a_0 != sub_5741e()) {
        if (g_188C6B[a_0/*109*/]._f9 != sub_5741e()) {
            return g_188C6B[a_0/*109*/]._f9 == a_0;
        }
    }
    return 0;
}

void sub_5745a(auto a_0, auto a_1, auto a_2) {
    g_4369._f15E6 = a_0;
    g_4369._f166D = a_2;
    if (g_4369._f15E6 < g_4369._f15E5) {
        g_4369._f15E5 = g_4369._f15E6;
    } else if ((g_4369._f15DF && (g_4369._f15E6 > g_4369._f15E7)) || ((!g_4369._f15DF) && (g_4369._f15E6 >= (g_4369._f15E5 + g_4369._f13E7)))) {
        for (v_5 = g_4369._f15E5; v_5 <= g_4369._f15E6; v_5 += 1) {
            if ((v_5 >= 0) && (v_5 < 127)) {
                if (g_4369._f135F[v_5/*1*/] != 0) {
                    v_6 += 1;
                }
            }
        }
        while ((v_6 > g_4369._f13E7) && (g_4369._f15E5 < 128)) {
            g_4369._f15E5 += 1;
            v_6 = 0;
            for (v_5 = g_4369._f15E5; v_5 <= g_4369._f15E6; v_5 += 1) {
                if ((v_5 >= 0) && (v_5 < 127)) {
                    if (g_4369._f135F[v_5/*1*/] != 0) {
                        v_6 += 1;
                    }
                }
            }
        }
    }
    g_4369._f15DE = 0;
    g_4369._f15DF = 0;
    if (a_1) {
        g_4369._f11D2/*"16"*/ = "";
        g_2708AA._f15/*"16"*/ = "";
    }
}

void sub_575a8(auto a_0, auto a_1, auto a_2) {
    if (!sub_57c94(a_0, a_1, a_2)) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        sub_57af6(a_2, a_1, 1);
    } else { 
        sub_575df(a_0, a_1, a_2, 1);
    }
}

void sub_575df(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_7507(a_0)) {
        v_6 = sub_57893(a_0, a_1, a_2);
        v_7 = sub_1ea29(a_2, a_1);
        v_8 = sub_1ea1c(v_7);
        if (a_3) {
            GAMEPLAY::SET_BIT(&v_6, v_8);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_6, v_8);
        }
        sub_57632(a_0, a_1, a_2, v_6);
    }
}

void sub_57632(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = sub_1ea29(a_2, a_1);
    v_7 = sub_1f89a(v_6);
    switch (v_7) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xe35e955, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xf4b3e048, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xf206e229, a_3, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x464d76, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x870e84ff, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xe44c46b4, a_3, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x30552d93, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x6eaed43c, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xd38ba533, a_3, 1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x52a57233, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x8287fbee, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xc519884f, a_3, 1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x44e2d6ae, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xbbc9ee75, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xb76becf4, a_3, 1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x77483b7c, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x5d0b30f5, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xad1f585b, a_3, 1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x6ebdaa47, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x77305ca, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x9f67bcec, a_3, 1);
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_57893(auto a_0, auto a_1, auto a_2) {
    v_6 = sub_1ea29(a_2, a_1);
    v_7 = sub_1f89a(v_6);
    switch (v_7) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xe35e955, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf4b3e048, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xf206e229, &v_5, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x464d76, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x870e84ff, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xe44c46b4, &v_5, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x30552d93, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x6eaed43c, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xd38ba533, &v_5, -1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x52a57233, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x8287fbee, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xc519884f, &v_5, -1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x44e2d6ae, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xbbc9ee75, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xb76becf4, &v_5, -1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x77483b7c, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x5d0b30f5, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xad1f585b, &v_5, -1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x6ebdaa47, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x77305ca, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x9f67bcec, &v_5, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_5;
}

void sub_57af6(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        if (!sub_57c5f(a_0, a_1, -1)) {
            sub_57b31(a_0, a_1, 1);
        }
    } else if (sub_57c5f(a_0, a_1, -1)) {
        sub_57b31(a_0, a_1, 0);
    }
}

void sub_57b31(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_57c44(a_0, a_1, -1);
    v_6 = sub_1ea29(a_0, a_1);
    if (v_6 > -1) {
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_57b87(a_0, a_1), v_5, -1, 1);
    } else { }
}

auto sub_57b87(auto a_0, auto a_1) {
    v_4 = sub_1ea29(a_0, a_1);
    v_5 = sub_10156(v_4);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_5) {
        case 0:
            return 644;
            break;
        case 1:
            return 645;
            break;
        case 2:
            return 646;
            break;
        case 3:
            return 647;
            break;
        case 4:
            return 1741;
            break;
        case 5:
            return 2407;
            break;
        case 6:
            return 2799;
            break;
        }
    }
    return 3790;
}

auto sub_57c44(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_4b3f(sub_57b87(a_0, a_1), a_2, 0);
    return v_5;
}

auto sub_57c5f(auto a_0, auto a_1, auto a_2) {
    if (sub_1bd98()) {
        return 0;
    }
    v_5 = sub_57c44(a_0, a_1, a_2);
    v_6 = sub_1ea29(a_0, a_1);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

auto sub_57c94(auto a_0, auto a_1, auto a_2) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_57ff9(a_2, a_1, -1) && (!sub_57c5f(a_2, a_1, -1))) {
            return 1;
        }
    } else if (sub_57ce7(a_0, a_1, a_2) && (!sub_58108(a_0, a_1, a_2))) {
        return 1;
    }
    return 0;
}

auto sub_57ce7(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        if (sub_57f93(a_1)) {
            return 1;
        }
        v_5 = sub_57d2f(a_0, a_1, a_2);
        v_6 = sub_1ea29(a_2, a_1);
        v_7 = sub_1ea1c(v_6);
        return GAMEPLAY::IS_BIT_SET(v_5, v_7);
    }
    return 0;
}

auto sub_57d2f(auto a_0, auto a_1, auto a_2) {
    v_6 = sub_1ea29(a_2, a_1);
    v_7 = sub_1f89a(v_6);
    switch (v_7) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x3b5f973, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x4622cb9a, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x392224c0, &v_5, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x5f3fb081, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x738c266c, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x2700807d, &v_5, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x54859b0d, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x61ce82f1, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x5affe87b, &v_5, -1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x83da79b6, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x6f001d94, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x51b4d5e5, &v_5, -1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x7524dc4b, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x7cf2b979, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x7f7db176, &v_5, -1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x18a0235f, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x4aa554df, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x76079e8a, &v_5, -1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x95184c2, &v_5, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x586ef072, &v_5, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x6a6d8742, &v_5, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_5;
}

auto sub_57f93(auto a_0) {
    switch (a_0) {
    case 0x99aeeb3b:
    case ${weapon_bullpupshotgun}:
    case ${weapon_assaultsmg}:
    case ${weapon_hammer}:
        return 1;
        break;
    }
    for (v_3 = 0; v_3 < DLC1::GET_NUM_DLC_WEAPONS(); v_3 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_3, &v_4)) {
            if (v_4._f1 == a_0) {
                if (!DLC1::_IS_OUTFIT_EMPTY(v_4)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_57ff9(auto a_0, auto a_1, auto a_2) {
    if (sub_1bd98()) {
        return 0;
    }
    v_5 = sub_58030(a_0, a_1, a_2);
    v_6 = sub_1ea29(a_0, a_1);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

auto sub_58030(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_4b3f(sub_5804b(a_0, a_1), a_2, 0);
    return v_5;
}

auto sub_5804b(auto a_0, auto a_1) {
    v_4 = sub_1ea29(a_0, a_1);
    v_5 = sub_10156(v_4);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_5) {
        case 0:
            return 671;
            break;
        case 1:
            return 672;
            break;
        case 2:
            return 673;
            break;
        case 3:
            return 674;
            break;
        case 4:
            return 1739;
            break;
        case 5:
            return 2405;
            break;
        case 6:
            return 2797;
            break;
        }
    }
    return 1739;
}

auto sub_58108(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        v_5 = sub_57893(a_0, a_1, a_2);
        v_6 = sub_1ea29(a_2, a_1);
        v_7 = sub_1ea1c(v_6);
        return GAMEPLAY::IS_BIT_SET(v_5, v_7);
    }
    return 0;
}

auto sub_58143(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    a_4 = 0;
    a_5 = -1;
    a_6 = -1;
    if (a_2 == 11) {
        if (a_3 == 0) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 11;
                a_6 = 1;
                break;
            case 2:
                a_5 = 12;
                a_6 = 0;
                break;
            case 3:
                a_4 = ${weapon_rpg};
                break;
            }
        } else if (a_3 == 1) {
            switch (a_0) {
            case 0:
                a_5 = 11;
                a_6 = 0;
                break;
            case 1:
                a_5 = 11;
                a_6 = 2;
                break;
            case 2:
                a_5 = 12;
                a_6 = 1;
                break;
            case 3:
                a_4 = ${weapon_rpg};
                break;
            }
        } else if (a_3 == 2) {
            switch (a_0) {
            case 0:
                a_5 = 11;
                a_6 = 1;
                break;
            case 1:
                a_5 = 11;
                a_6 = 3;
                break;
            case 2:
                a_5 = 12;
                a_6 = 2;
                break;
            case 3:
                a_4 = ${weapon_grenadelauncher};
                break;
            }
        } else if (a_3 == 3) {
            switch (a_0) {
            case 0:
                a_5 = 11;
                a_6 = 2;
                break;
            case 1:
                a_4 = ${weapon_smokegrenade};
                break;
            case 2:
                a_5 = 12;
                a_6 = 3;
                break;
            case 3:
                a_4 = ${weapon_minigun};
                break;
            }
        }
    } else if (a_2 == 12) {
        if (a_3 == 0) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 12;
                a_6 = 1;
                break;
            case 2:
                a_5 = 13;
                a_6 = 0;
                break;
            case 3:
                a_5 = 11;
                a_6 = 0;
                break;
            }
        } else if (a_3 == 1) {
            switch (a_0) {
            case 0:
                a_5 = 12;
                a_6 = 0;
                break;
            case 1:
                a_5 = 12;
                a_6 = 2;
                break;
            case 2:
                a_5 = 13;
                a_6 = 1;
                break;
            case 3:
                a_5 = 11;
                a_6 = 1;
                break;
            }
        } else if (a_3 == 2) {
            switch (a_0) {
            case 0:
                a_5 = 12;
                a_6 = 1;
                break;
            case 1:
                a_5 = 12;
                a_6 = 3;
                break;
            case 2:
                a_5 = 13;
                a_6 = 2;
                break;
            case 3:
                a_5 = 11;
                a_6 = 2;
                break;
            }
        } else if (a_3 == 3) {
            switch (a_0) {
            case 0:
                a_5 = 12;
                a_6 = 2;
                break;
            case 1:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_smokegrenade};
                } else { 
                    a_4 = ${weapon_grenade};
                }
                break;
            case 2:
                a_5 = 13;
                a_6 = 3;
                break;
            case 3:
                a_5 = 11;
                a_6 = 3;
                break;
            }
        }
    } else if (a_2 == 13) {
        if (a_3 == 0) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 13;
                a_6 = 1;
                break;
            case 2:
                a_5 = 14;
                a_6 = 0;
                break;
            case 3:
                a_5 = 12;
                a_6 = 0;
                break;
            }
        } else if (a_3 == 1) {
            switch (a_0) {
            case 0:
                a_5 = 13;
                a_6 = 0;
                break;
            case 1:
                a_5 = 13;
                a_6 = 2;
                break;
            case 2:
                a_5 = 14;
                a_6 = 1;
                break;
            case 3:
                a_5 = 12;
                a_6 = 1;
                break;
            }
        } else if (a_3 == 2) {
            switch (a_0) {
            case 0:
                a_5 = 13;
                a_6 = 1;
                break;
            case 1:
                a_5 = 13;
                a_6 = 3;
                break;
            case 2:
                a_5 = 14;
                a_6 = 2;
                break;
            case 3:
                a_5 = 12;
                a_6 = 2;
                break;
            }
        } else if (a_3 == 3) {
            switch (a_0) {
            case 0:
                a_5 = 13;
                a_6 = 2;
                break;
            case 1:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_grenade};
                } else { 
                    a_4 = 0xab564b93;
                }
                break;
            case 2:
                a_5 = 14;
                a_6 = 3;
                break;
            case 3:
                a_5 = 12;
                a_6 = 3;
                break;
            }
        }
    } else if (a_2 == 14) {
        if (a_3 == 0) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 14;
                a_6 = 1;
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 15;
                    a_6 = 0;
                } else { 
                    a_4 = 0;
                }
                break;
            case 3:
                a_5 = 13;
                a_6 = 0;
                break;
            }
        } else if (a_3 == 1) {
            switch (a_0) {
            case 0:
                a_5 = 14;
                a_6 = 0;
                break;
            case 1:
                a_5 = 14;
                a_6 = 2;
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 15;
                    a_6 = 1;
                } else { 
                    a_4 = 0;
                }
                break;
            case 3:
                a_5 = 13;
                a_6 = 1;
                break;
            }
        } else if (a_3 == 2) {
            switch (a_0) {
            case 0:
                a_5 = 14;
                a_6 = 1;
                break;
            case 1:
                a_5 = 14;
                a_6 = 3;
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 15;
                    a_6 = 2;
                } else { 
                    a_4 = 0;
                }
                break;
            case 3:
                a_5 = 13;
                a_6 = 2;
                break;
            }
        } else if (a_3 == 3) {
            switch (a_0) {
            case 0:
                a_5 = 14;
                a_6 = 2;
                break;
            case 1:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_stickybomb};
                } else { 
                    a_4 = ${weapon_petrolcan};
                }
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 15;
                    a_6 = 3;
                } else { 
                    a_4 = 0;
                }
                break;
            case 3:
                a_5 = 13;
                a_6 = 3;
                break;
            }
        }
    } else if (a_2 == 15) {
        if (a_3 == 0) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 15;
                a_6 = 1;
                break;
            case 2:
                a_4 = 0;
                break;
            case 3:
                a_5 = 14;
                a_6 = 0;
                break;
            }
        } else if (a_3 == 1) {
            switch (a_0) {
            case 0:
                a_5 = 15;
                a_6 = 0;
                break;
            case 1:
                a_5 = 15;
                a_6 = 2;
                break;
            case 2:
                a_4 = 0;
                break;
            case 3:
                a_5 = 14;
                a_6 = 1;
                break;
            }
        } else if (a_3 == 2) {
            switch (a_0) {
            case 0:
                a_5 = 15;
                a_6 = 1;
                break;
            case 1:
                a_5 = 15;
                a_6 = 3;
                break;
            case 2:
                a_4 = 0;
                break;
            case 3:
                a_5 = 14;
                a_6 = 2;
                break;
            }
        } else if (a_3 == 3) {
            switch (a_0) {
            case 0:
                a_5 = 15;
                a_6 = 2;
                break;
            case 1:
                a_4 = ${weapon_petrolcan};
                break;
            case 2:
                a_4 = 0;
                break;
            case 3:
                a_5 = 14;
                a_6 = 3;
                break;
            }
        }
    } else if (a_2 == 16) {
        if (a_3 == 0) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 16;
                a_6 = 3;
                break;
            case 2:
                a_5 = 16;
                a_6 = 1;
                break;
            case 3:
                a_4 = 0;
                break;
            }
        } else if (a_3 == 1) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 16;
                a_6 = 4;
                break;
            case 2:
                a_5 = 16;
                a_6 = 2;
                break;
            case 3:
                a_5 = 16;
                a_6 = 0;
                break;
            }
        } else if (a_3 == 2) {
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_5 = 16;
                a_6 = 4;
                break;
            case 2:
                a_4 = 0;
                break;
            case 3:
                a_5 = 16;
                a_6 = 1;
                break;
            }
        } else if (a_3 == 3) {
            switch (a_0) {
            case 0:
                a_5 = 16;
                a_6 = 0;
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_5 = 16;
                a_6 = 4;
                break;
            case 3:
                a_4 = 0;
                break;
            }
        } else if (a_3 == 4) {
            switch (a_0) {
            case 0:
                a_5 = 16;
                a_6 = 1;
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_5 = 16;
                a_6 = 2;
                break;
            case 3:
                a_5 = 16;
                a_6 = 3;
                break;
            }
        }
    } else { 
        switch (a_1) {
        case ${weapon_heavypistol}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = 0x47757124;
                } else { 
                    a_4 = ${weapon_stungun};
                }
                break;
            case 3:
                a_4 = ${weapon_bottle};
                break;
            }
            break;
        case 0x47757124:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_appistol};
                break;
            case 3:
                a_4 = ${weapon_heavypistol};
                break;
            }
            break;
        case ${weapon_stungun}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_appistol};
                break;
            case 3:
                a_4 = ${weapon_heavypistol};
                break;
            }
            break;
        case ${weapon_appistol}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_combatpistol};
                break;
            case 3:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = 0x47757124;
                } else { 
                    a_4 = ${weapon_stungun};
                }
                break;
            }
            break;
        case ${weapon_combatpistol}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_pistol};
                break;
            case 3:
                a_4 = ${weapon_appistol};
                break;
            }
            break;
        case ${weapon_pistol}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_snspistol};
                break;
            case 3:
                a_4 = ${weapon_combatpistol};
                break;
            }
            break;
        case ${weapon_snspistol}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_heavysniper};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0x99aeeb3b;
                break;
            case 3:
                a_4 = ${weapon_pistol};
                break;
            }
            break;
        case 0x99aeeb3b:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_combatmg};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0x83839c4;
                break;
            case 3:
                a_4 = ${weapon_snspistol};
                break;
            }
            break;
        case 0x83839c4:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_combatmg};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_smokegrenade};
                break;
            case 3:
                a_4 = 0x99aeeb3b;
                break;
            }
            break;
        case ${weapon_microsmg}:
            switch (a_0) {
            case 0:
                a_4 = ${gadget_parachute};
                break;
            case 1:
                a_4 = ${weapon_smg};
                break;
            case 2:
                a_4 = ${weapon_pumpshotgun};
                break;
            case 3:
                a_4 = 0;
                break;
            }
            break;
        case ${weapon_smg}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_microsmg};
                break;
            case 1:
                a_4 = ${weapon_knife};
                break;
            case 2:
                a_4 = ${weapon_assaultshotgun};
                break;
            case 3:
                a_4 = 0;
                break;
            }
            break;
        case ${weapon_assaultrifle}:
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_4 = ${weapon_carbinerifle};
                break;
            case 2:
                a_4 = ${weapon_sniperrifle};
                break;
            case 3:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_assaultsmg};
                } else { 
                    a_4 = ${weapon_sawnoffshotgun};
                }
                break;
            }
            break;
        case ${weapon_carbinerifle}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_assaultrifle};
                break;
            case 1:
                a_4 = ${weapon_advancedrifle};
                break;
            case 2:
                a_4 = ${weapon_sniperrifle};
                break;
            case 3:
                a_4 = ${weapon_pumpshotgun};
                break;
            }
            break;
        case ${weapon_advancedrifle}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_carbinerifle};
                break;
            case 1:
                a_4 = ${weapon_hammer};
                break;
            case 2:
                a_4 = ${weapon_heavysniper};
                break;
            case 3:
                a_4 = ${weapon_assaultshotgun};
                break;
            }
            break;
        case ${weapon_mg}:
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_4 = ${weapon_combatmg};
                break;
            case 2:
                a_4 = ${weapon_grenadelauncher};
                break;
            case 3:
                a_4 = ${weapon_sniperrifle};
                break;
            }
            break;
        case ${weapon_combatmg}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_mg};
                break;
            case 1:
                a_4 = ${weapon_pistol};
                break;
            case 2:
                a_4 = ${weapon_minigun};
                break;
            case 3:
                a_4 = ${weapon_heavysniper};
                break;
            }
            break;
        case ${weapon_pumpshotgun}:
            switch (a_0) {
            case 0:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_assaultsmg};
                } else { 
                    a_4 = ${weapon_sawnoffshotgun};
                }
                break;
            case 1:
                a_4 = ${weapon_assaultshotgun};
                break;
            case 2:
                a_4 = ${weapon_carbinerifle};
                break;
            case 3:
                a_4 = ${weapon_microsmg};
                break;
            }
            break;
        case ${weapon_sawnoffshotgun}:
            if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                switch (a_0) {
                case 0:
                    a_4 = 0;
                    break;
                case 1:
                    a_4 = ${weapon_pumpshotgun};
                    break;
                case 2:
                    a_4 = ${weapon_assaultrifle};
                    break;
                case 3:
                    a_4 = ${gadget_parachute};
                    break;
                }
            }
            break;
        case ${weapon_assaultsmg}:
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                switch (a_0) {
                case 0:
                    a_4 = 0;
                    break;
                case 1:
                    a_4 = ${weapon_pumpshotgun};
                    break;
                case 2:
                    a_4 = ${weapon_assaultrifle};
                    break;
                case 3:
                    a_4 = ${gadget_parachute};
                    break;
                }
            }
            break;
        case ${weapon_assaultshotgun}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_pumpshotgun};
                break;
            case 1:
                a_4 = ${weapon_nightstick};
                break;
            case 2:
                a_4 = ${weapon_advancedrifle};
                break;
            case 3:
                a_4 = ${weapon_smg};
                break;
            }
            break;
        case ${weapon_sniperrifle}:
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_4 = ${weapon_heavysniper};
                break;
            case 2:
                a_4 = ${weapon_mg};
                break;
            case 3:
                a_4 = ${weapon_carbinerifle};
                break;
            }
            break;
        case ${weapon_heavysniper}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_sniperrifle};
                break;
            case 1:
                a_4 = ${weapon_combatpistol};
                break;
            case 2:
                a_4 = ${weapon_combatmg};
                break;
            case 3:
                a_4 = ${weapon_advancedrifle};
                break;
            }
            break;
        case ${weapon_rpg}:
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_4 = ${weapon_grenadelauncher};
                break;
            case 2:
                a_5 = 11;
                a_6 = 0;
                break;
            case 3:
                a_4 = ${weapon_mg};
                break;
            }
            break;
        case ${weapon_grenadelauncher}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_rpg};
                break;
            case 1:
                a_4 = ${weapon_minigun};
                break;
            case 2:
                a_5 = 11;
                a_6 = 2;
                break;
            case 3:
                a_4 = ${weapon_mg};
                break;
            }
            break;
        case ${weapon_minigun}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_grenadelauncher};
                break;
            case 1:
                a_4 = ${weapon_smokegrenade};
                break;
            case 2:
                a_5 = 11;
                a_6 = 3;
                break;
            case 3:
                a_4 = ${weapon_combatmg};
                break;
            }
            break;
        case ${weapon_smokegrenade}:
            switch (a_0) {
            case 0:
                a_5 = 11;
                a_6 = 3;
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_grenade};
                break;
            case 3:
                a_4 = 0x83839c4;
                break;
            }
            break;
        case ${weapon_grenade}:
            switch (a_0) {
            case 0:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 13;
                    a_6 = 3;
                } else { 
                    a_5 = 12;
                    a_6 = 3;
                }
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0xab564b93;
                break;
            case 3:
                a_4 = ${weapon_smokegrenade};
                break;
            }
            break;
        case 0xab564b93:
            switch (a_0) {
            case 0:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 14;
                    a_6 = 3;
                } else { 
                    a_5 = 13;
                    a_6 = 3;
                }
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_stickybomb};
                break;
            case 3:
                a_4 = ${weapon_grenade};
                break;
            }
            break;
        case ${weapon_stickybomb}:
            switch (a_0) {
            case 0:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_5 = 14;
                    a_6 = 3;
                } else { 
                    a_5 = 13;
                    a_6 = 3;
                }
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_petrolcan};
                break;
            case 3:
                a_4 = 0xab564b93;
                break;
            }
            break;
        case ${weapon_petrolcan}:
            switch (a_0) {
            case 0:
                a_5 = 14;
                a_6 = 3;
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0;
                break;
            case 3:
                a_4 = ${weapon_stickybomb};
                break;
            }
            break;
        case ${weapon_knife}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_smg};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0x92a27487;
                break;
            case 3:
                a_4 = 0;
                break;
            }
            break;
        case 0x92a27487:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_smg};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0xdfe37640;
                if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = 0xd8df3c3c;
                }
                break;
            case 3:
                a_4 = ${weapon_knife};
                break;
            }
            break;
        case 0xdfe37640:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_smg};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0xd8df3c3c;
                break;
            case 3:
                a_4 = 0x92a27487;
                break;
            }
            break;
        case 0xd8df3c3c:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_assaultshotgun};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_nightstick};
                break;
            case 3:
                a_4 = 0xdfe37640;
                if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = 0x92a27487;
                }
                break;
            }
            break;
        case ${weapon_nightstick}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_assaultshotgun};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = 0x8bb05fd7;
                } else if (sub_1256b(0xf9dcbf2d) == 1) {
                    a_4 = 0xf9dcbf2d;
                } else { 
                    a_4 = ${weapon_hammer};
                }
                break;
            case 3:
                a_4 = 0xd8df3c3c;
                break;
            }
            break;
        case 0x8bb05fd7:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_assaultshotgun};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_hammer};
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (sub_715b() || WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), 0xf9dcbf2d, 0))) {
                    a_4 = 0xf9dcbf2d;
                }
                break;
            case 3:
                a_4 = ${weapon_nightstick};
                break;
            }
            break;
        case 0xf9dcbf2d:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_assaultshotgun};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_hammer};
                break;
            case 3:
                a_4 = 0x8bb05fd7;
                if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_nightstick};
                }
                break;
            }
            break;
        case ${weapon_hammer}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_advancedrifle};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = 0xdd5df8d9;
                break;
            case 3:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (sub_715b() || WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), 0xf9dcbf2d, 0)) {
                        a_4 = 0xf9dcbf2d;
                    } else { 
                        a_4 = 0x8bb05fd7;
                    }
                } else if (sub_1256b(0xf9dcbf2d) == 1) {
                    a_4 = 0xf9dcbf2d;
                } else { 
                    a_4 = ${weapon_nightstick};
                }
                break;
            }
            break;
        case 0xdd5df8d9:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_advancedrifle};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_bottle};
                break;
            case 3:
                a_4 = ${weapon_hammer};
                break;
            }
            break;
        case ${weapon_bottle}:
            switch (a_0) {
            case 0:
                a_4 = ${weapon_advancedrifle};
                break;
            case 1:
                a_4 = 0;
                break;
            case 2:
                a_4 = ${weapon_heavypistol};
                break;
            case 3:
                a_4 = 0xdd5df8d9;
                break;
            }
            break;
        case ${gadget_parachute}:
            switch (a_0) {
            case 0:
                a_4 = 0;
                break;
            case 1:
                a_4 = ${weapon_microsmg};
                break;
            case 2:
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_4 = ${weapon_assaultsmg};
                } else { 
                    a_4 = ${weapon_sawnoffshotgun};
                }
                break;
            case 3:
                a_4 = 0;
                break;
            }
            break;
        }
    }
    if ((((a_4 != 0) && (a_4 != a_1)) || ((a_6 != -1) && (a_6 != a_3))) || ((a_5 != -1) && (a_5 != a_2))) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_598db(auto a_0, auto a_1) {
    if ((a_0 == 0) && (a_1 == 0)) {
        return 4;
    }
    v_4/*{3}*/ = {(float)a_0, (float)a_1, 0.0 };
    asm .vardef<F> 7, "[{\"offset\":0,\"value\":4}]"
    v_7[0/*3*/]/*{3}*/ = {0.0, 1.0, 0.0 };
    v_7[1/*3*/]/*{3}*/ = {0.0, -1.0, 0.0 };
    v_7[2/*3*/]/*{3}*/ = {1.0, 0.0, 0.0 };
    v_7[3/*3*/]/*{3}*/ = {-1.0, 0.0, 0.0 };
    if ((v_4 != 0.0) || (v_4._f1 != 0.0)) {
        v_4/*{3}*/ = sub_599a4(v_4);
    }
    v_15 = -1;
    v_17 = 360.0;
    v_18 = 4;
    for (v_14 = 0; v_14 < v_7; v_14 += 1) {
        v_16 = GAMEPLAY::GET_ANGLE_BETWEEN_2D_VECTORS(v_4, v_4._f1, v_7[v_14/*3*/], v_7[v_14/*3*/]._f1);
        if (v_16 < v_17) {
            v_17 = v_16;
            v_15 = v_14;
        }
    }
    if (v_15 != -1) {
        v_18 = v_15;
    }
    return v_18;
}

auto<3> sub_599a4(auto a_0, auto a_1, auto a_2) {
    v_5 = SYSTEM::VMAG(a_0);
    if (v_5 != 0.0) {
        v_6 = 1.0 / v_5;
        a_0 *= (vector)v_6;
    } else { 
        a_0 = 0.0;
        a_0._f1 = 0.0;
        a_0._f2 = 0.0;
    }
    return a_0;
}

auto sub_599e3(auto a_0, auto a_1, auto a_2) {
    if (a_0 != -1) {
        if (a_0._f4 > a_2) {
            return 0;
        }
    }
    a_0 = a_1;
    a_0._f4 = a_2;
    return 1;
}

void sub_59a0b(auto a_0, auto a_1, auto a_2) {
    if (!NETWORK::_883D79C4071E18B3()) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_5b77(PLAYER::PLAYER_ID(), 1)) {
        return ;
    }
    if (CONTROLS::IS_CONTROL_PRESSED(2, 199) || CONTROLS::IS_DISABLED_CONTROL_PRESSED(2, 199)) {
        return ;
    }
    if (UI::GET_PAUSE_MENU_STATE() != 0) {
        return ;
    }
    if (UI::IS_PAUSE_MENU_ACTIVE()) {
        return ;
    }
    if (PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED()) {
        return ;
    }
    if (UI::_E18B138FABC53103()) {
        return ;
    }
    if (sub_59ae4()) {
        return ;
    }
    if (!sub_19e15()) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || a_0) {
        if ((!g_16416._f548) && (!NETWORK::_2EAC52B4019E2782())) {
            v_5 = 18;
            UI::_SET_WARNING_MESSAGE_2("BRSCRWTEX", "BRDISTEX", v_5, "BRSHETEX", 0, -1, 0, 0, 1);
            g_254317 = a_1;
            g_16416._f548 = 1;
            g_16416._f549 = a_2;
        }
    }
}

auto sub_59ae4() {
    return g_254382;
}

void sub_59af0(auto a_0, auto a_1, auto a_2) {
    g_16416._f54A = a_0;
    g_16416._f54B = a_1;
    g_16416._f54C = a_2;
}

auto sub_59b13(auto a_0, auto a_1) {
    if (a_0 >= 70) {
        return 0;
    }
    return sub_59b2e(a_0, a_1);
}

auto sub_59b2e(auto a_0, auto a_1) {
    if (sub_10a59(14) && (!sub_59dc2(a_0))) {
        return 0;
    }
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_0) && (a_1 == 1)) {
        return 0;
    }
    if ((g_6311 != 0) && (!is_in_transition)) {
        return 0;
    }
    if (sub_59db4(&g_270ECA)) {
        if (sub_59d75(&g_270ECA, a_0)) {
            return 0;
        }
        if (sub_59bcb(&g_270ECA, a_0)) {
            return 1;
        }
    } else { 
        if (!PLAYER::GIVE_ACHIEVEMENT_TO_PLAYER(a_0)) {
            return 0;
        }
        if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_0)) {
            return 1;
        }
        return 0;
    }
    return 0;
}

auto sub_59bcb(auto a_0, auto a_1) {
    asm .vardef<F> 5, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":70}]}]"
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_1)) {
        return 0;
    }
    if (sub_10a59(14) && (!sub_59dc2(a_1))) {
        return 0;
    }
    if (sub_59d75(a_0, a_1)) {
        return 0;
    }
    if (sub_59d69(a_0) < 0.0) {
        sub_59d4c(a_0, 0);
    }
    sub_59d08(&v_5);
    v_4 = 0;
    for (v_4 = 0; v_4 < (a_0 - 1); v_4 += 1) {
        v_5[v_4 + 1/*1*/] = a_0[v_4/*1*/];
    }
    sub_59c7c(&v_5, a_1);
    v_4 = 0;
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        a_0[v_4/*1*/] = v_5[v_4/*1*/];
    }
    return 1;
}

auto sub_59c7c(auto a_0, auto a_1) {
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(a_1)) {
        return 0;
    }
    if (sub_10a59(14) && (!sub_59dc2(a_1))) {
        return 0;
    }
    if (sub_59d75(a_0, a_1)) {
        return 0;
    }
    if (sub_59d69(a_0) < 0.0) {
        sub_59d4c(a_0, 0);
    }
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        if (sub_59cf7(a_0, v_4)) {
            a_0[v_4/*1*/] = a_1;
            return 1;
        }
    }
    return 0;
}

auto sub_59cf7(auto a_0, auto a_1) {
    return a_0[a_1/*1*/] == 70;
}

void sub_59d08(auto a_0) {
    for (v_3 = 0; v_3 < a_0; v_3 += 1) {
        sub_59d3c(a_0, v_3);
    }
    sub_59d4c(a_0, g_270EC9 - 0.5);
}

void sub_59d3c(auto a_0, auto a_1) {
    a_0[a_1/*1*/] = 70;
}

void sub_59d4c(auto a_0, auto a_1) {
    if (a_1 == 0.0) {
        a_0._f48 = 0.0;
    } else { 
        a_0._f48 = a_1;
    }
}

auto sub_59d69(auto a_0) {
    return a_0._f48;
}

auto sub_59d75(auto a_0, auto a_1) {
    return sub_59d87(a_0, a_1) != -1;
}

auto sub_59d87(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < a_0; v_4 += 1) {
        if (a_0[v_4/*1*/] == a_1) {
            return v_4;
        }
    }
    return -1;
}

auto sub_59db4(auto a_0) {
    return a_0._f47 == 1;
}

auto sub_59dc2(auto a_0) {
    switch (a_0) {
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
        return 1;
    }
    return 0;
}

auto sub_59e12(auto a_0, auto a_1) {
    if (a_1 == 0xfc508e33) {
        return 0;
    }
    if (a_1 == 0xd8df3c3c) {
        return 0;
    }
    if (PED::IS_PED_INJURED(a_0)) {
        return 0;
    }
    if (!WEAPON::HAS_PED_GOT_WEAPON(a_0, a_1, 0)) {
        return 0;
    }
    v_2B = sub_6469(a_1, &v_4);
    if (((((((((((((((((((((((a_1 != ${weapon_pistol}) && (a_1 != ${weapon_appistol})) && (a_1 != ${weapon_combatpistol})) && (a_1 != ${weapon_microsmg})) && (a_1 != ${weapon_smg})) && (a_1 != ${weapon_pumpshotgun})) && (a_1 != ${weapon_assaultshotgun})) && (a_1 != ${weapon_sawnoffshotgun})) && (a_1 != ${weapon_assaultrifle})) && (a_1 != ${weapon_carbinerifle})) && (a_1 != ${weapon_advancedrifle})) && (a_1 != ${weapon_sniperrifle})) && (a_1 != ${weapon_heavysniper})) && (a_1 != ${weapon_mg})) && (a_1 != ${weapon_combatmg})) && (a_1 != ${weapon_grenadelauncher})) && (a_1 != ${weapon_assaultmg})) && (a_1 != ${weapon_assaultsmg})) && (a_1 != ${weapon_assaultsniper})) && (a_1 != ${weapon_heavyrifle})) && (a_1 != ${weapon_bullpupshotgun})) && (a_1 != 0x99aeeb3b)) && ((v_2B == -1) || (DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_2B) < 3))) {
        return 0;
    }
    v_2C = 0;
    v_2D = 0;
    v_2E = 0;
    v_2F = 0;
    v_30 = 0;
    while (sub_21a3b(&v_31, a_1, v_30, 0)) {
        if (v_31._f4 == ${wapclip}) {
            v_2D += 1;
        }
        if (v_31._f4 == ${wapscop}) {
            v_2C += 1;
        }
        if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(a_0, a_1, v_31)) {
            if (v_31._f4 == ${wapclip}) {
                v_2F = v_31._f5;
            } else if (v_31._f4 == ${wapscop}) {
                v_2E = v_31._f5;
            }
        } else if ((((v_31._f4 == ${wapclip}) || (v_31._f4 == ${wapscop})) || (v_31._f4 == 0x9221a98d)) || (v_31._f4 == 0x395e9926)) {
        } else { 
            return 0;
        }
        v_30 += 1;
    }
    if (v_2C > v_2E) {
        return 0;
    }
    if (v_2D > v_2F) {
        return 0;
    }
    if ((WEAPON::GET_WEAPON_TINT_COUNT(a_1) > 0) && (WEAPON::GET_PED_WEAPON_TINT_INDEX(a_0, a_1) == 0)) {
        return 0;
    }
    return 1;
}

void sub_5a08f(auto a_0, auto a_1) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (a_0 == -1) {
            a_0 = sub_5a470(455, -1, -1);
        } else if (a_1) {
            sub_5a100(455, a_0, -1, 1);
        }
    }
    PLAYER::SET_PLAYER_HAS_RESERVE_PARACHUTE(PLAYER::PLAYER_ID());
    PLAYER::SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), a_0);
    if (sub_2b532()) {
        PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), ${lts_p_para_pilot2_sp_s});
    } else if (sub_2b543()) {
        PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x815e52eb);
    }
}

auto sub_5a100(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_2 == -1) {
        a_2 = sub_4ba5();
    }
    if (a_1 < 0) {
        a_1 = 255;
    }
    v_6 = 0;
    v_7 = 0;
    if ((a_0 >= 384) && (a_0 < 457)) {
        v_6 = STATS::_61E111E323419E07(a_0 - 384, 0, 1, a_2);
        v_7 = ((a_0 - 384) - (STATS::_94F12ABF9C79E339(a_0 - 384) * 8)) * 8;
    } else if ((a_0 >= 457) && (a_0 < 513)) {
        v_6 = STATS::_61E111E323419E07(a_0 - 457, 1, 1, a_2);
        v_7 = ((a_0 - 457) - (STATS::_94F12ABF9C79E339(a_0 - 457) * 8)) * 8;
    } else if ((a_0 >= 1281) && (a_0 < 1305)) {
        v_6 = STATS::_61E111E323419E07(a_0 - 1281, 0, 0, 0);
        v_7 = ((a_0 - 1281) - (STATS::_94F12ABF9C79E339(a_0 - 1281) * 8)) * 8;
    } else if ((a_0 >= 1305) && (a_0 < 1361)) {
        v_6 = STATS::_61E111E323419E07(a_0 - 1305, 1, 0, 0);
        v_7 = ((a_0 - 1305) - (STATS::_94F12ABF9C79E339(a_0 - 1305) * 8)) * 8;
    } else if ((a_0 >= 1393) && (a_0 < 2919)) {
        v_6 = STATS::_D16C2AD6B8E32854(a_0 - 1393, 0, 1, a_2);
        v_7 = ((a_0 - 1393) - (STATS::_94F12ABF9C79E339(a_0 - 1393) * 8)) * 8;
    } else if ((a_0 >= 1361) && (a_0 < 1393)) {
        v_6 = STATS::_D16C2AD6B8E32854(a_0 - 1361, 0, 0, 0);
        v_7 = ((a_0 - 1361) - (STATS::_94F12ABF9C79E339(a_0 - 1361) * 8)) * 8;
    } else if ((a_0 >= 3879) && (a_0 < 4143)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 3879, 0, 1, a_2, "_NGPSTAT_INT");
        v_7 = ((a_0 - 3879) - (STATS::_94F12ABF9C79E339(a_0 - 3879) * 8)) * 8;
    } else if ((a_0 >= 4143) && (a_0 < 4207)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 4143, 0, 0, 0, "_NGPSTAT_INT");
        v_7 = ((a_0 - 4143) - (STATS::_94F12ABF9C79E339(a_0 - 4143) * 8)) * 8;
    } else if ((a_0 >= 4399) && (a_0 < 6028)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 4399, 0, 1, a_2, "_LRPSTAT_INT");
        v_7 = ((a_0 - 4399) - (STATS::_94F12ABF9C79E339(a_0 - 4399) * 8)) * 8;
    } else if ((a_0 >= 6413) && (a_0 < 7262)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 6413, 0, 1, a_2, "_APAPSTAT_INT");
        v_7 = ((a_0 - 6413) - (STATS::_94F12ABF9C79E339(a_0 - 6413) * 8)) * 8;
    } else if ((a_0 >= 7262) && (a_0 < 7313)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 7262, 0, 1, a_2, "_LR2PSTAT_INT");
        v_7 = ((a_0 - 7262) - (STATS::_94F12ABF9C79E339(a_0 - 7262) * 8)) * 8;
    } else if ((a_0 >= 7449) && (a_0 < 7457)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 7449, 0, 1, a_2, "_NGDLCPSTAT_INT");
        v_7 = ((a_0 - 7449) - (STATS::_94F12ABF9C79E339(a_0 - 7449) * 8)) * 8;
    } else if ((a_0 >= 7313) && (a_0 < 7321)) {
        v_6 = STATS::_2B4CDCA6F07FF3DA(a_0 - 7313, 0, 0, 0, "_NGDLCPSTAT_INT");
        v_7 = ((a_0 - 7313) - (STATS::_94F12ABF9C79E339(a_0 - 7313) * 8)) * 8;
    }
    v_8 = STATS::STAT_SET_MASKED_INT(v_6, a_1, v_7, 8, a_3);
    return v_8;
}

auto sub_5a470(auto a_0, auto a_1, auto a_2) {
    if (a_1 == -1) {
        a_1 = sub_4ba5();
    }
    v_5 = 0;
    v_6 = sub_5a716(a_0, a_1);
    v_7 = sub_5a4b6(a_0);
    if (0 != v_6) {
        if (!STATS::STAT_GET_MASKED_INT(v_6, &v_5, v_7, 8, a_2)) {
            v_5 = 0;
        }
    }
    return v_5;
}

auto sub_5a4b6(auto a_0) {
    v_3 = 0;
    if ((a_0 >= 384) && (a_0 < 457)) {
        v_3 = ((a_0 - 384) - (STATS::_94F12ABF9C79E339(a_0 - 384) * 8)) * 8;
    } else if ((a_0 >= 457) && (a_0 < 513)) {
        v_3 = ((a_0 - 457) - (STATS::_94F12ABF9C79E339(a_0 - 457) * 8)) * 8;
    } else if ((a_0 >= 1281) && (a_0 < 1305)) {
        v_3 = ((a_0 - 1281) - (STATS::_94F12ABF9C79E339(a_0 - 1281) * 8)) * 8;
    } else if ((a_0 >= 1305) && (a_0 < 1361)) {
        v_3 = ((a_0 - 1305) - (STATS::_94F12ABF9C79E339(a_0 - 1305) * 8)) * 8;
    } else if ((a_0 >= 1361) && (a_0 < 1393)) {
        v_3 = ((a_0 - 1361) - (STATS::_94F12ABF9C79E339(a_0 - 1361) * 8)) * 8;
    } else if ((a_0 >= 1393) && (a_0 < 2919)) {
        v_3 = ((a_0 - 1393) - (STATS::_94F12ABF9C79E339(a_0 - 1393) * 8)) * 8;
    } else if ((a_0 >= 4143) && (a_0 < 4207)) {
        v_3 = ((a_0 - 4143) - (STATS::_94F12ABF9C79E339(a_0 - 4143) * 8)) * 8;
    } else if ((a_0 >= 3879) && (a_0 < 4143)) {
        v_3 = ((a_0 - 3879) - (STATS::_94F12ABF9C79E339(a_0 - 3879) * 8)) * 8;
    } else if ((a_0 >= 4399) && (a_0 < 6028)) {
        v_3 = ((a_0 - 4399) - (STATS::_94F12ABF9C79E339(a_0 - 4399) * 8)) * 8;
    } else if ((a_0 >= 6413) && (a_0 < 7262)) {
        v_3 = ((a_0 - 6413) - (STATS::_94F12ABF9C79E339(a_0 - 6413) * 8)) * 8;
    } else if ((a_0 >= 7262) && (a_0 < 7313)) {
        v_3 = ((a_0 - 7262) - (STATS::_94F12ABF9C79E339(a_0 - 7262) * 8)) * 8;
    } else if ((a_0 >= 7313) && (a_0 < 7321)) {
        v_3 = ((a_0 - 7313) - (STATS::_94F12ABF9C79E339(a_0 - 7313) * 8)) * 8;
    } else if ((a_0 >= 7449) && (a_0 < 7457)) {
        v_3 = ((a_0 - 7449) - (STATS::_94F12ABF9C79E339(a_0 - 7449) * 8)) * 8;
    }
    return v_3;
}

auto sub_5a716(auto a_0, auto a_1) {
    if (a_1 == -1) {
        a_1 = sub_4ba5();
    }
    v_4 = 0;
    if ((a_0 >= 384) && (a_0 < 457)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 384, 0, 1, a_1);
    } else if ((a_0 >= 457) && (a_0 < 513)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 457, 1, 1, a_1);
    } else if ((a_0 >= 1281) && (a_0 < 1305)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 1281, 0, 0, 0);
    } else if ((a_0 >= 1305) && (a_0 < 1361)) {
        v_4 = STATS::_61E111E323419E07(a_0 - 1305, 1, 0, 0);
    } else if ((a_0 >= 1361) && (a_0 < 1393)) {
        v_4 = STATS::_D16C2AD6B8E32854(a_0 - 1361, 0, 0, 0);
    } else if ((a_0 >= 1393) && (a_0 < 2919)) {
        v_4 = STATS::_D16C2AD6B8E32854(a_0 - 1393, 0, 1, a_1);
    } else if ((a_0 >= 4143) && (a_0 < 4207)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 4143, 0, 0, 0, "_NGPSTAT_INT");
    } else if ((a_0 >= 3879) && (a_0 < 4143)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 3879, 0, 1, a_1, "_NGPSTAT_INT");
    } else if ((a_0 >= 4399) && (a_0 < 6028)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 4399, 0, 1, a_1, "_LRPSTAT_INT");
    } else if ((a_0 >= 6413) && (a_0 < 7262)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 6413, 0, 1, a_1, "_APAPSTAT_INT");
    } else if ((a_0 >= 7262) && (a_0 < 7313)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 7262, 0, 1, a_1, "_LR2PSTAT_INT");
    } else if ((a_0 >= 7313) && (a_0 < 7321)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 7313, 0, 0, 0, "_NGPSTAT_INT");
    } else if ((a_0 >= 7449) && (a_0 < 7457)) {
        v_4 = STATS::_2B4CDCA6F07FF3DA(a_0 - 7449, 0, 1, a_1, "_NGPSTAT_INT");
    }
    return v_4;
}

void sub_5a93e(auto a_0, auto a_1) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        sub_84ba(2029, a_0, -1, 1);
        PLAYER::SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(PLAYER::PLAYER_ID(), 5, sub_561f5(PLAYER::PLAYER_PED_ID(), a_0), sub_561a5(PLAYER::PLAYER_PED_ID(), a_0), 0);
        sub_5ab75(PLAYER::PLAYER_ID(), a_0);
        PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(PLAYER::PLAYER_ID(), sub_5619c(PLAYER::PLAYER_PED_ID(), a_0));
        if ((a_1 && (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))) && (PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 5) != 0)) {
            sub_5a9bf(PLAYER::PLAYER_ID(), -1, -1);
        }
    }
}

void sub_5a9bf(auto a_0, auto a_1, auto a_2) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (a_2 == -1) {
            a_2 = sub_4b3f(2029, -1, 0);
        }
        PLAYER::SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(a_0, 5, sub_561f5(PLAYER::GET_PLAYER_PED(a_0), a_2), sub_561a5(PLAYER::GET_PLAYER_PED(a_0), a_2), 0);
        sub_5ab75(a_0, a_2);
        PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(a_0, sub_5619c(PLAYER::GET_PLAYER_PED(a_0), a_2));
        PED::SET_PED_COMPONENT_VARIATION(PLAYER::GET_PLAYER_PED(a_0), 5, sub_561f5(PLAYER::GET_PLAYER_PED(a_0), a_2), sub_561a5(PLAYER::GET_PLAYER_PED(a_0), a_2), sub_5619c(PLAYER::GET_PLAYER_PED(a_0), a_2));
        if (a_1 == -1) {
            a_1 = sub_4b3f(575, -1, 0);
        }
        if (sub_573e2(1) && sub_573b8(PLAYER::PLAYER_ID())) {
            PLAYER::SET_PLAYER_PARACHUTE_TINT_INDEX(PLAYER::PLAYER_ID(), sub_5aabd(g_259C8F));
        } else { 
            PLAYER::SET_PLAYER_PARACHUTE_TINT_INDEX(a_0, a_1);
        }
        if (sub_2b532()) {
            PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(a_0, ${lts_p_para_pilot2_sp_s});
        } else if (sub_2b543()) {
            PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(a_0, 0x815e52eb);
        }
        PED::SET_PED_RESET_FLAG(PLAYER::GET_PLAYER_PED(a_0), 177, 1);
    }
}

auto sub_5aabd(auto a_0) {
    v_3 = a_0;
    switch (v_3) {
    case 1:
        return 9;
        break;
    case 2:
        return 9;
        break;
    case 3:
        return 3;
        break;
    case 4:
        return 3;
        break;
    case 5:
        return 8;
        break;
    case 6:
        return 8;
        break;
    case 7:
        return 11;
        break;
    case 8:
        return 11;
        break;
    case 9:
        return 6;
        break;
    case 10:
        return 6;
        break;
    case 11:
        return 10;
        break;
    case 12:
        return 10;
        break;
    }
    return 0;
}

void sub_5ab75(auto a_0, auto a_1) {
    if (sub_2b532()) {
        if (a_1 > 46) {
            PLAYER::SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(a_0, ${p_para_bag_xmas_s});
        } else if (a_1 > 26) {
            PLAYER::SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(a_0, 0x4c28bd84);
        } else if (a_1 > 0) {
            PLAYER::SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(a_0, 0x4baa1f65);
        } else { 
            PLAYER::CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(a_0);
        }
    } else if (sub_2b543()) {
        if (a_1 > 0) {
            PLAYER::SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(a_0, 0x582dcf54);
        } else { 
            PLAYER::CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(a_0);
        }
    }
}

void sub_5abec(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        if (!sub_1bc1f(a_0, -1)) {
            sub_5ac23(a_0, 1, a_2);
        }
    } else if (sub_1bc1f(a_0, -1)) {
        sub_5ac23(a_0, 0, a_2);
    }
}

void sub_5ac23(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_1bc50(a_0, -1);
    v_6 = sub_1a06d(a_0);
    if (v_6 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_5, sub_1a060(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1a060(v_6));
        }
        sub_84ba(sub_1bc69(a_0), v_5, a_2, 1);
    } else { }
}

void sub_5ac74(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        v_5 = sub_1b7c4(a_0, a_1);
        v_6 = sub_1a06d(a_1);
        v_7 = sub_1a060(v_6);
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, v_7);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, v_7);
        }
        sub_5acc1(a_0, a_1, v_5);
    }
}

void sub_5acc1(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_1a06d(a_1);
    v_6 = sub_1bc12(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x87af642a, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xb19a20d6, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xd87a875, a_2, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x4ee77297, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x84614665, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x8d73284e, a_2, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x2d4e2f65, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x6f2a1bf7, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x734bf3fc, a_2, 1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xf079b5bd, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xe6fe8b9e, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x41ec913e, a_2, 1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x40b7d638, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xf8c12f23, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x581ebda2, a_2, 1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x13e87c9a, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xc31bc3d9, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xcc81a66a, a_2, 1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xe22a991f, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xd4596654, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x9ab3c2cf, a_2, 1);
            break;
        }
        break;
    case 7:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xa9322733, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x2d381820, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xb0deef25, a_2, 1);
            break;
        }
        break;
    case 8:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xf77e43c6, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x40febfad, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x7f240bb0, a_2, 1);
            break;
        }
        break;
    case 9:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xccfeeecc, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x9c7512f, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xff888c7b, a_2, 1);
            break;
        }
        break;
    case 10:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xa43cfe56, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x5fd50bf0, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xffba48db, a_2, 1);
            break;
        }
        break;
    case 11:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x72301a3d, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x9198ef77, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xf293ae8e, a_2, 1);
            break;
        }
        break;
    case 12:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x6ef013b5, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x5b208283, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xdc82826c, a_2, 1);
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_5b10d(auto a_0) {
    if (a_0 == 20) {
        return 0;
    } else if (a_0 == 40) {
        return 4;
    } else if (a_0 == 60) {
        return 1;
    } else if (a_0 == 80) {
        return 2;
    } else if (a_0 == 100) {
        return 3;
    }
    return 0;
}

auto sub_5b159(auto a_0, auto a_1, auto a_2) {
    if (a_1 == 11) {
        if (a_0 == ${mp_m_freemode_01}) {
            if ((((((a_2 >= 0) && (a_2 <= 15)) || ((a_2 >= 16) && (a_2 <= 31))) || ((a_2 >= 80) && (a_2 <= 95))) || ((a_2 >= 140) && (a_2 <= 155))) || ((a_2 >= 188) && (a_2 <= 203))) {
                return 1;
            } else if ((a_2 >= 32) && (a_2 <= 47)) {
                return 6;
            } else if ((((a_2 >= 48) && (a_2 <= 63)) || ((a_2 >= 64) && (a_2 <= 79))) || ((a_2 >= 108) && (a_2 <= 123))) {
                return 11;
            } else if ((a_2 >= 96) && (a_2 <= 107)) {
                return 41;
            } else if ((a_2 >= 156) && (a_2 <= 171)) {
                return 36;
            } else if ((a_2 >= 172) && (a_2 <= 187)) {
                return 31;
            } else if ((a_2 >= 204) && (a_2 <= 219)) {
                return 16;
            } else if (((a_2 >= 220) && (a_2 <= 235)) || ((a_2 >= 124) && (a_2 <= 139))) {
                return 26;
            } else if (a_2 == 236) {
                return 21;
            } else if (a_2 >= 237) {
                v_5 = sub_34b26(a_0, a_2, 11, 3);
                if (v_5 != -1) {
                    v_6 = DLC1::_C17AD0E5752BECDA(v_5);
                    for (v_7 = 0; v_7 < v_6; v_7 += 1) {
                        DLC1::GET_VARIANT_COMPONENT(v_5, v_7, &v_8, &v_9, &v_A);
                        if (v_A == 9) {
                            if ((v_8 != 0) && (v_8 != ${0})) {
                                return sub_353f9(a_0, v_8, 9, 3);
                            } else { 
                                return v_9;
                            }
                        }
                    }
                }
                return -99;
            }
        } else if (a_0 == ${mp_f_freemode_01}) {
            if (((((((a_2 >= 0) && (a_2 <= 15)) || ((a_2 >= 64) && (a_2 <= 79))) || ((a_2 >= 176) && (a_2 <= 191))) || ((a_2 >= 192) && (a_2 <= 207))) || ((a_2 >= 208) && (a_2 <= 223))) || ((a_2 >= 240) && (a_2 <= 255))) {
                return 1;
            } else if ((((a_2 >= 16) && (a_2 <= 31)) || ((a_2 >= 112) && (a_2 <= 127))) || ((a_2 >= 128) && (a_2 <= 143))) {
                return 16;
            } else if ((a_2 >= 32) && (a_2 <= 47)) {
                return 6;
            } else if ((a_2 >= 48) && (a_2 <= 63)) {
                return 11;
            } else if (((a_2 >= 96) && (a_2 <= 111)) || ((a_2 >= 160) && (a_2 <= 175))) {
                return 21;
            } else if ((a_2 >= 224) && (a_2 <= 239)) {
                return 26;
            } else if ((a_2 >= 144) && (a_2 <= 159)) {
                return 0;
            } else if ((a_2 >= 80) && (a_2 <= 95)) {
                return 31;
            } else if (a_2 >= 256) {
                v_B = sub_34b26(a_0, a_2, 11, 4);
                if (v_B != -1) {
                    v_C = DLC1::_C17AD0E5752BECDA(v_B);
                    for (v_D = 0; v_D < v_C; v_D += 1) {
                        DLC1::GET_VARIANT_COMPONENT(v_B, v_D, &v_E, &v_F, &v_10);
                        if (v_10 == 9) {
                            if ((v_E != 0) && (v_E != ${0})) {
                                return sub_353f9(a_0, v_E, 9, 4);
                            } else { 
                                return v_F;
                            }
                        }
                    }
                }
                return -99;
            }
        }
    }
    return -99;
}

auto sub_5b55a(auto a_0, auto a_1) {
    if ((((a_1 == 12) || (a_1 == 13)) || (a_1 == 14)) || PED::IS_PED_INJURED(a_0)) {
        return -99;
    }
    v_4 = sub_34fc7(a_1);
    v_5 = PED::GET_PED_DRAWABLE_VARIATION(a_0, v_4);
    v_6 = PED::GET_PED_TEXTURE_VARIATION(a_0, v_4);
    return sub_5b5ba(a_0, v_5, v_6, a_1);
}

auto sub_5b5ba(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = sub_34fc7(a_3);
    v_7 = PED::GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(a_0, v_6);
    for (v_9 = 0; v_9 <= (v_7 - 1); v_9 += 1) {
        v_B = PED::GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(a_0, v_6, v_9);
        if (v_9 != a_1) {
            v_8 += v_B;
        } else { 
            for (v_A = 0; v_A <= (v_B - 1); v_A += 1) {
                if ((v_9 == a_1) && (v_A == a_2)) {
                    return v_8;
                } else { 
                    v_8 += 1;
                }
            }
        }
    }
    return -99;
}

void sub_5b63e(auto a_0) {
    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
        if (a_0 == 0) {
            sub_5bc7a(${weapon_knife});
        } else if (a_0 == 1) {
            sub_5bc7a(${gadget_parachute});
            sub_8fe7(3610, PLAYER::GET_PLAYER_HAS_RESERVE_PARACHUTE(PLAYER::PLAYER_ID()), -1, 1);
        } else if (a_0 == 2) {
            sub_5bc7a(${weapon_hammer});
        } else if (a_0 == 3) {
            sub_5bc7a(${weapon_grenade});
        } else if (a_0 == 4) {
            sub_5bc7a(${weapon_stickybomb});
        } else if (a_0 == 5) {
            sub_5bc7a(${weapon_smokegrenade});
        } else if (a_0 == 6) {
            sub_5bc7a(${weapon_heavysniper});
        } else if (a_0 == 7) {
            sub_5bc7a(${weapon_sniperrifle});
        } else if (a_0 == 8) {
            sub_5bc7a(${weapon_pistol});
        } else if (a_0 == 9) {
            sub_5bc7a(${weapon_combatpistol});
        } else if (a_0 == 10) {
            sub_5bc7a(${weapon_appistol});
        } else if (a_0 == 11) {
            sub_5bc7a(${weapon_microsmg});
        } else if (a_0 == 12) {
            sub_5bc7a(${weapon_advancedrifle});
        } else if (a_0 == 13) {
            sub_5bc7a(${weapon_assaultrifle});
        } else if (a_0 == 14) {
            sub_5bc7a(${weapon_combatmg});
        } else if (a_0 == 15) {
            sub_5bc7a(${weapon_mg});
        } else if (a_0 == 16) {
            sub_5bc7a(${weapon_assaultshotgun});
        } else if (a_0 == 17) {
            sub_5bc7a(${weapon_pumpshotgun});
        } else if (a_0 == 18) {
            sub_5bc7a(${weapon_sawnoffshotgun});
        } else if (a_0 == 19) {
            sub_5bc7a(${weapon_grenadelauncher});
        } else if (a_0 == 20) {
            sub_5bc7a(${weapon_rpg});
        } else if (a_0 == 21) {
            sub_5bc7a(${weapon_minigun});
        } else if (a_0 == 22) {
            sub_5bc7a(${weapon_molotov});
        } else if (a_0 == 23) {
            sub_5bc7a(${weapon_petrolcan});
        } else if (a_0 == 24) {
            sub_5bc7a(${weapon_nightstick});
        } else if (a_0 == 25) {
            sub_5bc7a(${weapon_golfclub});
        } else if (a_0 == 26) {
            sub_5bc7a(${weapon_crowbar});
        } else if (a_0 == 27) {
            sub_5bc7a(${weapon_assaultsmg});
        } else if (a_0 == 28) {
            sub_5bc7a(${weapon_smg});
        } else if (a_0 == 29) {
            sub_5bc7a(${weapon_carbinerifle});
        } else if (a_0 == 30) {
            sub_5bc7a(${weapon_assaultsmg});
        } else if (a_0 == 31) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_assaultsniper})) {
                sub_5bc7a(${weapon_assaultsniper});
            }
        } else if (a_0 == 32) {
            if (WEAPON::IS_WEAPON_VALID(0x99aeeb3b)) {
                sub_5bc7a(0x99aeeb3b);
            }
        } else if (a_0 == 33) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_assaultmg})) {
                sub_5bc7a(${weapon_assaultmg});
            }
        } else if (a_0 == 34) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_bullpupshotgun})) {
                sub_5bc7a(${weapon_bullpupshotgun});
            }
        } else if (a_0 == 35) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_heavyrifle})) {
                sub_5bc7a(${weapon_heavyrifle});
            }
        } else if (a_0 == 36) {
            sub_5bc7a(${weapon_bat});
        } else if (a_0 == 37) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_bottle})) {
                sub_5bc7a(${weapon_bottle});
            }
        } else if (a_0 == 38) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_specialcarbine})) {
                sub_5bc7a(${weapon_specialcarbine});
            }
        } else if (a_0 == 39) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_snspistol})) {
                sub_5bc7a(${weapon_snspistol});
            }
        } else if (a_0 == 40) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_bullpuprifle})) {
                sub_5bc7a(${weapon_bullpuprifle});
            }
        } else if (a_0 == 41) {
            if (WEAPON::IS_WEAPON_VALID(${weapon_heavypistol})) {
                sub_5bc7a(${weapon_heavypistol});
            }
        } else if (a_0 == 42) {
            if (WEAPON::IS_WEAPON_VALID(0x61012683)) {
                sub_5bc7a(0x61012683);
            }
        } else if (a_0 == 43) {
            if (WEAPON::IS_WEAPON_VALID(0x92a27487)) {
                sub_5bc7a(0x92a27487);
            }
        } else if (a_0 == 44) {
            if (WEAPON::IS_WEAPON_VALID(0x83839c4)) {
                sub_5bc7a(0x83839c4);
            }
        } else if (a_0 == 45) {
            if (WEAPON::IS_WEAPON_VALID(0xa89cb99e)) {
                sub_5bc7a(0xa89cb99e);
            }
        } else if (a_0 == 46) {
            if (WEAPON::IS_WEAPON_VALID(0x7f7497e5)) {
                sub_5bc7a(0x7f7497e5);
            }
        } else if (a_0 == 47) {
            if (WEAPON::IS_WEAPON_VALID(0x47757124)) {
                sub_5bc7a(0x47757124);
            }
        } else if (a_0 == 48) {
            if (WEAPON::IS_WEAPON_VALID(0x3aabbbaa)) {
                sub_5bc7a(0x3aabbbaa);
            }
        } else if (a_0 == 49) {
            if (WEAPON::IS_WEAPON_VALID(0xc734385a)) {
                sub_5bc7a(0xc734385a);
            }
        } else if (a_0 == 50) {
            if (WEAPON::IS_WEAPON_VALID(0xab564b93)) {
                sub_5bc7a(0xab564b93);
            }
        } else if (a_0 == 51) {
            if (WEAPON::IS_WEAPON_VALID(0x63ab0442)) {
                sub_5bc7a(0x63ab0442);
            }
        } else if (a_0 == 52) {
            if (WEAPON::IS_WEAPON_VALID(0xd8df3c3c)) {
                sub_5bc7a(0xd8df3c3c);
            }
        } else if (a_0 == 53) {
            if (WEAPON::IS_WEAPON_VALID(0xa3d4d34)) {
                sub_5bc7a(0xa3d4d34);
            }
        } else if (a_0 == 54) {
            if (WEAPON::IS_WEAPON_VALID(0xdc4db296)) {
                sub_5bc7a(0xdc4db296);
            }
        } else if (a_0 == 55) {
            if (WEAPON::IS_WEAPON_VALID(0xf9dcbf2d)) {
                sub_5bc7a(0xf9dcbf2d);
            }
        } else if (a_0 == 56) {
            if (WEAPON::IS_WEAPON_VALID(0xdd5df8d9)) {
                sub_5bc7a(0xdd5df8d9);
            }
        } else if (a_0 == 59) {
            if (WEAPON::IS_WEAPON_VALID(0xdb1aa450)) {
                sub_5bc7a(0xdb1aa450);
            }
        } else if (a_0 == 57) {
            if (WEAPON::IS_WEAPON_VALID(0xef951fbb)) {
                sub_5bc7a(0xef951fbb);
            }
        } else if (a_0 == 58) {
            if (WEAPON::IS_WEAPON_VALID(0x624fe830)) {
                sub_5bc7a(0x624fe830);
            }
        } else if (a_0 == 60) {
            if (WEAPON::IS_WEAPON_VALID(0x8bb05fd7)) {
                sub_5bc7a(0x8bb05fd7);
            }
        } else if (a_0 == 61) {
            if (WEAPON::IS_WEAPON_VALID(0xdfe37640)) {
                sub_5bc7a(0xdfe37640);
            }
        } else if (a_0 == 62) {
            if (WEAPON::IS_WEAPON_VALID(0xc1b3c3d1)) {
                sub_5bc7a(0xc1b3c3d1);
            }
        }
    }
}

void sub_5bc7a(auto a_0) {
    if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
        sub_5c296(a_0);
        if (sub_5c231(a_0, -1) == 0) {
            sub_5bced(a_0, 1, -1);
        }
        if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
            if (WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &a_0, 1)) {
                sub_5bcdf(a_0);
            }
        }
    } else if (sub_5c231(a_0, -1) == 1) {
        sub_5bced(a_0, 0, -1);
    }
}

void sub_5bcdf(auto a_0) {
    g_14069F = a_0;
}

void sub_5bced(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        if (!sub_5c231(a_0, a_2)) {
            sub_5c147(a_0, 1, a_2);
        }
        v_5 = sub_5bddc(a_0);
        if (v_5 != 269) {
            if (!sub_5bdb0(v_5, a_2)) {
                sub_5bd71(v_5, 1, a_2, 1);
            }
        }
    } else { 
        if (sub_5c231(a_0, a_2)) {
            sub_5c147(a_0, 0, a_2);
        }
        v_6 = sub_5bddc(a_0);
        if (v_6 != 269) {
            if (sub_5bdb0(v_6, a_2)) {
                sub_5bd71(v_6, 0, a_2, 1);
            }
        }
    }
}

void sub_5bd71(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_5bda3()) {
        v_6 = g_25F257[a_0/*5*/][sub_4b71(a_2)/*1*/];
        if (v_6 != 0) {
            STATS::STAT_SET_BOOL(v_6, a_1, a_3);
        }
    }
}

auto sub_5bda3() {
    return 1;
    return 0;
}

auto sub_5bdb0(auto a_0, auto a_1) {
    v_4 = g_25F257[a_0/*5*/][sub_4b71(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

auto sub_5bddc(auto a_0) {
    switch (a_0) {
    case ${weapon_pistol}:
        return 17;
        break;
    case ${weapon_combatpistol}:
        return 19;
        break;
    case ${weapon_appistol}:
        return 23;
        break;
    case 0x99aeeb3b:
        return 21;
        break;
    case ${weapon_smg}:
        return 27;
        break;
    case ${weapon_microsmg}:
        return 25;
        break;
    case ${weapon_assaultrifle}:
        return 31;
        break;
    case ${weapon_carbinerifle}:
        return 33;
        break;
    case ${weapon_advancedrifle}:
        return 35;
        break;
    case ${weapon_mg}:
        return 37;
        break;
    case ${weapon_combatmg}:
        return 39;
        break;
    case ${weapon_pumpshotgun}:
        return 43;
        break;
    case ${weapon_sawnoffshotgun}:
        return 45;
        break;
    case ${weapon_assaultshotgun}:
        return 49;
        break;
    case ${weapon_heavysniper}:
        return 55;
        break;
    case ${weapon_sniperrifle}:
        return 53;
        break;
    case ${weapon_grenadelauncher}:
        return 59;
        break;
    case ${weapon_rpg}:
        return 61;
        break;
    case ${weapon_minigun}:
        return 63;
        break;
    case ${weapon_grenade}:
        return 65;
        break;
    case ${weapon_smokegrenade}:
        return 67;
        break;
    case ${weapon_stickybomb}:
        return 69;
        break;
    case ${weapon_molotov}:
        return 71;
        break;
    case ${weapon_petrolcan}:
        return 74;
        break;
    case ${gadget_parachute}:
        return 73;
        break;
    case ${weapon_knife}:
        return 1;
        break;
    case ${weapon_nightstick}:
        return 3;
        break;
    case ${weapon_hammer}:
        return 11;
        break;
    case ${weapon_bat}:
        return 13;
        break;
    case ${weapon_crowbar}:
        return 5;
        break;
    case ${weapon_golfclub}:
        return 15;
        break;
    case ${weapon_assaultmg}:
        return 41;
        break;
    case ${weapon_assaultsmg}:
        return 29;
        break;
    case ${weapon_assaultsniper}:
        return 57;
        break;
    case ${weapon_bullpupshotgun}:
        return 47;
        break;
    case ${weapon_bottle}:
        return 142;
        break;
    case ${weapon_specialcarbine}:
        return 191;
        break;
    case ${weapon_snspistol}:
        return 144;
        break;
    case ${weapon_heavypistol}:
        return 189;
        break;
    case ${weapon_bullpuprifle}:
        return 193;
        break;
    case 0x61012683:
        return 195;
        break;
    case 0x83839c4:
        return 218;
        break;
    case 0x92a27487:
        return 216;
        break;
    case 0xa89cb99e:
        return 222;
        break;
    case 0x7f7497e5:
        return 220;
        break;
    case 0x47757124:
        return 210;
        break;
    case 0x3aabbbaa:
        return 234;
        break;
    case 0xc734385a:
        return 236;
        break;
    case 0xab564b93:
        return 240;
        break;
    case 0x63ab0442:
        return 242;
        break;
    case 0xf9dcbf2d:
        return 238;
        break;
    case 0xa3d4d34:
        return 244;
        break;
    case 0xd8df3c3c:
        return 246;
        break;
    case 0xdc4db296:
        return 248;
        break;
    case 0xdd5df8d9:
        return 250;
        break;
    case 0xdb1aa450:
        return 252;
        break;
    case 0xef951fbb:
        return 257;
        break;
    case 0x624fe830:
        return 255;
        break;
    case 0x8bb05fd7:
        return 259;
        break;
    case 0xc1b3c3d1:
        return 262;
        break;
    case 0xdfe37640:
        return 264;
        break;
    }
    return 269;
}

void sub_5c147(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_5c218(a_0, a_2);
    v_6 = sub_10a67(a_0);
    if (v_6 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_5c199(a_0), v_5, a_2, 1);
    } else { }
}

auto sub_5c199(auto a_0) {
    v_3 = sub_10a67(a_0);
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 675;
            break;
        case 1:
            return 676;
            break;
        case 2:
            return 2392;
            break;
        }
    }
    return 3790;
}

auto sub_5c218(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_5c199(a_0), a_1, 0);
    return v_4;
}

auto sub_5c231(auto a_0, auto a_1) {
    if (sub_ffd3() == 0) {
        return 0;
    }
    if (sub_1bd98()) {
        return 0;
    }
    v_4 = sub_5bddc(a_0);
    if ((v_4 != 269) && sub_5bdb0(v_4, -1)) {
        return 1;
    } else { 
        return 0;
    }
    v_5 = sub_5c218(a_0, a_1);
    v_6 = sub_10a67(a_0);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

void sub_5c296(auto a_0) {
    if ((a_0 != ${weapon_unarmed}) || (a_0 != 0)) {
        v_3 = sub_5d1ce(a_0);
        if (v_3 < 3790) {
            if (((((((((((((a_0 == ${weapon_knife}) || (a_0 == ${gadget_parachute})) || (a_0 == ${weapon_crowbar})) || (a_0 == ${weapon_nightstick})) || (a_0 == ${weapon_golfclub})) || (a_0 == ${weapon_hammer})) || (a_0 == ${weapon_bat})) || (a_0 == ${gadget_parachute})) || (a_0 == ${weapon_bottle})) || (a_0 == 0x92a27487)) || (a_0 == 0xf9dcbf2d)) || (a_0 == 0xdd5df8d9)) || (a_0 == 0xdfe37640)) {
                if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                    if (sub_4b3f(v_3, -1, 0) != 1) {
                        sub_84ba(v_3, 1, -1, 1);
                    }
                }
            } else if (sub_4b3f(v_3, -1, 0) != WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)) {
                sub_84ba(v_3, WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0), -1, 1);
            }
            if (a_0 == ${weapon_microsmg}) {}
            if (((((((((((((((a_0 != ${weapon_knife}) && (a_0 != ${gadget_parachute})) && (a_0 != ${weapon_crowbar})) && (a_0 != ${weapon_nightstick})) && (a_0 != ${weapon_golfclub})) && (a_0 != ${weapon_bat})) && (a_0 != ${gadget_parachute})) && (a_0 != ${weapon_pistol})) && (a_0 != ${weapon_hammer})) && (a_0 != ${weapon_bottle})) && (a_0 != 0x92a27487)) && (a_0 != 0xd8df3c3c)) && (a_0 != 0xf9dcbf2d)) && (a_0 != 0xdd5df8d9)) && (a_0 != 0xdfe37640)) {
                if (!sub_5d1bd(64)) {
                    if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
                        if ((((((WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0) == 0) && (sub_5d0ee(a_0, -1, 0) == 0)) && (sub_4b3f(sub_5cd83(a_0), -1, 0) == 0)) && (!sub_5cc8c(a_0, -1, 0))) && (!sub_5bdb0(sub_5c924(a_0), -1))) && (g_1837E7[PLAYER::PLAYER_ID()/*410*/] != 13)) {
                            WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), a_0);
                            sub_5bced(a_0, 0, -1);
                        }
                        if (g_25A2B7._f117 == 0) {
                            if ((WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0) < 4) && (g_1837E7[PLAYER::PLAYER_ID()/*410*/] != 13)) {
                                v_4 = sub_5c910(PLAYER::PLAYER_PED_ID());
                                v_5 = PED::GET_PED_PARACHUTE_STATE(PLAYER::PLAYER_PED_ID());
                                if (((v_5 != 2) || (v_5 != 1)) || (v_5 != 3)) {
                                    if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), v_4, 0) && (WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), v_4) < 4)) {
                                        if ((((((((((((((((((((((((((((v_4 == ${weapon_microsmg}) || (v_4 == ${weapon_pistol})) || (v_4 == ${weapon_combatpistol})) || (v_4 == ${weapon_smg})) || (v_4 == ${weapon_appistol})) || (v_4 == ${weapon_assaultrifle})) || (v_4 == ${weapon_carbinerifle})) || (v_4 == ${weapon_specialcarbine})) || (v_4 == ${weapon_advancedrifle})) || (v_4 == ${weapon_mg})) || (v_4 == ${weapon_combatmg})) || (v_4 == ${weapon_assaultsmg})) || (v_4 == ${weapon_assaultmg})) || (v_4 == 0x99aeeb3b)) || (v_4 == ${weapon_snspistol})) || (v_4 == ${weapon_bullpuprifle})) || (v_4 == ${weapon_heavypistol})) || (v_4 == 0x61012683)) || (v_4 == 0xa89cb99e)) || (v_4 == 0x83839c4)) || (v_4 == 0x3aabbbaa)) || (v_4 == 0xc734385a)) || (v_4 == 0xa3d4d34)) || (v_4 == 0xdc4db296)) || (v_4 == 0xdb1aa450)) || (v_4 == 0x624fe830)) || (v_4 == 0xef951fbb)) || (v_4 == 0xc1b3c3d1)) {
                                            sub_5c730("AMMO_IS_LOW", 1);
                                            g_25A2B7._f117 = 1;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else { }
}

auto sub_5c730(auto a_0, auto a_1) {
    v_4 = -1;
    UI::_SET_NOTIFICATION_TEXT_ENTRY(a_0);
    v_4 = UI::_DRAW_NOTIFICATION(0, 1);
    sub_5c75c(0, a_0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0);
    return v_4;
}

void sub_5c75c(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11) {
    if (((!sub_5c8ff()) || (!NETWORK::NETWORK_IS_ACTIVITY_SESSION())) || (!sub_76ed(PLAYER::PLAYER_ID(), 0))) {
        return ;
    }
    v_E = sub_5c864(a_2);
    if ((v_E >= 0) && (v_E < 5)) {
        g_1A3A63._f5[v_E/*53*/] = a_0;
        g_1A3A63._f5[v_E/*53*/]._f1 = a_2;
        g_1A3A63._f5[v_E/*53*/]._f8/*"16"*/ = a_1;
        g_1A3A63._f5[v_E/*53*/]._f2[0/*1*/] = a_4;
        g_1A3A63._f5[v_E/*53*/]._f2[1/*1*/] = a_5;
        g_1A3A63._f5[v_E/*53*/]._f2[2/*1*/] = a_6;
        g_1A3A63._f5[v_E/*53*/]._f7 = a_7;
        g_1A3A63._f5[v_E/*53*/]._f6 = a_8;
        g_1A3A63._f5[v_E/*53*/]._fC/*"64"*/ = a_3;
        g_1A3A63._f5[v_E/*53*/]._f1C[0/*6*/]/*"24"*/ = a_9;
        g_1A3A63._f5[v_E/*53*/]._f1C[1/*6*/]/*"24"*/ = a_A;
        g_1A3A63._f5[v_E/*53*/]._f1C[2/*6*/]/*"24"*/ = a_B;
    }
}

auto sub_5c864(auto a_0) {
    for (v_3 = 0; v_3 <= (g_1A3A63 - 1); v_3 += 1) {
        if (a_0 > g_1A3A63._f5[v_3/*53*/]._f1) {
            sub_5c8c6(v_3);
            return v_3;
        }
    }
    g_1A3A63 += 1;
    if (g_1A3A63 > 5) {
        g_1A3A63 = 5;
        return g_1A3A63;
    } else { 
        return g_1A3A63 - 1;
    }
}

void sub_5c8c6(auto a_0) {
    for (v_3 = 4; v_3 >= (a_0 + 1); v_3 += -1) {
        g_1A3A63._f5[v_3/*53*/]/*{53}*/ = g_1A3A63._f5[v_3 - 1/*53*/];
    }
}

auto sub_5c8ff() {
    return DLC2::IS_DLC_PRESENT(0x96f02ee6);
}

auto sub_5c910(auto a_0) {
    WEAPON::GET_CURRENT_PED_WEAPON(a_0, &v_3, 1);
    return v_3;
}

auto sub_5c924(auto a_0) {
    switch (a_0) {
    case ${weapon_unarmed}:
        return 18;
        break;
    case ${weapon_grenade}:
        return 66;
        break;
    case ${weapon_smokegrenade}:
        return 68;
        break;
    case ${weapon_stickybomb}:
        return 70;
        break;
    case ${weapon_molotov}:
        return 72;
        break;
    case ${weapon_pistol}:
        return 18;
        break;
    case ${weapon_combatpistol}:
        return 40;
        break;
    case 0x99aeeb3b:
        return 22;
        break;
    case ${weapon_appistol}:
        return 24;
        break;
    case ${weapon_microsmg}:
        return 26;
        break;
    case ${weapon_smg}:
        return 28;
        break;
    case ${weapon_assaultsmg}:
        return 30;
        break;
    case ${weapon_assaultrifle}:
        return 32;
        break;
    case ${weapon_carbinerifle}:
        return 34;
        break;
    case ${weapon_advancedrifle}:
        return 36;
        break;
    case ${weapon_mg}:
        return 38;
        break;
    case ${weapon_assaultmg}:
        return 42;
        break;
    case ${weapon_pumpshotgun}:
        return 44;
        break;
    case ${weapon_sawnoffshotgun}:
        return 46;
        break;
    case ${weapon_bullpupshotgun}:
        return 48;
        break;
    case ${weapon_assaultshotgun}:
        return 50;
        break;
    case ${weapon_sniperrifle}:
        return 54;
        break;
    case ${weapon_heavysniper}:
        return 56;
        break;
    case ${weapon_grenadelauncher}:
        return 60;
        break;
    case ${weapon_rpg}:
        return 62;
        break;
    case ${weapon_minigun}:
        return 64;
        break;
    case ${weapon_stungun}:
        return 52;
        break;
    case ${weapon_petrolcan}:
        return 75;
        break;
    case ${weapon_knife}:
        return 2;
        break;
    case ${weapon_nightstick}:
        return 4;
        break;
    case ${weapon_hammer}:
        return 12;
        break;
    case ${weapon_bat}:
        return 14;
        break;
    case ${weapon_crowbar}:
        return 6;
        break;
    case ${weapon_golfclub}:
        return 16;
        break;
    case ${weapon_assaultsniper}:
        return 58;
        break;
    case ${weapon_combatmg}:
        return 40;
        break;
    case ${weapon_bottle}:
        return 143;
        break;
    case ${weapon_specialcarbine}:
        return 192;
        break;
    case ${weapon_snspistol}:
        return 145;
        break;
    case ${weapon_heavypistol}:
        return 190;
        break;
    case ${weapon_bullpuprifle}:
        return 194;
        break;
    case 0x61012683:
        return 196;
        break;
    case 0x92a27487:
        return 217;
        break;
    case 0x83839c4:
        return 219;
        break;
    case 0x7f7497e5:
        return 221;
        break;
    case 0xa89cb99e:
        return 223;
        break;
    case 0x3aabbbaa:
        return 235;
        break;
    case 0xc734385a:
        return 237;
        break;
    case 0xab564b93:
        return 241;
        break;
    case 0x63ab0442:
        return 243;
        break;
    case 0xa3d4d34:
        return 245;
        break;
    case 0xd8df3c3c:
        return 247;
        break;
    case 0xdc4db296:
        return 249;
        break;
    case 0xf9dcbf2d:
        return 239;
        break;
    case 0xdd5df8d9:
        return 251;
        break;
    case 0xdb1aa450:
        return 253;
        break;
    case 0x624fe830:
        return 256;
        break;
    case 0xef951fbb:
        return 258;
        break;
    case 0x8bb05fd7:
        return 260;
        break;
    case 0xc1b3c3d1:
        return 263;
        break;
    case 0xdfe37640:
        return 265;
        break;
    }
    return 2;
}

auto sub_5cc8c(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    if (sub_1bd98()) {
        return 0;
    }
    if (sub_ffd3() == 0) {
        return 0;
    }
    if (a_0 != ${gadget_parachute}) {
        if (sub_5bdb0(sub_5c924(a_0), -1)) {
            return 0;
        }
    }
    v_5 = sub_5cceb(a_0, a_1);
    v_6 = sub_10a67(a_0);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

auto sub_5cceb(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_5cd04(a_0), a_1, 0);
    return v_4;
}

auto sub_5cd04(auto a_0) {
    v_3 = sub_10a67(a_0);
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 789;
            break;
        case 1:
            return 790;
            break;
        case 2:
            return 2391;
            break;
        }
    }
    return 3790;
}

auto sub_5cd83(auto a_0) {
    if ((sub_4e69() == 0) || (sub_1bd8d() == 0)) {
        switch (a_0) {
        case ${weapon_knife}:
            return 189;
            break;
        case ${weapon_nightstick}:
            return 196;
            break;
        case ${weapon_pistol}:
            return 247;
            break;
        case ${weapon_combatpistol}:
            return 257;
            break;
        case ${weapon_appistol}:
            return 277;
            break;
        case ${weapon_snspistol}:
            return 1735;
            break;
        case ${weapon_microsmg}:
            return 287;
            break;
        case ${weapon_smg}:
            return 297;
            break;
        case ${weapon_assaultrifle}:
            return 316;
            break;
        case ${weapon_carbinerifle}:
            return 325;
            break;
        case ${weapon_specialcarbine}:
            return 3210;
            break;
        case ${weapon_advancedrifle}:
            return 334;
            break;
        case ${weapon_mg}:
            return 343;
            break;
        case ${weapon_combatmg}:
            return 352;
            break;
        case ${weapon_pumpshotgun}:
            return 370;
            break;
        case ${weapon_sawnoffshotgun}:
            return 380;
            break;
        case ${weapon_assaultshotgun}:
            return 398;
            break;
        case ${weapon_stungun}:
            return 408;
            break;
        case ${weapon_sniperrifle}:
            return 417;
            break;
        case ${weapon_heavysniper}:
            return 426;
            break;
        case ${weapon_grenadelauncher}:
            return 435;
            break;
        case ${weapon_rpg}:
            return 442;
            break;
        case ${weapon_minigun}:
            return 451;
            break;
        case ${weapon_grenade}:
            return 459;
            break;
        case ${weapon_smokegrenade}:
            return 468;
            break;
        case ${weapon_stickybomb}:
            return 476;
            break;
        case ${weapon_molotov}:
            return 485;
            break;
        case ${weapon_petrolcan}:
            return 576;
            break;
        case 0x99aeeb3b:
            return 267;
            break;
        case ${weapon_assaultmg}:
            return 361;
            break;
        case ${weapon_assaultsmg}:
            return 307;
            break;
        case ${weapon_assaultsniper}:
            return 429;
            break;
        case ${weapon_hammer}:
            return 224;
            break;
        case ${weapon_bullpupshotgun}:
            return 389;
            break;
        case ${weapon_bottle}:
            return 1725;
            break;
        case ${weapon_heavypistol}:
            return 3200;
            break;
        case ${weapon_bullpuprifle}:
            return 3220;
            break;
        case 0x61012683:
            return 3230;
            break;
        case ${gadget_parachute}:
            return 573;
            break;
        case 0x83839c4:
            return 3513;
            break;
        case 0x92a27487:
            return 3503;
            break;
        case 0xa89cb99e:
            return 3533;
            break;
        case 0x7f7497e5:
            return 3523;
            break;
        case 0x3aabbbaa:
            return 3611;
            break;
        case 0xc734385a:
            return 3621;
            break;
        case 0xab564b93:
            return 3637;
            break;
        case 0x63ab0442:
            return 3645;
            break;
        case 0xa3d4d34:
            return 3655;
            break;
        case 0xd8df3c3c:
            return 3662;
            break;
        case 0xdc4db296:
            return 3672;
            break;
        case 0xf9dcbf2d:
            return 3629;
            break;
        case 0xdd5df8d9:
            return 3680;
            break;
        case 0xdb1aa450:
            return 3690;
            break;
        case 0xef951fbb:
            return 3718;
            break;
        case 0x624fe830:
            return 3708;
            break;
        case 0x8bb05fd7:
            return 3726;
            break;
        }
    }
    return 476;
}

auto sub_5d0ee(auto a_0, auto a_1, auto a_2) {
    if (a_2 == 0) {}
    if (sub_1bd98()) {
        return 0;
    }
    v_5 = sub_5d125(a_0, a_1);
    v_6 = sub_10a67(a_0);
    return GAMEPLAY::IS_BIT_SET(v_5, sub_1008b(v_6));
}

auto sub_5d125(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_5d13e(a_0), a_1, 0);
    return v_4;
}

auto sub_5d13e(auto a_0) {
    v_3 = sub_10a67(a_0);
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 669;
            break;
        case 1:
            return 670;
            break;
        case 2:
            return 2400;
            break;
        }
    }
    return 3790;
}

auto sub_5d1bd(auto a_0) {
    return (g_186DD & a_0) != 0;
}

auto sub_5d1ce(auto a_0) {
    if ((sub_4e69() == 0) || (sub_1bd8d() == 0)) {
        switch (a_0) {
        case ${weapon_pistol}:
            return 248;
            break;
        case ${weapon_combatpistol}:
            return 258;
            break;
        case ${weapon_appistol}:
            return 278;
            break;
        case ${weapon_microsmg}:
            return 288;
            break;
        case ${weapon_smg}:
            return 298;
            break;
        case ${weapon_assaultrifle}:
            return 317;
            break;
        case ${weapon_carbinerifle}:
            return 326;
            break;
        case ${weapon_advancedrifle}:
            return 335;
            break;
        case ${weapon_mg}:
            return 344;
            break;
        case ${weapon_combatmg}:
            return 353;
            break;
        case ${weapon_pumpshotgun}:
            return 371;
            break;
        case ${weapon_sawnoffshotgun}:
            return 381;
            break;
        case ${weapon_assaultshotgun}:
            return 399;
            break;
        case ${weapon_sniperrifle}:
            return 418;
            break;
        case ${weapon_grenadelauncher}:
            return 436;
            break;
        case ${weapon_rpg}:
            return 443;
            break;
        case ${weapon_minigun}:
            return 452;
            break;
        case ${weapon_grenade}:
            return 460;
            break;
        case ${weapon_smokegrenade}:
            return 469;
            break;
        case ${weapon_stickybomb}:
            return 477;
            break;
        case ${weapon_stungun}:
            return 409;
            break;
        case ${gadget_parachute}:
            return 574;
            break;
        case ${weapon_molotov}:
            return 486;
            break;
        case ${weapon_petrolcan}:
            return 577;
            break;
        case ${weapon_knife}:
            return 190;
            break;
        case ${weapon_nightstick}:
            return 197;
            break;
        case ${weapon_bat}:
            return 232;
            break;
        case ${weapon_heavysniper}:
            return 427;
            break;
        case ${weapon_golfclub}:
            return 239;
            break;
        case ${weapon_crowbar}:
            return 204;
            break;
        case ${weapon_hammer}:
            return 225;
            break;
        case 0x99aeeb3b:
            return 268;
            break;
        case ${weapon_assaultmg}:
            return 362;
            break;
        case ${weapon_assaultsmg}:
            return 308;
            break;
        case ${weapon_assaultsniper}:
            return 430;
            break;
        case ${weapon_bullpupshotgun}:
            return 390;
            break;
        case ${weapon_bottle}:
            return 1726;
            break;
        case ${weapon_specialcarbine}:
            return 3211;
            break;
        case ${weapon_snspistol}:
            return 1736;
            break;
        case ${weapon_heavypistol}:
            return 3201;
            break;
        case ${weapon_bullpuprifle}:
            return 3221;
            break;
        case 0x61012683:
            return 3231;
            break;
        case 0x83839c4:
            return 3514;
            break;
        case 0x47757124:
            return 3267;
            break;
        case 0x7f7497e5:
            return 3524;
            break;
        case 0xa89cb99e:
            return 3534;
            break;
        case 0x92a27487:
            return 3504;
            break;
        case 0x3aabbbaa:
            return 3612;
            break;
        case 0xc734385a:
            return 3622;
            break;
        case 0x63ab0442:
            return 3646;
            break;
        case 0xab564b93:
            return 3638;
            break;
        case 0xa3d4d34:
            return 3656;
            break;
        case 0xd8df3c3c:
            return 3663;
            break;
        case 0xdc4db296:
            return 3673;
            break;
        case 0xf9dcbf2d:
            return 3630;
            break;
        case 0xdd5df8d9:
            return 3681;
            break;
        case 0xdb1aa450:
            return 3691;
            break;
        case 0xef951fbb:
            return 3719;
            break;
        case 0x624fe830:
            return 3709;
            break;
        case 0x8bb05fd7:
            return 3727;
            break;
        case 0xdfe37640:
            return 3727;
            break;
        case 0xc1b3c3d1:
            return 3747;
            break;
        }
    }
    return 3790;
}

auto sub_5d590(auto a_0) {
    if (a_0 == ${weapon_knife}) {
        return 0;
    } else if (a_0 == ${gadget_parachute}) {
        return 1;
    } else if (a_0 == ${weapon_grenade}) {
        return 2;
    } else if (a_0 == ${weapon_hammer}) {
        return 3;
    } else if (a_0 == ${weapon_stickybomb}) {
        return 4;
    } else if (a_0 == ${weapon_smokegrenade}) {
        return 5;
    } else if (a_0 == ${weapon_heavysniper}) {
        return 6;
    } else if (a_0 == ${weapon_sniperrifle}) {
        return 7;
    } else if (a_0 == ${weapon_pistol}) {
        return 8;
    } else if (a_0 == ${weapon_combatpistol}) {
        return 9;
    } else if (a_0 == ${weapon_appistol}) {
        return 10;
    } else if (a_0 == ${weapon_microsmg}) {
        return 11;
    } else if (a_0 == ${weapon_advancedrifle}) {
        return 12;
    } else if (a_0 == ${weapon_assaultrifle}) {
        return 13;
    } else if (a_0 == ${weapon_combatmg}) {
        return 14;
    } else if (a_0 == ${weapon_mg}) {
        return 15;
    } else if (a_0 == ${weapon_assaultshotgun}) {
        return 16;
    } else if (a_0 == ${weapon_pumpshotgun}) {
        return 17;
    } else if (a_0 == ${weapon_sawnoffshotgun}) {
        return 18;
    } else if (a_0 == ${weapon_grenadelauncher}) {
        return 19;
    } else if (a_0 == ${weapon_rpg}) {
        return 20;
    } else if (a_0 == ${weapon_minigun}) {
        return 21;
    } else if (a_0 == ${weapon_molotov}) {
        return 22;
    } else if (a_0 == ${weapon_petrolcan}) {
        return 23;
    } else if (a_0 == ${weapon_nightstick}) {
        return 24;
    } else if (a_0 == ${weapon_golfclub}) {
        return 25;
    } else if (a_0 == ${weapon_crowbar}) {
        return 26;
    } else if (a_0 == ${weapon_assaultsmg}) {
        return 27;
    } else if (a_0 == ${weapon_assaultsmg}) {
        return 28;
    } else if (a_0 == ${weapon_smg}) {
        return 29;
    } else if (a_0 == ${weapon_carbinerifle}) {
        return 30;
    } else if (a_0 == ${weapon_assaultsmg}) {
        return 31;
    } else if (a_0 == ${weapon_assaultsniper}) {
        return 32;
    } else if (a_0 == 0x99aeeb3b) {
        return 33;
    } else if (a_0 == ${weapon_assaultmg}) {
        return 34;
    } else if (a_0 == ${weapon_heavyrifle}) {
        return 35;
    } else if (a_0 == ${weapon_bat}) {
        return 36;
    } else if (a_0 == ${weapon_bottle}) {
        return 37;
    } else if (a_0 == ${weapon_specialcarbine}) {
        return 38;
    } else if (a_0 == ${weapon_snspistol}) {
        return 39;
    } else if (a_0 == ${weapon_bullpuprifle}) {
        return 40;
    } else if (a_0 == ${weapon_heavypistol}) {
        return 41;
    } else if (a_0 == 0x61012683) {
        return 42;
    } else if (a_0 == 0x92a27487) {
        return 43;
    } else if (a_0 == 0x83839c4) {
        return 44;
    } else if (a_0 == 0x3aabbbaa) {
        return 45;
    } else if (a_0 == 0xc734385a) {
        return 46;
    } else if (a_0 == 0xab564b93) {
        return 47;
    } else if (a_0 == 0x63ab0442) {
        return 48;
    } else if (a_0 == 0xa3d4d34) {
        return 50;
    } else if (a_0 == 0xd8df3c3c) {
        return 49;
    } else if (a_0 == 0xdc4db296) {
        return 51;
    } else if (a_0 == 0xf9dcbf2d) {
        return 52;
    } else if (a_0 == 0xdd5df8d9) {
        return 53;
    } else if (a_0 == 0xdb1aa450) {
        return 56;
    } else if (a_0 == 0xef951fbb) {
        return 54;
    } else if (a_0 == 0x624fe830) {
        return 55;
    } else if (a_0 == 0x8bb05fd7) {
        return 60;
    } else if (a_0 == 0xdfe37640) {
        return 61;
    } else if (a_0 == 0xc1b3c3d1) {
        return 62;
    }
    return 62;
}

void sub_5d9c7(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_4b3f(a_0, sub_4b71(a_2), 0);
    v_5 += a_1;
    if (!sub_5dd4f(a_0)) {
        sub_84ba(a_0, v_5, a_2, 1);
    } else { 
        sub_5da08(a_0, v_5, a_2, 1);
    }
}

void sub_5da08(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = g_25A3D6[a_0/*5*/][sub_4b71(a_2)/*1*/];
    if (v_6 != 0) {
        STATS::STAT_SET_INT(v_6, a_1, a_3);
    }
    switch (a_0) {
    case 777:
        g_148FE7[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 778:
        g_148FED[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 779:
        g_148FF3[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 780:
        g_148FF9[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 767:
        g_148FCF[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 768:
        g_148FD5[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 769:
        g_148FDB[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 770:
        g_148FE1[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 757:
        g_148FB7[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 758:
        g_148FBD[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 759:
        g_148FC3[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 760:
        g_148FC9[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 747:
        g_148FFF[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 748:
        g_149005[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 749:
        g_14900B[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 750:
        g_149011[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 1293:
        g_149017[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 629:
        g_14901D[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 1268:
        g_149023[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 1865:
        g_25FC82[0/*6*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 2256:
        g_25FC82[1/*6*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 2902:
        g_25FC82[2/*6*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3030:
        g_25FC82[3/*6*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3732:
        g_25FCB5[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 754:
        g_149029[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 755:
        g_14902F[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 756:
        g_149035[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 1226:
        g_14903B[sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3025:
        g_25FC9B[0/*5*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3026:
        g_25FC9B[1/*5*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3027:
        g_25FC9B[2/*5*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3028:
        g_25FC9B[3/*5*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    case 3029:
        g_25FC9B[4/*5*/][sub_4b71(a_2)/*1*/] = a_1;
        break;
    default:
        break;
    }
}

auto sub_5dd4f(auto a_0) {
    if (g_148FA4) {
        switch (a_0) {
        case 629:
        case 747:
        case 748:
        case 749:
        case 750:
        case 754:
        case 755:
        case 756:
        case 757:
        case 758:
        case 759:
        case 760:
        case 767:
        case 768:
        case 769:
        case 770:
        case 777:
        case 778:
        case 779:
        case 780:
        case 1226:
        case 1268:
        case 1293:
        case 1865:
        case 2256:
        case 2902:
        case 3025:
        case 3026:
        case 3027:
        case 3028:
        case 3029:
        case 3030:
        case 3732:
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_5de33(auto a_0, auto a_1) {
    if ((sub_4e69() == 0) || (sub_1bd8d() == 0)) {
        switch (a_0) {
        case ${weapon_knife}:
            a_1 = 189;
            return 1;
            break;
        case ${weapon_nightstick}:
            a_1 = 196;
            return 1;
            break;
        case ${weapon_pistol}:
            a_1 = 247;
            return 1;
            break;
        case ${weapon_combatpistol}:
            a_1 = 257;
            return 1;
            break;
        case ${weapon_appistol}:
            a_1 = 277;
            return 1;
            break;
        case ${weapon_microsmg}:
            a_1 = 287;
            return 1;
            break;
        case ${weapon_smg}:
            a_1 = 297;
            return 1;
            break;
        case ${weapon_assaultrifle}:
            a_1 = 316;
            return 1;
            break;
        case ${weapon_carbinerifle}:
            a_1 = 325;
            return 1;
            break;
        case ${weapon_specialcarbine}:
            a_1 = 3210;
            return 1;
            break;
        case ${weapon_advancedrifle}:
            a_1 = 334;
            return 1;
            break;
        case ${weapon_mg}:
            a_1 = 343;
            return 1;
            break;
        case ${weapon_combatmg}:
            a_1 = 352;
            return 1;
            break;
        case ${weapon_pumpshotgun}:
            a_1 = 370;
            return 1;
            break;
        case ${weapon_sawnoffshotgun}:
            a_1 = 380;
            return 1;
            break;
        case ${weapon_assaultshotgun}:
            a_1 = 398;
            return 1;
            break;
        case ${weapon_stungun}:
            a_1 = 408;
            return 1;
            break;
        case ${weapon_sniperrifle}:
            a_1 = 417;
            return 1;
            break;
        case ${weapon_heavysniper}:
            a_1 = 426;
            return 1;
            break;
        case ${weapon_grenadelauncher}:
            a_1 = 435;
            return 1;
            break;
        case ${weapon_rpg}:
            a_1 = 442;
            return 1;
            break;
        case ${weapon_minigun}:
            a_1 = 451;
            return 1;
            break;
        case ${weapon_grenade}:
            a_1 = 459;
            return 1;
            break;
        case ${weapon_smokegrenade}:
            a_1 = 468;
            return 1;
            break;
        case ${weapon_stickybomb}:
            a_1 = 476;
            return 1;
            break;
        case ${gadget_parachute}:
            a_1 = 573;
            return 1;
            break;
        case ${weapon_petrolcan}:
            a_1 = 576;
            return 1;
            break;
        case 0x99aeeb3b:
            a_1 = 267;
            return 1;
            break;
        case ${weapon_assaultmg}:
            a_1 = 361;
            return 1;
            break;
        case ${weapon_assaultsmg}:
            a_1 = 307;
            return 1;
            break;
        case ${weapon_assaultsniper}:
            a_1 = 429;
            return 1;
            break;
        case ${weapon_hammer}:
            a_1 = 224;
            return 1;
            break;
        case ${weapon_bullpupshotgun}:
            a_1 = 389;
            return 1;
            break;
        case ${weapon_bottle}:
            a_1 = 1725;
            return 1;
            break;
        case ${weapon_snspistol}:
            a_1 = 1735;
            return 1;
            break;
        case ${weapon_heavypistol}:
            a_1 = 3200;
            return 1;
            break;
        case ${weapon_bullpuprifle}:
            a_1 = 3220;
            return 1;
            break;
        case 0x61012683:
            a_1 = 3230;
            return 1;
            break;
        case 0x83839c4:
            a_1 = 3513;
            return 1;
            break;
        case 0x92a27487:
            a_1 = 3503;
            return 1;
            break;
        case 0xa89cb99e:
            a_1 = 3533;
            return 1;
            break;
        case 0x7f7497e5:
            a_1 = 3523;
            return 1;
            break;
        case 0x3aabbbaa:
            a_1 = 3611;
            return 1;
            break;
        case 0xc734385a:
            a_1 = 3621;
            return 1;
            break;
        case 0xab564b93:
            a_1 = 3637;
            return 1;
            break;
        case 0x63ab0442:
            a_1 = 3645;
            return 1;
            break;
        case 0xa3d4d34:
            a_1 = 3655;
            return 1;
            break;
        case 0xd8df3c3c:
            a_1 = 3662;
            return 1;
            break;
        case 0xdc4db296:
            a_1 = 3672;
            return 1;
            break;
        case 0xf9dcbf2d:
            a_1 = 3629;
            return 1;
            break;
        case 0xdd5df8d9:
            a_1 = 3680;
            return 1;
            break;
        case 0xdb1aa450:
            a_1 = 3690;
            return 1;
            break;
        case 0xef951fbb:
            a_1 = 3718;
            return 1;
            break;
        case 0x624fe830:
            a_1 = 3708;
            return 1;
            break;
        case 0x8bb05fd7:
            a_1 = 3726;
            return 1;
            break;
        }
    }
    return 0;
}

auto sub_5e269(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    l_B3._f69._f15 = 1;
    if (sub_5a62(1)) {
        if (a_0 == 0) {
            if (sub_5fe37(a_2, a_1)) {
                a_1 = 0;
            }
        } else if (a_0 == 2) {
            if (sub_55718(a_2, a_4, a_1)) {
                a_1 = 0;
            }
        } else if (a_0 == 3) {
            v_C = sub_1be7f(a_2, l_4E7._f9, l_4E7._fA);
            if (a_1 <= 0) {
                a_1 = 0;
            }
            if (v_C != 0) {
                if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && sub_1a029(sub_10943(), v_C)) {
                    a_1 = 0;
                } else { }
            } else if (a_2 == 0xfc508e33) {
            } else { 
                a_1 = 0;
            }
        }
        if (is_in_transition) {
            if (((a_1 == 0) || NETWORKCASH::_IS_ITEM_AVAILABLE(a_1 + (l_4F7 + l_4F8), 0, 1, 0, -1)) || l_B3._f69._f19) {
                if (sub_122ef() && (!l_B3._f69._f19)) {
                    if ((((a_2 == ${weapon_grenade}) || (a_2 == ${weapon_stickybomb})) || (a_2 == ${weapon_smokegrenade})) || (a_2 == 0xab564b93)) {
                        sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_2D, &v_31);
                        sub_11379(&v_D, v_2D, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, a_3, 0, -1, -1);
                        sub_11379(&v_1D, v_2D, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, a_3, 1, -1, -1);
                        sub_5fd92(a_2, GAMEPLAY::GET_HASH_KEY(&v_1D), 1, a_1, GAMEPLAY::GET_HASH_KEY(&v_D));
                        return 1;
                    } else if ((a_0 == 0) && (a_2 == ${weapon_unarmed})) {
                        sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_2D, &v_31);
                        sub_11379(&v_D, v_2D, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, a_3, 0, -1, -1);
                        if (sub_99f3(0x4a9a0ae, 0x3fa29128, GAMEPLAY::GET_HASH_KEY(&v_D), 0x2005d9a9, 1, a_1, 1, 4, 0, 3)) {
                            l_B3._f69._f19 = 1;
                            l_B3._f69._f1A = 0;
                        } else { 
                            sub_7aca(sub_9649());
                            l_B3._f69._f15 = 0;
                            return 0;
                        }
                    } else if (a_0 == 0) {
                        v_35 = 0;
                        if (sub_715b() && (sub_1230c() || sub_12460())) {
                            if (((a_2 == ${weapon_hammer}) || (a_2 == 0x99aeeb3b)) || (a_2 == ${weapon_bullpupshotgun})) {
                                v_35 = 1;
                            }
                        }
                        sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_2D, &v_31);
                        sub_11379(&v_D, v_2D, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, a_3, v_35, -1, -1);
                        if (sub_99f3(0x4a9a0ae, 0x92f0dbbf, GAMEPLAY::GET_HASH_KEY(&v_D), 0x2005d9a9, 1, a_1, 1, 4, 0, 3)) {
                            l_B3._f69._f19 = 1;
                            l_B3._f69._f1A = 0;
                        } else { 
                            sub_7aca(sub_9649());
                            l_B3._f69._f15 = 0;
                            return 0;
                        }
                    } else if (a_0 == 1) {
                        sub_10e6d(a_8, a_7, &v_2D, 0);
                        sub_11379(&v_D, v_2D, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 0, sub_10a67(a_2), -1, -1);
                        sub_5fd92(a_2, GAMEPLAY::GET_HASH_KEY(&v_D), a_9, a_1 / a_9, -1);
                        return 1;
                    } else if (a_0 == 2) {
                        sub_1f9b4(a_2, l_B3._f69._f2 - 1, &v_2D, &v_31);
                        sub_11379(&v_D, v_2D, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 1, sub_10a67(a_2), -1, -1);
                        if (sub_99f3(0x4a9a0ae, 0x63a336e1, GAMEPLAY::GET_HASH_KEY(&v_D), 0x2005d9a9, 1, a_1, 1, 4, 0, 3)) {
                            l_B3._f69._f19 = 1;
                            l_B3._f69._f1A = 0;
                        } else { 
                            sub_7aca(sub_9649());
                            l_B3._f69._f15 = 0;
                            return 0;
                        }
                    } else if (a_2 == 0xfc508e33) {
                        sub_11379(&v_D, l_4E7, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, 6, 1, -1, -1);
                        if (sub_99f3(0x4a9a0ae, 0x3fa29128, GAMEPLAY::GET_HASH_KEY(&v_D), 0x2005d9a9, 1, a_1, 1, 4, 0, 3)) {
                            l_B3._f69._f19 = 1;
                            l_B3._f69._f1A = 0;
                        } else { 
                            sub_7aca(sub_9649());
                            l_B3._f69._f15 = 0;
                            return 0;
                        }
                    } else if (a_0 == 3) {
                        v_36 = 2;
                        if (a_2 == ${gadget_parachute}) {
                            v_36 = l_4E7._fA;
                        }
                        if (sub_715b() && (sub_1230c() || sub_12460())) {
                            if ((a_2 == 0x99aeeb3b) || (a_2 == ${weapon_bullpupshotgun})) {
                                if (GAMEPLAY::IS_PC_VERSION()) {
                                    v_36 = 3;
                                }
                            }
                        }
                        sub_11379(&v_D, l_4E7, ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), 3, v_36, sub_10a67(a_2), -1, -1);
                        if (sub_99f3(0x4a9a0ae, 0x63a336e1, GAMEPLAY::GET_HASH_KEY(&v_D), 0x2005d9a9, 1, a_1, 1, 4, 0, 3)) {
                            l_B3._f69._f19 = 1;
                            l_B3._f69._f1A = 0;
                        } else { 
                            sub_7aca(sub_9649());
                            l_B3._f69._f15 = 0;
                            return 0;
                        }
                    }
                }
                if ((!sub_122ef()) || (sub_7826() && (!l_B3._f69._f19))) {
                    if (a_1 >= 0) {
                        v_37 = 0;
                        if (sub_122ef()) {
                            if (a_0 == 0) {
                                if ((((a_2 == ${weapon_grenade}) || (a_2 == ${weapon_stickybomb})) || (a_2 == ${weapon_smokegrenade})) || (a_2 == 0xab564b93)) {
                                    v_37 = 1;
                                }
                            } else if (a_0 == 1) {
                                v_37 = 1;
                            }
                        }
                        if (v_37) {
                        } else if (a_0 == 0) {
                            sub_7e48(0x89f1aac6, a_1);
                            if (a_3 == 3) {
                                sub_8094(a_5, 1, 3);
                            } else { 
                                sub_8094(a_5, 1, 0);
                                sub_7cfc(l_9E);
                                sub_7c83();
                            }
                        } else if ((a_0 == 2) || (a_0 == 3)) {
                            sub_8fe7(4, 1, -1, 1);
                            sub_7e48(0x89f1aac6, a_1);
                            sub_8094(a_5, 1, 1);
                        } else if (a_0 == 1) {
                            sub_8094(a_5, 1, 2);
                            sub_7e48(0x89f1aac6, a_1);
                        }
                        if (sub_7c6f()) {
                            sub_7aca(sub_9649());
                        }
                    }
                    if (a_0 == 0) {
                        l_9E = a_2;
                        l_9F = l_B3._f69._f3;
                        l_A0 = l_B3._f69._f1;
                    }
                    if ((a_0 == 0) || (a_0 == 1)) {
                        if (a_3 != 3) {
                            sub_5bced(a_2, 1, -1);
                            if (a_0 == 0) {
                                sub_5fd05(a_2, 1, -1);
                                v_38 = sub_4b3f(2048, -1, 0);
                                v_39 = ((v_38 / 25000) + 1) * 25000;
                                if ((v_38 + a_1) >= v_39) {
                                    sub_5fcce(v_39);
                                }
                                sub_84ba(2048, v_38 + a_1, -1, 1);
                            }
                        }
                        if (!sub_5fca2(0, -1)) {
                            v_3C = 1;
                            for (v_3A = 0; v_3A < 20; v_3A += 1) {
                                for (v_3B = 0; v_3B < 5; v_3B += 1) {
                                    if (sub_afc5(l_B3, &g_2707D2, &v_3D, v_3A, v_3B, 0)) {
                                        if (v_3D._f18 == 0) {
                                            if (sub_6651b(v_3D, v_3D._f18, 0) && (!sub_5cc8c(v_3D, -1, 0))) {
                                                v_3C = 0;
                                            }
                                        }
                                    }
                                }
                            }
                            if (v_3C) {
                                sub_5fc7e(0, 1, -1);
                            }
                        }
                        if (a_0 == 0) {
                            sub_5bced(a_2, 1, -1);
                            while (sub_21a3b(&l_4E1, a_2, v_57, 0)) {
                                if (l_4E1._f1) {
                                    sub_55c7f(l_4E1, a_2, 1);
                                    sub_5fbed(l_4E1, a_2, 1);
                                }
                                v_57 += 1;
                            }
                        }
                    } else if (a_0 == 2) {
                        sub_55c7f(a_4, a_2, 1);
                        sub_5fbed(a_4, a_2, 1);
                    } else if (a_0 == 3) {
                        v_58 = sub_1be7f(a_2, l_4E7._f9, l_4E7._fA);
                        if (v_58 != 0) {
                            sub_5abec(v_58, 1, -1);
                            sub_5585f(v_58, 1, -1);
                        }
                    }
                    if (((a_2 != 0) && (a_2 != ${weapon_unarmed})) && (a_2 != 0xfc508e33)) {
                        sub_5c296(a_2);
                    }
                    l_B3._f69._f15 = 0;
                    return 1;
                }
            }
        } else if (sub_5fb95(sub_10943()) >= a_1) {
            if (a_1 >= 0) {
                sub_5f0eb(sub_10943(), sub_5fb7e(l_B3), a_1);
            }
            if (a_0 == 0) {
                sub_8094(a_5, 1, 0);
                sub_7cfc(l_9E);
                l_9E = a_2;
                l_9F = l_B3._f69._f3;
                l_A0 = l_B3._f69._f1;
            } else if (a_0 == 1) {
                sub_8094(a_5, 1, 1);
            } else if (a_0 == 2) {
                sub_8094(a_5, 1, 1);
            } else if (a_0 == 3) {
                sub_8094(a_5, 1, 1);
            }
            if (a_0 == 0) {
                sub_5ee6c(sub_10943(), a_2, 1);
                while (sub_21a3b(&l_4E1, a_2, v_59, 0)) {
                    if (l_4E1._f1) {
                        sub_5ebb7(sub_10943(), a_2, l_4E1, 1);
                    }
                    v_59 += 1;
                }
                v_5A = 0;
                v_5B = 0;
                v_5C = 0;
                STATS::STAT_GET_INT(0x250f8693, &v_5A, -1);
                STATS::STAT_GET_INT(0x11cbc9c1, &v_5B, -1);
                STATS::STAT_GET_INT(0x5665c99, &v_5C, -1);
                v_5D = (v_5A + v_5B) + v_5C;
                v_5E = ((v_5D / 25000) + 1) * 25000;
                if ((v_5D + a_1) >= v_5E) {
                    sub_5fcce(v_5E);
                }
                switch (sub_10943()) {
                case 0:
                    STATS::STAT_SET_INT(0x250f8693, v_5A + a_1, 1);
                    break;
                case 1:
                    STATS::STAT_SET_INT(0x11cbc9c1, v_5B + a_1, 1);
                    break;
                case 2:
                    STATS::STAT_SET_INT(0x5665c99, v_5C + a_1, 1);
                    break;
                }
            } else if (a_0 == 2) {
                sub_5ebb7(sub_10943(), a_2, a_4, 1);
            } else if (a_0 == 3) {
                v_5F = sub_1be7f(a_2, l_4E7._f9, l_4E7._fA);
                if (v_5F != 0) {
                    sub_5ac74(sub_10943(), v_5F, 1);
                }
            }
            if (a_3 == 3) {
                l_41D = 1;
            }
            l_B3._f69._f15 = 0;
            return 1;
        }
    }
    return 0;
}

void sub_5ebb7(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_7507(a_0)) {
        v_6 = sub_1f636(a_0, a_1, a_2);
        v_7 = sub_1ea29(a_2, a_1);
        v_8 = sub_1ea1c(v_7);
        if (a_3) {
            GAMEPLAY::SET_BIT(&v_6, v_8);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_6, v_8);
        }
        sub_5ec0a(a_0, a_1, a_2, v_6);
    }
}

void sub_5ec0a(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = sub_1ea29(a_2, a_1);
    v_7 = sub_1f89a(v_6);
    switch (v_7) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x407407aa, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xd3eebb4e, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x6aaef0a, a_3, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xae46634d, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xb9588622, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xf4614a77, a_3, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xd25eab9d, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x3d718e5a, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xe96f3493, a_3, 1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xbf938607, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x6b5d6a31, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xdaac970e, a_3, 1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x876d959c, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x9058b423, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xcd6f7c94, a_3, 1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xf4fdf0db, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x7f15119c, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xbb31d819, a_3, 1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xce382338, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x20e9795, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xcc667a86, a_3, 1);
            break;
        }
        break;
    default:
        break;
    }
}

void sub_5ee6c(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        v_5 = sub_5efd1(a_0, a_1);
        v_6 = sub_10a67(a_1);
        v_7 = sub_1008b(v_6);
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, v_7);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, v_7);
        }
        sub_5eeb9(a_0, a_1, v_5);
    }
}

void sub_5eeb9(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_10a67(a_1);
    v_6 = sub_10156(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xbbe7bea0, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xf875dedc, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xa967697, a_2, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xbd0ac0e6, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xb5b048e, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xe4562a17, a_2, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xced6647d, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x3ef66bc4, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xd56f8c4a, a_2, 1);
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_5efd1(auto a_0, auto a_1) {
    v_5 = sub_10a67(a_1);
    v_6 = sub_10156(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xbbe7bea0, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xf875dedc, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xa967697, &v_4, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xbd0ac0e6, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xb5b048e, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xe4562a17, &v_4, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xced6647d, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x3ef66bc4, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xd56f8c4a, &v_4, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_4;
}

auto sub_5f0eb(auto a_0, auto a_1, auto a_2) {
    if (game_state._f7F07[a_0/*29*/]._f11 == 3) {
        return 0;
    }
    if (game_state._f7F07[a_0/*29*/]._f11 == 4) {
        return 0;
    }
    return sub_5f134(game_state._f7F07[a_0/*29*/]._f11, 0, a_1, a_2, 0);
}

auto sub_5f134(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    sub_5fb09();
    if (a_3 < 1) {
        return 0;
    }
    v_7 = 1.0;
    switch (a_1) {
    case 0:
        switch (a_0) {
        case 0:
            sub_7d2f(99, 1);
            sub_5fae6(0xd8dde3ac, a_3);
            break;
        case 1:
            sub_5fae6(0x82f04461, a_3);
            break;
        case 2:
            sub_5fae6(0x5e1032a2, a_3);
            break;
        }
        sub_5fa2f(0);
        switch (a_2) {
        case 124:
        case 125:
        case 126:
        case 127:
        case 128:
            if (sub_893b(5)) {
                v_7 = 0.9;
                v_8 = 5;
            }
            break;
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
            switch (a_0) {
            case 0:
                sub_5fae6(0xb90a1501, a_3);
                break;
            case 1:
                sub_5fae6(0x1d36ffe4, a_3);
                break;
            case 2:
                sub_5fae6(0x7375f79, a_3);
                break;
            }
            if (sub_893b(1)) {
                v_7 = 0.0;
                v_8 = 1;
            }
            break;
        case 21:
            switch (a_0) {
            case 0:
                sub_5fae6(0xd156803, a_3);
                break;
            case 1:
                sub_5fae6(0x6f8ce97a, a_3);
                break;
            case 2:
                sub_5fae6(0x87561c19, a_3);
                break;
            }
            break;
        case 25:
            switch (a_0) {
            case 0:
                sub_5fae6(0x1a5c0a6, a_3);
                break;
            case 1:
                sub_5fae6(0x192b26bc, a_3);
                break;
            case 2:
                sub_5fae6(0x12d8dfd0, a_3);
                break;
            }
            break;
        case 98:
        case 99:
        case 100:
        case 101:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
            switch (a_0) {
            case 0:
                sub_5fae6(0x6bb0a613, a_3);
                break;
            case 1:
                sub_5fae6(0x5dfbc6d0, a_3);
                break;
            case 2:
                sub_5fae6(0x280c1bd4, a_3);
                break;
            }
            break;
        default:
            switch (SCRIPT::_GET_THIS_SCRIPT_HASH()) {
            case ${clothes_shop_sp}:
                switch (a_0) {
                case 0:
                    sub_5fae6(0x185b8f46, a_3);
                    break;
                case 1:
                    sub_5fae6(0xe6ae13d3, a_3);
                    break;
                case 2:
                    sub_5fae6(0xdebb7d4a, a_3);
                    break;
                }
                break;
            case ${hairdo_shop_sp}:
                switch (a_0) {
                case 0:
                    sub_5fae6(0x79818787, a_3);
                    break;
                case 1:
                    sub_5fae6(0xddda2f69, a_3);
                    break;
                case 2:
                    sub_5fae6(0xc723e8ec, a_3);
                    break;
                }
                if (sub_893b(0)) {
                    v_7 = 0.0;
                    v_8 = 0;
                }
                break;
            case ${gunclub_shop}:
                switch (a_0) {
                case 0:
                    sub_5fae6(0xe56d46f6, a_3);
                    break;
                case 1:
                    sub_5fae6(0xad57c3a1, a_3);
                    break;
                case 2:
                    sub_5fae6(0xd49e38cd, a_3);
                    break;
                }
                break;
            case ${carmod_shop}:
                switch (a_0) {
                case 0:
                    sub_5fae6(0x980b9ad0, a_3);
                    break;
                case 1:
                    sub_5fae6(0x2fa911e0, a_3);
                    break;
                case 2:
                    sub_5fae6(0xad45726, a_3);
                    break;
                }
                sub_5fa0f(a_3);
                break;
            }
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            sub_7d2f(95, a_3);
            break;
        case 1:
            sub_7d2f(97, a_3);
            break;
        case 2:
            sub_7d2f(96, a_3);
            break;
        }
        sub_7d2f(98, a_3);
        break;
    }
    v_9 = a_0;
    a_3 = SYSTEM::FLOOR(v_7 * __678_$BBDA792448DB5A89(a_3));
    v_A = 0;
    v_B = a_3;
    if (v_7 == 0.0) {
        sub_87f4(v_8);
        return 1;
    } else if (v_7 != 1.0) {
        sub_87f4(v_8);
    }
    v_C = g_CE62[v_9/*1*/] + a_3;
    switch (a_1) {
    case 1:
        if ((g_CE62[v_9/*1*/] >= 0) && (a_3 > 0)) {
            if (v_C <= 0) {
                g_CE62[v_9/*1*/] = 0x7fffffff;
            } else { 
                g_CE62[v_9/*1*/] += a_3;
            }
        }
        switch (a_0) {
        case 0:
            sub_5fae6(0xec4f6a3c, a_3);
            break;
        case 1:
            sub_5fae6(0x652ec70d, a_3);
            break;
        case 2:
            sub_5fae6(0x63d3c8a1, a_3);
            break;
        }
        break;
    case 0:
        if (!a_4) {
            if ((g_CE62[v_9/*1*/] - a_3) < 0) {
                return 0;
            }
        }
        v_A = g_CE62[v_9/*1*/];
        g_CE62[v_9/*1*/] -= a_3;
        if (a_4) {
            v_B = v_A;
        }
        break;
    }
    if (a_2 == 1) {
        if (v_B > 20) {}
    } else { 
        game_state._f61C9._fE9[v_9/*69*/]._f2[game_state._f61C9._fE9[v_9/*69*/]._f1/*6*/] = a_1;
        game_state._f61C9._fE9[v_9/*69*/]._f2[game_state._f61C9._fE9[v_9/*69*/]._f1/*6*/]._f1 = a_2;
        game_state._f61C9._fE9[v_9/*69*/]._f2[game_state._f61C9._fE9[v_9/*69*/]._f1/*6*/]._f2 = a_3;
        game_state._f61C9._fE9[v_9/*69*/] += 1;
        game_state._f61C9._fE9[v_9/*69*/]._f1 += 1;
        if (game_state._f61C9._fE9[v_9/*69*/]._f1 > 10) {
            game_state._f61C9._fE9[v_9/*69*/]._f1 = 0;
        }
    }
    sub_5f9b5(a_0);
    if (g_8B74 == 15) {
        sub_5f733(0);
    }
    return 1;
}

void sub_5f733(auto a_0) {
    v_3 = 0;
    v_4 = 0;
    for (v_3 = 0; v_3 < 3; v_3 += 1) {
        for (v_4 = 0; v_4 < 11; v_4 += 1) {
            game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f3 = game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/];
            game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f4 = game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f1;
            game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f5 = game_state._f61C9._fE9[v_3/*69*/]._f2[v_4/*6*/]._f2;
        }
    }
    for (v_3 = 0; v_3 < 10; v_3 += 1) {
        g_CE6A[v_3/*3*/][0/*1*/] = game_state._f61C9[v_3/*1*/];
        g_CE6A._f1F[v_3/*3*/][0/*1*/] = game_state._f61C9._fB[v_3/*1*/];
        g_CE6A._f3E[v_3/*3*/][0/*1*/] = game_state._f61C9._f16[v_3/*1*/];
        g_CE6A._f5D[v_3/*3*/][0/*1*/] = game_state._f61C9._f21[v_3/*1*/];
        g_CE6A._f7C[v_3/*3*/][0/*1*/] = game_state._f61C9._f2C[v_3/*1*/];
        g_CE6A._f9B[v_3/*3*/][0/*1*/] = game_state._f61C9._f37[v_3/*1*/];
        g_CE6A._fBA[v_3/*3*/][0/*1*/] = game_state._f61C9._f42[v_3/*1*/];
        g_CE6A._fD9[v_3/*3*/][0/*1*/] = game_state._f61C9._f4D[v_3/*1*/];
        g_CE6A._fF8[v_3/*3*/][0/*1*/] = game_state._f61C9._f58[v_3/*1*/];
        if (!a_0) {
            g_CE6A[v_3/*3*/][1/*1*/] = game_state._f61C9[v_3/*1*/];
            g_CE6A._f1F[v_3/*3*/][1/*1*/] = game_state._f61C9._fB[v_3/*1*/];
            g_CE6A._f3E[v_3/*3*/][1/*1*/] = game_state._f61C9._f16[v_3/*1*/];
            g_CE6A._f5D[v_3/*3*/][1/*1*/] = game_state._f61C9._f21[v_3/*1*/];
            g_CE6A._f7C[v_3/*3*/][1/*1*/] = game_state._f61C9._f2C[v_3/*1*/];
            g_CE6A._f9B[v_3/*3*/][1/*1*/] = game_state._f61C9._f37[v_3/*1*/];
            g_CE6A._fBA[v_3/*3*/][1/*1*/] = game_state._f61C9._f42[v_3/*1*/];
            g_CE6A._fD9[v_3/*3*/][1/*1*/] = game_state._f61C9._f4D[v_3/*1*/];
            g_CE6A._fF8[v_3/*3*/][1/*1*/] = game_state._f61C9._f58[v_3/*1*/];
        }
    }
}

void sub_5f9b5(auto a_0) {
    v_3 = g_CE62[a_0/*1*/];
    switch (a_0) {
    case 0:
        STATS::STAT_SET_INT(0x324c31d, v_3, 1);
        break;
    case 1:
        STATS::STAT_SET_INT(0x44bd6982, v_3, 1);
        break;
    case 2:
        STATS::STAT_SET_INT(0x8d75047d, v_3, 1);
        break;
    }
}

void sub_5fa0f(auto a_0) {
    sub_7d2f(93, a_0);
    sub_7d2f(29, a_0);
    sub_7d2f(30, a_0);
}

auto sub_5fa2f(auto a_0) {
    v_4 = 0;
    if (PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(27)) {
        return 0;
    }
    if (STATS::STAT_GET_INT(0xd8dde3ac, &v_3, -1)) {
        v_4 += v_3;
    }
    if (STATS::STAT_GET_INT(0x82f04461, &v_3, -1)) {
        v_4 += v_3;
    }
    if (STATS::STAT_GET_INT(0x5e1032a2, &v_3, -1)) {
        v_4 += v_3;
    }
    if (a_0) {}
    v_5 = 0;
    STATS::STAT_GET_INT(0xe6d69c91, &v_5, -1);
    if ((v_4 > 0) && ((v_5 / 0x1e8480) != (v_4 / 0x1e8480))) {
        STATS::STAT_SET_INT(0xe6d69c91, v_4, 1);
        sub_8f96(27, v_4);
    }
    if (v_4 < 0xbebc200) {
        return 0;
    }
    sub_59b13(27, 1);
    return 1;
}

void sub_5fae6(auto a_0, auto a_1) {
    STATS::STAT_GET_INT(a_0, &v_4, -1);
    v_4 += a_1;
    STATS::STAT_SET_INT(a_0, v_4, 1);
}

void sub_5fb09() {
    if (NETWORK::NETWORK_IS_SIGNED_IN()) {
        STATS::STAT_GET_INT(0x324c31d, &v_2, -1);
        if (!(g_CE62[0/*1*/] == v_2)) {
            g_CE62[0/*1*/] = v_2;
        }
        STATS::STAT_GET_INT(0x44bd6982, &v_2, -1);
        if (!(g_CE62[1/*1*/] == v_2)) {
            g_CE62[1/*1*/] = v_2;
        }
        STATS::STAT_GET_INT(0x8d75047d, &v_2, -1);
        if (!(g_CE62[2/*1*/] == v_2)) {
            g_CE62[2/*1*/] = v_2;
        }
    }
}

auto sub_5fb7e(auto a_0) {
    v_3 = a_0 - 0;
    v_4 = 41;
    return v_3 + v_4;
}

auto sub_5fb95(auto a_0) {
    switch (a_0) {
    case 0:
        STATS::STAT_GET_INT(0x324c31d, &v_3, -1);
        return v_3;
    case 1:
        STATS::STAT_GET_INT(0x44bd6982, &v_3, -1);
        return v_3;
    case 2:
        STATS::STAT_GET_INT(0x8d75047d, &v_3, -1);
        return v_3;
    }
    return 0;
}

void sub_5fbed(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        if (!sub_1f8a7(a_0, a_1, -1)) {
            sub_5fc28(a_0, a_1, 1);
        }
    } else if (sub_1f8a7(a_0, a_1, -1)) {
        sub_5fc28(a_0, a_1, 0);
    }
}

void sub_5fc28(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_1f8dc(a_0, a_1, -1);
    v_6 = sub_1ea29(a_0, a_1);
    if (v_6 > -1) {
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_1f8f7(a_0, a_1), v_5, -1, 1);
    } else { }
}

void sub_5fc7e(auto a_0, auto a_1, auto a_2) {
    v_5 = g_25FBA8[a_0/*5*/][sub_4b71(a_2)/*1*/];
    STATS::STAT_SET_BOOL(v_5, a_1, 1);
}

auto sub_5fca2(auto a_0, auto a_1) {
    v_4 = g_25FBA8[a_0/*5*/][sub_4b71(a_1)/*1*/];
    if (STATS::STAT_GET_BOOL(v_4, &v_5, -1)) {
        return v_5;
    }
    return 0;
}

void sub_5fcce(auto a_0) {
    v_3 = sub_7caf(86);
    g_24C5EA[v_3/*83*/] = 86;
    g_24C5EA[v_3/*83*/]._f11 = a_0;
    g_24C5EA[v_3/*83*/]._f12[0/*16*/]/*"64"*/ = "";
}

void sub_5fd05(auto a_0, auto a_1, auto a_2) {
    if (a_1) {
        if (!sub_5cc8c(a_0, a_2, 0)) {
            sub_5fd40(a_0, 1, a_2);
        }
    } else if (sub_5cc8c(a_0, a_2, 0)) {
        sub_5fd40(a_0, 0, a_2);
    }
}

void sub_5fd40(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_5cceb(a_0, a_2);
    v_6 = sub_10a67(a_0);
    if (v_6 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_5cd04(a_0), v_5, a_2, 1);
    } else { }
}

void sub_5fd92(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (l_4F5 < 10) {
        g_270871[l_4F5/*1*/] = a_0;
        g_27087C[l_4F5/*1*/] = a_1;
        g_270887[l_4F5/*1*/] = a_4;
        g_270892[l_4F5/*1*/] = a_2;
        g_27089D[l_4F5/*1*/] = a_3;
        l_4F5 += 1;
        v_7 = a_3 * a_2;
        v_9 = 0;
        v_A = 0;
        if (NETWORKCASH::_7303E27CC6532080(v_7, 1, 0, 0, &v_8, -1)) {
            v_9 = v_7;
        } else { 
            v_9 = v_7 - v_8;
            v_A = v_8;
        }
        if (l_4F5 == 1) {
            UI::_170F541E1CADD1DE(1);
        }
        UI::_SET_SINGLEPLAYER_HUD_CASH(-v_A, -v_9);
        l_4F8 += v_9;
        l_4F7 += v_A;
    }
}

auto sub_5fe37(auto a_0, auto a_1) {
    if (a_1 <= 0) {
        return 1;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
    } else if ((a_0 == ${weapon_sniperrifle}) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${trevor2}) != 0)) {
        return 1;
    }
    return 0;
}

auto sub_5fe73(auto a_0, auto a_1, auto a_2, auto a_3) {
    for (v_6 = 0; v_6 < 20; v_6 += 1) {
        for (v_7 = 0; v_7 < 5; v_7 += 1) {
            if (sub_afc5(l_B3, &g_2707D2, a_0, v_6, v_7, 0)) {
                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_8/*1*/])) {
                    if (ENTITY::IS_ENTITY_VISIBLE(l_B3._fDC[v_8/*1*/])) {
                        if ((ENTITY::GET_ENTITY_MODEL(l_B3._fDC[v_8/*1*/]) == WEAPON::GET_WEAPONTYPE_MODEL(${weapon_nightstick})) && ((v_6 != a_3._f3) || (v_7 != a_3._f1))) {
                            v_9/*{3}*/ = {0.21, 0.0, 0.22 };
                            if ((sub_5ff8f(l_B3._fDC[v_8/*1*/], 0.0, 0.0, 0.0) || sub_5ff8f(l_B3._fDC[v_8/*1*/], v_9 * ((vector)(1.0)))) || sub_5ff8f(l_B3._fDC[v_8/*1*/], v_9 * ((vector)(2.0)))) {
                                a_1 = v_6;
                                a_2 = v_7;
                                return 1;
                            }
                        } else if (sub_5ff8f(l_B3._fDC[v_8/*1*/], 0.0, 0.0, 0.0)) {
                            a_1 = v_6;
                            a_2 = v_7;
                            return 1;
                        }
                    }
                }
            }
            v_8 += 1;
        }
    }
    return 0;
}

auto sub_5ff8f(auto a_0, auto a_1, auto a_2, auto a_3) {
    asm .vardef<F> 12, "[{\"offset\":0,\"value\":4}]"
    asm .vardef<F> 0x19, "[{\"offset\":0,\"value\":4}]"
    asm .vardef<F> 0x26, "[{\"type\":\"field\",\"value\":[{\"offset\":0,\"value\":15}]}]"
    if (!ENTITY::DOES_ENTITY_EXIST(a_0)) {
        return 0;
    }
    GAMEPLAY::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(a_0), &v_6, &v_9);
    v_6 += a_1;
    v_9 += a_1;
    v_C[0/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, v_6, 0.0, v_6._f2);
    v_C[1/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, v_6, 0.0, v_9._f2);
    v_C[2/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, v_9, 0.0, v_9._f2);
    v_C[3/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, v_9, 0.0, v_6._f2);
    if ((!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[0/*3*/], &v_19[0/*3*/], &v_19[0/*3*/]._f1)) || (!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[1/*3*/], &v_19[1/*3*/], &v_19[1/*3*/]._f1))) {
        v_C[0/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, 0.0, 0.0, v_6._f2);
        v_C[1/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, 0.0, 0.0, v_9._f2);
        if ((!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[0/*3*/], &v_19[0/*3*/], &v_19[0/*3*/]._f1)) || (!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[1/*3*/], &v_19[1/*3*/], &v_19[1/*3*/]._f1))) {
            return 0;
        }
    }
    if ((!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[2/*3*/], &v_19[2/*3*/], &v_19[2/*3*/]._f1)) || (!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[3/*3*/], &v_19[3/*3*/], &v_19[3/*3*/]._f1))) {
        v_C[2/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, 0.0, 0.0, v_9._f2);
        v_C[3/*3*/]/*{3}*/ = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(a_0, 0.0, 0.0, v_6._f2);
        if ((!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[2/*3*/], &v_19[2/*3*/], &v_19[2/*3*/]._f1)) || (!GRAPHICS::_WORLD3D_TO_SCREEN2D(v_C[3/*3*/], &v_19[3/*3*/], &v_19[3/*3*/]._f1))) {
            return 0;
        }
    }
    sub_60388(&v_26);
    sub_60357(&v_26, v_19[0/*3*/]);
    sub_60357(&v_26, v_19[1/*3*/]);
    sub_60357(&v_26, v_19[2/*3*/]);
    sub_60357(&v_26, v_19[3/*3*/]);
    sub_602b7(&v_26);
    if (sub_601fb(&v_26, g_2708F0, g_2708F1, 0.0)) {
        return 1;
    } else { 
        v_5A/*{3}*/ = ENTITY::GET_ENTITY_COORDS(a_0, 1);
        if (GRAPHICS::_WORLD3D_TO_SCREEN2D(v_5A, &v_5D, &v_5E)) {
            if (SYSTEM::VDIST(v_5D, v_5E, 0.0, g_2708F0, g_2708F1, 0.0) < 0.05) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_601fb(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0._f2E < 3) {}
    v_6 = 0;
    v_7 = 0;
    v_8 = a_0._f2E - 1;
    for (; v_7 < a_0._f2E; v_7 += 1) {
        if (((a_0[v_7/*3*/]._f1 < a_1._f1) && (a_0[v_8/*3*/]._f1 >= a_1._f1)) || ((a_0[v_8/*3*/]._f1 < a_1._f1) && (a_0[v_7/*3*/]._f1 >= a_1._f1))) {
            if ((a_0[v_7/*3*/] + (((a_1._f1 - a_0[v_7/*3*/]._f1) / (a_0[v_8/*3*/]._f1 - a_0[v_7/*3*/]._f1)) * (a_0[v_8/*3*/] - a_0[v_7/*3*/]))) < a_1) {
                v_6 = !v_6;
            }
        }
        v_8 = v_7;
    }
    return v_6;
}

void sub_602b7(auto a_0) {
    if (a_0._f33 == 0) {}
    if (a_0._f2E < 3) {}
    for (v_3 = 0; v_3 < a_0._f2E; v_3 += 1) {
        a_0._f2F += a_0[v_3/*3*/];
    }
    a_0._f2F /= (vector)__678_$BBDA792448DB5A89(v_3);
    for (v_3 = 0; v_3 < a_0._f2E; v_3 += 1) {
        v_4 = SYSTEM::VDIST2(a_0._f2F, a_0[v_3/*3*/]);
        if (v_4 > a_0._f32) {
            a_0._f32 = v_4;
        }
    }
    a_0._f32 = SYSTEM::SQRT(a_0._f32);
    a_0._f33 = 0;
}

void sub_60357(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_0._f33 == 0) {}
    if (a_0._f2E >= 15) {}
    a_0[a_0._f2E/*3*/]/*{3}*/ = a_1;
    a_0._f2E += 1;
}

void sub_60388(auto a_0) {
    if (a_0._f33) {}
    a_0._f2E = 0;
    a_0._f2F/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f32 = 0.0;
    a_0._f33 = 1;
}

auto sub_603af() {
    if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
        if (g_2708F6 > -1) {
            if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_603d6(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_C = 0.034722 / 2.0;
    v_13 = -1;
    if (!CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
        g_2708F6 = -1;
        return ;
    }
    CONTROLS::_5B73C77D9EB66E24(1);
    v_6 = g_4366;
    v_8 = v_6 + g_4368;
    v_9 = g_4369._f15E0;
    v_7 = g_4369._f15E0 - (((float)g_4369._f15E2) * 0.034722);
    if (a_2) {
        v_9 += 0.034722;
        v_7 += 0.034722;
    }
    if (g_4369._f15E2 < 1) {
        v_7 = g_4369._f15E0 - 0.034722;
    }
    GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 84);
    GRAPHICS::_F5A2C681787E579D(-0.05, -0.05, 0.0, 0.0);
    v_A = v_6;
    v_B = v_7;
    GRAPHICS::_6DD8F5AA635EB4B2(v_6, v_7, &v_6, &v_7);
    GRAPHICS::_6DD8F5AA635EB4B2(v_8, v_9, &v_8, &v_9);
    GRAPHICS::_E3A3DB414A373DAB();
    sub_6070b();
    if (g_2708F6 == -6) {
        return ;
    }
    g_2708F6 = -1;
    v_D = g_2708F0;
    v_E = g_2708F1;
    if (g_4369._f15E3 > g_4369._f15E2) {
        if ((((g_2708F0 >= v_6) && (g_2708F0 <= v_8)) && (g_2708F1 >= v_9)) && (g_2708F1 < (v_9 + v_C))) {
            g_2708F6 = -2;
            if (a_3) {
                sub_60682(0);
            }
            return ;
        }
        if ((((g_2708F0 >= v_6) && (g_2708F0 <= v_8)) && (g_2708F1 >= (v_9 + v_C))) && (g_2708F1 < (v_9 + 0.034722))) {
            g_2708F6 = -3;
            if (a_3) {
                sub_60682(0);
            }
            return ;
        }
    }
    if ((((v_D >= v_6) && (v_D <= v_8)) && (v_E >= v_7)) && (v_E <= v_9)) {
        v_F = v_E - v_7;
        v_13 = SYSTEM::FLOOR(v_F / 0.034722);
        if (g_4369._f15E3 == -1) {
            g_2708F6 = 0;
            v_13 = 0;
            return ;
        }
        v_11 = 148;
        v_12 = v_11 / g_4369._f15E2;
        v_10 = 32 + (v_11 - (v_12 * v_13));
        if (a_3) {
            if ((!a_1) || (v_13 != 0)) {
                GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 84);
                GRAPHICS::_F5A2C681787E579D(-0.05, -0.05, 0.0, 0.0);
                sub_15e1f(v_A, v_B + (((float)v_13) * 0.034722), g_4368, 0.034722 - 0.0015, 255, 255, 255, v_10);
                GRAPHICS::_E3A3DB414A373DAB();
            }
        }
        g_2708F6 = g_4369._f1D3B[v_13/*1*/];
        return ;
    }
    if (!a_0) {
        if (v_D < v_8) {
            g_2708F6 = -4;
            return ;
        }
        if (v_E > 0.9) {
            g_2708F6 = -5;
            return ;
        }
    } else if ((v_D < v_8) && (v_E < (v_9 + 0.25))) {
        g_2708F6 = -4;
        return ;
    }
    g_2708F6 = -1;
}

void sub_60682(auto a_0) {
    v_5 = 0.034722 / 2.0;
    if (a_0) {
        v_6 = 48;
    } else { 
        v_6 = 210;
    }
    v_3 = g_4366;
    v_4 = g_4369._f15E0;
    GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 84);
    GRAPHICS::_F5A2C681787E579D(-0.05, -0.05, 0.0, 0.0);
    if (g_2708F6 == -2) {
        sub_15e1f(v_3, v_4, g_4368, v_5, 255, 255, 255, v_6);
    } else if (g_2708F6 == -3) {
        sub_15e1f(v_3, v_4 + v_5, g_4368, v_5, 255, 255, 255, v_6);
    }
    GRAPHICS::_E3A3DB414A373DAB();
}

void sub_6070b() {
    g_2708F2 = g_2708F0;
    g_2708F3 = g_2708F1;
    g_2708F0 = CONTROLS::GET_DISABLED_CONTROL_NORMAL(2, 239);
    g_2708F1 = CONTROLS::GET_DISABLED_CONTROL_NORMAL(2, 240);
    g_2708F4 = g_2708F0 - g_2708F2;
    g_2708F5 = g_2708F1 - g_2708F3;
}

void sub_60753() {
    if (GAMEPLAY::IS_PC_VERSION()) {
        if (UI::IS_PAUSE_MENU_ACTIVE() || UI::_E18B138FABC53103()) {
            if (l_15 == 1) {
                UI::_8DB8CFFD58B62552(1);
                l_15 = 0;
            }
        } else { 
            l_15 = 1;
        }
    }
}

auto sub_60787(auto a_0, auto a_1, auto a_2) {
    if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
        if (g_2708F6 == -2) {
            if ((CONTROLS::IS_CONTROL_PRESSED(2, 237) && a_0) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
                return 1;
            }
        }
        if (a_2 == 0) {
            if (CONTROLS::IS_CONTROL_PRESSED(2, 241) || (CONTROLS::IS_DISABLED_CONTROL_PRESSED(2, 241) && a_1)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_607ec(auto a_0, auto a_1, auto a_2) {
    if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
        if (g_2708F6 == -3) {
            if ((CONTROLS::IS_CONTROL_PRESSED(2, 237) && a_0) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {
                return 1;
            }
        }
        if (a_2 == 0) {
            if (CONTROLS::IS_CONTROL_PRESSED(2, 242) || (CONTROLS::IS_DISABLED_CONTROL_PRESSED(2, 242) && a_1)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_60851() {
    if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {
        if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 238)) {
            return 1;
        }
    }
    return 0;
}

void sub_60870(auto a_0, auto a_1) {
    sub_2d68c(a_0, &a_0._f1, &a_0._f2, &a_0._f3, 1);
    v_4 = 1.0;
    if (v_4 == 1.0) {
        if (((!a_0._f4) || (!a_0._f9)) || (!a_0._f8)) {
            if (a_0._f1C <= 0) {
                a_0._f1C = GAMEPLAY::GET_GAME_TIMER();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_0._f20 = NETWORK::GET_NETWORK_TIME();
                }
            }
            if (a_0._f1C > 0) {
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f20, a_1 * 3))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f1C) > (a_1 * 3)))) {
                    v_4 = 0.25;
                }
            }
        } else { 
            a_0._f1C = 0;
        }
    }
    if (v_4 == 1.0) {
        if (((!a_0._f5) || (!a_0._fA)) || (!a_0._fB)) {
            if (a_0._f1D <= 0) {
                a_0._f1D = GAMEPLAY::GET_GAME_TIMER();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_0._f21 = NETWORK::GET_NETWORK_TIME();
                }
            }
            if (a_0._f1D > 0) {
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f21, a_1 * 3))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f1D) > (a_1 * 3)))) {
                    v_4 = 0.25;
                }
            }
        } else { 
            a_0._f1D = 0;
        }
    }
    if (v_4 == 1.0) {
        if (!a_0._f6) {
            if (a_0._f1E <= 0) {
                a_0._f1E = GAMEPLAY::GET_GAME_TIMER();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_0._f22 = NETWORK::GET_NETWORK_TIME();
                }
            }
            if (a_0._f1E > 0) {
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f22, a_1 * 3))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f1E) > (a_1 * 3)))) {
                    v_4 = 0.25;
                }
            }
        } else { 
            a_0._f1E = 0;
        }
    }
    if (v_4 == 1.0) {
        if (!a_0._f7) {
            if (a_0._f1F <= 0) {
                a_0._f1F = GAMEPLAY::GET_GAME_TIMER();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_0._f23 = NETWORK::GET_NETWORK_TIME();
                }
            }
            if (a_0._f1F > 0) {
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f23, a_1 * 3))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f1F) > (a_1 * 3)))) {
                    v_4 = 0.25;
                }
            }
        } else { 
            a_0._f1F = 0;
        }
    }
    if (v_4 == 1.0) {
        if ((((!a_0._fC) || (!a_0._fD)) || (!a_0._fE)) || (!a_0._fF)) {
            if (a_0._f12 <= 0) {
                a_0._f12 = GAMEPLAY::GET_GAME_TIMER();
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_0._f13 = NETWORK::GET_NETWORK_TIME();
                }
            }
            if (a_0._f12 > 0) {
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f13, a_1 * 3))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f12) > (a_1 * 3)))) {
                    v_4 = 0.25;
                }
            }
        } else { 
            a_0._f12 = 0;
        }
    }
    a_1 = SYSTEM::FLOOR(__678_$BBDA792448DB5A89(a_1) * v_4);
    if (!a_0._f4) {
        if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f18, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f14) > a_1))) || ((a_0._f1 < 75) && (a_0._f1 > -75))) {
            a_0._f4 = 1;
        }
    }
    if (!a_0._f5) {
        if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f19, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f15) > a_1))) || ((a_0 < 75) && (a_0 > -75))) {
            a_0._f5 = 1;
        }
    }
    if (!a_0._f6) {
        if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f1A, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f16) > a_1))) || ((a_0._f3 < 75) && (a_0._f3 > -75))) {
            a_0._f6 = 1;
        }
    }
    if (!a_0._f7) {
        if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f1B, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f17) > a_1))) || ((a_0._f2 < 75) && (a_0._f2 > -75))) {
            a_0._f7 = 1;
        }
    }
    if (!a_0._f8) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f18, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f14) > a_1))) {
            a_0._f8 = 1;
        }
    }
    if (!a_0._f9) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f18, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f14) > a_1))) {
            a_0._f9 = 1;
        }
    }
    if (!a_0._fA) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f19, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f15) > a_1))) {
            a_0._fA = 1;
        }
    }
    if (!a_0._fB) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f19, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f15) > a_1))) {
            a_0._fB = 1;
        }
    }
    if (!a_0._fC) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f11, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f10) > a_1))) {
            a_0._fC = 1;
        }
    }
    if (!a_0._fD) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f11, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f10) > a_1))) {
            a_0._fD = 1;
        }
    }
    if (!a_0._fE) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f11, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f10) > a_1))) {
            a_0._fE = 1;
        }
    }
    if (!a_0._fF) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_0._f11, a_1))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - a_0._f10) > a_1))) {
            a_0._fF = 1;
        }
    }
}

void sub_60f33(auto a_0) {
    if (!a_0._fB) {
        a_0/*{12}*/ = sub_60fa8();
    }
    if (!CAM::DOES_CAM_EXIST(a_0)) {
        a_0 = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", 0);
    }
    CAM::SET_CAM_COORD(a_0, a_0._f1);
    CAM::SET_CAM_ROT(a_0, a_0._f4, 2);
    CAM::SET_CAM_FOV(a_0, a_0._f7);
    if (!CAM::IS_CAM_ACTIVE(a_0)) {
        CAM::SET_CAM_ACTIVE(a_0, 1);
    }
    CAM::RENDER_SCRIPT_CAMS(1, 0, 3000, 1, 0, 0);
}

auto<12> sub_60fa8() {
    v_5/*{3}*/ = {-10.583, 0.0, 19.206 };
    v_8/*{3}*/ = {4.33, -1.21, -0.75 };
    v_B/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
    v_E/*{3}*/ = v_B - ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER::PLAYER_PED_ID(), 0.0, 0.0, 1.0);
    v_11/*{3}*/ = v_B - ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER::PLAYER_PED_ID(), 1.0, 0.0, 0.0);
    v_14/*{3}*/ = v_B - ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(PLAYER::PLAYER_PED_ID(), 0.0, 1.0, 0.0);
    sub_599a4(v_E);
    sub_599a4(v_11);
    sub_599a4(v_14);
    v_2 = sub_610c2(v_8, v_14);
    v_2._f1 = sub_610c2(v_8, v_11);
    v_2._f2 = sub_610c2(v_8, v_E);
    v_17 = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
    v_17 += 180.0;
    for (; v_17 > 180.0; v_17 -= 360.0) {}
    v_18._f4/*{3}*/ = v_5 + ({0.0, 0.0, v_17 });
    v_18._f1/*{3}*/ = v_B + v_2;
    v_18._f7 = 25.0;
    return v_18;
}

auto sub_610c2(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return ((a_0 * a_3) + (a_0._f1 * a_3._f1)) + (a_0._f2 * a_3._f2);
}

void sub_610e3(auto a_0, auto a_1, auto a_2) {
    sub_61962(&a_0._f26[a_1/*12*/], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0);
    v_5 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_6 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_7 = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_0));
    if (v_7 == v_5) {
        switch (a_2) {
        case 0:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, 0.566872, 0.0, 2.1975789070129395, 34.66, 1);
            break;
        case 1:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -2.634377956390381, 0.0, 2.1975789070129395, 34.66, 1);
            break;
        case 2:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -1.074794054031372, 0.0, -5.846582889556885, 34.66, 1);
            break;
        case 3:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -0.828544020652771, 0.0, -16.704814910888672, 34.66, 1);
            break;
        case 4:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -0.828544020652771, 0.0, -28.87150764465332, 34.66, 1);
            break;
        case 5:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -0.828544020652771, 0.0, -42.47814178466797, 34.66, 1);
            break;
        case 6:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -0.828544020652771, 0.0, -52.1370735168457, 34.66, 1);
            break;
        case 7:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -4.603421211242676, 0.0, -1.56577003, 34.66, 1);
            break;
        case 8:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -4.603421211242676, 0.0, -32.853973388671875, 34.66, 1);
            break;
        case 9:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -8.769061088562012, 10, -71.6966323852539, 34.66, 1);
            break;
        case 10:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -8.978215217590332, 10, -95.29706573486328, 34.66, 1);
            break;
        case 11:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, 0.4361889958381653, 0.0, -64.68347930908203, 34.66, 1);
            break;
        case 12:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, 1.3807309865951538, 0.0, -73.16986846923828, 34.66, 1);
            break;
        case 13:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, 2.167335033416748, 0.0, -83.3752670288086, 34.66, 1);
            break;
        case 14:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, 2.465498924255371, 0.0, -92.22767639160156, 34.66, 1);
            break;
        case 15:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, 2.465498924255371, 0.0, -92.22767639160156, 34.66, 1);
            break;
        case 16:
            sub_61962(&a_0._f26[a_1/*12*/], 19.48048210144043, -1109.8104248046875, 30.576, -5.691335201263428, 0.0, 87.0589828491211, 35.47425842285156, 1);
            break;
        case 17:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -4.603421211242676, 0.0, -1.56577003, 34.66, 1);
            break;
        case 18:
            sub_61962(&a_0._f26[a_1/*12*/], 20.36130714416504, -1108.52734375, 30.41068458557129, -4.603421211242676, 0.0, -32.853973388671875, 34.66, 1);
            break;
        }
    } else if (v_7 == v_6) {
        switch (a_2) {
        case 0:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, 2.5230560302734375, 0.0, 71.52590942382812, 34.577789306640625, 1);
            break;
        case 1:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -0.5094450116157532, 0.0, 71.52590942382812, 34.577789306640625, 1);
            break;
        case 2:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -0.5094450116157532, 0.0, 61.350440979, 34.577789306640625, 1);
            break;
        case 3:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -0.5094450116157532, 0.0, 51.690528869628906, 34.577789306640625, 1);
            break;
        case 4:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -0.5094450116157532, 0.0, 38.135623931884766, 34.577789306640625, 1);
            break;
        case 5:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -0.5094450116157532, 0.0, 26.759836196899414, 34.577789306640625, 1);
            break;
        case 6:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -0.5094450116157532, 0.0, 15.76363754272461, 34.577789306640625, 1);
            break;
        case 7:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -6.234848976135254, 0.0, 69.0754165649414, 34.577789306640625, 1);
            break;
        case 8:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -8.6941576, 0.0, 32.34879684448242, 34.577789306640625, 1);
            break;
        case 9:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -8.6941576, 0.0, -7.361618995666504, 34.577789306640625, 1);
            break;
        case 10:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -8.975378036499023, 0.0, -27.666263580322266, 34.577789306640625, 1);
            break;
        case 11:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1773681640625, 3757.73974609375, 35.3362922668457, 0.79756098985672, 0.0, 1.527526021, 34.577781677246094, 1);
            break;
        case 12:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1773681640625, 3757.73974609375, 35.3362922668457, 0.79756098985672, 0.0, -5.56387186050415, 34.577781677246094, 1);
            break;
        case 13:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1773681640625, 3757.73974609375, 35.3362922668457, 0.79756098985672, 0.0, -17.424360275268555, 34.577781677246094, 1);
            break;
        case 14:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1773681640625, 3757.73974609375, 35.3362922668457, 0.79756098985672, 0.0, -25.752685546875, 34.577781677246094, 1);
            break;
        case 15:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1773681640625, 3757.73974609375, 35.3362922668457, 0.79756098985672, 0.0, -25.752685546875, 34.577781677246094, 1);
            break;
        case 16:
            sub_61962(&a_0._f26[a_1/*12*/], 1695.1607666015625, 3756.454345703125, 35.421897888183594, -4.419658184051514, 0.0, 153.8495635986328, 35.080894470214844, 1);
            break;
        case 17:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -6.234848976135254, 0.0, 69.0754165649414, 34.577789306640625, 1);
            break;
        case 18:
            sub_61962(&a_0._f26[a_1/*12*/], 1694.1771240234375, 3757.7392578125, 35.33628463745117, -8.6941576, 0.0, 32.34879684448242, 34.577789306640625, 1);
            break;
        }
    }
    if (v_7 == v_5) {
        v_8 = 28;
    } else if (v_7 == v_6) {
        v_8 = 29;
    }
    sub_ae1f(v_8, a_0, &a_0._f26[a_1/*12*/]._f1);
    sub_a564(v_8, a_0, &a_0._f26[a_1/*12*/]._f4);
}

void sub_61962(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8) {
    a_0._f1/*{3}*/ = a_1;
    a_0._f4/*{3}*/ = a_4;
    a_0._f7 = a_7;
    a_0._fB = a_8;
}

void sub_6198a(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = 0.2;
    if (a_3) {
        v_6 = 1.0;
    }
    if (a_2 != 0) {
        sub_610e3(a_0, a_1._f4, a_1._f3);
        v_7/*{3}*/ = {0.0, 0.0, 0.0 };
        if (sub_61f4c(a_0) == 28) {
            if (a_3) {
                if (a_2 == ${weapon_petrolcan}) {
                    v_7/*{3}*/ = {0.0, 0.0, -0.25 };
                }
            } else if (a_2 == ${weapon_pistol}) {
                v_7/*{3}*/ = {5.0, 0.0, 0.0 };
            } else if (a_2 == ${weapon_combatpistol}) {
                v_7/*{3}*/ = {1.255, 0.0, 0.0 };
            } else if (a_2 == ${weapon_appistol}) {
                v_7/*{3}*/ = {0.5, 0.0, 0.0 };
            } else if (a_2 == ${weapon_flare}) {
                v_7/*{3}*/ = {0.0, -1.72, 0.0 };
            } else if (a_2 == ${weapon_heavypistol}) {
                v_7/*{3}*/ = {-4.5, 0.0, 0.0 };
            } else if (a_2 == ${weapon_snspistol}) {
                v_7/*{3}*/ = {7.0, 0.0, 0.0 };
            } else if (a_2 == 0x99aeeb3b) {
                v_7/*{3}*/ = {9.5, 0.0, 0.0 };
            } else if (a_2 == 0x83839c4) {
                v_7/*{3}*/ = {11.5, 0.0, 0.0 };
            } else if ((((((a_2 == ${weapon_nightstick}) || (a_2 == ${weapon_bottle})) || (a_2 == 0xdd5df8d9)) || (a_2 == 0xf9dcbf2d)) || (a_2 == 0x8bb05fd7)) || (a_2 == ${weapon_hammer})) {
                v_7/*{3}*/ = {1.955, 0.0, 0.0 };
            } else if (a_2 == ${weapon_stickybomb}) {
                v_7/*{3}*/ = {0.0, -2.25, 0.0 };
            } else if (a_2 == ${weapon_smokegrenade}) {
                v_7/*{3}*/ = {0.0, -2.0, 0.0 };
            } else if (((((a_2 == ${weapon_smg}) || (a_2 == ${weapon_assaultshotgun})) || (a_2 == ${weapon_advancedrifle})) || (a_2 == ${weapon_heavysniper})) || (a_2 == ${weapon_combatmg})) {
                v_7/*{3}*/ = {0.0, 0.0, -0.5 };
            } else if ((a_2._f18 == 7) && (a_1._f1 == 3)) {
                v_7/*{3}*/ = {0.0, 0.0, -1.0 };
            } else if ((a_2._f18 == 7) && (a_1._f1 == 2)) {
                v_7/*{3}*/ = {0.0, 0.0, -0.5 };
            }
        } else if (a_3) {
            if (a_2 == ${weapon_petrolcan}) {
                v_7/*{3}*/ = {0.0, 0.0, -0.25 };
            }
        } else if (a_2 == ${weapon_pistol}) {
            v_7/*{3}*/ = {2.575, 0.0, 0.0 };
        } else if (a_2 == ${weapon_combatpistol}) {
            v_7/*{3}*/ = {1.0, 0.0, 0.0 };
        } else if (a_2 == ${weapon_appistol}) {
            v_7/*{3}*/ = {0.5, 0.0, 0.0 };
        } else if (a_2 == ${weapon_stungun}) {
            v_7/*{3}*/ = {0.0, -1.72, 0.0 };
        } else if (a_2 == ${weapon_flare}) {
            v_7/*{3}*/ = {0.0, -1.72, 0.0 };
        } else if (a_2 == ${weapon_heavypistol}) {
            v_7/*{3}*/ = {-4.5, 0.0, 0.0 };
        } else if (a_2 == ${weapon_snspistol}) {
            v_7/*{3}*/ = {3.0, 0.0, 0.0 };
        } else if (a_2 == 0x99aeeb3b) {
            v_7/*{3}*/ = {4.5, 0.0, 0.0 };
        } else if (a_2 == 0x83839c4) {
            v_7/*{3}*/ = {6.0, 0.0, 0.0 };
        } else if ((((((a_2 == ${weapon_nightstick}) || (a_2 == ${weapon_bottle})) || (a_2 == 0xdd5df8d9)) || (a_2 == 0xf9dcbf2d)) || (a_2 == 0x8bb05fd7)) || (a_2 == ${weapon_hammer})) {
            v_7/*{3}*/ = {1.955, 0.0, 0.0 };
        } else if (a_2 == ${weapon_stickybomb}) {
            v_7/*{3}*/ = {0.0, -2.25, 0.0 };
        } else if (a_2 == ${weapon_smokegrenade}) {
            v_7/*{3}*/ = {0.0, -2.0, 0.0 };
        } else if (((((a_2 == ${weapon_smg}) || (a_2 == ${weapon_assaultshotgun})) || (a_2 == ${weapon_advancedrifle})) || (a_2 == ${weapon_heavysniper})) || (a_2 == ${weapon_combatmg})) {
            v_7/*{3}*/ = {0.0, 0.0, -0.5 };
        } else if ((a_2._f18 == 7) && (a_1._f1 == 3)) {
            v_7/*{3}*/ = {0.0, 0.0, -1.0 };
        } else if ((a_2._f18 == 7) && (a_1._f1 == 2)) {
            v_7/*{3}*/ = {0.0, 0.0, -0.5 };
        }
        v_A/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(a_2._f1, a_2._f4._f2, a_2._f7 + v_7);
        v_D/*{3}*/ = a_0._f26[a_1._f4/*12*/]._f1;
        v_10/*{3}*/ = v_A - v_D;
        v_13/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(v_D, a_0._f26[a_1._f4/*12*/]._f4._f2, 0.0, 1.0, 0.0) - v_D;
        v_16 = GAMEPLAY::ATAN2(v_10._f2, SYSTEM::VMAG(v_10, v_10._f1, 0.0));
        v_10/*{3}*/ = sub_599a4(v_10);
        v_13/*{3}*/ = sub_599a4(v_13);
        v_17 = GAMEPLAY::GET_ANGLE_BETWEEN_2D_VECTORS(v_13, v_13._f1, v_10, v_10._f1);
        v_18/*{3}*/ = sub_61f13(v_13, v_10);
        if (v_18._f2 > 0.0) {
            v_17 = GAMEPLAY::ABSF(v_17);
        } else { 
            v_17 = GAMEPLAY::ABSF(v_17) * -1.0;
        }
        v_1B = (v_16 - a_0._f26[a_1._f4/*12*/]._f4) * v_6;
        v_1C = v_17 * v_6;
        a_0._f26[a_1._f4/*12*/]._f4 += v_1B;
        a_0._f26[a_1._f4/*12*/]._f4._f2 += v_1C;
    }
}

auto<3> sub_61f13(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    return {(a_0._f1 * a_3._f2) - (a_0._f2 * a_3._f1), (a_0._f2 * a_3) - (a_0 * a_3._f2), (a_0 * a_3._f1) - (a_0._f1 * a_3) };
}

auto sub_61f4c(auto a_0) {
    if (a_0 == 28) {
        return 28;
    } else { 
        return 29;
    }
}

void sub_61f65() {
    l_97 = 0;
    sub_65421(0);
    sub_653e7(l_B3);
    sub_6533d(1, 1, 0, 0, 0);
    sub_652fe(1, 2, 1, 1, 1);
    sub_afc5(l_B3, &g_2707D2, &v_12, l_B3._f69._f3, l_B3._f69._f1, 1);
    sub_2b7d8(l_B3, &v_2C, l_B3._f69._f3);
    if (l_B3._f69._f5 == 0) {
        sub_2453a(&g_2707D2, l_B3._f69._f3, l_B3._f69._f1, &v_A, &v_E);
        sub_556df(v_A, v_12._f13, v_12, 1, 0);
        if (l_B3._f69._f1 == -1) {
            sub_652b3(&v_2C._f3);
            sub_6506e(0, "GS_NONE", 0, 1, 0, 0);
            sub_5745a(l_B3._f69._f2, 1, 1);
            if (is_in_transition) {
                v_6/*{4}*/ = v_2C._f3;
                v_6/*16*/ += "_MP";
                sub_2b0c4(&v_6, 0, 0);
            }
            sub_64fb9(202, "ITEM_BACK", -1, 0);
            if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
                sub_64f0a(204, "ITEM_PSSTORE", -1);
            } else if (GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) {
                sub_64f0a(204, "ITEM_MARKET", -1);
            } else if (GAMEPLAY::IS_PC_VERSION()) {
                sub_64fb9(204, "ITEM_STORE", -1, 0);
            }
            if (NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
                l_44F = 1;
            }
            if (sub_19e56()) {
                l_451 = 1;
            }
            sub_64e5a(6, "ITEM_MOVE", -1);
        } else { 
            if (v_12._f18 == 3) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    sub_652b3("GS_TITLE_2b");
                    v_33 = 0;
                    if (sub_273c7(238)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(239)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(240)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(241)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(242)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(243)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(244)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(245)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(246)) {
                        v_33 += 1;
                    }
                    if (sub_273c7(247)) {
                        v_33 += 1;
                    }
                    v_34 = 0;
                    v_34 += sub_4b3f(1868, -1, 0);
                    v_34 += sub_4b3f(1869, -1, 0);
                    v_34 += sub_4b3f(1870, -1, 0);
                    v_34 += sub_4b3f(1871, -1, 0);
                    v_34 += sub_4b3f(1872, -1, 0);
                    sub_64e05(v_34);
                    sub_64e05(v_33);
                } else { 
                    sub_652b3("GS_TITLE_2a");
                }
            } else { 
                sub_652b3("GS_TITLE_0");
            }
            if (v_12._f18 == 7) {
                if ((sub_aefd(&g_2707D2, v_12._f17) == ${prop_ld_test_01}) || (sub_aefd(&g_2707D2, v_12._f17) == 0)) {
                    sub_6506e(l_B3._f69._f1, "GS_NONE", 0, 1, 0, 0);
                    sub_6506e(l_B3._f69._f1, "", 0, 1, 0, 0);
                } else { 
                    sub_6506e(l_B3._f69._f1, "STRING", 1, 1, 0, 0);
                    sub_64cc0(NETWORK::_B4271092CA7EDF48(g_2707D2._f1B[v_12._f17/*1*/]), 0, 0);
                    sub_6506e(l_B3._f69._f1, "STRING", 1, 1, 0, 0);
                    sub_64cc0(NETWORK::_CA94551B50B4932C(g_2707D2._f1B[v_12._f17/*1*/]), 0, 0);
                    if (sub_67057()) {
                        v_35/*"64"*/ = NETWORK::_722F5D28B61C5EA8(g_2707D2._f1B[v_12._f17/*1*/]);
                        sub_64c9c(30, &v_35, &v_35);
                        sub_6506e(l_B3._f69._f1 + 1, "", 1, 1, 0, 0);
                        sub_64b62(30, 1);
                    }
                }
            } else if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 7)) {
                sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                sub_6506e(l_B3._f69._f1, "", 1, 1, 0, 0);
                sub_64b62(15, 0);
            } else if ((!GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 13)) {
                if ((v_12._f18 == 3) && is_in_transition) {
                    if (l_B3._f69._f1 == 0) {
                        v_5 = 156;
                    } else if (l_B3._f69._f1 == 1) {
                        v_5 = 157;
                    } else if (l_B3._f69._f1 == 2) {
                        v_5 = 158;
                    } else if (l_B3._f69._f1 == 3) {
                        v_5 = 159;
                    } else if (l_B3._f69._f1 == 4) {
                        v_5 = 160;
                    }
                    if (sub_26032(sub_10943(), v_5)) {
                        sub_6506e(l_B3._f69._f1, &v_A, 1, 1, 0, 0);
                        sub_64b62(2, 0);
                    } else if (sub_64a8c(v_5, &v_A, "ITEM_TYPE_ARMOUR")) {
                        sub_6506e(l_B3._f69._f1, &v_A, 1, 1, 0, 0);
                        sub_64b62(48, 0);
                        l_97 = 1;
                    } else { 
                        sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                    }
                } else if (sub_648ab(sub_10943(), v_12)) {
                    sub_6506e(l_B3._f69._f1, &v_A, 1, 1, 0, 0);
                    sub_64b62(2, 0);
                    sub_644af(sub_10943(), v_12);
                    sub_254cf(&l_B3._f69, "GSM_UNLOCK_N", 3000);
                } else if (sub_64414(v_12, "!ITEM_TYPE_ARMOUR")) {
                    sub_6506e(l_B3._f69._f1, &v_A, 1, 1, 0, 0);
                    sub_64b62(48, 0);
                    l_97 = 1;
                } else { 
                    sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                }
                if (sub_5fe37(v_12, v_12._f13)) {
                    sub_6506e(l_B3._f69._f1, "GS_FREE", 0, 1, 0, 0);
                } else { 
                    sub_6506e(l_B3._f69._f1, "GS_COST", 1, 1, 0, 0);
                    sub_642d9(v_12._f13, 0);
                }
                if (l_97) {
                    sub_262c8("GSHOP_SALE", 0, 0);
                } else { 
                    v_45 = 0;
                    v_46 = 0;
                    v_47 = 1.0 - sub_f3a4(v_12, &v_45, &v_46);
                    if (v_47 != 0.0) {
                        sub_262c8("GSHOP_DISC", 0, 0);
                        sub_26269(SYSTEM::ROUND(v_47 * 100.0));
                    }
                }
            } else if (v_12._f18 == 2) {
                sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                sub_6506e(l_B3._f69._f1, "GS_FULL", 0, 1, 0, 0);
            } else if (v_12._f18 == 3) {
                sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    sub_6506e(l_B3._f69._f1, "GS_FULL", 0, 1, 0, 0);
                } else { 
                    sub_6506e(l_B3._f69._f1, "", 1, 1, 0, 0);
                    sub_64b62(18, 0);
                }
            } else if (v_12._f18 == 4) {
                sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                sub_6506e(l_B3._f69._f1, "", 1, 1, 0, 0);
                sub_64b62(4, 0);
            } else if (v_12._f18 == 6) {
                sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                sub_6506e(l_B3._f69._f1, "", 1, 1, 0, 0);
                sub_64b62(4, 0);
            } else { 
                sub_6506e(l_B3._f69._f1, &v_A, 0, 1, 0, 0);
                sub_6506e(l_B3._f69._f1, "", 1, 1, 0, 0);
                sub_64b62(10, 0);
            }
            sub_5745a(l_B3._f69._f1, !l_97, 1);
            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) {
                if ((GAMEPLAY::IS_BIT_SET(l_B3._f297, 4) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) || GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                    sub_64fb9(201, "ITEM_VIEW_COMP", -1, 0);
                } else { 
                    sub_64fb9(201, "ITEM_SELECT", -1, 0);
                }
            } else { 
                sub_64fb9(201, "ITEM_BUY", -1, 0);
            }
            sub_64fb9(202, "ITEM_BACK", -1, 0);
            if (GAMEPLAY::IS_PS3_VERSION() || GAMEPLAY::IS_ORBIS_VERSION()) {
                sub_64f0a(204, "ITEM_PSSTORE", -1);
            } else if (GAMEPLAY::IS_XBOX360_VERSION() || GAMEPLAY::IS_DURANGO_VERSION()) {
                sub_64f0a(204, "ITEM_MARKET", -1);
            } else if (GAMEPLAY::IS_PC_VERSION()) {
                sub_64fb9(204, "ITEM_STORE", -1, 0);
            }
            if (NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
                l_44F = 1;
            }
            if (sub_19e56()) {
                l_451 = 1;
            }
            sub_64e5a(6, "ITEM_MOVE", -1);
            sub_64e5a(21, "ITEM_INSPECT", -1);
        }
    } else if (l_B3._f69._f5 == 1) {
        if (l_4D4) {
            sub_652b3("GS_TITLE_1");
            sub_64282(sub_1199f(v_12, 1));
            if (sub_64198(0)) {
                sub_6506e(0, "GS_BUY_P0", 1, 1, 0, 0);
                sub_64b62(2, 0);
            } else if (sub_64175(0, "Primary Chutes")) {
                sub_6506e(0, "GS_BUY_P0", 1, 1, 0, 0);
                sub_64b62(48, 0);
            } else { 
                sub_6506e(0, "GS_BUY_P0", 0, 1, 0, 0);
            }
            if (sub_64198(1)) {
                sub_6506e(1, "GS_BUY_P1", 1, 1, 0, 0);
                sub_64b62(2, 0);
            } else if (sub_64175(1, "Reserve Chutes")) {
                sub_6506e(1, "GS_BUY_P1", 1, 1, 0, 0);
                sub_64b62(48, 0);
            } else { 
                sub_6506e(1, "GS_BUY_P1", 0, 1, 0, 0);
            }
            if (sub_64198(2)) {
                sub_6506e(2, "GS_BUY_P2", 1, 1, 0, 0);
                sub_64b62(2, 0);
            } else if (sub_64175(2, "Smoke Trails")) {
                sub_6506e(2, "GS_BUY_P2", 1, 1, 0, 0);
                sub_64b62(48, 0);
            } else { 
                sub_6506e(2, "GS_BUY_P2", 0, 1, 0, 0);
            }
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (sub_64198(3)) {
                    sub_6506e(3, "GS_BUY_P3", 1, 1, 0, 0);
                    sub_64b62(2, 0);
                } else if (sub_64175(3, "Chute Bags")) {
                    sub_6506e(3, "GS_BUY_P3", 1, 1, 0, 0);
                    sub_64b62(48, 0);
                } else { 
                    sub_6506e(3, "GS_BUY_P3", 0, 1, 0, 0);
                }
            }
            sub_5745a(l_4D5, 1, 1);
            sub_64165(0);
            sub_64fb9(201, "ITEM_SELECT", -1, 0);
            sub_64fb9(202, "ITEM_BACK", -1, 0);
            sub_64e5a(21, "ITEM_INSPECT", -1);
        } else { 
            if (((((v_12 == ${weapon_carbinerifle}) || (v_12 == ${weapon_appistol})) || (v_12 == ${weapon_specialcarbine})) || (v_12 == ${weapon_snspistol})) && (UNK::_GET_UI_LANGUAGE_ID() == 7)) {
                sub_652b3("GS_TITLE_2");
            } else if (v_12 == 0xfc508e33) {
                sub_652b3("FW_WEAP_U");
                v_48 = 0;
                v_48 += sub_4b3f(3537, -1, 0);
                v_48 += sub_4b3f(3536, -1, 0);
                v_48 += sub_4b3f(3538, -1, 0);
                v_48 += sub_4b3f(3540, -1, 0);
                v_48 += sub_4b3f(3539, -1, 0);
                v_48 += sub_4b3f(3541, -1, 0);
                v_48 += sub_4b3f(3543, -1, 0);
                v_48 += sub_4b3f(3542, -1, 0);
                v_48 += sub_4b3f(3544, -1, 0);
                v_48 += sub_4b3f(3546, -1, 0);
                v_48 += sub_4b3f(3545, -1, 0);
                v_48 += sub_4b3f(3547, -1, 0);
                sub_64e05(v_48);
                sub_64e05(g_40001._f1823);
            } else if (v_12 == 0xef951fbb) {
                sub_652b3("WTU_DBSHGN");
            } else { 
                sub_652b3("GS_TITLE_1");
                sub_64282(sub_1199f(v_12, 1));
            }
            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 4)) {
                v_49 = v_12._f16;
                if ((v_12._f18 == 0) && (v_12 != 0x6d544c99)) {
                    v_49 *= 2;
                }
                if (sub_7c6f()) {
                    if (v_12._f15) {
                        v_12._f14 *= v_49;
                    }
                }
                if (l_469) {
                    v_4A = sub_55f18(v_12, v_49);
                    sub_6506e(0, "GS_BUY_AF", 0, 1, 0, 0);
                    if (l_B3._f69._f2 == 0) {
                        v_6/*"16"*/ = "GS_BUY_AF";
                        sub_556df(v_6, SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_12._f14) * v_4A), v_12, SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_49) * v_4A), 0);
                    }
                    if (sub_64129(v_12)) {
                        sub_6506e(0, "GS_FULL", 0, 1, 0, 0);
                    } else if (v_12._f14 == 0) {
                        sub_6506e(0, "GS_FREE", 0, 1, 0, 0);
                    } else { 
                        sub_6506e(0, "GS_COST", 1, 1, 0, 0);
                        sub_642d9(SYSTEM::ROUND(__678_$BBDA792448DB5A89(v_12._f14) * v_4A), 0);
                    }
                } else { 
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        sub_55e75(v_12, &v_12._f14, &v_49);
                    }
                    sub_10e6d(v_12._f19, v_49, &v_6, 0);
                    if (l_B3._f69._f2 == 0) {
                        sub_556df(v_6, v_12._f14, v_12, v_49, 0);
                    }
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        if ((v_49 <= 0) && ((v_12 == ${weapon_grenadelauncher}) || (v_12 == ${weapon_rpg}))) {
                            sub_6506e(0, &v_6, 0, 1, 0, 0);
                        } else { 
                            sub_6506e(0, "GS_BUY_A", 2, 1, 0, 0);
                            sub_63b5d(&v_6, 0);
                            sub_642d9(v_49, 0);
                        }
                    } else { 
                        sub_6506e(0, "GS_BUY_A", 2, 1, 0, 0);
                        sub_63b5d(&v_6, 0);
                        sub_642d9(v_49, 0);
                    }
                    if (sub_64129(v_12)) {
                        sub_6506e(0, "GS_FULL", 0, 1, 0, 0);
                    } else if (v_12._f14 == 0) {
                        sub_6506e(0, "GS_FREE", 0, 1, 0, 0);
                    } else { 
                        sub_6506e(0, "GS_COST", 1, 1, 0, 0);
                        sub_642d9(v_12._f14, 0);
                    }
                }
            }
            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 3)) {
                v_2 = -1;
                while (sub_5602b(v_12, &v_2)) {
                    if (sub_21a3b(&l_4E1, v_12, v_2, 1)) {
                        sub_1f9b4(v_12, v_2, &v_A, &v_E);
                        if (l_B3._f69._f2 == (1 + v_2)) {
                            sub_556df(v_A, l_4E1._f2, v_12, 1, 0);
                        }
                        v_4 = 0;
                        if (is_in_transition) {
                            if (sub_1f8a7(l_4E1, v_12, -1) || l_4E1._f1) {
                                v_4 = 1;
                            }
                        } else if (sub_1e9e1(sub_10943(), v_12, l_4E1) || l_4E1._f1) {
                            v_4 = 1;
                        }
                        if ((!sub_63454(l_4E1, v_12)) && (!l_4E1._f1)) {
                            sub_6506e(1 + v_2, &v_A, 0, 1, 0, 0);
                            sub_6506e(1 + v_2, "", 1, 1, 0, 0);
                            sub_64b62(15, 0);
                        } else if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_12, l_4E1)) {
                            sub_6506e(1 + v_2, &v_A, 0, 1, 0, 0);
                            sub_6506e(1 + v_2, "", 1, 1, 0, 0);
                            sub_64b62(10, 0);
                        } else if (v_4) {
                            sub_6506e(1 + v_2, &v_A, 0, 1, 0, 0);
                            sub_6506e(1 + v_2, "", 1, 1, 0, 0);
                            sub_64b62(4, 0);
                        } else { 
                            if (sub_57c94(sub_10943(), v_12, l_4E1)) {
                                sub_6506e(1 + v_2, &v_A, 1, 1, 0, 0);
                                sub_64b62(2, 0);
                                if ((1 + v_2) == l_B3._f69._f2) {
                                    sub_254cf(&l_B3._f69, "GSM_UNLOCK_N", 3000);
                                }
                            } else if (sub_632a3(l_4E1, l_4E1._f4, &v_A)) {
                                sub_6506e(1 + v_2, &v_A, 1, 1, 0, 0);
                                sub_64b62(48, 0);
                                if ((1 + v_2) == l_B3._f69._f2) {
                                    l_97 = 1;
                                }
                            } else { 
                                sub_6506e(1 + v_2, &v_A, 0, 1, 0, 0);
                            }
                            if (sub_55718(v_12, l_4E1, l_4E1._f2)) {
                                sub_6506e(1 + v_2, "", 1, 1, 0, 0);
                                sub_64b62(4, 0);
                            } else { 
                                sub_6506e(1 + v_2, "GS_COST", 1, 1, 0, 0);
                                sub_642d9(l_4E1._f2, 0);
                            }
                            if (l_97) {
                                sub_262c8("GSHOP_SALE", 0, 0);
                            } else { 
                                v_4B = 0;
                                v_4C = 0;
                                v_4D = 1.0 - sub_f3a4(v_12, &v_4B, &v_4C);
                                if (v_4D != 0.0) {
                                    sub_262c8("GSHOP_DISC", 0, 0);
                                    sub_26269(SYSTEM::ROUND(v_4D * 100.0));
                                }
                            }
                        }
                    }
                }
            }
            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 5)) {
                for (v_3 = 0; v_3 < sub_2cfd6(v_12, 1); v_3 += 1) {
                    if (sub_27537(&l_4E7, v_12, sub_2afad(v_12, v_3), 1) && sub_2b34d(v_12, l_4E7._f9, l_4E7._fA)) {
                        if (l_B3._f69._f2 == (21 + v_3)) {
                            sub_556df(l_4E7, l_4E7._f8, v_12, 1, 0);
                            l_4D7 = l_4E7._f9;
                        }
                        v_4 = 0;
                        if (is_in_transition) {
                            if (v_12 == 0xfc508e33) {
                            } else { 
                                v_5 = sub_1be7f(v_12, l_4E7._f9, l_4E7._fA);
                                if (v_5 != 0) {
                                    if (sub_1bc1f(v_5, -1)) {
                                        v_4 = 1;
                                    }
                                } else { 
                                    v_4 = 1;
                                }
                            }
                        } else if (v_12 == 0xfc508e33) {
                        } else { 
                            v_5 = sub_1be7f(v_12, l_4E7._f9, l_4E7._fA);
                            if (v_5 != 0) {
                                if (sub_1a029(sub_10943(), v_5)) {
                                    v_4 = 1;
                                }
                            } else { 
                                v_4 = 1;
                            }
                        }
                        if (!sub_1e2cd(v_12, l_4E7._f9, l_4E7._fA)) {
                            sub_6506e(21 + v_3, &l_4E7, 0, 1, 0, 0);
                            sub_6506e(21 + v_3, "", 1, 1, 0, 0);
                            sub_64b62(15, 0);
                        } else if ((((((v_4 && (l_4E7._fA == 0)) && (l_41F != l_4E7._f9)) || ((v_4 && (l_4E7._fA == 2)) && (l_41F != l_4E7._f9))) || ((v_4 && (l_4E7._fA == 3)) && (l_420 != l_4E7._f9))) || ((v_4 && (l_4E7._fA == 1)) && (l_422 != l_4E7._f9))) || ((v_4 && (l_4E7._fA == 4)) && (l_421 != l_4E7._f9))) {
                            sub_6506e(21 + v_3, &l_4E7, 0, 1, 0, 0);
                            sub_6506e(21 + v_3, "", 1, 1, 0, 0);
                            sub_64b62(4, 0);
                        } else if (((((((l_4E7._fA == 0) && (l_41F != l_4E7._f9)) || ((l_4E7._fA == 2) && (l_41F != l_4E7._f9))) || ((l_4E7._fA == 3) && (l_420 != l_4E7._f9))) || ((l_4E7._fA == 1) && (l_422 != l_4E7._f9))) || ((l_4E7._fA == 4) && (l_421 != l_4E7._f9))) || (l_4E7._fA == 5)) {
                            if (v_12 == 0xfc508e33) {
                                sub_6506e(21 + v_3, &l_4E7, 0, 1, 0, 0);
                            } else { 
                                v_5 = sub_1be7f(v_12, l_4E7._f9, l_4E7._fA);
                                if (v_5 != 0) {
                                    if (sub_26032(sub_10943(), v_5)) {
                                        sub_6506e(21 + v_3, &l_4E7, 1, 1, 0, 0);
                                        sub_64b62(2, 0);
                                        if ((21 + v_3) == l_B3._f69._f2) {
                                            sub_254cf(&l_B3._f69, "GSM_UNLOCK_N", 3000);
                                        }
                                    } else if (sub_64a8c(v_5, &l_4E7, "TINT")) {
                                        sub_6506e(21 + v_3, &l_4E7, 1, 1, 0, 0);
                                        sub_64b62(48, 0);
                                        if ((21 + v_3) == l_B3._f69._f2) {
                                            l_97 = 1;
                                        }
                                    } else { 
                                        sub_6506e(21 + v_3, &l_4E7, 0, 1, 0, 0);
                                    }
                                } else { 
                                    sub_6506e(21 + v_3, &l_4E7, 0, 1, 0, 0);
                                }
                            }
                            if (l_4E7._f8 == 0) {
                                sub_6506e(21 + v_3, "GS_FREE", 0, 1, 0, 0);
                            } else { 
                                sub_6506e(21 + v_3, "GS_COST", 1, 1, 0, 0);
                                sub_642d9(l_4E7._f8, 0);
                            }
                            if (l_97) {
                                sub_262c8("GSHOP_SALE", 0, 0);
                            } else { 
                                v_4E = l_4E7._f8;
                                v_4F = 1.0 - sub_19e62(v_12, &v_4E);
                                if (v_4F != 0.0) {
                                    sub_262c8("GSHOP_DISC", 0, 0);
                                    sub_26269(SYSTEM::ROUND(v_4F * 100.0));
                                }
                            }
                        } else { 
                            sub_6506e(21 + v_3, &l_4E7, 0, 1, 0, 0);
                            sub_6506e(21 + v_3, "", 1, 1, 0, 0);
                            sub_64b62(10, 0);
                        }
                    }
                }
            }
            sub_5745a(l_B3._f69._f2, 1, 1);
            sub_64165(l_423);
            sub_21a3b(&l_4E1, v_12, l_B3._f69._f2 - 1, 0);
            if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 0)) {
                sub_64fb9(201, "ITEM_BUY", -1, 0);
            } else if (!GAMEPLAY::IS_BIT_SET(l_B3._f297, 6)) {
                sub_64fb9(201, "ITEM_SELECT", -1, 0);
            } else if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 12)) {
                sub_64fb9(201, "ITEM_REM", -1, 0);
            }
            sub_64fb9(202, "ITEM_BACK", -1, 0);
            if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 9)) {
                sub_64fb9(203, "ITEM_AMMO", -1, 0);
            }
            sub_64e5a(21, "ITEM_INSPECT", -1);
        }
    }
}

auto sub_632a3(auto a_0, auto a_1, auto a_2) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return 0;
    }
    if (GAMEPLAY::GET_HASH_KEY(a_2) == GAMEPLAY::GET_HASH_KEY("WCT_KNUCK_01")) {
        return 0;
    }
    if (g_40001._f2B7E) {
        return 1;
    }
    if (g_40001._f2B7F && ((a_1 == ${wapclip}) || (a_1 == 0x11621646))) {
        return 1;
    } else if (g_40001._f2B80 && ((a_1 == ${wapflshlasr}) || (a_1 == ${wapflshlasr_2}))) {
        return 1;
    } else if (g_40001._f2B81 && ((a_1 == ${wapscop}) || (a_1 == ${wapscop_2}))) {
        return 1;
    } else if (g_40001._f2B82 && (a_1 == 0x9221a98d)) {
        return 1;
    } else if (g_40001._f2B83 && ((a_1 == ${wapgrip}) || (a_1 == 0xdf693abd))) {
        return 1;
    } else if (g_40001._f2B84 && ((a_1 == ${wapsupp}) || (a_1 == ${wapsupp_2}))) {
        return 1;
    } else if (g_40001._f2B85 && (a_1 == 0x67386f9b)) {
        return 1;
    } else if (g_40001._f2B86 && (a_1 == 0x395e9926)) {
        return 1;
    }
    v_6 = GAMEPLAY::GET_HASH_KEY(a_2);
    for (v_5 = 0; v_5 < g_40001._f2B96; v_5 += 1) {
        if (g_40001._f2B96[v_5/*1*/] != 0) {
            if (v_6 == g_40001._f2B96[v_5/*1*/]) {
                return 1;
            }
        } else { }
    }
    return 0;
}

auto sub_63454(auto a_0, auto a_1) {
    if (a_0 != 0) {
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (sub_63b30(137)) {
                sub_63842(0, a_1);
                sub_63842(1, a_1);
                sub_63842(2, a_1);
                return 1;
            }
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (((((((((a_1 == ${weapon_assaultmg}) || (a_1 == ${weapon_assaultsniper})) || (a_1 == ${weapon_bullpupshotgun})) || (a_1 == ${weapon_heavyrifle})) || (a_1 == ${weapon_loudhailer})) || (a_1 == 0x99aeeb3b)) || (a_1 == ${weapon_programmablear})) || (a_1 == ${weapon_rubbergun})) || (a_1 == ${weapon_hammer})) {
                return 1;
            }
        } else if ((((((((((a_1 == ${weapon_assaultmg}) || (a_1 == ${weapon_assaultsmg})) || (a_1 == ${weapon_assaultsniper})) || (a_1 == ${weapon_bullpupshotgun})) || (a_1 == ${weapon_heavyrifle})) || (a_1 == ${weapon_loudhailer})) || (a_1 == 0x99aeeb3b)) || (a_1 == ${weapon_programmablear})) || (a_1 == ${weapon_rubbergun})) || (a_1 == ${weapon_hammer})) {
            return 1;
        }
        if (((((((((((((((((((((((((((((a_0 == 0x377cd377) || (a_0 == 0x9b76c72c)) || (a_0 == 0x4ead7533)) || (a_0 == 0xd89b9658)) || (a_0 == 0x7a6a7b7b)) || (a_0 == 0x161e9241)) || (a_0 == 0x487aae09)) || (a_0 == 0xd7391086)) || (a_0 == 0x77b8ab2f)) || (a_0 == 0x85a64df9)) || (a_0 == 0x27872c90)) || (a_0 == 0x4032b5e7)) || (a_0 == 0xc613f685)) || (a_0 == 0xeed9fd63)) || (a_0 == 0x50910c31)) || (a_0 == 0x9761d9dc)) || (a_0 == 0x7decfe30)) || (a_0 == 0x3f4e8aa6)) || (a_0 == 0x8b808bb)) || (a_0 == 0xe28babef)) || (a_0 == 0x7af3f785)) || (a_0 == 0x278c78af)) || (a_0 == 0xa857bc78)) || (a_0 == 0x92feccdd)) || (a_0 == 0xc6654d72)) || (a_0 == 0xd6dababe)) || (a_0 == 0xa2d79ddb)) || (a_0 == 0x8033ecaf)) || (a_0 == 0x730154f2)) {
            return 1;
        }
        if ((a_0 == 0x16ee3040) || (a_0 == 0x5b3e7db6)) {
            if (!sub_63832()) {
                if ((WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), a_1, a_0) || sub_1f8a7(a_0, a_1, -1)) || (sub_4b3f(3773, -1, 0) > 1)) {
                    return 1;
                } else { 
                    return 0;
                }
            }
        }
        if ((a_0 == 0x9493b80d) || (a_0 == 0xe7939662)) {
            if (!sub_573e2(0)) {
                if ((WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), a_1, a_0) || sub_1f8a7(a_0, a_1, -1)) || (sub_4b3f(3774, -1, 0) > 1)) {
                    return 1;
                } else { 
                    return 0;
                }
            }
        }
        v_2B = sub_6469(a_1, &v_4);
        if (v_2B != -1) {
            return 1;
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (sub_4e69() == 0) {}
            return sub_57ff9(a_0, a_1, -1);
        } else { 
            return sub_57ce7(sub_10943(), a_1, a_0);
        }
    }
    return 1;
}

auto sub_63832() {
    return sub_57427(PLAYER::PLAYER_ID());
}

void sub_63842(auto a_0, auto a_1) {
    v_4 = 0;
    v_5 = sub_64a4(a_1, v_4);
    while (v_5 != 0) {
        sub_6387b(a_0, a_1, v_5, 1);
        v_4 += 1;
        v_5 = sub_64a4(a_1, v_4);
    }
}

void sub_6387b(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_7507(a_0)) {
        v_6 = sub_57d2f(a_0, a_1, a_2);
        v_7 = sub_1ea29(a_2, a_1);
        v_8 = sub_1ea1c(v_7);
        if (a_3) {
            GAMEPLAY::SET_BIT(&v_6, v_8);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_6, v_8);
        }
        sub_638ce(a_0, a_1, a_2, v_6);
    }
}

void sub_638ce(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = sub_1ea29(a_2, a_1);
    v_7 = sub_1f89a(v_6);
    switch (v_7) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x3b5f973, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x4622cb9a, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x392224c0, a_3, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x5f3fb081, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x738c266c, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x2700807d, a_3, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x54859b0d, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x61ce82f1, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x5affe87b, a_3, 1);
            break;
        }
        break;
    case 3:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x83da79b6, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x6f001d94, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x51b4d5e5, a_3, 1);
            break;
        }
        break;
    case 4:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x7524dc4b, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x7cf2b979, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x7f7db176, a_3, 1);
            break;
        }
        break;
    case 5:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x18a0235f, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x4aa554df, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x76079e8a, a_3, 1);
            break;
        }
        break;
    case 6:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x95184c2, a_3, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x586ef072, a_3, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x6a6d8742, a_3, 1);
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_63b30(auto a_0) {
    if ((a_0 == 146) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f63._f3A[a_0/*1*/];
}

void sub_63b5d(auto a_0, auto a_1) {
    if (g_4369._f13E2 >= 256) {
        return ;
    }
    if (g_4369._f15EA >= 4) {
        return ;
    }
    if (g_4369._f15EB != 1) {
        return ;
    }
    if (g_4369._f15EA >= g_4369._f15E8) {
        return ;
    }
    g_4369._f49[g_4369._f13E2/*6*/]/*"24"*/ = a_0;
    g_4369._f13E2 += 1;
    g_4369._f84C[g_4369._f15E9/*5*/][g_4369._f15EA/*1*/] = 1;
    g_4369._f15EA += 1;
    if (g_4369._f15EA >= g_4369._f15E8) {
        v_4 = sub_63d4c();
        if (g_4369._f1351[g_4369._f13E1/*1*/] && (g_4369._f15EA == g_4369._f15E8)) {
            sub_19596(26, 1, 0, &v_5, &v_6, 0);
            v_4 += v_5 * 2.0;
        }
        if (v_4 > g_4369._f134A[g_4369._f13E1 - 1/*1*/]) {
            g_4369._f134A[g_4369._f13E1 - 1/*1*/] = v_4;
        }
    }
    if (a_1) {
        if (g_4369._f15EA >= g_4369._f15E8) {
            v_7 = sub_63c99();
            if (v_7 > g_4369._f15EC[g_4369._f13E0/*1*/]) {
                g_4369._f15EC[g_4369._f13E0/*1*/] = v_7;
            }
        }
    }
}

auto sub_63c99() {
    for (v_2 = 0; v_2 < g_4369._f15EA; v_2 += 1) {
        if (g_4369._f84C[g_4369._f15E9/*5*/][v_2/*1*/] == 4) {
            v_3 += 1;
        }
    }
    for (v_2 = 0; v_2 < v_3; v_2 += 1) {
        if (g_4369._f1151[(g_4369._f13E6 - v_3) + v_2/*1*/] != 0) {
            if (sub_19596(g_4369._f1151[(g_4369._f13E6 - v_3) + v_2/*1*/], 1, 0, &v_5, &v_6, 0)) {
                if (v_6 > v_4) {
                    v_4 = v_6;
                }
            }
        }
    }
    if (v_4 > UI::_DB88A37483346780(0.35, 0)) {
        return v_4;
    }
    return UI::_DB88A37483346780(0.35, 0);
}

auto sub_63d4c() {
    for (v_9 = 0; v_9 < g_4369._f15EA; v_9 += 1) {
        if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 1) {
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 8) {
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 2) {
            v_5 += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 3) {
            v_6 += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 4) {
            v_7 += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 5) {
            v_8 += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 6) {
            v_8 += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 7) {
            v_8 += 1;
        }
    }
    sub_159fe(0, 1, 0, 0, 0, v_8 > 0);
    if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
        UI::_SET_TEXT_ENTRY_FOR_WIDTH(&g_4369._f49[g_4369._f15E9/*6*/]);
    }
    for (v_9 = 0; v_9 < g_4369._f15EA; v_9 += 1) {
        if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 1) {
            v_A += 1;
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f49[g_4369._f15E9 + v_A/*6*/]);
            }
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 8) {
            v_A += 1;
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_4369._f49[g_4369._f15E9 + v_A/*6*/]);
            }
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 2) {
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::ADD_TEXT_COMPONENT_INTEGER(g_4369._fF4E[(g_4369._f13E4 - v_5) + v_B/*1*/]);
            }
            v_B += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 3) {
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::ADD_TEXT_COMPONENT_FLOAT(g_4369._f104F[(g_4369._f13E5 - v_6) + v_C/*1*/], g_4369._f10D0[(g_4369._f13E5 - v_6) + v_C/*1*/]);
            }
            v_C += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 5) {
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::_ADD_TEXT_COMPONENT_STRING(&g_254115[(g_4369._f13E3 - v_8) + v_D/*16*/]);
            }
            v_D += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 6) {
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::_ADD_TEXT_COMPONENT_ITEM_STRING(&g_254115[(g_4369._f13E3 - v_8) + v_D/*16*/]);
            }
            v_D += 1;
        } else if (g_4369._f84C[g_4369._f15E9/*5*/][v_9/*1*/] == 7) {
            if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
                UI::_ADD_TEXT_COMPONENT_STRING(&g_254115[(g_4369._f13E3 - v_8) + v_D/*16*/]);
            }
            v_D += 1;
        }
    }
    if (GAMEPLAY::GET_HASH_KEY(&g_4369._f49[g_4369._f15E9/*6*/]) != 0) {
        v_2 = UI::_GET_TEXT_SCREEN_WIDTH(1);
    }
    for (v_9 = 0; v_9 < v_7; v_9 += 1) {
        if (g_4369._f1151[(g_4369._f13E6 - v_7) + v_9/*1*/] != 0) {
            sub_19596(g_4369._f1151[(g_4369._f13E6 - v_7) + v_9/*1*/], 1, 0, &v_3, &v_4, 0);
            v_2 += v_3;
        }
    }
    return v_2;
}

auto sub_64129(auto a_0) {
    v_4 = 0;
    if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_0, 0)) {
        if (WEAPON::GET_MAX_AMMO(PLAYER::PLAYER_PED_ID(), a_0, &v_3)) {
            if (WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0) >= v_3) {
                v_4 = 1;
            }
        }
    }
    return v_4;
}

void sub_64165(auto a_0) {
    g_4369._f15E5 = a_0;
}

auto sub_64175(auto a_0, auto a_1) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return 0;
    }
    if (g_40001._f2B7E) {
        return 1;
    }
    return 0;
}

auto sub_64198(auto a_0) {
    v_3 = 145;
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        v_3 = sub_10943();
    }
    for (v_4 = 0; v_4 < sub_2cfd6(${gadget_parachute}, 1); v_4 += 1) {
        if (sub_27537(&l_4E7, ${gadget_parachute}, sub_2afad(${gadget_parachute}, v_4), 0) && sub_2b34d(${gadget_parachute}, l_4E7._f9, l_4E7._fA)) {
            if (((((l_4E7._fA == 2) && (a_0 == 0)) || ((l_4E7._fA == 3) && (a_0 == 1))) || (((l_4E7._fA == 4) && (a_0 == 2)) && (l_4E7._f9 != 0))) || ((l_4E7._fA == 1) && (a_0 == 3))) {
                if (sub_26032(v_3, sub_1be7f(${gadget_parachute}, l_4E7._f9, l_4E7._fA))) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

void sub_64282(auto a_0) {
    if ((g_4369._f47 >= 3) || (g_4369._f44 >= 4)) {
        return ;
    }
    g_4369._f5[g_4369._f44/*1*/] = 1;
    g_4369._f44 += 1;
    g_4369._f16[g_4369._f47/*4*/]/*"16"*/ = a_0;
    g_4369._f47 += 1;
}

void sub_642d9(auto a_0, auto a_1) {
    if (g_4369._f13E4 >= 256) {
        return ;
    }
    if (g_4369._f15EA >= 4) {
        return ;
    }
    if (g_4369._f15EB != 1) {
        return ;
    }
    if (g_4369._f15EA >= g_4369._f15E8) {
        return ;
    }
    g_4369._fF4E[g_4369._f13E4/*1*/] = a_0;
    g_4369._f13E4 += 1;
    g_4369._f84C[g_4369._f15E9/*5*/][g_4369._f15EA/*1*/] = 2;
    g_4369._f15EA += 1;
    if (g_4369._f15EA >= g_4369._f15E8) {
        v_4 = sub_63d4c();
        if (g_4369._f1351[g_4369._f13E1/*1*/] && (g_4369._f15EA == g_4369._f15E8)) {
            sub_19596(26, 1, 0, &v_5, &v_6, 0);
            v_4 += v_5 * 2.0;
        }
        if (v_4 > g_4369._f134A[g_4369._f13E1 - 1/*1*/]) {
            g_4369._f134A[g_4369._f13E1 - 1/*1*/] = v_4;
        }
    }
    if (a_1) {
        if (g_4369._f15EA >= g_4369._f15E8) {
            v_7 = sub_63c99();
            if (v_7 > g_4369._f15EC[g_4369._f13E0/*1*/]) {
                g_4369._f15EC[g_4369._f13E0/*1*/] = v_7;
            }
        }
    }
}

auto sub_64414(auto a_0, auto a_1) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return 0;
    }
    v_4 = sub_10a67(a_0);
    if (v_4 < 1) {
        return 0;
    }
    if (g_40001._f2B7E) {
        return 1;
    }
    if (GAMEPLAY::IS_BIT_SET(g_40001._f2B87[v_4 / 32/*1*/], v_4 % 32)) {
        return 1;
    }
    v_6 = GAMEPLAY::GET_HASH_KEY(sub_1199f(a_0, 0));
    for (v_5 = 0; v_5 < g_40001._f2B96; v_5 += 1) {
        if (g_40001._f2B96[v_5/*1*/] != 0) {
            if (v_6 == g_40001._f2B96[v_5/*1*/]) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_644af(auto a_0, auto a_1) {
    if (!sub_648ab(a_0, a_1)) {
        return ;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        sub_6475f(a_1, 1);
    } else { 
        sub_644e0(a_0, a_1, 1);
    }
}

void sub_644e0(auto a_0, auto a_1, auto a_2) {
    if (sub_7507(a_0)) {
        v_5 = sub_64645(a_0, a_1);
        v_6 = sub_10a67(a_1);
        v_7 = sub_1008b(v_6);
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, v_7);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, v_7);
        }
        sub_6452d(a_0, a_1, v_5);
    }
}

void sub_6452d(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_10a67(a_1);
    v_6 = sub_10156(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xdaf98259, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x9b7f30da, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xb53ae772, a_2, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0xdb267ca, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x8d7694c9, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x836d03d7, a_2, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x3699b998, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xed2c547f, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xd88cae15, a_2, 1);
            break;
        }
        break;
    default:
        break;
    }
}

auto sub_64645(auto a_0, auto a_1) {
    v_5 = sub_10a67(a_1);
    v_6 = sub_10156(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xdaf98259, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x9b7f30da, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xb53ae772, &v_4, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0xdb267ca, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x8d7694c9, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x836d03d7, &v_4, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x3699b998, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xed2c547f, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xd88cae15, &v_4, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_4;
}

void sub_6475f(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_6487a(a_0, -1)) {
            sub_64792(a_0, 1);
        }
    } else if (sub_6487a(a_0, -1)) {
        sub_64792(a_0, 0);
    }
}

void sub_64792(auto a_0, auto a_1) {
    v_4 = sub_64861(a_0, -1);
    v_5 = sub_10a67(a_0);
    if (v_5 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_4, sub_1008b(v_5));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_4, sub_1008b(v_5));
        }
        sub_84ba(sub_647e2(a_0), v_4, -1, 1);
    } else { }
}

auto sub_647e2(auto a_0) {
    v_3 = sub_10a67(a_0);
    v_4 = sub_10156(v_3);
    if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
        switch (v_4) {
        case 0:
            return 638;
            break;
        case 1:
            return 639;
            break;
        case 2:
            return 2394;
            break;
        }
    }
    return 3790;
}

auto sub_64861(auto a_0, auto a_1) {
    v_4 = sub_4b3f(sub_647e2(a_0), a_1, 0);
    return v_4;
}

auto sub_6487a(auto a_0, auto a_1) {
    if (sub_1bd98()) {
        return 0;
    }
    v_4 = sub_64861(a_0, a_1);
    v_5 = sub_10a67(a_0);
    return GAMEPLAY::IS_BIT_SET(v_4, sub_1008b(v_5));
}

auto sub_648ab(auto a_0, auto a_1) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_5d0ee(a_1, -1, 0) && (!sub_6487a(a_1, -1))) {
            return 1;
        }
    } else if (sub_6492e(a_0, a_1) && (!sub_648f7(a_0, a_1))) {
        return 1;
    }
    return 0;
}

auto sub_648f7(auto a_0, auto a_1) {
    if (sub_7507(a_0)) {
        v_4 = sub_64645(a_0, a_1);
        v_5 = sub_10a67(a_1);
        v_6 = sub_1008b(v_5);
        return GAMEPLAY::IS_BIT_SET(v_4, v_6);
    }
    return 0;
}

auto sub_6492e(auto a_0, auto a_1) {
    if (sub_7507(a_0)) {
        if (sub_57f93(a_1)) {
            return 1;
        }
        v_4 = sub_64972(a_0, a_1);
        v_5 = sub_10a67(a_1);
        v_6 = sub_1008b(v_5);
        return GAMEPLAY::IS_BIT_SET(v_4, v_6);
    }
    return 0;
}

auto sub_64972(auto a_0, auto a_1) {
    v_5 = sub_10a67(a_1);
    v_6 = sub_10156(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x22641988, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xce8b34fd, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x7afabef9, &v_4, -1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x3451bd63, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0xbc8c9100, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0x7e0ec521, &v_4, -1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_GET_INT(0x7e1450e7, &v_4, -1);
            break;
        case 1:
            STATS::STAT_GET_INT(0x98b64950, &v_4, -1);
            break;
        case 2:
            STATS::STAT_GET_INT(0xe75817b2, &v_4, -1);
            break;
        }
        break;
    default:
        break;
    }
    return v_4;
}

auto sub_64a8c(auto a_0, auto a_1, auto a_2) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return 0;
    }
    if (((((a_0 == 156) || (a_0 == 157)) || (a_0 == 158)) || (a_0 == 159)) || (a_0 == 160)) {
        if (g_40001._f2BC9 || g_40001._f2BD1) {
            return 1;
        }
    } else if (g_40001._f2B7E) {
        return 1;
    }
    if (GAMEPLAY::IS_BIT_SET(g_40001._f2B87[a_0 / 32/*1*/], a_0 % 32)) {
        return 1;
    }
    v_6 = GAMEPLAY::GET_HASH_KEY(a_1);
    for (v_5 = 0; v_5 < g_40001._f2B96; v_5 += 1) {
        if (g_40001._f2B96[v_5/*1*/] != 0) {
            if (v_6 == g_40001._f2B96[v_5/*1*/]) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_64b62(auto a_0, auto a_1) {
    if (g_4369._f13E6 >= 128) {
        return ;
    }
    if (g_4369._f15EA >= 4) {
        return ;
    }
    if (g_4369._f15EB != 1) {
        return ;
    }
    if (g_4369._f15EA >= g_4369._f15E8) {
        return ;
    }
    g_4369._f1151[g_4369._f13E6/*1*/] = a_0;
    g_4369._f13E6 += 1;
    g_4369._f84C[g_4369._f15E9/*5*/][g_4369._f15EA/*1*/] = 4;
    g_4369._f15EA += 1;
    if (g_4369._f15EA >= g_4369._f15E8) {
        v_4 = sub_63d4c();
        if (g_4369._f1351[g_4369._f13E1/*1*/] && (g_4369._f15EA == g_4369._f15E8)) {
            sub_19596(26, 1, 0, &v_5, &v_6, 0);
            v_4 += v_5 * 2.0;
        }
        if (v_4 > g_4369._f134A[g_4369._f13E1 - 1/*1*/]) {
            g_4369._f134A[g_4369._f13E1 - 1/*1*/] = v_4;
        }
    }
    if (a_1) {
        if (g_4369._f15EA >= g_4369._f15E8) {
            v_7 = sub_63c99();
            if (v_7 > g_4369._f15EC[g_4369._f13E0/*1*/]) {
                g_4369._f15EC[g_4369._f13E0/*1*/] = v_7;
            }
        }
    }
}

void sub_64c9c(auto a_0, auto a_1, auto a_2) {
    g_4369._f16F9[a_0/*16*/]/*"64"*/ = a_1;
    g_4369._f1A1A[a_0/*16*/]/*"64"*/ = a_2;
}

void sub_64cc0(auto a_0, auto a_1, auto a_2) {
    if (g_4369._f13E3 >= 32) {
        return ;
    }
    if (g_4369._f15EA >= 4) {
        return ;
    }
    if (g_4369._f15EB != 1) {
        return ;
    }
    if (g_4369._f15EA >= g_4369._f15E8) {
        return ;
    }
    g_254115[g_4369._f13E3/*16*/]/*"64"*/ = a_0;
    g_4369._f13E3 += 1;
    g_4369._f84C[g_4369._f15E9/*5*/][g_4369._f15EA/*1*/] = 7;
    g_4369._f15EA += 1;
    v_5 = sub_63d4c();
    if (a_2) {}
    if (g_4369._f15EA >= g_4369._f15E8) {
        v_5 = sub_63d4c();
        if (g_4369._f1351[g_4369._f13E1/*1*/] && (g_4369._f15EA == g_4369._f15E8)) {
            sub_19596(26, 1, 0, &v_6, &v_7, 0);
            v_5 += v_6 * 2.0;
        }
        if (v_5 > g_4369._f134A[g_4369._f13E1 - 1/*1*/]) {
            g_4369._f134A[g_4369._f13E1 - 1/*1*/] = v_5;
        }
    }
    if (a_1) {
        if (g_4369._f15EA >= g_4369._f15E8) {
            v_8 = sub_63c99();
            if (v_8 > g_4369._f15EC[g_4369._f13E0/*1*/]) {
                g_4369._f15EC[g_4369._f13E0/*1*/] = v_8;
            }
        }
    }
}

void sub_64e05(auto a_0) {
    if ((g_4369._f45 >= 3) || (g_4369._f44 >= 4)) {
        return ;
    }
    g_4369._f5[g_4369._f44/*1*/] = 2;
    g_4369._f44 += 1;
    g_4369._fA[g_4369._f45/*1*/] = a_0;
    g_4369._f45 += 1;
}

void sub_64e5a(auto a_0, auto a_1, auto a_2) {
    v_5 = CONTROLS::_80C2FD58D720C801(2, a_0, 1);
    if (g_4369._f121F >= 12) {
        g_2708AA/*"64"*/ = v_5;
        g_2708AA._f10/*"16"*/ = a_1;
        g_2708AA._f14 = a_2;
        return ;
        return ;
    }
    GAMEPLAY::CLEAR_BIT(&g_4369._f133A, g_4369._f121F);
    g_4369._f1221[g_4369._f121F/*16*/]/*"64"*/ = v_5;
    g_4369._f12E2[g_4369._f121F/*4*/]/*"16"*/ = a_1;
    g_4369._f1313[g_4369._f121F/*1*/] = a_2;
    g_4369._f1320[g_4369._f121F/*1*/] = 344;
    g_4369._f132D[g_4369._f121F/*1*/] = a_0;
    g_4369._f121F += 1;
}

void sub_64f0a(auto a_0, auto a_1, auto a_2) {
    v_5 = CONTROLS::_GET_CONTROL_ACTION_NAME(2, a_0, 1);
    if (g_4369._f121F >= 12) {
        g_2708AA/*"64"*/ = v_5;
        g_2708AA._f10/*"16"*/ = a_1;
        g_2708AA._f14 = a_2;
        return ;
        return ;
    }
    GAMEPLAY::CLEAR_BIT(&g_4369._f133A, g_4369._f121F);
    g_4369._f1221[g_4369._f121F/*16*/]/*"64"*/ = v_5;
    g_4369._f12E2[g_4369._f121F/*4*/]/*"16"*/ = a_1;
    g_4369._f1313[g_4369._f121F/*1*/] = a_2;
    g_4369._f1320[g_4369._f121F/*1*/] = a_0;
    g_4369._f132D[g_4369._f121F/*1*/] = 31;
    g_4369._f121F += 1;
}

void sub_64fb9(auto a_0, auto a_1, auto a_2, auto a_3) {
    v_6 = CONTROLS::_GET_CONTROL_ACTION_NAME(2, a_0, 1);
    if (g_4369._f121F >= 12) {
        g_2708AA/*"64"*/ = v_6;
        g_2708AA._f10/*"16"*/ = a_1;
        g_2708AA._f14 = a_2;
        return ;
        return ;
    }
    if (!a_3) {
        GAMEPLAY::SET_BIT(&g_4369._f133A, g_4369._f121F);
    }
    g_4369._f1221[g_4369._f121F/*16*/]/*"64"*/ = v_6;
    g_4369._f12E2[g_4369._f121F/*4*/]/*"16"*/ = a_1;
    g_4369._f1313[g_4369._f121F/*1*/] = a_2;
    g_4369._f1320[g_4369._f121F/*1*/] = a_0;
    g_4369._f132D[g_4369._f121F/*1*/] = 31;
    g_4369._f121F += 1;
}

void sub_6506e(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (g_4369._f13E0 > a_0) {
        return ;
    }
    if (g_4369._f13E0 >= 128) {
        return ;
    }
    if (g_4369._f13E2 >= 256) {
        return ;
    }
    if (g_4369._f15EA < g_4369._f15E8) {
        return ;
    }
    if (g_4369._f13E0 != a_0) {
        g_4369._f13E0 = a_0;
        g_4369._f13E1 = 0;
    }
    v_8 = g_4369._f133E[g_4369._f13E1/*1*/];
    if (v_8 != 1) {
        while ((g_4369._f13E1 < 4) && (v_8 != 1)) {
            g_4369._f13E1 += 1;
            v_8 = g_4369._f133E[g_4369._f13E1/*1*/];
        }
        if (v_8 != 1) {
            return ;
        }
    }
    g_4369._f49[g_4369._f13E2/*6*/]/*"24"*/ = a_1;
    if ((!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_1)) && (!UI::DOES_TEXT_LABEL_EXIST(a_1))) {}
    g_4369._f64A[g_4369._f13E2/*1*/] = a_3;
    g_4369._f74B[g_4369._f13E2/*1*/] = a_4;
    g_4369._f13E2 += 1;
    if (a_2 == 0) {
        v_9 = sub_65277(&g_4369._f49[g_4369._f13E2/*6*/]);
        if (g_4369._f1351[g_4369._f13E1/*1*/]) {
            sub_19596(26, 1, 0, &v_A, &v_B, 0);
            v_9 += v_A * 2.0;
        }
        if (v_9 > g_4369._f134A[g_4369._f13E1/*1*/]) {
            g_4369._f134A[g_4369._f13E1/*1*/] = v_9;
        }
    }
    if (a_5) {
        if (a_2 == 0) {
            v_C = sub_6525b(&g_4369._f49[g_4369._f13E2/*6*/]);
            if (v_C > g_4369._f15EC[a_0/*1*/]) {
                g_4369._f15EC[a_0/*1*/] = v_C;
            }
        }
    }
    GAMEPLAY::SET_BIT(&g_4369._f135F[a_0/*1*/], g_4369._f13E1);
    g_4369._f13E1 += 1;
    g_4369._f15EB = 1;
    g_4369._f15E9 = g_4369._f13E2 - 1;
    g_4369._f15EA = 0;
    g_4369._f15E8 = a_2;
}

auto sub_6525b(auto a_0) {
    if (!UI::DOES_TEXT_LABEL_EXIST(a_0)) {}
    return UI::_DB88A37483346780(0.35, 0);
}

auto sub_65277(auto a_0) {
    if (!GAMEPLAY::IS_STRING_NULL(a_0)) {
        if (GAMEPLAY::GET_HASH_KEY(a_0) == 0) {
            return 0.0;
        }
    } else { 
        return 0.0;
    }
    sub_159fe(0, 1, 0, 0, 0, 0);
    UI::_SET_TEXT_ENTRY_FOR_WIDTH(a_0);
    return UI::_GET_TEXT_SCREEN_WIDTH(1);
}

void sub_652b3(auto a_0) {
    g_4369._f1/*"16"*/ = a_0;
    g_4369._f44 = 0;
    g_4369._f45 = 0;
    g_4369._f46 = 0;
    g_4369._f47 = 0;
    g_4369._f48 = 0;
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        g_4369._f5[v_3/*1*/] = 0;
    }
}

void sub_652fe(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    g_4369._f1359[0/*1*/] = a_0;
    g_4369._f1359[1/*1*/] = a_1;
    g_4369._f1359[2/*1*/] = a_2;
    g_4369._f1359[3/*1*/] = a_3;
    g_4369._f1359[4/*1*/] = a_4;
}

void sub_6533d(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    g_4369._f133E[0/*1*/] = a_0;
    g_4369._f133E[1/*1*/] = a_1;
    g_4369._f133E[2/*1*/] = a_2;
    g_4369._f133E[3/*1*/] = a_3;
    g_4369._f133E[4/*1*/] = a_4;
    g_4369._f13E8 = 0;
    if (a_0 != 0) {
        g_4369._f13E8 += 1;
    }
    if (a_1 != 0) {
        g_4369._f13E8 += 1;
    }
    if (a_2 != 0) {
        g_4369._f13E8 += 1;
    }
    if (a_3 != 0) {
        g_4369._f13E8 += 1;
    }
    if (a_4 != 0) {
        g_4369._f13E8 += 1;
    }
}

void sub_653e7(auto a_0) {
    v_3 = sub_9da7(a_0);
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(v_3)) {
        sub_6540a(1, v_3, v_3);
    }
}

void sub_6540a(auto a_0, auto a_1, auto a_2) {
    g_4369 = a_0;
    sub_64c9c(29, a_1, a_2);
}

void sub_65421(auto a_0) {
    for (v_3 = 0; v_3 < 256; v_3 += 1) {
        g_4369._f49[v_3/*6*/]/*"24"*/ = "";
        for (v_4 = 0; v_4 < 4; v_4 += 1) {
            g_4369._f84C[v_3/*5*/][v_4/*1*/] = 0;
        }
    }
    for (v_3 = 0; v_3 < 32; v_3 += 1) {
        g_254115[v_3/*16*/]/*"64"*/ = "";
    }
    for (v_3 = 0; v_3 < 256; v_3 += 1) {
        g_4369._fF4E[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 128; v_3 += 1) {
        g_4369._f104F[v_3/*1*/] = 0.0;
    }
    for (v_3 = 0; v_3 < 128; v_3 += 1) {
        g_4369._f1151[v_3/*1*/] = 0;
    }
    for (v_3 = 0; v_3 < 128; v_3 += 1) {
        g_4369._f135F[v_3/*1*/] = 0;
        g_4369._f13E9[v_3/*1*/] = 0;
        g_4369._f146A[v_3/*1*/] = 0;
        g_4369._f1672[v_3/*1*/] = 0.0;
        g_4369._f14EB[v_3/*1*/] = 0;
        g_4369._f15EC[v_3/*1*/] = 0.0;
    }
    for (v_3 = 0; v_3 < 5; v_3 += 1) {
        g_4369._f133E[v_3/*1*/] = 0;
        g_4369._f134A[v_3/*1*/] = 0.0;
        g_4369._f1344[v_3/*1*/] = -1.0;
        g_4369._f1351[v_3/*1*/] = 0;
        g_4369._f1359[v_3/*1*/] = 1;
    }
    for (v_3 = 0; v_3 < 12; v_3 += 1) {
        g_4369._f12E2[v_3/*4*/]/*"16"*/ = "";
        g_4369._f1313[v_3/*1*/] = -1;
        g_4369._f1320[v_3/*1*/] = 344;
        g_4369._f132D[v_3/*1*/] = 31;
    }
    for (v_3 = 0; v_3 < 50; v_3 += 1) {
        g_4369._f16F9[v_3/*16*/]/*"64"*/ = "";
        g_4369._f1A1A[v_3/*16*/]/*"64"*/ = "";
    }
    g_2708AA._f10/*"16"*/ = "";
    g_2708AA._f14 = -1;
    g_4369 = 0;
    g_4369._f13E0 = 0;
    g_4369._f13E1 = 0;
    g_4369._f13E2 = 0;
    g_4369._f13E4 = 0;
    g_4369._f13E5 = 0;
    g_4369._f13E6 = 0;
    g_4369._f13E3 = 0;
    g_4369._f166D = 0;
    g_4369._f15E6 = 0;
    g_4369._f15E5 = 0;
    g_4369._f15E7 = 0;
    g_4369._f11D2/*"16"*/ = "";
    g_4369._f1218 = 0;
    g_4369._f1219 = 0;
    g_4369._f121A = 0;
    g_4369._f121B = 0;
    g_4369._f121C = 0;
    g_4369._f121D = 0;
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        g_4369._f11D6[v_3/*1*/] = 0;
    }
    g_4369._f121E = 0;
    g_2708AA._f15/*"16"*/ = "";
    g_2708AA._f3D = 0;
    g_2708AA._f3E = 0;
    g_2708AA._f3F = 0;
    g_2708AA._f40 = 0;
    g_2708AA._f41 = 0;
    g_2708AA._f42 = 0;
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        g_2708AA._f19[v_3/*1*/] = 0;
    }
    g_2708AA._f43 = 0;
    g_4369._f1/*"16"*/ = "";
    g_4369._f1350 = 0.0;
    g_4369._f44 = 0;
    g_4369._f45 = 0;
    g_4369._f46 = 0;
    g_4369._f47 = 0;
    g_4369._f48 = 0;
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        g_4369._f5[v_3/*1*/] = 0;
    }
    g_4369._f15EB = 0;
    g_4369._f15EA = 0;
    g_4369._f15E8 = 0;
    g_4369._f15E9 = 0;
    g_4369._f121F = 0;
    g_4369._f1220 = 0;
    g_4369._f13E7 = 10;
    g_4369._f13E8 = 0;
    g_4369._f166F = 0.0;
    g_4369._f1670 = 0.0;
    g_4369._f15DE = 0;
    g_4369._f15DF = 0;
    g_4369._f15E0 = 0.0;
    g_4369._f15E1 = 0;
    g_4369._f15E3 = 0;
    g_4369._f15E2 = 0;
    g_4369._f15E4 = 0;
    g_4369._f1EAD = 0;
    for (v_3 = 0; v_3 < 2; v_3 += 1) {
        g_4369._f16F3[v_3/*1*/] = -1;
        g_4369._f16F6[v_3/*1*/] = -1;
    }
    g_4369._f1357 = 0.0;
    g_4369._f133A = 0;
    g_4369._f1358 = 0;
    g_4369._f1E98 = 0;
    g_4369._f1E93 = 0;
    g_4369._f1E9D = 0;
    g_4369._f1EA2 = 0;
    g_4369._f1EA7 = 0;
    g_4369._f1EA9 = 0;
    g_4369._f1EAF = 0;
    g_4366 = 0.05;
    g_4367 = 0.05;
    g_4368 = 0.225;
    v_5 = GRAPHICS::_GET_SCREEN_ASPECT_RATIO(0);
    if (a_0) {
        g_4368 = 0.225 * ((16.0 / 9.0) / v_5);
    } else if (v_5 < 1.77777) {
        g_4368 = 0.225 * ((16.0 / 9.0) / v_5);
    } else { 
        g_4368 = 0.225;
    }
}

void sub_658ab() {
    l_B3._f297 = 0;
    if (sub_5a62(1)) {
        if (sub_afc5(l_B3, &g_2707D2, &v_3, l_B3._f69._f3, l_B3._f69._f1, 1)) {
            l_42F/*{3}*/ = OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(v_3._f1, v_3._f4._f2, v_3._f7);
            g_16416._f1 = v_3;
            if (g_16416._f1 == 0xfc508e33) {
                g_16416._f1 = 0;
            }
            switch (l_B3._f69._f5) {
            case 0:
                if (l_B3._f69._f1 == -1) {
                    return ;
                }
                if (((((v_3._f18 == 0) || (v_3._f18 == 1)) || (v_3._f18 == 4)) || (v_3._f18 == 2)) || (v_3._f18 == 5)) {
                    if (sub_66208(v_3, v_3._f18, l_B3._f69._f1)) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 7);
                    }
                    if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), v_3, 0)) {
                        if (GAMEPLAY::IS_BIT_SET(l_B3._f297, 7)) {
                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            } else if (!sub_661d1(sub_10943(), v_3)) {
                                sub_5ee6c(sub_10943(), v_3, 1);
                            }
                        }
                        if (v_3._f18 == 2) {
                            if (sub_64129(v_3)) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            } else { 
                                GAMEPLAY::SET_BIT(&l_B3._f297, 1);
                            }
                        } else if (v_3._f18 == 5) {
                            if (sub_64129(v_3)) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            }
                        } else { 
                            GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                        }
                        GAMEPLAY::SET_BIT(&l_B3._f297, 6);
                        if (v_3._f19 != 0) {
                            if (sub_64129(v_3)) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 2);
                            }
                        }
                    }
                    if (sub_2b554(v_3, &v_2)) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 3);
                    }
                    if ((v_3._f18 == 0) && (v_3._f19 != 0)) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 4);
                    }
                    if (v_3._f18 == 0) {
                        if (sub_2cfd6(v_3, 1) > 0) {
                            GAMEPLAY::SET_BIT(&l_B3._f297, 5);
                        }
                    } else if (v_3._f18 == 4) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 5);
                    }
                } else if (v_3._f18 == 3) {
                    if (sub_66208(v_3, v_3._f18, l_B3._f69._f1)) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 7);
                    }
                    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        v_1D = SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID())) / __678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID()))) * 100.0);
                        if (l_B3._f69._f1 == 0) {
                            if ((v_1D > 0) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) <= SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * 20.0))) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            }
                        } else if (l_B3._f69._f1 == 1) {
                            if ((v_1D > 20) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) <= SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * 40.0))) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            }
                        } else if (l_B3._f69._f1 == 2) {
                            if ((v_1D > 40) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) <= SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * 60.0))) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            }
                        } else if (l_B3._f69._f1 == 3) {
                            if ((v_1D > 60) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) <= SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * 80.0))) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            }
                        } else if (l_B3._f69._f1 == 4) {
                            if ((v_1D > 80) && (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) <= SYSTEM::FLOOR((__678_$BBDA792448DB5A89(PLAYER::GET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID())) / 100.0) * 100.0))) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                            }
                        }
                    } else { 
                        if (PED::GET_PED_ARMOUR(PLAYER::PLAYER_PED_ID()) > 0) {
                            GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                        }
                        v_1E = 0;
                        if (sub_273c7(238)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(239)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(240)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(241)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(242)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(243)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(244)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(245)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(246)) {
                            v_1E += 1;
                        }
                        if (sub_273c7(247)) {
                            v_1E += 1;
                        }
                        v_1F = 0;
                        v_1F += sub_4b3f(1868, -1, 0);
                        v_1F += sub_4b3f(1869, -1, 0);
                        v_1F += sub_4b3f(1870, -1, 0);
                        v_1F += sub_4b3f(1871, -1, 0);
                        v_1F += sub_4b3f(1872, -1, 0);
                        if (v_1F < v_1E) {
                            GAMEPLAY::SET_BIT(&l_B3._f297, 13);
                        }
                    }
                } else if (v_3._f18 == 6) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 7);
                    GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                    GAMEPLAY::SET_BIT(&l_B3._f297, 5);
                }
                break;
            case 1:
                GAMEPLAY::SET_BIT(&l_B3._f297, 7);
                if (sub_2b554(v_3, &v_2)) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 3);
                }
                if ((v_3._f18 == 0) && (v_3._f19 != 0)) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 4);
                }
                if (sub_2cfd6(v_3, 1) > 0) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 5);
                }
                if (l_B3._f69._f2 == 0) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 9);
                    if (sub_64129(v_3)) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 2);
                    }
                } else if (l_B3._f69._f2 >= 21) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 11);
                    if (sub_27537(&l_4E7, v_3, sub_2afad(v_3, l_B3._f69._f2 - 21), 1)) {
                        if (l_4E7._fA == 5) {
                            v_20 = 0;
                            v_20 += sub_4b3f(3537, -1, 0);
                            v_20 += sub_4b3f(3536, -1, 0);
                            v_20 += sub_4b3f(3538, -1, 0);
                            v_20 += sub_4b3f(3540, -1, 0);
                            v_20 += sub_4b3f(3539, -1, 0);
                            v_20 += sub_4b3f(3541, -1, 0);
                            v_20 += sub_4b3f(3543, -1, 0);
                            v_20 += sub_4b3f(3542, -1, 0);
                            v_20 += sub_4b3f(3544, -1, 0);
                            v_20 += sub_4b3f(3546, -1, 0);
                            v_20 += sub_4b3f(3545, -1, 0);
                            v_20 += sub_4b3f(3547, -1, 0);
                            if (v_20 >= g_40001._f1823) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 2);
                            }
                            GAMEPLAY::SET_BIT(&l_B3._f297, 8);
                        } else { 
                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                v_21 = sub_1be7f(v_3, l_4E7._f9, l_4E7._fA);
                                if (v_21 != 0) {
                                    if (sub_1bc1f(v_21, -1)) {
                                        GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                                    }
                                } else { 
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                                }
                            }
                            if (sub_1e2cd(v_3, l_4E7._f9, l_4E7._fA)) {
                                GAMEPLAY::SET_BIT(&l_B3._f297, 8);
                            }
                            if ((l_4E7._fA == 0) || (l_4E7._fA == 2)) {
                                if (l_4E7._f9 == l_41F) {
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 6);
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                                }
                            } else if (l_4E7._fA == 3) {
                                if (l_4E7._f9 == l_420) {
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 6);
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                                }
                            } else if (l_4E7._fA == 1) {
                                if (l_4E7._f9 == l_422) {
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 6);
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                                }
                            } else if (l_4E7._fA == 4) {
                                if (l_4E7._f9 == l_421) {
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 6);
                                    GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                                }
                            }
                        }
                    }
                } else if (sub_21a3b(&l_4E1, v_3, l_B3._f69._f2 - 1, 1)) {
                    GAMEPLAY::SET_BIT(&l_B3._f297, 10);
                    if (sub_63454(l_4E1, v_3) || l_4E1._f1) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 8);
                    }
                    if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_3, l_4E1)) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 6);
                        GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                    }
                    if (is_in_transition) {
                        if (sub_1f8a7(l_4E1, v_3, -1) || l_4E1._f1) {
                            GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                        }
                    } else if (sub_1e9e1(sub_10943(), v_3, l_4E1) || l_4E1._f1) {
                        GAMEPLAY::SET_BIT(&l_B3._f297, 0);
                    }
                    if ((((l_4E1._f1 || (sub_6619b(v_3, l_4E1._f4) > 1)) || ((l_4E1._f4 == ${wapsupp}) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${lamar1}) > 0))) || ((l_4E1._f4 == ${wapflshlasr}) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${lamar1}) > 0))) || ((l_4E1._f4 == ${wapsupp}) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${trevor2}) > 0))) {
                        if (v_3 == 0xc1b3c3d1) {
                            GAMEPLAY::SET_BIT(&l_B3._f297, 12);
                        }
                    } else { 
                        GAMEPLAY::SET_BIT(&l_B3._f297, 12);
                    }
                }
                break;
            }
        }
    }
}

auto sub_6619b(auto a_0, auto a_1) {
    v_4 = 0;
    v_5 = 0;
    while (sub_21a3b(&v_6, a_0, v_5, 0)) {
        if (v_6._f4 == a_1) {
            v_4 += 1;
        }
        v_5 += 1;
    }
    return v_4;
}

auto sub_661d1(auto a_0, auto a_1) {
    if (sub_7507(a_0)) {
        v_4 = sub_5efd1(a_0, a_1);
        v_5 = sub_10a67(a_1);
        v_6 = sub_1008b(v_5);
        return GAMEPLAY::IS_BIT_SET(v_4, v_6);
    }
    return 0;
}

auto sub_66208(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_1256b(a_0);
    if (v_5 == 0) {
        return 0;
    } else if (v_5 == 1) {
        return 1;
    }
    v_2D = sub_6469(a_0, &v_6);
    if (v_2D != -1) {
        return 1;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_4e69() == 0) {
            if (a_0 == ${weapon_stungun}) {
                return 0;
            }
            if (a_1 == 3) {
                if (a_2 == 0) {
                    return sub_273c7(156);
                } else if (a_2 == 1) {
                    return sub_273c7(157);
                } else if (a_2 == 2) {
                    return sub_273c7(158);
                } else if (a_2 == 3) {
                    return sub_273c7(159);
                } else if (a_2 == 4) {
                    return sub_273c7(160);
                } else { 
                    return 1;
                }
            }
            if (a_1 == 4) {
                return sub_273c7(1);
            }
            return sub_5d0ee(a_0, -1, 0);
        }
    } else { 
        if (a_0 == ${weapon_unarmed}) {
            if (a_1 == 3) {
                return 1;
            }
        }
        if (sub_6492e(sub_10943(), a_0) && (!sub_66312(a_0))) {
            return 1;
        }
    }
    return 0;
}

auto sub_66312(auto a_0) {
    v_3 = sub_10156(sub_10a67(a_0));
    v_4 = sub_1008b(sub_10a67(a_0));
    if ((v_3 > -1) && (v_4 > -1)) {
        if (GAMEPLAY::IS_BIT_SET(g_16416._f2[v_3/*1*/], v_4)) {
            return 1;
        }
    }
    return 0;
}

void sub_6635a(auto a_0) {
    switch (a_0) {
    case ${weapon_snspistol}:
    case ${weapon_heavypistol}:
    case ${weapon_pistol}:
    case ${weapon_appistol}:
    case ${weapon_stungun}:
    case ${weapon_combatpistol}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_HANDGUN", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_bullpupshotgun}:
    case ${weapon_assaultshotgun}:
    case ${weapon_pumpshotgun}:
    case ${weapon_sawnoffshotgun}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_SHOTGUN", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_carbinerifle}:
    case ${weapon_mg}:
    case ${weapon_advancedrifle}:
    case ${weapon_assaultrifle}:
    case ${weapon_specialcarbine}:
    case ${weapon_bullpuprifle}:
    case ${weapon_combatmg}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_RIFLE", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_grenadelauncher}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_GRENADE_LAUNCHER", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_rpg}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_RPG_LAUNCHER", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_knife}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_KNIFE", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_nightstick}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_BATON", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${gadget_parachute}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_PARACHUTE", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_petrolcan}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_FUEL_CAN", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    case ${weapon_unarmed}:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_ARMOR", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    default:
        AUDIO::PLAY_SOUND_FRONTEND(-1, "WEAPON_SELECT_OTHER", "HUD_AMMO_SHOP_SOUNDSET", 1);
        break;
    }
}

void sub_664b4(auto a_0, auto a_1, auto a_2, auto a_3) {
    a_1 = -1;
    while ((v_6 < 5) && (!v_8)) {
        if (sub_afc5(a_0, &g_2707D2, &v_9, a_2, v_6, 0)) {
            if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[(a_2 * 5) + v_6/*1*/])) {
                v_7 = v_6;
                v_8 = 1;
            }
        }
        v_6 += 1;
    }
    if (v_8) {
        a_3/*{26}*/ = v_9;
        a_1 = v_7;
    }
}

auto sub_6651b(auto a_0, auto a_1, auto a_2) {
    if (a_2) {
        if (a_1 == 3) {
            if (l_B3._fAC != 12) {
                return 0;
            }
        } else if (l_B3._fAC == 12) {
            return 0;
        }
    }
    if (a_0 == ${object}) {
        return 1;
    }
    if (!sub_7044(a_0)) {
        return 0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_4e69() == 0) {
            if (a_0 == ${weapon_stungun}) {
                return 0;
            }
        }
    }
    return 1;
}

auto sub_66585(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (l_8E) {
        if (sub_afc5(a_0, &g_2707D2, &v_7, g_25204A._f292._f21[1/*1*/], g_25204A._f292._f21[0/*1*/], 0)) {
            a_2 = g_25204A._f292._f21[0/*1*/];
            a_3 = g_25204A._f292._f21[1/*1*/];
            if (g_25204A._f292._f28) {
                l_B3._f69._f5 = 1;
                l_4D4 = v_7._f18 == 4;
                l_B3._f69._f2 = g_25204A._f292._f21[2/*1*/];
                g_25204A._f292._f28 = 0;
            }
            a_4/*{26}*/ = v_7;
            return 1;
        }
        l_8E = 0;
    }
    if (a_1 == 1) {
        if (sub_afc5(a_0, &g_2707D2, &v_7, 16, 0, 0)) {
            a_2 = 0;
            a_3 = 16;
            a_4/*{26}*/ = v_7;
            return 1;
        }
    } else { 
        v_21 = g_16416;
        if (g_16416 == 0) {
            if (sub_666d5(&l_B3)) {
                v_21 = ${weapon_pistol};
            } else { 
                v_21 = ${weapon_pistol};
            }
        }
        for (v_22 = 0; v_22 < 20; v_22 += 1) {
            for (v_23 = 0; v_23 < 5; v_23 += 1) {
                if (sub_afc5(a_0, &g_2707D2, &v_7, v_22, v_23, 0)) {
                    if (v_7 == v_21) {
                        a_2 = v_23;
                        a_3 = v_22;
                        a_4/*{26}*/ = v_7;
                        return 1;
                    }
                }
            }
        }
    }
    return 0;
}

auto sub_666d5(auto a_0) {
    if (a_0._f9) {
        if (is_in_transition) {
            if (g_16416._f3F[a_0/*1*/]) {
                return 1;
            }
        }
    }
    return 0;
}

void sub_666fe(auto a_0, auto a_1) {
    if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        return ;
    }
    if (!is_in_transition) {
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            PED::SET_FACIAL_IDLE_ANIM_OVERRIDE(PLAYER::PLAYER_PED_ID(), "Mood_Normal_1", 0);
            v_4/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
            if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${family1}) == 0) {
                GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(v_4, 50.0);
                if (sub_932d(a_0) != 3) {
                    GAMEPLAY::CLEAR_AREA_OF_OBJECTS(v_4, a_1, 0);
                }
                GAMEPLAY::CLEAR_AREA_OF_PROJECTILES(v_4, 5.0, 0);
                GAMEPLAY::CLEAR_AREA_OF_PEDS(v_4, 1.5, 1);
            }
            PLAYER::SET_EVERYONE_IGNORE_PLAYER(PLAYER::PLAYER_ID(), 1);
        }
    }
    CAM::SET_WIDESCREEN_BORDERS(1, -1);
    WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(PLAYER::PLAYER_PED_ID(), 1);
    g_254394 = 0;
    UI::_A8FDB297A8D25FBA();
    g_169BD = 1;
    sub_75c7(1, 1, 0, 0);
}

void sub_667b7(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    if (is_in_transition) {
        NETWORK::SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(a_0, a_1);
        if (ENTITY::DOES_ENTITY_EXIST(a_2)) {
            NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(a_2, 1, a_6);
        }
        if (ENTITY::DOES_ENTITY_EXIST(a_3)) {
            NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(a_3, 1, a_7);
        }
        if (ENTITY::DOES_ENTITY_EXIST(a_4)) {
            NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(a_4, 1, a_8);
        }
        if (ENTITY::DOES_ENTITY_EXIST(a_5)) {
            NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(a_5, 1, a_9);
        }
        NETWORK::NETWORK_SET_IN_MP_CUTSCENE(1, 0);
    }
}

auto sub_6681c(auto a_0) {
    v_3 = 0;
    if ((a_0 & 1) != 0) {
        v_3 = 1;
    }
    v_4 = 0;
    if ((a_0 & 1) != 0) {
        v_4 = 1;
    }
    v_5 = 0;
    if ((a_0 & 8) != 0) {
        v_5 = 1;
    }
    v_C = 1;
    v_D = 1;
    v_E = 0;
    v_2F = 1;
    v_30 = 1;
    v_31 = 1;
    if (((a_0 & 2) != 0) || ((a_0 & 4) != 0)) {
        v_31 = 0;
    }
    if (!v_31) {
        v_2F = 20;
        v_30 = 5;
    }
    for (v_9 = 0; v_9 < v_2F; v_9 += 1) {
        for (v_A = 0; v_A < v_30; v_A += 1) {
            if (!v_31) {
                v_6 = v_9;
                v_7 = v_A;
            } else { 
                v_6 = l_433;
                v_7 = l_434;
            }
            v_2B = (v_6 * 5) + v_7;
            v_D = 1;
            v_E = 0;
            if (((a_0 & 4) != 0) && (!l_435)) {
                if (((((((v_6 == 0) || (v_6 == 1)) || (v_6 == 2)) || (v_6 == 10)) || (v_6 == 14)) || (v_6 == 15)) || ((v_6 == 17) && (v_7 > 0))) {
                    v_E = 1;
                }
            }
            if (sub_afc5(l_B3, &g_2707D2, &v_11, v_6, v_7, 0)) {
                if (sub_6651b(v_11, v_11._f18, v_4) && (!v_E)) {
                    v_B = 0;
                    if (v_11._f18 == 3) {
                        if (v_7 == 0) {
                            v_F = ${prop_armour_pickup};
                        } else if (v_7 == 1) {
                            v_F = ${prop_bodyarmour_02};
                        } else if (v_7 == 2) {
                            v_F = ${prop_bodyarmour_03};
                        } else if (v_7 == 3) {
                            v_F = ${prop_bodyarmour_04};
                        } else if (v_7 == 4) {
                            v_F = ${prop_bodyarmour_05};
                        }
                    } else if (v_11._f18 == 4) {
                        v_F = ${p_parachute_s_shop};
                    } else if (v_11._f18 == 7) {
                        v_F = sub_aefd(&g_2707D2, v_11._f17);
                    } else if (v_11._f18 == 6) {
                        v_F = 0xa6706f73;
                    } else if (v_11 == ${weapon_knife}) {
                        v_F = ${prop_w_me_knife_01};
                    } else if (v_11 == ${weapon_bottle}) {
                        v_F = ${prop_w_me_bottle};
                    } else if (v_11 == 0x92a27487) {
                        v_F = ${prop_w_me_dagger};
                    } else if (v_11 == 0xf9dcbf2d) {
                        v_F = ${prop_w_me_hatchet};
                    } else { 
                        v_F = WEAPON::GET_WEAPONTYPE_MODEL(v_11);
                        v_B = 1;
                    }
                    if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_2B/*1*/]) && (ENTITY::GET_ENTITY_MODEL(l_B3._fDC[v_2B/*1*/]) != v_F)) {
                        v_F = ENTITY::GET_ENTITY_MODEL(l_B3._fDC[v_2B/*1*/]);
                    }
                    if (v_F != 0) {
                        if (v_B) {
                            WEAPON::REQUEST_WEAPON_ASSET(v_11, 0, 0);
                            if (!WEAPON::HAS_WEAPON_ASSET_LOADED(v_11)) {
                                v_C = 0;
                                v_D = 0;
                                l_43B = v_2B;
                            }
                        } else { 
                            STREAMING::REQUEST_MODEL(v_F);
                            if (!STREAMING::HAS_MODEL_LOADED(v_F)) {
                                v_C = 0;
                                v_D = 0;
                                l_43B = v_2B;
                            }
                        }
                        if (v_B) {
                            v_8 = 0;
                            while (sub_21a3b(&l_4E1, v_11, v_8, 0)) {
                                if ((l_4E1 != 0) && ((l_4E1._f1 || (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), v_11, 0) && WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_11, l_4E1))) || (l_4E1._f4 == ${wapclip}))) {
                                    v_10 = WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(l_4E1);
                                    if (v_10 != 0) {
                                        STREAMING::REQUEST_MODEL(v_10);
                                        if (!STREAMING::HAS_MODEL_LOADED(v_10)) {
                                            v_C = 0;
                                            v_D = 0;
                                            l_43B = v_2B;
                                        }
                                    }
                                }
                                v_8 += 1;
                            }
                            v_8 = 0;
                            while (sub_21a3b(&l_4E1, v_11, v_8, 0)) {
                                if ((l_4E1 != 0) && ((l_4E1._f1 || (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), v_11, 0) && WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), v_11, l_4E1))) || (l_4E1._f4 == ${wapclip}))) {
                                    if (l_4E1._f4 == 0x395e9926) {
                                        v_2C = __678_$B428C34E7B156B39(l_4E1);
                                        for (v_2D = 0; v_2D <= (v_2C - 1); v_2D += 1) {
                                            v_2E = __678_$A54BF52BDDCD2C56(l_4E1, v_2D);
                                            if (v_2E != 0) {
                                                STREAMING::REQUEST_MODEL(v_2E);
                                                if (!STREAMING::HAS_MODEL_LOADED(v_2E)) {
                                                    v_C = 0;
                                                    v_D = 0;
                                                    l_43B = v_2B;
                                                }
                                            }
                                        }
                                    }
                                }
                                v_8 += 1;
                            }
                        }
                        if (v_3) {
                            if (v_D) {
                                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_2B/*1*/]) && ((ENTITY::GET_ENTITY_MODEL(l_B3._fDC[v_2B/*1*/]) != v_F) || l_4D3)) {
                                    v_11._fD/*{3}*/ = ENTITY::GET_ENTITY_COORDS(l_B3._fDC[v_2B/*1*/], 1);
                                    v_11._f10/*{3}*/ = ENTITY::GET_ENTITY_ROTATION(l_B3._fDC[v_2B/*1*/], 2);
                                    OBJECT::DELETE_OBJECT(&l_B3._fDC[v_2B/*1*/]);
                                }
                                if (!ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_2B/*1*/])) {
                                    if (sub_6651b(v_11, v_11._f18, v_4) && (!v_E)) {
                                        if ((((((((v_11._f18 == 3) || (v_11._f18 == 4)) || (v_11._f18 == 7)) || (v_11._f18 == 6)) || (v_11 == ${weapon_knife})) || (v_11 == ${weapon_bottle})) || (v_11 == 0x92a27487)) || (v_11 == 0xf9dcbf2d)) {
                                            l_B3._fDC[v_2B/*1*/] = sub_67000(v_F, v_11._f1);
                                        } else { 
                                            l_B3._fDC[v_2B/*1*/] = WEAPON::CREATE_WEAPON_OBJECT(v_11, 1, v_11._f1, 1, 0x3f800000, 0);
                                            WEAPON::SET_WEAPON_OBJECT_TINT_INDEX(l_B3._fDC[v_2B/*1*/], 0);
                                        }
                                        if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_2B/*1*/])) {
                                            if (v_5) {
                                                ENTITY::SET_ENTITY_VISIBLE(l_B3._fDC[v_2B/*1*/], 1, 0);
                                                ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_B3._fDC[v_2B/*1*/], v_11._f1, 0, 0, 1);
                                                ENTITY::SET_ENTITY_ROTATION(l_B3._fDC[v_2B/*1*/], v_11._f4, 2, 1);
                                            } else { 
                                                ENTITY::SET_ENTITY_VISIBLE(l_B3._fDC[v_2B/*1*/], 0, 0);
                                                ENTITY::SET_ENTITY_COORDS_NO_OFFSET(l_B3._fDC[v_2B/*1*/], v_11._f1 + ({0.0, 0.0, 100.0 }), 0, 0, 1);
                                                ENTITY::SET_ENTITY_ROTATION(l_B3._fDC[v_2B/*1*/], v_11._f4, 2, 1);
                                            }
                                            if (v_F == ${prop_ld_test_01}) {
                                                ENTITY::SET_ENTITY_VISIBLE(l_B3._fDC[v_2B/*1*/], 0, 0);
                                            }
                                            ENTITY::SET_ENTITY_CAN_BE_DAMAGED(l_B3._fDC[v_2B/*1*/], 0);
                                            l_B3._fDC._f6A[v_2B/*3*/]/*{3}*/ = v_11._f4;
                                            sub_2c813(&l_B3._fDC[v_2B/*1*/], &v_11);
                                            if (sub_2b17c(&l_4E1, v_11, 0x395e9926)) {
                                                sub_66f22(&l_B3._fDC[v_2B/*1*/], &v_11);
                                            }
                                            if (!sub_66208(v_11, v_11._f18, v_7)) {
                                                ENTITY::SET_ENTITY_ALPHA(l_B3._fDC[v_2B/*1*/], SYSTEM::FLOOR(255.0 * 0.5), 1);
                                                if ((v_11 == ${weapon_appistol}) || (v_11 == ${weapon_combatpistol})) {
                                                    ENTITY::_5C3B791D580E0BC2(l_B3._fDC[v_2B/*1*/], 0.05);
                                                }
                                            }
                                            GAMEPLAY::CLEAR_BIT(&l_B3._fDC._f65[v_2B / 32/*1*/], v_2B % 32);
                                            l_438 = 0;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((((!v_5) && v_31) && v_D) && (!v_E)) {
        l_434 += 1;
        if (l_434 >= 5) {
            l_434 = 0;
            l_433 += 1;
            if (l_433 >= 20) {
                l_433 = 0;
                if (l_43B >= 100) {
                    l_43B = -1;
                    l_435 = 1;
                } else { 
                    l_43B = 100;
                }
            }
        }
    }
    if (v_C) {
        if (!v_3) {
            return 1;
        }
        if (!v_31) {
            return 1;
        }
    }
    return 0;
}

void sub_66f22(auto a_0, auto a_1) {
    if (((sub_2b129(&l_4E1, a_1, 0x395e9926, 0) != 0) && (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&l_4E1, a_1, 0x395e9926, 0)))) || ((sub_2b129(&l_4E1, a_1, 0x395e9926, 1) != 0) && (ENTITY::GET_ENTITY_MODEL(a_0) == WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(sub_2b129(&l_4E1, a_1, 0x395e9926, 1))))) {
        while (sub_21a3b(&l_4E1, a_1, v_4, 0)) {
            if (l_4E1._f4 != 0x395e9926) {
                if (WEAPON::HAS_PED_GOT_WEAPON(PLAYER::PLAYER_PED_ID(), a_1, 0)) {
                    if (WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(PLAYER::PLAYER_PED_ID(), a_1, l_4E1)) {
                        if (WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(a_0, l_4E1)) {
                            WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(a_0, l_4E1);
                        }
                        WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(a_0, l_4E1);
                    }
                }
            }
            v_4 += 1;
        }
    }
}

auto sub_67000(auto a_0, auto a_1, auto a_2, auto a_3) {
    return OBJECT::CREATE_OBJECT_NO_OFFSET(a_0, a_1, 0, 0, 0);
}

auto sub_67015() {
    if (is_in_transition) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            l_4F2 = 1;
            l_4F2._f1 = ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID());
            STREAMING::REQUEST_MODEL(l_4F2._f1);
            return STREAMING::HAS_MODEL_LOADED(l_4F2._f1);
        }
    }
    return 1;
}

auto sub_67057() {
    v_2 = 1;
    if (!l_8B) {
        if (g_2707D2._f35 > 0) {
            for (v_3 = 0; v_3 < g_2707D2._f35; v_3 += 1) {
                v_4 = g_2707D2._f1B[v_3/*1*/];
                if (NETWORK::_A2F952104FC6DD4B(v_4)) {
                } else { 
                    v_2 = 0;
                }
                l_8A = 1;
            }
        }
    }
    if (v_2) {
        if (!l_8B) {
            l_424 = 1;
        }
    }
    l_8B = v_2;
    return v_2;
}

auto sub_670bc(auto a_0) {
    v_3/*"64"*/ = sub_9da7(a_0);
    if (GAMEPLAY::GET_HASH_KEY(&v_3) != 0) {
        GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT(&v_3, 0);
        return GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(&v_3);
    }
    return 1;
}

auto sub_670e9(auto a_0, auto a_1, auto a_2) {
    if (!sub_a06b(&v_5, 1, a_1)) {
        return 0;
    }
    v_6 = 1;
    g_4369._f1581[v_5/*4*/]/*"16"*/ = a_0;
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(&g_4369._f1581[v_5/*4*/])) {
        UI::REQUEST_ADDITIONAL_TEXT(&g_4369._f1581[v_5/*4*/], 9);
        g_4369._f157A[v_5/*1*/] = 1;
        if (!UI::HAS_THIS_ADDITIONAL_TEXT_LOADED(&g_4369._f1581[v_5/*4*/], 9)) {
            v_6 = 0;
        }
    }
    GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("CommonMenu", 0);
    g_4369._f156C[v_5/*1*/] = 1;
    if (!GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("CommonMenu")) {
        v_6 = 0;
    }
    if (a_2) {
        GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT("MPShopSale", 0);
        g_4369._f1573[v_5/*1*/] = 1;
        if (!GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED("MPShopSale")) {
            v_6 = 0;
        }
    }
    v_7 = 0;
    g_4369._f159A[v_5/*10*/]._f1/*"24"*/ = "instructional_buttons";
    v_7 = sub_671df(&g_4369._f159A[v_5/*10*/]);
    if ((!v_6) || (!v_7)) {}
    return v_6 && v_7;
}

auto sub_671df(auto a_0) {
    switch (a_0._f9) {
    case 0:
        if (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
            a_0 = __678_$2F14983962462691(&a_0._f1);
            a_0._f9 = 1;
            if (a_0._f7) {
                if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
                    a_0._f8 = GAMEPLAY::GET_GAME_TIMER();
                    a_0._f9 = 2;
                }
            }
        } else { 
            a_0._f8 = GAMEPLAY::GET_GAME_TIMER();
            a_0._f9 = 2;
        }
        break;
    case 1:
        if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
            a_0._f8 = GAMEPLAY::GET_GAME_TIMER();
            a_0._f9 = 2;
        }
        break;
    case 2:
        if (!GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(a_0)) {
            a_0._f9 = 0;
        }
        break;
    }
    return a_0._f9 == 2;
}

void sub_67281(auto a_0) {
    if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        v_7 = PLAYER::GET_PLAYERS_LAST_VEHICLE();
        if (ENTITY::DOES_ENTITY_EXIST(v_7)) {
            if (VEHICLE::IS_VEHICLE_DRIVEABLE(v_7, 0) && sub_672da(a_0, &v_3, &v_6)) {
                ENTITY::SET_ENTITY_COORDS(v_7, v_3, 1, 0, 0, 1);
                ENTITY::SET_ENTITY_HEADING(v_7, v_6);
                VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(v_7);
            }
        }
    }
}

auto sub_672da(auto a_0, auto a_1, auto a_2) {
    a_1/*{3}*/ = {0.0, 0.0, 0.0 };
    a_2 = 0.0;
    switch (a_0) {
    case 0:
        a_1/*{3}*/ = {-829.8419799804688, -191.7454071044922, 36.4385986328125 };
        a_2 = 29.5060997;
        break;
    case 1:
        a_1/*{3}*/ = {129.84840393066406, -1716.52783203125, 28.0702 };
        a_2 = 50.3483;
        break;
    case 2:
        a_1/*{3}*/ = {-1296.912841796875, -1120.99853515625, 5.3951 };
        a_2 = 0.9933;
        break;
    case 3:
        a_1/*{3}*/ = {1938.028076171875, 3718.73583984375, 31.315399169921875 };
        a_2 = 118.23049926757812;
        break;
    case 4:
        a_1/*{3}*/ = {1197.8656, -469.3808898925781, 65.0885 };
        a_2 = 346.44769287109375;
        break;
    case 5:
        a_1/*{3}*/ = {-32.2160987854, -135.82119750976562, 56.053199768066406 };
        a_2 = 186.0052032470703;
        break;
    case 6:
        a_1/*{3}*/ = {-287.76959228515625, 6238.08056640625, 30.290199279785156 };
        a_2 = 316.1348876953125;
        break;
    case 7:
        a_1/*{3}*/ = {99.28759765625, -1395.159912109375, 28.27589988708496 };
        a_2 = 320.2738952636719;
        break;
    case 8:
        a_1/*{3}*/ = {1679.445068359375, 4819.05615234375, 41.003501892089844 };
        a_2 = 4.6192;
        break;
    case 9:
        a_1/*{3}*/ = {411.3063049316406, -809.186279296875, 28.155399322509766 };
        a_2 = 1.8972;
        break;
    case 10:
        a_1/*{3}*/ = {-1088.0535888671875, 2699.1669921875, 19.274799346923828 };
        a_2 = 129.7382049560547;
        break;
    case 11:
        a_1/*{3}*/ = {1194.1629638671875, 2695.6435546875, 36.9225 };
        a_2 = 1.1454;
        break;
    case 12:
        a_1/*{3}*/ = {-821.2828979492188, -1088.027099609375, 10.0499 };
        a_2 = 120.58830261230469;
        break;
    case 13:
        a_1/*{3}*/ = {3.3416, 6521.302734375, 30.2961 };
        a_2 = 316.4450988769531;
        break;
    case 14:
        a_1/*{3}*/ = {-1208.417236328125, -785.9635, 16.0139 };
        a_2 = 36.3181;
        break;
    case 15:
        a_1/*{3}*/ = {623.1845092773438, 2739.19091796875, 40.95880126953125 };
        a_2 = 3.541100025177;
        break;
    case 16:
        a_1/*{3}*/ = {130.95550537109375, -198.20840454101562, 53.41 };
        a_2 = 251.35060119628906;
        break;
    case 17:
        a_1/*{3}*/ = {-3164.06494140625, 1067.3170166015625, 19.677799224853516 };
        a_2 = 101.2229;
        break;
    case 18:
        a_1/*{3}*/ = {-713.2797241210938, -174.27670288085938, 35.89619827270508 };
        a_2 = 29.8138;
        break;
    case 19:
        a_1/*{3}*/ = {-147.0615997314453, -306.43218994140625, 37.79119873046875 };
        a_2 = 160.45260620117188;
        break;
    case 20:
        a_1/*{3}*/ = {-1461.355224609375, -230.6092071533203, 48.3064 };
        a_2 = 318.78509521484375;
        break;
    case 21:
        a_1/*{3}*/ = {-1347.7391357421875, -1278.5733642578125, 3.8952 };
        a_2 = 17.9365;
        break;
    case 22:
        a_1/*{3}*/ = {325.68328857421875, 164.3262939453125, 102.44249725341797 };
        a_2 = 68.64070129394531;
        break;
    case 23:
        a_1/*{3}*/ = {1858.7740478515625, 3742.392822265625, 32.0779 };
        a_2 = 301.23291015625;
        break;
    case 24:
        a_1/*{3}*/ = {-286.32720947265625, 6202.80224609375, 30.3323 };
        a_2 = 225.13340759277344;
        break;
    case 25:
        a_1/*{3}*/ = {-1161.5958251953125, -1417.69970703125, 3.7119999999999997 };
        a_2 = 246.91610717773438;
        break;
    case 26:
        a_1/*{3}*/ = {1308.9522705078125, -1660.611083984375, 50.23619842529297 };
        a_2 = 163.54559326171875;
        break;
    case 27:
        a_1/*{3}*/ = {-3161.5849609375, 1074.213623046875, 19.6847 };
        a_2 = 98.60919952392578;
        break;
    case 28:
        a_1/*{3}*/ = {28.423, -1110.8135986328125, 28.284799575805664 };
        a_2 = 85.24949645996094;
        break;
    case 29:
        a_1/*{3}*/ = {1704.966064453125, 3749.709228515625, 33.018798828125 };
        a_2 = 45.677799224853516;
        break;
    case 30:
        a_1/*{3}*/ = {223.949, -38.789398193359375, 68.6483 };
        a_2 = 159.42649841308594;
        break;
    case 31:
        a_1/*{3}*/ = {837.7854, -1017.9628295898438, 26.3045 };
        a_2 = 181.04449462890625;
        break;
    case 32:
        a_1/*{3}*/ = {-313.19140625, 6093.35107421875, 30.462499618530273 };
        a_2 = 315.84051513671875;
        break;
    case 33:
        a_1/*{3}*/ = {-663.4630737304688, -952.806884765625, 20.3143 };
        a_2 = 92.67960357666016;
        break;
    case 34:
        a_1/*{3}*/ = {-1323.0596923828125, -392.8576965332031, 35.459598541259766 };
        a_2 = 210.73980712890625;
        break;
    case 35:
        a_1/*{3}*/ = {-1106.101806640625, 2684.35, 18.0953 };
        a_2 = 127.03829956054688;
        break;
    case 36:
        a_1/*{3}*/ = {-3157.93212890625, 1081.3089599609375, 19.69529914855957 };
        a_2 = 100.29419708251953;
        break;
    case 37:
        a_1/*{3}*/ = {2562.8818359375, 312.8641052246094, 107.46119689941406 };
        a_2 = 179.205;
        break;
    case 38:
        a_1/*{3}*/ = {822.47998046875, -2142.87451171875, 27.849599838256836 };
        a_2 = 355.059814453125;
        break;
    case 39:
        a_1/*{3}*/ = {-1137.0531, -1993.9161376953125, 12.167699813842773 };
        a_2 = 43.121299743652344;
        break;
    case 40:
        a_1/*{3}*/ = {717.8107299804688, -1084.0814208984375, 21.3094 };
        a_2 = 93.2649;
        break;
    case 41:
        a_1/*{3}*/ = {-387.67889404296875, -128.25680541992188, 37.67959976196289 };
        a_2 = 119.1084976196289;
        break;
    case 42:
        a_1/*{3}*/ = {117.88349914550781, 6599.4150390625, 31.013399124145508 };
        a_2 = 90.72250366210938;
        break;
    case 43:
        a_1/*{3}*/ = {1201.7088623046875, 2664.8134765625, 36.81019973754883 };
        a_2 = 133.9;
        break;
    case 44:
        a_1/*{3}*/ = {-200.152099609375, -1297.50244140625, 30.296 };
        a_2 = 269.0686950683594;
        break;
    }
    return !sub_adc8(a_1, 0.0, 0.0, 0.0, 0);
}

void sub_67955(auto a_0) {
    if (sub_5a62(1)) {
        if (a_0._f13) {}
        AI::CLEAR_PED_TASKS(PLAYER::PLAYER_PED_ID());
        PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), 0, 0);
        if (is_in_transition) {
            sub_67a07(0, 0);
            sub_55f3(PLAYER::PLAYER_ID(), 0, 66048);
        } else { 
            PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), 0, 0);
        }
        if (is_in_transition) {
            sub_679b0();
        }
    }
}

void sub_679b0() {
    sub_55e2(0);
    sub_5593(4, 1, -1);
    sub_5593(6, 1, -1);
    sub_5593(7, 1, -1);
    sub_5593(3, 1, -1);
    sub_5593(1, 1, -1);
    sub_5593(2, 1, -1);
    sub_5593(11, 1, -1);
    sub_5593(13, 1, -1);
    sub_5593(14, 1, -1);
    sub_5593(16, 1, -1);
}

void sub_67a07(auto a_0, auto a_1) {
    if ((!sub_5b77(PLAYER::PLAYER_ID(), 1)) || a_1) {
        if (!sub_5d06()) {
            g_1406A0._f1 = 1;
            g_188C6B[PLAYER::PLAYER_ID()/*109*/]._f8 = 1;
            if (a_0 == 1) {
                g_1406A0._f2 = 1;
            }
            sub_67a57();
        } else { }
    } else { }
}

void sub_67a57() {
    if (!sub_5d06()) {
        g_1406A0 = 1;
        sub_5bda();
        if ((((!NETWORK::NETWORK_IS_ACTIVITY_SESSION()) && (!sub_5bcb())) && (!sub_5b53(PLAYER::PLAYER_ID()))) && (!sub_67ab0(PLAYER::PLAYER_ID()))) {
            g_EE5D4 = 1;
        }
        g_188C6B[PLAYER::PLAYER_ID()/*109*/]._f7 = 1;
    }
}

auto sub_67ab0(auto a_0) {
    if (sub_67af1(a_0)) {
        return 1;
    }
    if (sub_67ad3(a_0)) {
        return 1;
    }
    return 0;
}

auto sub_67ad3(auto a_0) {
    v_3 = a_0;
    if (v_3 != -1) {
        return sub_573c8(a_0, 9);
    }
    return 0;
}

auto sub_67af1(auto a_0) {
    v_3 = a_0;
    if (v_3 != -1) {
        return GAMEPLAY::IS_BIT_SET(g_188C6B[v_3/*109*/]._f1, 0);
    }
    return 0;
}

void sub_67b16() {
    if (!(current_character._f1 == 1)) {
        if (sub_67c22(0)) {
            sub_67b3e(0);
        }
        GAMEPLAY::SET_BIT(&g_8EC, 2);
    }
}

void sub_67b3e(auto a_0) {
    if (g_38EB) {
        sub_67bae(0, 0);
    }
    if ((current_character._f1 == 10) || (current_character._f1 == 9)) {
        GAMEPLAY::SET_BIT(&g_8EC, 16);
    }
    if (AUDIO::IS_MOBILE_PHONE_CALL_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    }
    g_3D60 = 5;
    if (a_0 == 1) {
        GAMEPLAY::SET_BIT(&g_8EB, 30);
    } else { 
        GAMEPLAY::CLEAR_BIT(&g_8EB, 30);
    }
    if (!sub_77ac()) {
        current_character._f1 = 3;
    }
}

void sub_67bae(auto a_0, auto a_1) {
    if (a_0) {
        if (sub_67c22(0)) {
            g_38EB = 1;
            if (a_1) {
                MOBILE::GET_MOBILE_PHONE_POSITION(&g_380E);
            }
            g_3805/*{3}*/ = g_3817[g_3816/*3*/];
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    } else if (g_38EB == 1) {
        g_38EB = 0;
        g_3805/*{3}*/ = g_381E[g_3816/*3*/];
        if (a_1) {
            MOBILE::SET_MOBILE_PHONE_POSITION(g_380E);
        } else { 
            MOBILE::SET_MOBILE_PHONE_POSITION(g_3805);
        }
    }
}

auto sub_67c22(auto a_0) {
    if (a_0 == 1) {
        if (current_character._f1 > 3) {
            if (GAMEPLAY::IS_BIT_SET(g_8EB, 14)) {
                return 1;
            } else { 
                return 0;
            }
        } else { 
            return 0;
        }
    } else { 
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${cellphone_flashhand}) > 0) {
            return 1;
        }
        if (current_character._f1 > 3) {
            return 1;
        } else { 
            return 0;
        }
    }
}

void sub_67c7c(auto a_0, auto a_1, auto a_2) {
    UI::HIDE_HUD_AND_RADAR_THIS_FRAME();
    if (a_0) {
        UI::HIDE_HUD_COMPONENT_THIS_FRAME(3);
        UI::HIDE_HUD_COMPONENT_THIS_FRAME(4);
        UI::HIDE_HUD_COMPONENT_THIS_FRAME(5);
        UI::HIDE_HUD_COMPONENT_THIS_FRAME(13);
    }
    if (a_1) {
        UI::HIDE_HUD_COMPONENT_THIS_FRAME(2);
    }
    if (a_2) {
        if (!sub_67d29()) {
            UI::HIDE_HUD_COMPONENT_THIS_FRAME(10);
        }
    }
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(1);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(6);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(7);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(9);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(14);
    sub_67cde();
}

void sub_67cde() {
    for (v_2 = 0; v_2 <= 3; v_2 += 1) {
        if (g_2507F3._f85A[v_2/*72*/]._f2 != 0) {
            g_2507F3._f85A[v_2/*72*/]._f2 = 5;
            GAMEPLAY::SET_BIT(&g_2507F3._f85A[v_2/*72*/]._f3F, 0);
        }
    }
}

auto sub_67d29() {
    return g_16416._f5;
}

void sub_67d37(auto a_0, auto a_1) {
    if (a_0._f9) {
        v_4 = 0;
        if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            v_4 = 1;
        } else if ((!a_0._f7) && ((a_0._fB != 4) && (a_1._f1F >= 6))) {
            v_4 = 1;
        } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (sub_932d(a_0) == 4)) && (a_0._fB == 4)) {
        } else if (!sub_67e9c(a_0, 0, PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0))) {
            v_4 = 1;
        } else if ((sub_932d(a_0) == 0) && (!sub_67e5e(PLAYER::PLAYER_ID(), a_0, 0))) {
            v_4 = 1;
        } else if ((a_0._fC._fE && ENTITY::DOES_ENTITY_EXIST(a_0._fC)) && PED::IS_PED_INJURED(a_0._fC)) {
            v_4 = 1;
        } else if (!sub_67e4e(a_0)) {
            v_4 = 1;
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && g_1413FE) {
            v_4 = 1;
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) {
            v_4 = 1;
        }
        if (v_4) {
            a_1._f1F = 8;
        }
    }
}

auto sub_67e4e(auto a_0) {
    return sub_4adf(a_0, 0, 1);
}

auto sub_67e5e(auto a_0, auto a_1, auto a_2) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return 1;
    }
    v_5 = g_180046._f74[a_1/*1*/] - 1;
    if (v_5 == a_0) {
        return 1;
    }
    if (!a_2) {
        if (v_5 == -1) {
            return 1;
        }
    }
    return 0;
}

auto sub_67e9c(auto a_0, auto a_1, auto a_2) {
    if (sub_5a62(1)) {
        if (a_1) {
            if (((!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID())) || (((!CAM::IS_GAMEPLAY_CAM_RENDERING()) && (!CAM::IS_AIM_CAM_ACTIVE())) && (!a_2))) || sub_684f1()) {
                return 0;
            }
        }
        if (a_2) {
            if ((!PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) || (!PED::IS_PED_SITTING_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID()))) {
                return 0;
            }
            v_5 = 0;
            v_6 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);
            if (ENTITY::DOES_ENTITY_EXIST(v_6)) {
                if (VEHICLE::IS_VEHICLE_DRIVEABLE(v_6, 0)) {
                    if (!ENTITY::IS_ENTITY_UPSIDEDOWN(v_6)) {
                        if (VEHICLE::GET_PED_IN_VEHICLE_SEAT(v_6, -1) == PLAYER::PLAYER_PED_ID()) {
                            if ((!PED::IS_PED_BEING_JACKED(PLAYER::PLAYER_PED_ID())) && (!AI::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))) {
                                if (!ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(v_6)) {
                                    v_5 = 1;
                                }
                            }
                        }
                    }
                }
            }
            if (!v_5) {
                return 0;
            }
        }
        if ((((((((((((((((((!PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_IN_AIR(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_GETTING_INTO_A_VEHICLE(PLAYER::PLAYER_PED_ID())) || PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) || AI::IS_PED_GETTING_UP(PLAYER::PLAYER_PED_ID())) || FIRE::IS_ENTITY_ON_FIRE(PLAYER::PLAYER_PED_ID())) || PLAYER::IS_PLAYER_BEING_ARRESTED(PLAYER::PLAYER_ID(), 1)) || (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0) && (!a_2))) || ((!PED::IS_PED_ON_FOOT(PLAYER::PLAYER_PED_ID())) && (!a_2))) || PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) || ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(PLAYER::PLAYER_PED_ID())) || UI::IS_HUD_COMPONENT_ACTIVE(19)) || CAM::IS_FIRST_PERSON_AIM_CAM_ACTIVE()) || sub_684b3()) || sub_6eef4(a_0)) || sub_684a7()) || sub_68498()) || sub_6846e()) {
            return 0;
        }
        if ((((sub_68452() || sub_684a7()) || g_621D) || g_1803E2) || g_1803E8) {
            return 0;
        }
        if (((!sub_684f1()) && sub_6843d()) && ((sub_932d(a_0) != 4) || (GAMEPLAY::GET_HASH_KEY(&g_4369._f1) != 0x15dc0641))) {
            return 0;
        }
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (g_1413FE) {
                return 0;
            }
            if (GAMEPLAY::IS_BIT_SET(g_258209._f164._f5, 0)) {
                return 0;
            }
            if (sub_68426()) {
                return 0;
            }
            if (sub_67ab0(PLAYER::PLAYER_ID())) {
                if ((((((((sub_683cb(PLAYER::PLAYER_ID()) == 154) || (sub_683cb(PLAYER::PLAYER_ID()) == 157)) || (sub_683cb(PLAYER::PLAYER_ID()) == 151)) || (sub_683cb(PLAYER::PLAYER_ID()) == 152)) || (sub_683cb(PLAYER::PLAYER_ID()) == 163)) || (sub_683cb(PLAYER::PLAYER_ID()) == 160)) || (sub_683cb(PLAYER::PLAYER_ID()) == 162)) || (sub_683cb(PLAYER::PLAYER_ID()) == 155)) {
                    if (sub_932d(a_0) != 3) {
                        return 0;
                    }
                } else { 
                    return 0;
                }
            }
            if (sub_683b2(PLAYER::PLAYER_ID(), 21)) {
                return 0;
            }
            if (g_258209._f1C._f28) {
                if (sub_932d(a_0) == 4) {
                    return 0;
                }
            }
            if (g_1406D2._f12 != 0) {
                return 0;
            }
            if (!sub_57427(PLAYER::PLAYER_ID())) {
                if ((sub_67ad3(PLAYER::PLAYER_ID()) && (((((sub_683cb(PLAYER::PLAYER_ID()) == 159) || (sub_683cb(PLAYER::PLAYER_ID()) == 164)) || (sub_683cb(PLAYER::PLAYER_ID()) == 142)) || (sub_683cb(PLAYER::PLAYER_ID()) == 148)) || (sub_683cb(PLAYER::PLAYER_ID()) == 153))) || (sub_6835d() != 0)) {
                    if (sub_932d(a_0) == 1) {
                        return 0;
                    }
                }
            } else { 
                if (sub_67ad3(PLAYER::PLAYER_ID()) && (((((sub_683cb(PLAYER::PLAYER_ID()) == 159) || (sub_683cb(PLAYER::PLAYER_ID()) == 164)) || (sub_683cb(PLAYER::PLAYER_ID()) == 142)) || (sub_683cb(PLAYER::PLAYER_ID()) == 148)) || (sub_683cb(PLAYER::PLAYER_ID()) == 153))) {
                    if (sub_932d(a_0) == 3) {
                        return 0;
                    }
                }
                if ((sub_67ad3(PLAYER::PLAYER_ID()) && (((((sub_683cb(PLAYER::PLAYER_ID()) == 159) || (sub_683cb(PLAYER::PLAYER_ID()) == 164)) || (sub_683cb(PLAYER::PLAYER_ID()) == 142)) || (sub_683cb(PLAYER::PLAYER_ID()) == 148)) || (sub_683cb(PLAYER::PLAYER_ID()) == 153))) || (sub_6835d() != 0)) {
                    if (sub_932d(a_0) == 1) {
                        return 0;
                    }
                }
            }
        }
        return 1;
    }
    return 0;
}

auto sub_6835d() {
    if (sub_573e2(1)) {
        if (sub_63832()) {
            return g_188C6B[PLAYER::PLAYER_ID()/*109*/]._f9._f3D._f1;
        } else { 
            return g_188C6B[sub_6839e()/*109*/]._f9._f3D._f1;
        }
    }
    return 0;
}

auto sub_6839e() {
    return g_188C6B[PLAYER::PLAYER_ID()/*109*/]._f9;
}

auto sub_683b2(auto a_0, auto a_1) {
    return GAMEPLAY::IS_BIT_SET(g_24E1AF[a_0/*306*/]._fCE, a_1);
}

auto sub_683cb(auto a_0) {
    if (sub_683ed(a_0, 0)) {
        return g_188C6B[a_0/*109*/]._f9._f1C;
    }
    return -1;
}

auto sub_683ed(auto a_0, auto a_1) {
    if ((g_188C6B[a_0/*109*/]._f9._f1C != -1) || (a_1 && (g_188C6B[a_0/*109*/]._f9._f1B != -1))) {
        return 1;
    }
    return 0;
}

auto sub_68426() {
    return g_1837E7[PLAYER::PLAYER_ID()/*410*/]._fB1 != 0;
}

auto sub_6843d() {
    return GAMEPLAY::GET_GAME_TIMER() <= (g_4369._f1671 + 100);
}

auto sub_68452() {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return g_15B55._f2C == 1;
    }
    return 0;
}

auto sub_6846e() {
    if (g_10FC9) {
        return 1;
    } else if (g_D965 && (!g_D96B)) {
        return 1;
    }
    return 0;
}

auto sub_68498() {
    return g_25204A._f23E;
}

auto sub_684a7() {
    return g_141447;
}

auto sub_684b3() {
    if ((((g_163E2 == 13) || (g_163E2 == 10)) || (g_163E2 == 11)) || (g_163E2 == 12)) {
        return 0;
    }
    return 1;
}

auto sub_684f1() {
    return g_16416._f129 > 0;
}

void sub_68502(auto a_0) {
    if (a_0._f1) {
        a_0._f7 = sub_4adf(a_0, 5, 1);
        a_0._f8 = a_0._f7;
        return ;
    }
    v_3 = a_0._f7;
    a_0._f7 = 0;
    a_0._f8 = 0;
    if (sub_5a62(1)) {
        v_4/*{3}*/ = sub_42b9(a_0, 0);
        v_7 = sub_68675(a_0);
        if (v_7 < 50.0) {
            if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && a_0._f5F) {
                if (sub_68675(a_0) < 3.5) {
                    a_0._f7 = 1;
                    a_0._f8 = 1;
                }
            }
            v_8 = sub_3f10(a_0);
            if (sub_68658(a_0) && (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(v_8))) {
                if (a_0._f57 == 0) {
                    a_0._f57 = INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(v_4, v_8);
                }
                if ((g_16416._f126 == a_0._f57) && (g_16416._f126 != 0)) {
                    a_0._f7 = 1;
                    if ((g_16416._f127 == a_0._f4) || (a_0._f4 == 0)) {
                        a_0._f8 = 1;
                    }
                }
            } else if ((a_0 == 21) && (v_7 < 4.5)) {
                a_0._f7 = 1;
                a_0._f8 = 1;
            } else if (v_7 < 3.0) {
                a_0._f7 = 1;
                a_0._f8 = 1;
            }
        }
    }
    if (v_3 != a_0._f7) {
        if (a_0._f7) {
        } else { }
        sub_12df9(a_0, a_0._f7);
    }
}

auto sub_68658(auto a_0) {
    switch (a_0) {
    case 21:
        return 0;
        break;
    }
    return 1;
}

auto sub_68675(auto a_0) {
    return g_16416._fF8[a_0/*1*/];
}

auto sub_68687() {
    return g_25204A._f292._f20;
}

void sub_68698() {
    g_25204A._f292._f20 = 1;
}

void sub_686aa() {
    g_25204A._f292._f1C = 0;
}

void sub_686bc() {
    if (sub_5a62(1)) {
        sub_68502(&l_B3);
        if (!l_B3._f8) {
            sub_5383();
        }
        if (!l_B3._f7) {
            if (l_41E) {
                sub_68713();
                l_41E = 0;
            }
            sub_9f84(1, l_B3);
            g_26FCD2 = 0;
            sub_9d85(l_B3);
            AUDIO::RELEASE_SCRIPT_AUDIO_BANK();
            sub_9d6e();
            l_B3._fB = 1;
        }
    }
}

void sub_68713() {
    g_38F2 = 0;
    sub_68723();
}

void sub_68723() {
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::RESTART_SCRIPTED_CONVERSATION();
        g_4153 = 0;
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

void sub_68747() {
    v_4 = 0;
    v_5 = 0;
    v_6 = 0;
    if (sub_701e0(1)) {
        l_B3._f69 = g_25204A._f292._f27;
        sub_69450(&l_B3._fAC, l_B3, l_B3._f69);
    }
    if (sub_5a62(1)) {
        if (sub_701e0(1) || (((((((!UI::IS_PAUSE_MENU_ACTIVE()) && (!PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED())) && (!UI::_E18B138FABC53103())) && (!g_16416._f548)) && sub_67e9c(l_B3, 1, 0)) && (!sub_6943f(l_B3))) && (!sub_69414()))) {
            if (sub_6926c(l_B3)) {
                v_3 = 1;
            } else if ((l_B3._f69 != -1) && ((ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), l_B3._fAC._fD[0/*3*/], l_B3._fAC._fD[1/*3*/], l_B3._fAC._f1A[0/*1*/], 0, 1, 1) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), l_B3._fAC._fD[2/*3*/], l_B3._fAC._fD[3/*3*/], l_B3._fAC._f1A[1/*1*/], 0, 1, 1)) || sub_701e0(1))) {
                v_5 = 1;
            } else { 
                l_B3._f69 = -1;
                l_90 = (l_90 + 1) % 4;
                v_7/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
                v_A = ENTITY::GET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID());
                if ((((!sub_2d611(v_7, l_91, 0.009999999999999998, 0)) || (v_A != l_94)) || (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(l_95, 2000)))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_96) > 2000))) {
                    l_91/*{3}*/ = v_7;
                    l_94 = v_A;
                    l_96 = GAMEPLAY::GET_GAME_TIMER();
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        l_95 = NETWORK::GET_NETWORK_TIME();
                    }
                    for (v_2 = 0; v_2 <= (l_B3._f2 - 1); v_2 += 1) {
                        if ((v_2 % 4) == l_90) {
                            if (sub_69450(&l_B3._fAC, l_B3, v_2)) {
                                if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), l_B3._fAC._fD[0/*3*/], l_B3._fAC._fD[1/*3*/], l_B3._fAC._f1A[0/*1*/], 0, 1, 0) || ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), l_B3._fAC._fD[2/*3*/], l_B3._fAC._fD[3/*3*/], l_B3._fAC._f1A[1/*1*/], 0, 1, 0)) {
                                    l_B3._f69 = v_2;
                                    v_5 = 1;
                                }
                                l_91/*{3}*/ = {0.0, 0.0, -9999.0 };
                                l_94 = -9999.9;
                                v_2 = l_B3._f2 + 1;
                            }
                        }
                    }
                }
            }
        } else if ((!sub_701e0(1)) && (!sub_67e9c(l_B3, 1, 0))) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (sub_57427(PLAYER::PLAYER_ID()) && (((((sub_683cb(PLAYER::PLAYER_ID()) == 159) || (sub_683cb(PLAYER::PLAYER_ID()) == 164)) || (sub_683cb(PLAYER::PLAYER_ID()) == 142)) || (sub_683cb(PLAYER::PLAYER_ID()) == 148)) || (sub_683cb(PLAYER::PLAYER_ID()) == 153))) {
                    if (sub_932d(l_B3) != 4) {
                        if ((!UI::IS_HELP_MESSAGE_BEING_DISPLAYED()) || sub_69253("SHOP_NONE", sub_84e5(l_B3))) {
                            sub_691f6("SHOP_BOSS_GNONE", sub_84e5(l_B3));
                        }
                        v_6 = 1;
                    }
                }
            }
        }
    }
    if (v_3) {
        if (!l_408) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                l_407 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(2000, 3000));
            } else { 
                l_406 = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(2000, 3000);
            }
            l_408 = 1;
            l_409 = 0;
        } else if (!l_409) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_407)) {
                    sub_599e3(&l_B3._f298, 14, 2);
                    l_3F9 = 1;
                    l_407 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(9000, 14000));
                    l_409 = 1;
                }
            } else if ((GAMEPLAY::GET_GAME_TIMER() - l_406) > 0) {
                sub_599e3(&l_B3._f298, 14, 2);
                l_3F9 = 1;
                l_406 = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(9000, 14000);
                l_409 = 1;
            }
        } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_407)) {
                l_408 = 0;
            }
        } else if ((GAMEPLAY::GET_GAME_TIMER() - l_406) > 0) {
            l_408 = 0;
        }
        if ((!is_in_transition) && (!sub_68fe2(0))) {
            sub_68f5d("SHOP_COPS");
            v_6 = 1;
        }
    } else if ((!CUTSCENE::IS_CUTSCENE_PLAYING()) && CAM::IS_SCREEN_FADED_IN()) {
        if ((((((!is_in_transition) && (!v_5)) && l_B3._f8) && (game_state._f29C._f38 < 1)) && (!sub_68f31(43))) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${lamar1}) > 0)) {
            sub_68f5d("SHOP_L_WEAP");
        } else { 
            if (!v_6) {
                sub_5383();
            }
            if (v_5 && (l_B3._fAC != 5)) {
                if (((l_B3._f3 != -1) && (!l_8F)) && (!UI::IS_HELP_MESSAGE_BEING_DISPLAYED())) {
                    sub_5195("Help text removed, releasing context intention", -1);
                    sub_12e70(&l_B3._f3);
                }
                if (l_B3._f3 == -1) {
                    if (UI::IS_HELP_MESSAGE_BEING_DISPLAYED()) {
                        sub_68e1b(&l_B3._f3, 3, &l_B3._fAC._f7, 1, 0, 0);
                        l_8F = 0;
                    } else { 
                        sub_68e1b(&l_B3._f3, 3, &l_B3._fAC._f7, 0, 0, 0);
                        l_8F = 1;
                    }
                }
                v_4 = 1;
                CONTROLS::SET_INPUT_EXCLUSIVE(0, 51);
                if (sub_68d63(l_B3._f3, 1) || sub_701e0(1)) {
                    v_4 = 0;
                    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${lamar1}) > 0) {
                        game_state._f29C._f38 += 1;
                    }
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    } else { }
                    l_B3._fB = 4;
                    l_B3._f69._f1F = 0;
                    SYSTEM::SETTIMERA(0);
                    sub_69aa5(&l_B3, &l_B3._f69);
                }
            }
        }
    }
    if (!v_4) {
        if (l_B3._f3 != -1) {
            sub_12e70(&l_B3._f3);
            if (l_B3._fB != 4) {
                sub_9f84(1, l_B3);
                g_26FCD2 = 0;
                sub_9d85(l_B3);
                AUDIO::RELEASE_SCRIPT_AUDIO_BANK();
                sub_9d6e();
            }
        }
    } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_68d4e(PLAYER::PLAYER_ID())) {
        sub_9f84(1, l_B3);
        g_26FCD2 = 0;
    } else { 
        sub_670e9("GUN_MNU", l_B3, 1);
        g_26FCD2 = 1;
        sub_670bc(l_B3);
        sub_67057();
        AUDIO::REQUEST_SCRIPT_AUDIO_BANK("HUD_AMMO_SHOP", 0);
    }
}

auto sub_68d4e(auto a_0) {
    return g_1837E7[a_0/*410*/]._fB1 != 0;
}

auto sub_68d63(auto a_0, auto a_1) {
    v_4 = sub_12ec7(a_0);
    if (v_4 == -1) {
        return 0;
    }
    if (!PLAYER::IS_PLAYER_PLAYING(PLAYER::GET_PLAYER_INDEX())) {
        return 0;
    }
    if (sub_67c22(0)) {
        return 0;
    }
    if (CUTSCENE::IS_CUTSCENE_PLAYING()) {
        return 0;
    }
    if ((v_4 > -1) && (v_4 < 6)) {
        if ((g_8E30[v_4/*19*/] == 1) && (g_8E30[v_4/*19*/]._f4 == 1)) {
            if (a_1) {
                if (g_8E30[v_4/*19*/]._f11) {
                    return 0;
                }
            }
            g_8E30[v_4/*19*/]._f5 = 1;
            g_8E30[v_4/*19*/]._f11 = 1;
            return 1;
        } else { 
            if (g_8E30[v_4/*19*/] == 0) {}
            if (g_8E30[v_4/*19*/]._f7) {}
        }
    } else { }
    return 0;
}

void sub_68e1b(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${context_controller}) < 1) {}
    if (STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS()) {
        if (!(a_0 == -1)) {
            sub_12e70(a_0);
        }
        return ;
    }
    if (!(a_0 == -1)) {
        return ;
    }
    v_8 = 0;
    for (v_8 = 0; v_8 < 6; v_8 += 1) {
        if (!g_8E30[v_8/*19*/]) {
            g_8E30[v_8/*19*/] = 1;
            g_8E30[v_8/*19*/]._f1 = g_8EAB;
            g_8EAB += 1;
            g_8E30[v_8/*19*/]._f4 = 0;
            g_8E30[v_8/*19*/]._f11 = 0;
            g_8E30[v_8/*19*/]._f5 = 0;
            g_8E30[v_8/*19*/]._f2 = a_1;
            g_8E30[v_8/*19*/]._f8/*"16"*/ = a_2;
            g_8E30[v_8/*19*/]._f6 = a_3;
            g_8E30[v_8/*19*/]._f12 = SCRIPT::GET_ID_OF_THIS_THREAD();
            g_8E30[v_8/*19*/]._f7 = 0;
            g_8E30[v_8/*19*/]._f3 = a_5;
            if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_4)) {
                g_8E30[v_8/*19*/]._fC = 1;
                g_8E30[v_8/*19*/]._fD/*"16"*/ = a_4;
            } else { 
                g_8E30[v_8/*19*/]._fC = 0;
            }
            a_0 = g_8E30[v_8/*19*/]._f1;
            return ;
        }
    }
}

auto sub_68f31(auto a_0) {
    if ((a_0 == 94) || (a_0 == -1)) {
        return 0;
    }
    return game_state._f1E27._f14A[a_0/*6*/];
}

void sub_68f5d(auto a_0) {
    if (!sub_68fcf(a_0)) {
        if (sub_68fbf()) {
            UI::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(0);
            sub_68fa9(a_0);
            sub_68f9a();
            g_16416._f5 = 1;
            g_16416._f6 = GAMEPLAY::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
        }
    }
}

void sub_68f9a() {
    g_16416._f7 = 3;
}

void sub_68fa9(auto a_0) {
    UI::_SET_TEXT_COMPONENT_FORMAT(a_0);
    UI::_DISPLAY_HELP_TEXT_FROM_STRING_LABEL(0, 1, 1, -1);
}

auto sub_68fbf() {
    return g_16416._f7 <= 0;
}

auto sub_68fcf(auto a_0) {
    UI::_0A24DA3A41B718F5(a_0);
    return UI::_10BDDBFC529428DD(0);
}

auto sub_68fe2(auto a_0) {
    if (g_8B74 == 15) {
        return 0;
    }
    if (sub_69004(a_0)) {
        return 0;
    }
    return 1;
}

auto sub_69004(auto a_0) {
    return sub_69015(a_0, g_8B74);
}

auto sub_69015(auto a_0, auto a_1) {
    if (a_1 == 15) {
        return 1;
    }
    if (a_0 == 15) {
        return 0;
    }
    switch (a_0) {
    case 16:
        switch (a_1) {
        case 7:
        case 9:
        case 10:
        case 13:
        case 14:
            return 0;
            break;
        }
        return 1;
        break;
    case 0:
        switch (a_1) {
        case 5:
        case 17:
            return 1;
            break;
        }
        break;
    case 2:
    case 3:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
        case 17:
            return 1;
            break;
        }
        break;
    case 4:
        if (a_1 == 17) {
            return 1;
        }
        break;
    case 5:
        break;
    case 6:
    case 8:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 7:
        if (a_1 == 6) {
            return 1;
        }
        break;
    case 9:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 10:
        switch (a_1) {
        case 5:
        case 6:
        case 17:
            return 1;
            break;
        }
        break;
    case 11:
        if (a_1 == 5) {
            return 1;
        }
        break;
    case 17:
        switch (a_1) {
        case 5:
        case 12:
        case 17:
            return 1;
            break;
        }
        break;
    case 12:
    case 18:
        switch (a_1) {
        case 5:
        case 6:
        case 8:
            return 1;
            break;
        }
        break;
    case 13:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    case 14:
        switch (a_1) {
        case 5:
            return 1;
            break;
        }
        break;
    }
    return 0;
}

void sub_691f6(auto a_0, auto a_1) {
    if (!sub_69253(a_0, a_1)) {
        if (sub_68fbf()) {
            UI::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(0);
            sub_69237(a_0, a_1);
            sub_68f9a();
            g_16416._f5 = 1;
            g_16416._f6 = GAMEPLAY::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME());
        }
    }
}

void sub_69237(auto a_0, auto a_1) {
    UI::_SET_TEXT_COMPONENT_FORMAT(a_0);
    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_1);
    UI::_DISPLAY_HELP_TEXT_FROM_STRING_LABEL(0, 1, 1, -1);
}

auto sub_69253(auto a_0, auto a_1) {
    UI::_0A24DA3A41B718F5(a_0);
    UI::_ADD_TEXT_COMPONENT_ITEM_STRING(a_1);
    return UI::_10BDDBFC529428DD(0);
}

auto sub_6926c(auto a_0) {
    if (sub_5a62(1)) {
        switch (a_0) {
        case 28:
        case 29:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
            if ((PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || (GAMEPLAY::_4C9296CBCD1B971E() > 0)) {
                return 1;
            }
            break;
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
            if ((PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || (GAMEPLAY::_4C9296CBCD1B971E() > 0)) {
                v_4/*{3}*/ = ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1);
                v_3 = VEHICLE::GET_RANDOM_VEHICLE_IN_SPHERE(v_4, 20.0, 0, 1024);
                if (((ENTITY::DOES_ENTITY_EXIST(v_3) && VEHICLE::IS_VEHICLE_DRIVEABLE(v_3, 0)) && (!VEHICLE::IS_VEHICLE_SEAT_FREE(v_3, -1))) && (!PED::IS_PED_IN_VEHICLE(PLAYER::PLAYER_PED_ID(), v_3, 0))) {
                    return 1;
                }
                if (PED::IS_COP_PED_IN_AREA_3D(v_4 - ({20.0, 20.0, 30.0 }), v_4 + ({20.0, 20.0, 30.0 }))) {
                    return 1;
                }
                v_7/*{3}*/ = sub_42b9(a_0, 0);
                if (PED::IS_COP_PED_IN_AREA_3D(v_7 - ({20.0, 20.0, 30.0 }), v_7 + ({20.0, 20.0, 30.0 }))) {
                    return 1;
                }
            }
            break;
        case -1:
        default:
            if ((PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0) || (GAMEPLAY::_4C9296CBCD1B971E() > 0)) {
                return 1;
            }
            break;
        }
    }
    return 0;
}

auto sub_69414() {
    if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        if (is_in_transition) {
            if (NETWORK::NETWORK_IS_PLAYER_IN_MP_CUTSCENE(PLAYER::PLAYER_ID())) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_6943f(auto a_0) {
    return sub_4adf(a_0, 8, 1);
}

auto sub_69450(auto a_0, auto a_1, auto a_2) {
    a_0._fD[0/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._fD[1/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._fD[2/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._fD[3/*3*/]/*{3}*/ = {0.0, 0.0, 0.0 };
    a_0._f1A[0/*1*/] = 0.0;
    a_0._f1A[1/*1*/] = 0.0;
    v_5 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_6 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_7 = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_1));
    if (v_7 == v_5) {
        if (a_2 == 0) {
            a_0 = 9;
            a_0._f7/*"16"*/ = "GS_BROWSE_W";
            a_0._f1/*{3}*/ = {22.99, -1104.26, 30.31 };
            a_0._fD[0/*3*/]/*{3}*/ = {19.357511520385742, -1106.2197265625, 28.60951805114746 };
            a_0._fD[1/*3*/]/*{3}*/ = {23.102067947387695, -1107.57373046875, 30.489927291870117 };
            a_0._f1A[0/*1*/] = 1.9375;
            a_0._fD[2/*3*/]/*{3}*/ = {21.546072, -1107.3287353515625, 28.73451805114746 };
            a_0._fD[3/*3*/]/*{3}*/ = {23.31161117553711, -1110.4205322265625, 30.29701805114746 };
            a_0._f1A[1/*1*/] = 1.375;
        } else if (a_2 == 1) {
            a_0 = 12;
            a_0._f7/*"16"*/ = "GS_BROWSE_A";
            a_0._f1/*{3}*/ = {16.59, -1109.52, 30.72 };
            a_0._fD[0/*3*/]/*{3}*/ = {18.247854232788086, -1111.272705078125, 28.73451805114746 };
            a_0._fD[1/*3*/]/*{3}*/ = {19.078596115112305, -1108.968505859375, 30.29701805114746 };
            a_0._f1A[0/*1*/] = 1.25;
        } else if (a_2 == 2) {
            a_0 = 5;
            a_0._f7/*"16"*/ = "";
            a_0._f1/*{3}*/ = {22.1, 1112.37, 30.06 };
            a_0._fD[0/*3*/]/*{3}*/ = {22.558853149414062, -1110.5889892578125, 28.73451805114746 };
            a_0._fD[1/*3*/]/*{3}*/ = {20.685365676879883, -1114.135, 30.29701805114746 };
            a_0._f1A[0/*1*/] = 1.375;
        }
        a_0._f1F/*{3}*/ = {20.2672, -1105.9932861328125, 29.7959 };
        a_0._f22 = 341.6825866699219;
        a_0._f2A/*{3}*/ = {20.11895751953125, -1107.9940185546875, 29.96737289428711 };
        a_0._f2D/*{3}*/ = {3.6556589603424072, 0.0, 2.415 };
    } else if (v_7 == v_6) {
        if (a_2 == 0) {
            a_0 = 9;
            a_0._f7/*"16"*/ = "GS_BROWSE_W";
            a_0._f1/*{3}*/ = {1691.06, 3761.59, 35.55 };
            a_0._fD[0/*3*/]/*{3}*/ = {1691.7830810546875, 3757.686767578125, 33.5976448059082 };
            a_0._fD[1/*3*/]/*{3}*/ = {1694.4168701171875, 3760.593505859375, 35.268245697021484 };
            a_0._f1A[0/*1*/] = 1.9375;
            a_0._fD[2/*3*/]/*{3}*/ = {1693.5130615234375, 3759.068359375, 33.580318450927734 };
            a_0._fD[3/*3*/]/*{3}*/ = {1697.123291015625, 3759.267822265625, 35.22161102294922 };
            a_0._f1A[1/*1*/] = 1.3125;
        } else if (a_2 == 1) {
            a_0 = 12;
            a_0._f7/*"16"*/ = "GS_BROWSE_A";
            a_0._f1/*{3}*/ = {1693.65, 3753.8701171875, 35.63 };
            a_0._fD[0/*3*/]/*{3}*/ = {1695.9903564453125, 3754.740966796875, 33.642818450927734 };
            a_0._fD[1/*3*/]/*{3}*/ = {1694.25244140625, 3756.362060546875, 35.205318450927734 };
            a_0._f1A[0/*1*/] = 1.25;
        } else if (a_2 == 2) {
            a_0 = 5;
            a_0._f7/*"16"*/ = "";
            a_0._f1/*{3}*/ = {1699.3199462890625, 3759.06, 34.85 };
            a_0._fD[0/*3*/]/*{3}*/ = {1697.62451171875, 3759.941650390625, 33.517826080322266 };
            a_0._fD[1/*3*/]/*{3}*/ = {1700.240234375, 3757.38671875, 35.705326080322266 };
            a_0._f1A[0/*1*/] = 1.25;
        }
        a_0._f1F/*{3}*/ = {1692.062744140625, 3758.6201171875, 34.7052 };
        a_0._f22 = 42.042701721191406;
        a_0._f2A/*{3}*/ = {1694.0037841796875, 3757.72583, 34.872 };
        a_0._f2D/*{3}*/ = {3.240859031677246, 0.0, 74.72783660888672 };
    }
    if (v_7 == v_5) {
        v_8 = 28;
    } else if (v_7 == v_6) {
        v_8 = 29;
    }
    sub_ae1f(v_8, a_1, &a_0._f1);
    sub_ae1f(v_8, a_1, &a_0._fD[0/*3*/]);
    sub_ae1f(v_8, a_1, &a_0._fD[1/*3*/]);
    sub_ae1f(v_8, a_1, &a_0._fD[2/*3*/]);
    sub_ae1f(v_8, a_1, &a_0._fD[3/*3*/]);
    sub_ae1f(v_8, a_1, &a_0._f1F);
    sub_ae1f(v_8, a_1, &a_0._f2A);
    sub_a564(v_8, a_1, &a_0._f2D);
    sub_698c3(v_8, a_1, &a_0._f22);
    return 1;
}

void sub_698c3(auto a_0, auto a_1, auto a_2) {
    sub_a648(a_0, &v_5, &v_8);
    sub_a648(a_1, &v_B, &v_E);
    a_2 += v_E._f2 - v_8._f2;
}

void sub_698f1() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (!l_4D1) {
            if (NETWORK::_67A5589628E0CFF6()) {
                sub_7021c(&g_2707D2);
                l_439 = 0;
                l_4D1 = 1;
                l_4D3 = 1;
            }
        }
        if (sub_69943(PLAYER::PLAYER_ID()) > l_4D2) {
            l_439 = 0;
            l_4D2 = sub_69943(PLAYER::PLAYER_ID());
            l_4D3 = 1;
        }
    }
}

auto sub_69943(auto a_0) {
    v_3 = sub_69a23(a_0);
    if (v_3 < 0) {
        return 0;
    }
    return sub_69964(v_3, 0);
}

auto sub_69964(auto a_0, auto a_1) {
    if (a_1 == 0) {}
    v_5 = 8000;
    v_6 = 0;
    v_7 = (v_5 - v_6) / 2;
    for (v_4 = 0; v_4 <= 100; v_4 += 1) {
        if (v_5 == v_6) {
            v_4 = 8000;
            if (v_7 == 0) {
                v_7 = 1;
            }
            return v_7;
        }
        if (g_42E17[v_7/*1*/] == a_0) {
            v_5 = v_7;
            v_6 = v_7;
        } else if (g_42E17[v_7/*1*/] < a_0) {
            if (v_6 == v_7) {
                v_6 += 1;
            } else { 
                v_6 = v_7;
            }
        } else if (v_5 == v_7) {
            v_5 -= 1;
        } else { 
            v_5 = v_7;
        }
        v_8 = ((__678_$BBDA792448DB5A89(v_5) - __678_$BBDA792448DB5A89(v_6)) / 2.0) + __678_$BBDA792448DB5A89(v_6);
        v_7 = SYSTEM::ROUND(v_8);
    }
    return 8000;
}

auto sub_69a23(auto a_0) {
    if (g_1406D2._f9 == 0) {
        if (a_0 > -1) {
            if (a_0 == PLAYER::PLAYER_ID()) {
                return g_14901D[sub_4b71(-1)/*1*/];
            } else if (sub_69a80(a_0)) {
                return g_1837E7[a_0/*410*/]._fC0._f1;
            }
        }
    } else { 
        return g_14901D[sub_4b71(-1)/*1*/];
    }
    return 0;
}

auto sub_69a80(auto a_0) {
    if (a_0 == -1) {
        return 0;
    } else { 
        return GAMEPLAY::IS_BIT_SET(g_2507F3._f1, a_0);
    }
    return 1;
}

void sub_69aa5(auto a_0, auto a_1) {
    if (a_0._f9) {
        if (a_1._f13) {}
        if ((a_0._fB == 4) || ((a_0._fB == 2) && (a_1._f5 > 1))) {
            sub_69b75(a_0, 1);
            sub_12d79(a_0, 1);
            sub_69b3d();
        } else { 
            sub_69b02(a_0, 0);
            sub_12d79(a_0, 0);
        }
    }
}

void sub_69b02(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_4adf(a_0, 15, 1)) {
            sub_9593(a_0, 15, 1);
        }
    } else if (sub_4adf(a_0, 15, 1)) {
        sub_8452(a_0, 15, 1);
    }
}

void sub_69b3d() {
    if (g_10FC3 != 6) {}
    if (g_10FC8) {
        UI::RESET_HUD_COMPONENT_VALUES(15);
        g_10FC8 = 0;
        g_4369._f1EB1 = 0;
    }
    g_10FC3 = 6;
    g_10FC5 = -1;
    g_10FC4 = -1;
}

void sub_69b75(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_4adf(a_0, 9, 0)) {
            sub_9593(a_0, 9, 0);
        }
    } else if (sub_4adf(a_0, 9, 0)) {
        sub_8452(a_0, 9, 0);
    }
}

void sub_69bb0() {
    if (sub_684b3()) {
        return ;
    }
    if ((!sub_6a602(l_B3)) && (!is_in_transition)) {
        if (sub_5a62(1)) {
            if (l_B3._f69._f5 > 1) {
                UI::HIDE_HUD_AND_RADAR_THIS_FRAME();
                sub_67b16();
                if (l_B3._f69._f5 < 5) {
                    if (!CAM::IS_SCREEN_FADING_OUT()) {
                        if (sub_6a56f()) {
                            CAM::DO_SCREEN_FADE_OUT(500);
                            l_B3._f69._f9 = GAMEPLAY::GET_GAME_TIMER();
                            l_B3._f69._f5 = 4;
                        }
                    }
                }
            }
            switch (l_B3._f69._f5) {
            case 0:
                if (((l_B3 == 28) && (!sub_68f31(43))) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${lamar1}) > 0)) {
                    l_B3._f69._f5 += 1;
                } else { 
                    l_B3._fB = 3;
                    return ;
                }
                break;
            case 1:
                if (PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID())) {
                    l_B3._f8F._f1C = 0;
                    sub_6a397(l_B3, &l_B3._f8F);
                    if (VEHICLE::IS_ANY_VEHICLE_NEAR_POINT(l_B3._fAC._fD[0/*3*/], 5.0) && (!is_in_transition)) {
                        sub_67281(&l_B3);
                    }
                    PLAYER::CLEAR_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID());
                    PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), 0, 0);
                    AI::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
                    PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), 0, 0);
                    ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), l_B3._f8F[0/*3*/], 1, 0, 0, 1);
                    ENTITY::SET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID(), l_B3._f8F._f7[0/*1*/]);
                    if (!sub_adc8(l_B3._f8F[1/*3*/], 0.0, 0.0, 0.0, 0)) {
                        AI::TASK_GO_STRAIGHT_TO_COORD(PLAYER::PLAYER_PED_ID(), l_B3._f8F[1/*3*/], 1.0, 20000, l_B3._f8F._f7[1/*1*/], 0x3f000000);
                    }
                    WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
                    PED::FORCE_PED_MOTION_STATE(PLAYER::PLAYER_PED_ID(), ${motionstate_walk}, 0, 0, 0);
                    sub_666fe(&l_B3, 0x40400000);
                    if (!CAM::DOES_CAM_EXIST(l_B3._f8F._fA)) {
                        l_B3._f8F._fA = CAM::CREATE_CAM("DEFAULT_SCRIPTED_CAMERA", 0);
                    }
                    CAM::SET_CAM_ACTIVE(l_B3._f8F._fA, 1);
                    INTERIOR::_405DC2AEF6AF95B9(l_B3._f4);
                    CAM::SET_CAM_PARAMS(l_B3._f8F._fA, l_B3._f8F._fB[0/*3*/], l_B3._f8F._f12[0/*3*/], l_B3._f8F._f19[0/*1*/], 0, 1, 1, 2);
                    CAM::SET_CAM_PARAMS(l_B3._f8F._fA, l_B3._f8F._fB[1/*3*/], l_B3._f8F._f12[1/*3*/], l_B3._f8F._f19[1/*1*/], 6000, 0, 0, 2);
                    CAM::SHAKE_CAM(l_B3._f8F._fA, "HAND_SHAKE", 0.15);
                    CAM::RENDER_SCRIPT_CAMS(1, 0, 3000, 1, 0, 0);
                    l_B3._f69._fB/*"16"*/ = "SHOP_INTRO";
                    l_B3._f69._f9 = GAMEPLAY::GET_GAME_TIMER();
                    l_B3._f69._f5 += 1;
                }
                break;
            case 2:
                if ((GAMEPLAY::GET_GAME_TIMER() - l_B3._f69._f9) >= 5900) {
                    l_B3._f8F._f1C = 1;
                    sub_6a397(l_B3, &l_B3._f8F);
                    CAM::SET_CAM_PARAMS(l_B3._f8F._fA, l_B3._f8F._fB[0/*3*/], l_B3._f8F._f12[0/*3*/], l_B3._f8F._f19[0/*1*/], 0, 1, 1, 2);
                    CAM::SET_CAM_PARAMS(l_B3._f8F._fA, l_B3._f8F._fB[1/*3*/], l_B3._f8F._f12[1/*3*/], l_B3._f8F._f19[1/*1*/], 9000, 3, 3, 2);
                    CAM::SHAKE_CAM(l_B3._f8F._fA, "HAND_SHAKE", 0.15);
                    l_B3._f69._fB/*"16"*/ = "GS_INTRO_0";
                    l_B3._f69._f9 = GAMEPLAY::GET_GAME_TIMER();
                    l_B3._f69._f5 += 1;
                }
                break;
            case 3:
                if ((GAMEPLAY::GET_GAME_TIMER() - l_B3._f69._f9) >= 8900) {
                    l_B3._f8F._f1C = 2;
                    sub_6a397(l_B3, &l_B3._f8F);
                    CAM::SET_CAM_PARAMS(l_B3._f8F._fA, l_B3._f8F._fB[0/*3*/], l_B3._f8F._f12[0/*3*/], l_B3._f8F._f19[0/*1*/], 0, 1, 1, 2);
                    CAM::SET_CAM_PARAMS(l_B3._f8F._fA, l_B3._f8F._fB[1/*3*/], l_B3._f8F._f12[1/*3*/], l_B3._f8F._f19[1/*1*/], 13000, 0, 0, 2);
                    CAM::SHAKE_CAM(l_B3._f8F._fA, "HAND_SHAKE", 0.15);
                    l_B3._f69._fB/*"16"*/ = "GS_INTRO_1";
                    l_B3._f69._f9 = GAMEPLAY::GET_GAME_TIMER();
                    l_B3._f69._f5 += 1;
                }
                break;
            case 4:
                if ((CAM::IS_SCREEN_FADED_OUT() || ((GAMEPLAY::GET_GAME_TIMER() - l_B3._f69._f9) >= 10900)) && (!CAM::IS_SCREEN_FADING_OUT())) {
                    l_B3._f69._f5 += 1;
                }
                break;
            case 5:
                if (CAM::DOES_CAM_EXIST(l_B3._f8F._fA)) {
                    if (CAM::IS_CAM_ACTIVE(l_B3._f8F._fA)) {
                        CAM::SET_CAM_ACTIVE(l_B3._f8F._fA, 0);
                    }
                    CAM::DESTROY_CAM(l_B3._f8F._fA, 0);
                }
                CAM::RENDER_SCRIPT_CAMS(0, 0, 3000, 1, 0, 0);
                CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(0.0);
                CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(0.0, 0x3f800000);
                PLAYER::SET_PLAYER_CONTROL(PLAYER::PLAYER_ID(), 1, 0);
                UI::CLEAR_HELP(1);
                if (!CAM::IS_SCREEN_FADED_IN()) {
                    ENTITY::SET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), l_B3._f8F[1/*3*/], 1, 0, 0, 1);
                    ENTITY::SET_ENTITY_HEADING(PLAYER::PLAYER_PED_ID(), l_B3._f8F._f7[1/*1*/]);
                    AI::CLEAR_PED_TASKS_IMMEDIATELY(PLAYER::PLAYER_PED_ID());
                }
                sub_5383();
                l_B3._f69._f9 = GAMEPLAY::GET_GAME_TIMER();
                sub_757a();
                if (!CAM::IS_SCREEN_FADED_IN()) {
                    if (!CAM::IS_SCREEN_FADING_IN()) {
                        CAM::DO_SCREEN_FADE_IN(500);
                    }
                }
                sub_9d85(l_B3);
                sub_6a360(l_B3, 1);
                break;
            }
            if (((l_B3._f69._f5 >= 2) && (l_B3._f69._f5 < 5)) && sub_670bc(l_B3)) {
                sub_6a17f(l_B3, &l_B3._f69._fB);
            }
        }
    } else { 
        sub_6a0fb(l_B3, 1);
        l_B3._fB = 3;
    }
}

void sub_6a0fb(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_4adf(a_0, 2, 0)) {
            sub_9593(a_0, 2, 0);
            sub_12d5f(a_0);
            v_4 = sub_932d(a_0);
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (sub_4e69() == 0) {
                    v_5 = sub_4b3f(816, -1, 0);
                    GAMEPLAY::SET_BIT(&v_5, v_4);
                    sub_84ba(816, v_5, -1, 1);
                }
            } else { 
                GAMEPLAY::SET_BIT(&game_state._f29C._f2F, v_4);
            }
        }
    } else if (sub_4adf(a_0, 2, 0)) {
        sub_8452(a_0, 2, 0);
    }
}

void sub_6a17f(auto a_0, auto a_1) {
    v_6/*"64"*/ = sub_9da7(a_0);
    GRAPHICS::_61BB1D9B3A95D802(4);
    GRAPHICS::_SET_SCREEN_DRAW_POSITION(76, 84);
    GRAPHICS::_F5A2C681787E579D(0.0, 0.0, 0.0, 0.0);
    GRAPHICS::GET_SCREEN_RESOLUTION(&v_4, &v_5);
    v_16 = 288.0 / __678_$BBDA792448DB5A89(v_4);
    v_17 = 64.0 / __678_$BBDA792448DB5A89(v_5);
    v_18 = 9.0 / __678_$BBDA792448DB5A89(v_4);
    v_19 = 9.0 / __678_$BBDA792448DB5A89(v_5);
    GRAPHICS::DRAW_SPRITE(&v_6, &v_6, v_16 * 0.5, v_17 * 0.5, v_16, v_17, 0.0, 255, 255, 255, 255, 0);
    UI::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(1);
    if (GAMEPLAY::GET_HASH_KEY(a_1) == GAMEPLAY::GET_HASH_KEY("SHOP_INTRO")) {
        sub_69237(a_1, sub_84e5(a_0));
    } else { 
        sub_68fa9(a_1);
    }
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(10);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(3);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(13);
    UI::HIDE_HUD_COMPONENT_THIS_FRAME(2);
    UI::SET_TEXT_SCALE(0.0, 0.35);
    UI::SET_TEXT_COLOUR(255, 255, 255, 255);
    UI::SET_TEXT_CENTRE(0);
    UI::SET_TEXT_DROPSHADOW(0, 0, 0, 0, 0);
    UI::SET_TEXT_EDGE(0, 0, 0, 0, 0);
    UI::SET_TEXT_WRAP(v_18, (0.003 + v_16) - v_18);
    UI::_SET_TEXT_ENTRY(a_1);
    if (GAMEPLAY::GET_HASH_KEY(a_1) == GAMEPLAY::GET_HASH_KEY("SHOP_INTRO")) {
        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(sub_84e5(a_0));
    }
    UI::_DRAW_TEXT(v_18, ((v_17 + 0.0027777599170804024) + v_19) - 0.005, 0);
    UI::SET_TEXT_SCALE(0.0, 0.35);
    UI::SET_TEXT_COLOUR(255, 255, 255, 255);
    UI::SET_TEXT_CENTRE(0);
    UI::SET_TEXT_DROPSHADOW(0, 0, 0, 0, 0);
    UI::SET_TEXT_EDGE(0, 0, 0, 0, 0);
    UI::SET_TEXT_WRAP(v_18, v_16 - v_18);
    UI::_SET_TEXT_GXT_ENTRY(a_1);
    if (GAMEPLAY::GET_HASH_KEY(a_1) == GAMEPLAY::GET_HASH_KEY("SHOP_INTRO")) {
        UI::_ADD_TEXT_COMPONENT_ITEM_STRING(sub_84e5(a_0));
    }
    v_1A = UI::_9040DFB09BE75706(v_18, ((v_17 + 0.0027777599170804024) + v_19) - 0.005);
    sub_15e1f(0.0, v_17 + 0.0027777599170804024, v_16, ((((float)v_1A) * UI::_DB88A37483346780(0.35, 0)) + (v_19 * 2.0)) + 0.005, 0, 0, 0, 255);
    GRAPHICS::_E3A3DB414A373DAB();
}

void sub_6a360(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_4adf(a_0, 4, 0)) {
            sub_9593(a_0, 4, 0);
        }
    } else if (sub_4adf(a_0, 4, 0)) {
        sub_8452(a_0, 4, 0);
    }
}

void sub_6a397(auto a_0, auto a_1) {
    switch (a_0) {
    case 28:
        a_1[0/*3*/]/*{3}*/ = {17.58169937133789, -1114.6771240234375, 28.797000885 };
        a_1._f7[0/*1*/] = 327.4219055175781;
        a_1[1/*3*/]/*{3}*/ = {18.986, -1112.40625, 28.797000885 };
        a_1._f7[1/*1*/] = 341.69281;
        switch (a_1._f1C) {
        case 0:
            a_1._fB[0/*3*/]/*{3}*/ = {16.1704216, -1112.9085693359375, 30.375286102294922 };
            a_1._f12[0/*3*/]/*{3}*/ = {-2.296381950378418, 0.010813, -68.22786712646484 };
            a_1._f19[0/*1*/] = 45.64141082763672;
            a_1._fB[1/*3*/]/*{3}*/ = {16.120264053344727, -1112.7830810546875, 30.375314712524414 };
            a_1._f12[1/*3*/]/*{3}*/ = {-2.296381950378418, 0.010813, -68.22786712646484 };
            a_1._f19[1/*1*/] = 45.64141082763672;
            break;
        case 1:
            a_1._fB[0/*3*/]/*{3}*/ = {25.27992820739746, -1105.458740234375, 31.569883346557617 };
            a_1._f12[0/*3*/]/*{3}*/ = {-10.102396011352539, 0.0, 151.22125244140625 };
            a_1._f19[0/*1*/] = 30.716148376464844;
            a_1._fB[1/*3*/]/*{3}*/ = {25.380273818969727, -1105.33056640625, 30.65363121032715 };
            a_1._f12[1/*3*/]/*{3}*/ = {-10.102395057678223, 0.0, 127.99847412109375 };
            a_1._f19[1/*1*/] = 30.716148376464844;
            break;
        case 2:
            a_1._fB[0/*3*/]/*{3}*/ = {22.64528465270996, -1108.0164794921875, 30.045597076416016 };
            a_1._f12[0/*3*/]/*{3}*/ = {7.8716, 0.0, -18.51645851135254 };
            a_1._f19[0/*1*/] = 32.047393798828125;
            a_1._fB[1/*3*/]/*{3}*/ = {20.376089096069336, -1107.2568359375, 30.045597076416016 };
            a_1._f12[1/*3*/]/*{3}*/ = {7.8716, 0.0, -18.51645851135254 };
            a_1._f19[1/*1*/] = 32.047393798828125;
            break;
        }
        break;
    }
}

auto sub_6a56f() {
    if (sub_6a586(1000)) {
        return 1;
    }
    return 0;
}

auto sub_6a586(auto a_0) {
    if (CAM::IS_SCREEN_FADED_IN()) {
        if ((GAMEPLAY::GET_GAME_TIMER() - g_1C) > a_0) {
            g_1B = GAMEPLAY::GET_GAME_TIMER();
        }
        g_1C = GAMEPLAY::GET_GAME_TIMER();
        if ((GAMEPLAY::GET_GAME_TIMER() - g_1B) > a_0) {
            if (sub_6a5d0()) {
                g_1B = GAMEPLAY::GET_GAME_TIMER();
                return 1;
            }
        }
    }
    return 0;
}

auto sub_6a5d0() {
    if (UI::IS_PAUSE_MENU_ACTIVE()) {
        return 0;
    }
    if (CONTROLS::IS_CONTROL_JUST_PRESSED(0, 18) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 18)) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_6a602(auto a_0) {
    return sub_4adf(a_0, 4, 0);
}

void sub_6a612() {
    if (sub_5a62(1)) {
        sub_68502(&l_B3);
        if (l_B3._f8) {
            if ((!is_in_transition) && (!l_89)) {
                game_state._f29C._f34 += 1;
                l_89 = 1;
            }
            l_B3._f69 = -1;
            l_B3._fB = 2;
            l_B3._f69._f5 = 0;
        }
    }
}

void sub_6a667(auto a_0, auto a_1, auto a_2) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return ;
    }
    if (a_1) {
        v_5 = 1;
    } else { 
        v_5 = 0;
    }
    if (a_2) {
        if (a_1) {
            v_5 = 4;
        } else { 
            v_5 = 3;
        }
    }
    v_6 = sub_32c0(a_0, 0);
    if (v_6 != 226) {
        sub_6a6ca(v_6, v_5);
    }
    v_6 = sub_32c0(a_0, 1);
    if (v_6 != 226) {
        sub_6a6ca(v_6, v_5);
    }
}

void sub_6a6ca(auto a_0, auto a_1) {
    if (a_0 != 226) {
        if (is_in_transition) {
            v_4 = g_2507F3._f4A[a_0/*1*/];
        } else { 
            v_4 = game_state._f1707[a_0/*1*/];
        }
        if ((v_4 != a_1) || GAMEPLAY::IS_BIT_SET(g_7B00[a_0 / 32/*1*/], a_0 % 32)) {
            if (((((a_1 == 4) || (a_1 == 3)) || (a_1 == 5)) || (a_1 == 6)) || (a_1 == 2)) {
                GAMEPLAY::SET_BIT(&g_7B09[a_0 / 32/*1*/], a_0 % 32);
                g_7CD8[a_0/*1*/] = a_1;
            } else if (is_in_transition) {
                g_2507F3._f4A[a_0/*1*/] = a_1;
            } else { 
                game_state._f1707[a_0/*1*/] = a_1;
            }
            GAMEPLAY::SET_BIT(&g_7B00[a_0 / 32/*1*/], a_0 % 32);
            sub_6a811(a_0);
            if (GAMEPLAY::IS_BIT_SET(g_7B00[a_0 / 32/*1*/], a_0 % 32)) {
                sub_6a7c3(a_0);
            }
        }
    }
}

void sub_6a7c3(auto a_0) {
    if (!GAMEPLAY::IS_BIT_SET(g_7EAF._fE4[a_0 / 32/*1*/], a_0 % 23)) {
        GAMEPLAY::SET_BIT(&g_7EAF._fE4[a_0 / 32/*1*/], a_0 % 23);
        g_7EAF[g_7EAF._fE3/*1*/] = a_0;
        g_7EAF._fE3 += 1;
    }
}

void sub_6a811(auto a_0) {
    if (!sub_6ba52()) {
        return ;
    }
    if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        return ;
    }
    v_3/*{7}*/ = sub_6b7(a_0);
    if (GAMEPLAY::IS_BIT_SET(v_3._f4, 2)) {
        sub_6b03d(a_0, &v_3);
    }
    if (!OBJECT::_DOES_DOOR_EXIST(v_3._f5)) {
        if (CUTSCENE::IS_CUTSCENE_PLAYING()) {
            return ;
        }
    }
    v_A = 0;
    v_B = 0;
    v_D = GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_3, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), 1);
    if ((GAMEPLAY::IS_BIT_SET(g_7B09[a_0 / 32/*1*/], a_0 % 32) && (g_7CD8[a_0/*1*/] == 2)) && (v_D > 210.0)) {
        GAMEPLAY::CLEAR_BIT(&g_7B09[a_0 / 32/*1*/], a_0 % 32);
        g_7B12[a_0/*1*/] = 0;
    }
    if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${startup_positioning}) == 0) {
        if (GAMEPLAY::IS_BIT_SET(g_7BF5[a_0 / 32/*1*/], a_0 % 32)) {
            if (v_D < 25.0) {
                if (g_16416._f126 == 0) {
                    if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
                        g_16416._f126 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
                    }
                }
                v_E = g_16416._f126;
                v_F = INTERIOR::GET_INTERIOR_AT_COORDS(v_3);
                if ((v_E == v_F) && (v_E != 0)) {
                    GAMEPLAY::SET_BIT(&g_7B09[a_0 / 32/*1*/], a_0 % 32);
                    g_7CD8[a_0/*1*/] = 3;
                    GAMEPLAY::SET_BIT(&g_7B00[a_0 / 32/*1*/], a_0 % 32);
                }
            }
            GAMEPLAY::CLEAR_BIT(&g_7BF5[a_0 / 32/*1*/], a_0 % 32);
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_7B09[a_0 / 32/*1*/], a_0 % 32)) {
        v_C = g_7CD8[a_0/*1*/];
    } else if (GAMEPLAY::IS_BIT_SET(v_3._f4, 0)) {
        if (game_state._f1E27) {
            v_C = sub_6ad72(a_0);
        } else { 
            v_C = 0;
        }
        if (sub_10a59(14)) {
            v_C = 0;
        }
    } else if (GAMEPLAY::IS_BIT_SET(v_3._f4, 1) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${ambient_solomon}) == 0)) {
        if (sub_6acf3()) {
            v_C = 0;
        } else { 
            v_C = 1;
        }
    } else { 
        v_C = game_state._f1707[a_0/*1*/];
    }
    if (g_7DBB[a_0/*1*/] != v_C) {
        v_A = 1;
    }
    if (GAMEPLAY::IS_BIT_SET(g_7B00[a_0 / 32/*1*/], a_0 % 32)) {
        if ((!GAMEPLAY::IS_BIT_SET(g_7B09[a_0 / 32/*1*/], a_0 % 32)) || ((g_7B12[a_0/*1*/] == 0) && (g_7CD8[a_0/*1*/] != 2))) {
            v_A = 1;
        }
    }
    if (v_A) {
        if (!g_7AFF) {
        } else { 
            if (!OBJECT::_DOES_DOOR_EXIST(v_3._f5)) {
                OBJECT::ADD_DOOR_TO_SYSTEM(v_3._f5, v_3._f3, v_3, 0, 0, 0);
            }
            switch (v_C) {
            case 1:
                if (GAMEPLAY::IS_BIT_SET(v_3._f4, 3)) {
                    v_10 = 1;
                } else if ((v_D > 3.0) || (GAMEPLAY::ABSF(OBJECT::_65499865FCA6E5EC(v_3._f5)) <= 0.015)) {
                    v_11 = INTERIOR::GET_INTERIOR_FROM_ENTITY(PLAYER::PLAYER_PED_ID());
                    v_12 = INTERIOR::GET_INTERIOR_AT_COORDS(v_3);
                    if ((v_11 != v_12) || (v_11 == 0)) {
                        v_10 = 1;
                    }
                } else { }
                if (v_10) {
                    if (v_3._f6 != 0.0) {
                        OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                    }
                    OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                    v_B = 1;
                }
                break;
            case 4:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                v_B = 1;
                break;
            case 2:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                v_B = 1;
                break;
            case 0:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 1);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                v_B = 1;
                break;
            case 3:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, 0, 0, 1);
                v_B = 1;
                break;
            case 5:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                v_B = 1;
                break;
            case 6:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                v_B = 1;
                break;
            default:
                if (v_3._f6 != 0.0) {
                    OBJECT::_9BA001CB45CBF627(v_3._f5, v_3._f6, 0, 0);
                }
                OBJECT::_6BAB9442830C7F53(v_3._f5, v_C, 0, 1);
                v_B = 1;
                break;
            }
        }
        if (v_B) {
            GAMEPLAY::CLEAR_BIT(&g_7B00[a_0 / 32/*1*/], a_0 % 32);
            g_7DBB[a_0/*1*/] = v_C;
        }
    }
    if (GAMEPLAY::IS_BIT_SET(g_7B09[a_0 / 32/*1*/], a_0 % 32) && (g_7CD8[a_0/*1*/] != 2)) {
        GAMEPLAY::SET_BIT(&g_7B00[a_0 / 32/*1*/], a_0 % 32);
        sub_6a7c3(a_0);
        if (g_7B12[a_0/*1*/] < 2) {
            g_7B12[a_0/*1*/] += 1;
        }
    }
}

auto sub_6acf3() {
    if (PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(PLAYER::PLAYER_ID(), 0)) {
        return 0;
    }
    switch (sub_10943()) {
    case 0:
        if (game_state._f1E27._f63._f3A[65/*1*/]) {
            return 1;
        }
        break;
    case 1:
        if (game_state._f1E27._f63._f3A[66/*1*/]) {
            return 1;
        }
        break;
    case 2:
        if (game_state._f1E27._f63._f3A[65/*1*/]) {
            return 1;
        }
        break;
    }
    return 0;
}

auto sub_6ad72(auto a_0) {
    v_3 = sub_10943();
    if (sub_6afc7(a_0)) {
        return 1;
    }
    if (a_0 == 49) {
        if (v_3 == 1) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[5/*1*/], 0) || GAMEPLAY::IS_BIT_SET(game_state._f16E7[6/*1*/], 0)) {
                return 0;
            }
        }
        if (sub_7507(v_3)) {
            if (GAMEPLAY::IS_BIT_SET(g_151C2[5/*1*/], v_3)) {
                return 0;
            }
        }
    }
    switch (a_0) {
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
        if (v_3 == 0) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[0/*1*/], 0)) {
                return 0;
            }
        }
        if (sub_7507(v_3)) {
            if (GAMEPLAY::IS_BIT_SET(g_151C2[0/*1*/], v_3)) {
                if (a_0 != 40) {
                    return 0;
                } else { 
                    return 1;
                }
            }
        }
        break;
    case 47:
    case 48:
    case 49:
        if (v_3 == 1) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[5/*1*/], 0)) {
                return 0;
            }
        }
        if (sub_7507(v_3)) {
            if (GAMEPLAY::IS_BIT_SET(g_151C2[5/*1*/], v_3)) {
                return 0;
            }
        }
        break;
    case 50:
        if (v_3 == 1) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[6/*1*/], 0)) {
                return 0;
            }
        }
        if (sub_7507(v_3)) {
            if (GAMEPLAY::IS_BIT_SET(g_151C2[6/*1*/], v_3)) {
                return 0;
            }
        }
        break;
    case 51:
    case 52:
        if (v_3 == 2) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[2/*1*/], 0)) {
                return 0;
            }
            if (sub_7507(v_3)) {
                if (GAMEPLAY::IS_BIT_SET(g_151C2[2/*1*/], v_3)) {
                    return 0;
                }
            }
        } else if (v_3 == 0) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[1/*1*/], 0)) {
                return 0;
            }
            if (sub_7507(v_3)) {
                if (GAMEPLAY::IS_BIT_SET(g_151C2[1/*1*/], v_3)) {
                    return 0;
                }
            }
        }
        break;
    case 53:
        if (v_3 == 2) {
            if (GAMEPLAY::IS_BIT_SET(game_state._f16E7[3/*1*/], 0)) {
                return 0;
            }
        }
        if (sub_7507(v_3)) {
            if (GAMEPLAY::IS_BIT_SET(g_151C2[3/*1*/], v_3)) {
                return 0;
            }
        }
        break;
    default:
        return 0;
        break;
    }
    return 1;
}

auto sub_6afc7(auto a_0) {
    if (((a_0 == 40) || (a_0 == 49)) || (a_0 == 52)) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 1)) {
                v_3 = ENTITY::GET_ENTITY_MODEL(sub_6b033(PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1)));
                switch (v_3) {
                case ${monster}:
                case ${utillitruck}:
                    return 1;
                    break;
                }
            }
        }
    }
    return 0;
}

auto sub_6b033(auto a_0) {
    return a_0;
}

void sub_6b03d(auto a_0, auto a_1) {
    if (!GAMEPLAY::IS_BIT_SET(a_1._f4, 2)) {
        return ;
    }
    v_4 = sub_6ba0c();
    v_5 = sub_f87d(v_4);
    switch (a_0) {
    case 133:
    case 134:
    case 201:
    case 202:
        if (sub_6b9d8(a_0)) {
            if (v_5 < 19) {
                if (v_5 >= 7) {
                    game_state._f1707[a_0/*1*/] = 0;
                    OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
                }
            } else { 
                return ;
            }
        } else if (v_5 >= 19) {
            if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 12.0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else if (v_5 < 7) {
            if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 12.0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 199:
    case 200:
    case 203:
    case 204:
        if (sub_6b9d8(a_0)) {
            if (v_5 < 18) {
                if (v_5 >= 7) {
                    game_state._f1707[a_0/*1*/] = 0;
                    OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
                }
            } else { 
                return ;
            }
        } else if (v_5 >= 18) {
            if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 12.0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else if (v_5 < 7) {
            if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 12.0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 141:
    case 142:
        if (sub_6b9d8(a_0)) {
            if (((SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${jewelry_heist}) == 0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${jewelry_setup1}) == 0)) && (!game_state._f1E27._f63._f3A[4/*1*/])) {
                if (v_5 < 21) {
                    if (v_5 >= 7) {
                        game_state._f1707[a_0/*1*/] = 0;
                        OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
                    }
                } else { 
                    return ;
                }
            } else if (!game_state._f1E27._f63._f3A[4/*1*/]) {
                game_state._f1707[a_0/*1*/] = 0;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else if (game_state._f1E27._f63._f3A[4/*1*/]) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        } else if ((SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${jewelry_heist}) == 0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${jewelry_setup1}) == 0)) {
            if (v_5 >= 21) {
                if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 18.0) {
                    game_state._f1707[a_0/*1*/] = 1;
                    OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
                }
            } else if (v_5 < 7) {
                if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 18.0) {
                    game_state._f1707[a_0/*1*/] = 1;
                    OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
                }
            }
        }
        break;
    case 143:
    case 144:
    case 145:
    case 146:
        if (sub_6b9d8(a_0)) {
            if (v_5 < 20) {
                if (v_5 >= 9) {
                    game_state._f1707[a_0/*1*/] = 0;
                    OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
                }
            } else { 
                return ;
            }
        } else if (v_5 >= 20) {
            if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 40.0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else if (v_5 < 9) {
            if (SYSTEM::VDIST(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), a_1) >= 40.0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 147:
    case 148:
        if (!sub_6b9d8(a_0)) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
        if (!sub_6b9d8(a_0)) {
            if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${assassin_valet}) == 0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${assassin_valet}) > 0) {
            game_state._f1707[a_0/*1*/] = 0;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    case 158:
    case 159:
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[70/*34*/]._f6) == 0) {
            if (!sub_6b9d8(a_0)) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 160:
    case 161:
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${omega2}) == 0) {
            if (!sub_6b9d8(a_0)) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 70:
    case 71:
    case 72:
        if ((!sub_6b9d8(a_0)) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[26/*34*/]._f6) == 0)) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        } else { 
            return ;
        }
        break;
    case 101:
    case 102:
    case 103:
    case 104:
        if (!sub_6b9d8(a_0)) {
            if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[43/*34*/]._f6) == 0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else { 
            return ;
        }
        break;
    case 190:
    case 191:
        if (!sub_6b9d8(a_0)) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    case 193:
        if (!sub_6b9d8(a_0)) {
            if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[93/*34*/]._f6) > 0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else { 
            return ;
        }
        break;
    case 198:
        if (!sub_6b9d8(a_0)) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    case 80:
        if (!sub_6b9d8(a_0)) {
            if ((SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[8/*34*/]._f6) == 0) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[10/*34*/]._f6) == 0)) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else { 
            return ;
        }
        break;
    case 205:
    case 206:
        if (!sub_6b9d8(a_0)) {
            if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[47/*34*/]._f6) == 0) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        } else { 
            return ;
        }
        break;
    case 207:
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[70/*34*/]._f6) == 0) {
            if (!sub_6b9d8(a_0)) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[48/*34*/]._f6) == 0) {
            if (!sub_6b9d8(a_0)) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 99:
    case 100:
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(g_14133[39/*34*/]._f6) == 0) {
            if (!sub_6b9d8(a_0)) {
                game_state._f1707[a_0/*1*/] = 1;
                OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
            }
        }
        break;
    case 216:
        if (!sub_6b9d8(a_0)) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    case 217:
    case 218:
        if (!sub_6b9d8(a_0)) {
            game_state._f1707[a_0/*1*/] = 1;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    case 219:
    case 220:
    case 221:
    case 222:
        if (sub_6b9d8(a_0)) {
            game_state._f1707[a_0/*1*/] = 0;
            OBJECT::_6BAB9442830C7F53(a_1._f5, game_state._f1707[a_0/*1*/], 1, 1);
        }
        break;
    }
}

auto sub_6b9d8(auto a_0) {
    v_3/*{7}*/ = sub_6b7(a_0);
    v_A = OBJECT::_160AA1B32F6139B8(v_3._f5);
    return ((v_A == 1) || (v_A == 4)) || (v_A == 2);
}

auto sub_6ba0c() {
    sub_fde2(&v_2, TIME::GET_CLOCK_SECONDS());
    sub_fda7(&v_2, TIME::GET_CLOCK_MINUTES());
    sub_fd6d(&v_2, TIME::GET_CLOCK_HOURS());
    sub_fce9(&v_2, TIME::GET_CLOCK_DAY_OF_MONTH());
    sub_fd3a(&v_2, TIME::GET_CLOCK_MONTH());
    sub_fc63(&v_2, TIME::GET_CLOCK_YEAR());
    return v_2;
}

auto sub_6ba52() {
    if (((sub_4e69() == -1) || (sub_4e69() == 999)) && (!(sub_1bd8d() == 0))) {
        return 1;
    }
    return 0;
}

auto sub_6ba82(auto a_0) {
    for (v_4 = 0; v_4 < 2; v_4 += 1) {
        v_3 = sub_378d(a_0, v_4);
        if (v_3 != 0) {
            if (OBJECT::_DOES_DOOR_EXIST(v_3)) {
                v_5 = OBJECT::_160AA1B32F6139B8(v_3);
                if (((v_5 == 1) || (v_5 == 4)) || (v_5 == 2)) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

void sub_6badd(auto a_0) {
    if (g_26FCD0) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (a_0 || (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), g_26FCD1)) > 40000)) {
                if ((!g_16416._f548) && (!STATS::STAT_SAVE_PENDING_OR_REQUESTED())) {
                    if (sub_122ef() && GAMEPLAY::IS_PC_VERSION()) {
                    } else { 
                        if (NETWORK::NETWORK_IS_ACTIVITY_SESSION()) {
                            STATS::_5688585E6D563CD8(10);
                        }
                        sub_6bb69(10, 0);
                    }
                    g_26FCD1 = NETWORK::GET_NETWORK_TIME();
                    g_26FCD0 = 0;
                }
            }
        } else { 
            sub_8f20();
            g_26FCD0 = 0;
        }
    }
}

void sub_6bb69(auto a_0, auto a_1) {
    if (sub_6bbc1(a_0, a_1)) {
        v_4 = sub_6bb8c();
        g_254046[v_4/*1*/] = a_0;
    }
}

auto sub_6bb8c() {
    v_2 = 9;
    for (v_3 = 0; v_3 <= 9; v_3 += 1) {
        if (g_254046[v_3/*1*/] == 0) {
            v_2 = v_3;
            v_3 = 10;
        }
    }
    return v_2;
}

auto sub_6bbc1(auto a_0, auto a_1) {
    if (g_14143B) {
        return 0;
    }
    if (a_0 == 22) {
        return 1;
    }
    if ((((((((a_1 || (!g_141447)) || (a_0 == 3)) || (a_0 == 10)) || (a_0 == 11)) || (a_0 == 27)) || (a_0 == 28)) || (a_0 == 29)) || (a_0 == 30)) {
        return 1;
    } else { 
        return 0;
    }
    return 1;
}

void sub_6bc47() {
    switch (l_B3._f69._f5) {
    case 0:
        if (sub_6c8b9(&l_B3, l_88)) {
            if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && CAM::IS_SCREEN_FADED_OUT()) {
                GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(sub_42b9(l_B3, 0), 25.0);
                GAMEPLAY::CLEAR_AREA_OF_PROJECTILES(sub_42b9(l_B3, 0), 25.0, 0);
                GAMEPLAY::CLEAR_AREA(sub_42b9(l_B3, 0), 25.0, 1, 0, 0, 0);
            }
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (NETWORK::_67A5589628E0CFF6()) {
                    l_4D1 = 1;
                } else { 
                    l_4D1 = 0;
                }
                l_4D2 = sub_69943(PLAYER::PLAYER_ID());
            }
            if (GAMEPLAY::IS_PC_VERSION()) {
                sub_6c7a9(l_B3, &l_4DB, &l_4DC);
                l_4E0 = 1;
            }
            l_B3._f69._f5 += 1;
        } else { 
            sub_4e74(0);
        }
        break;
    case 1:
        if (sub_67e4e(l_B3)) {
            l_B3._f69._f5 += 1;
        }
        break;
    case 2:
        if (!sub_71886()) {
            return ;
        }
        v_2/*"16"*/ = "GUNKEEPER";
        v_2/*16*/ += l_B3;
        if ((!sub_51b2(l_88)) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
            if (!l_B3._fC._fE) {
                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) {
                    if ((PED::IS_PED_INJURED(l_B3._fC) || PED::IS_PED_FLEEING(l_B3._fC)) || (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(l_B3._fC, 1), l_B3._fC._f2, 1) > 10.0)) {
                        sub_5195("Marking previous shop keeper as no longer needed", -1);
                        ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&l_B3._fC);
                    }
                }
                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) {
                    PED::DELETE_PED(&l_B3._fC);
                }
            }
        }
        if (l_B3._fC._f1 != 0) {
            if (!ENTITY::DOES_ENTITY_EXIST(l_B3._fC)) {
                STREAMING::REQUEST_MODEL(l_B3._fC._f1);
                if (!STREAMING::HAS_MODEL_LOADED(l_B3._fC._f1)) {
                    return ;
                }
                v_6 = 0;
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if ((NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT() && (!NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(l_63))) && (!l_63._f2)) {
                        v_6 = 1;
                    }
                } else { 
                    v_6 = 1;
                }
                if (!v_6) {
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        sub_5195("Using net shop keeper..", -1);
                        sub_6ff57(&l_B3._fC);
                        if (!l_B3._fC._fF) {
                            sub_5195("Waiting for shop keeper to be initialised", -1);
                            return ;
                        }
                    }
                } else { 
                    sub_5195("Creating shop keeper", -1);
                    GAMEPLAY::CLEAR_AREA(l_B3._fC._f2, 2.5, 1, 0, 0, 0);
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        if (!sub_6c74a(&l_63, 4, l_B3._fC._f1, l_B3._fC._f2, l_B3._fC._f5, 1, 1, 1)) {
                            return ;
                        }
                        if (NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) {
                            l_63._f2 = 1;
                        }
                        sub_6ff57(&l_B3._fC);
                    } else { 
                        l_B3._fC = PED::CREATE_PED(5, l_B3._fC._f1, l_B3._fC._f2, l_B3._fC._f5, 0, 0);
                    }
                    INTERIOR::_82EBB79E258FA2B7(l_B3._fC, INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(sub_42b9(l_B3, 0), sub_3f10(l_B3)));
                    ENTITY::_3910051CCECDB00C(l_B3._fC, 1);
                    PED::CLEAR_ALL_PED_PROPS(l_B3._fC);
                    if ((l_B3 == 28) || (l_B3 == 29)) {
                        PED::SET_PED_DEFAULT_COMPONENT_VARIATION(l_B3._fC);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 0, 0, 0, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 1, 0, 0, 0);
                    } else if (l_B3 == 30) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 1, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 1, 0, 0, 0);
                    } else if (l_B3 == 31) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 0, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 0, 0, 0, 0);
                    } else if (l_B3 == 32) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 2, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 10, 0, 0, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 1, 0, 0, 0);
                    } else if (l_B3 == 33) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 2, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 1, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 0, 0, 0, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 1, 0, 0, 0);
                    } else if (l_B3 == 34) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 2, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 0, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 1, 0, 0, 0);
                    } else if (l_B3 == 35) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 2, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 10, 0, 1, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 0, 0, 0, 0);
                    } else if (l_B3 == 36) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 2, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 10, 0, 0, 0);
                    } else if (l_B3 == 37) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 0, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 0, 0, 0, 0);
                    } else if (l_B3 == 38) {
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 0, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 3, 0, 0, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 4, 0, 1, 0);
                        PED::SET_PED_COMPONENT_VARIATION(l_B3._fC, 8, 0, 1, 0);
                        PED::SET_PED_PROP_INDEX(l_B3._fC, 0, 0, 0, 0);
                    }
                    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        WEAPON::GIVE_WEAPON_TO_PED(l_B3._fC, ${weapon_assaultshotgun}, -1, 0, 0);
                        WEAPON::SET_PED_DROPS_WEAPONS_WHEN_DEAD(l_B3._fC, 0);
                    }
                    PED::SET_PED_COMBAT_MOVEMENT(l_B3._fC, 0);
                    if (!l_A9) {
                        PED::ADD_RELATIONSHIP_GROUP(&v_2, &l_AA);
                        PED::SET_PED_RELATIONSHIP_GROUP_HASH(l_B3._fC, l_AA);
                        PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, ${player}, l_AA);
                        PED::SET_RELATIONSHIP_BETWEEN_GROUPS(1, l_AA, ${player});
                        l_A9 = 1;
                    }
                    PED::SET_PED_AS_ENEMY(l_B3._fC, 0);
                    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_B3._fC, 1);
                    PED::SET_PED_CONFIG_FLAG(l_B3._fC, 185, 1);
                    PED::SET_PED_CAN_EVASIVE_DIVE(l_B3._fC, 0);
                    PED::_2F3C3D9F50681DE4(l_B3._fC, 1);
                    PED::SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(l_B3._fC, 0);
                }
            } else { 
                sub_5195("shop keeper already exists..", -1);
            }
            if ((!PED::IS_PED_INJURED(l_B3._fC)) && sub_2b79c(0)) {
                if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
                    AI::TASK_LOOK_AT_ENTITY(l_B3._fC, PLAYER::PLAYER_PED_ID(), -1, 0, 2);
                }
                if (!sub_6eef4(l_B3)) {
                    AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AB);
                }
                sub_6c490(&l_B3._f298._f5, sub_6c4ad("D"));
                if (sub_6c461(l_B3)) {
                    sub_6c3c6(&l_B3._f298._f5, sub_6c4ad("D"), l_B3._fC, "AMMUCOUNTRY", 0, 1);
                    if (l_B3 == 29) {
                        AUDIO::SET_AMBIENT_VOICE_NAME(l_B3._fC, "MELVIN");
                    } else { 
                        AUDIO::SET_AMBIENT_VOICE_NAME(l_B3._fC, "S_M_M_AMMUCOUNTRY_WHITE_MINI_01");
                    }
                } else { 
                    sub_6c3c6(&l_B3._f298._f5, sub_6c4ad("D"), l_B3._fC, "AMMUCITY", 0, 1);
                    if (l_B3 == 28) {
                        AUDIO::SET_AMBIENT_VOICE_NAME(l_B3._fC, "AMMUCITY");
                    } else { 
                        AUDIO::SET_AMBIENT_VOICE_NAME(l_B3._fC, "S_M_Y_AMMUCITY_01_WHITE_MINI_01");
                    }
                }
                STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(l_B3._fC._f1);
                l_B3._fC._fE = 1;
            }
        }
        STREAMING::REQUEST_MODEL(0xe5ec02c1);
        sub_6a667(l_B3, 0, 0);
        GAMEPLAY::_65D2EBB47E1CEC21(0);
        l_B3._f69._f5 = 0;
        l_B3._fB = 1;
        break;
    }
}

void sub_6c3c6(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    if (a_0[a_1/*10*/]._f7 == 1) {}
    a_0[a_1/*10*/] = a_2;
    a_0[a_1/*10*/]._f1/*"24"*/ = a_3;
    a_0[a_1/*10*/]._f7 = 1;
    a_0[a_1/*10*/]._f8 = a_4;
    a_0[a_1/*10*/]._f9 = a_5;
    if (!is_in_transition) {
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f8 == 0) {
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 0);
            } else { 
                PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(a_2, 1);
            }
        }
        if (!PED::IS_PED_INJURED(a_2)) {
            if (a_0[a_1/*10*/]._f9 == 0) {
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 0);
            } else { 
                PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(a_2, 1);
            }
        }
    }
}

auto sub_6c461(auto a_0) {
    switch (a_0) {
    case 29:
    case 32:
    case 35:
    case 36:
        return 1;
        break;
    }
    return 0;
}

void sub_6c490(auto a_0, auto a_1) {
    if (a_0[a_1/*10*/]._f7 == 1) {
        a_0[a_1/*10*/]._f7 = 0;
    }
}

auto sub_6c4ad(auto a_0) {
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "0")) {
        return 0;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "1")) {
        return 1;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "2")) {
        return 2;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "3")) {
        return 3;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "4")) {
        return 4;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "5")) {
        return 5;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "6")) {
        return 6;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "7")) {
        return 7;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "8")) {
        return 8;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "9")) {
        return 9;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "A")) {
        return 10;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "B")) {
        return 11;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "C")) {
        return 12;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "D")) {
        return 13;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "E")) {
        return 14;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "F")) {
        return 15;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "G")) {
        return 16;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "H")) {
        return 17;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "I")) {
        return 18;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "J")) {
        return 19;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "K")) {
        return 20;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "L")) {
        return 21;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "M")) {
        return 22;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "N")) {
        return 23;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "O")) {
        return 24;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "P")) {
        return 25;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "Q")) {
        return 26;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "R")) {
        return 27;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "S")) {
        return 28;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "T")) {
        return 29;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "U")) {
        return 30;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "V")) {
        return 31;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "W")) {
        return 32;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "X")) {
        return 33;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "Y")) {
        return 34;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "Z")) {
        return 35;
    }
    if (GAMEPLAY::ARE_STRINGS_EQUAL(a_0, "z")) {
        return -1;
    } else { 
        return -1;
    }
}

auto sub_6c74a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    if (!NETWORK::CAN_REGISTER_MISSION_PEDS(1)) {
        return 0;
    }
    v_C = PED::CREATE_PED(a_1, a_2, a_3, a_6, a_8, a_7);
    a_0 = NETWORK::PED_TO_NET(v_C);
    if (NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(a_0)) {
        ENTITY::_3910051CCECDB00C(v_C, a_9);
        if (NETWORK::_C7827959479DCC78(v_C)) {
            if (a_7) {
                NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(a_0, 1);
            }
        }
        return 1;
    }
    return 0;
}

void sub_6c7a9(auto a_0, auto a_1, auto a_2) {
    switch (a_0) {
    case 35:
        a_1 = 68.0;
        break;
    case 28:
        a_1 = 4.0;
        break;
    case 31:
        a_1 = -154.0;
        break;
    case 36:
        a_1 = 93.0;
        break;
    case 33:
        a_1 = 26.0;
        break;
    case 34:
        a_1 = -79.0;
        break;
    case 32:
        a_1 = 71.0;
        break;
    case 29:
        a_1 = 74.0;
        break;
    case 30:
        a_1 = -85.0;
        break;
    case 37:
        a_1 = -155.0;
        break;
    case 38:
        a_1 = -155.0;
        break;
    default:
        a_1 = 68.0;
    }
    for (a_2 = a_1 - 100.0; a_2 > 180.0; a_2 -= 360.0) {}
    for (; a_2 < -180.0; a_2 += 360.0) {}
}

auto sub_6c8b9(auto a_0, auto a_1) {
    a_0._f9 = 0;
    sub_6c9ef(a_0, -1, 0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0);
    v_4 = GAMEPLAY::GET_HASH_KEY("v_gun");
    v_5 = GAMEPLAY::GET_HASH_KEY("v_gun2");
    v_6 = GAMEPLAY::GET_HASH_KEY(sub_3f10(a_1));
    if (v_6 == v_4) {
        sub_6c9ef(a_0, a_1, GAMEPLAY::GET_HASH_KEY("V_7_GunShopRm"), 3, ${s_m_y_ammucity_01}, 23.339599609375, -1105.384033203125, 28.797000885, 142.485107421875, 23.339599609375, -1105.384033203125, 28.797000885, 142.485107421875, 1);
    } else if (v_6 == v_5) {
        sub_6c9ef(a_0, a_1, GAMEPLAY::GET_HASH_KEY("V_22_GunShopRm"), 3, ${s_m_y_ammucity_01}, 1692.3804931640625, 3761.681884765625, 33.705299377441406, 213.3571014404297, 1692.3804931640625, 3761.681884765625, 33.705299377441406, 213.3571014404297, 1);
    }
    if (sub_6c461(a_1)) {
        a_0._fC._f1 = ${s_m_m_ammucountry};
    }
    if (v_6 == v_4) {
        v_7 = 28;
    } else if (v_6 == v_5) {
        v_7 = 29;
    }
    sub_ae1f(v_7, a_1, &a_0._fC._f2);
    sub_ae1f(v_7, a_1, &a_0._fC._fA);
    sub_698c3(v_7, a_1, &a_0._fC._f5);
    sub_698c3(v_7, a_1, &a_0._fC._fD);
    return a_0._f9;
}

void sub_6c9ef(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9, auto a_10, auto a_11, auto a_12, auto a_13) {
    a_0 = a_1;
    a_0._f4 = a_2;
    a_0._f2 = a_3;
    a_0._fC._f1 = a_4;
    a_0._fC._f2/*{3}*/ = a_5;
    a_0._fC._f5 = a_8;
    a_0._fC._fA/*{3}*/ = a_9;
    a_0._fC._fD = a_C;
    a_0._f9 = a_D;
}

void sub_6ca3e() {
    if (((l_B3._f9 && l_B3._f7) && (l_B3 == 28)) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
        if (!sub_6cac6(0, 11)) {
            sub_6a6ca(164, 4);
        } else { 
            sub_6a6ca(164, 3);
        }
    }
    if (((l_B3._f9 && l_B3._f7) && (l_B3 == 38)) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) {
        if (!sub_6cac6(0, 11)) {
            sub_6a6ca(185, 4);
        } else { 
            sub_6a6ca(185, 3);
        }
    }
}

auto sub_6cac6(auto a_0, auto a_1) {
    if ((a_0 == 11) || (a_0 == -1)) {
        return 0;
    }
    if ((a_1 < 0) || (a_1 >= 32)) {
        return 0;
    }
    v_4 = GAMEPLAY::IS_BIT_SET(game_state._f1E27._f63._fDB[a_0/*1*/], a_1);
    return v_4;
}

void sub_6cb13() {
    if (l_98 && (l_B3._fB == 4)) {
        if (!l_9A) {
            l_9D = __678_$2F14983962462691("MP_BIG_MESSAGE_FREEMODE");
            l_9B = 1;
            if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(l_9D)) {
                if (!l_9C) {
                    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_9D, "SHOW_WEAPON_PURCHASED");
                    sub_18e74("SHOP_PURCH");
                    sub_2453a(&g_2707D2, l_9F, l_A0, &v_2, &v_6);
                    sub_18e74(&v_2);
                    if ((l_9E == ${weapon_unarmed}) || (l_9E == 0)) {
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(0);
                    } else { 
                        GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(l_9E);
                    }
                    GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION_VOID();
                    l_A1 = GAMEPLAY::GET_GAME_TIMER();
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        l_A2 = NETWORK::GET_NETWORK_TIME();
                    }
                    l_9E = 0;
                    l_9F = -1;
                    l_A0 = -1;
                    l_99 = 0;
                    l_9C = 1;
                }
                GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(l_9D, 255, 255, 255, 255, 0);
                if (((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(l_A2, 5000))) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_A1) > 5000))) || l_99) {
                    l_98 = 0;
                }
            }
        }
    } else { 
        if (l_9B) {
            l_9A = 1;
            if (GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(l_9D)) {
                GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(&l_9D);
                l_9D = 0;
                l_9B = 0;
                l_9A = 0;
                l_99 = 0;
            }
        }
        if ((((!l_9A) && (l_9E != 0)) && (l_9E != ${weapon_unarmed})) && (l_B3._fB == 4)) {
            l_98 = 1;
        } else { 
            l_98 = 0;
        }
        l_9C = 0;
    }
}

void sub_6cc69() {
    if (!l_B3._f7) {
        l_A3 = GAMEPLAY::GET_GAME_TIMER();
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            l_A4 = NETWORK::GET_NETWORK_TIME();
        }
    }
    if ((((!l_B3._f9) || (!l_B3._f8)) || sub_6cd6f()) && (l_B3._fB != 4)) {
        if (l_439) {
            l_435 = 0;
            l_439 = 0;
            l_438 = 0;
            l_437 = 0;
            l_436 = 0;
        } else if (!l_438) {
            sub_6ff9d(0);
        }
    } else if (!l_439) {
        l_438 = 0;
        l_439 = 1;
        l_435 = 0;
        l_434 = 0;
        l_433 = 0;
        l_43B = 100;
    } else if ((!l_435) && ((l_B3._fB != 4) || (l_B3._f69._f1F != 0))) {
        sub_6681c(0);
    }
    if ((NETWORK::_2EAC52B4019E2782() || UI::IS_PAUSE_MENU_ACTIVE()) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 199)) {
        l_8C = 1;
    } else if (l_8C) {
        sub_7021c(&g_2707D2);
        sub_9d6e();
        l_8C = 0;
        l_43A = 1;
    }
    if (l_435) {
        l_4D3 = 0;
    }
}

auto sub_6cd6f() {
    if (((l_B3 == 28) || (l_B3 == 38)) && (l_B3._f69 == -1)) {
        if (((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_A3) < 1000)) || (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (GAMEPLAY::ABSI(NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), l_A4)) < 1000))) {
            return 1;
        }
    }
    return 0;
}

void sub_6cdd3() {
    if (l_41E) {
        if (sub_6e7e8()) {
            return ;
        } else { 
            l_41E = 0;
        }
    }
    if ((!l_B3._f9) || (!l_432)) {
        sub_599e3(&l_B3._f298, -1, 1);
        return ;
    }
    if (PED::IS_PED_INJURED(l_B3._fC)) {
        return ;
    }
    v_2 = 0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (WEAPON::HAS_PED_GOT_WEAPON(l_B3._fC, ${weapon_assaultshotgun}, 0)) {
            v_2 = 1;
            sub_6e7b1(l_B3, 1);
            if (!PED::IS_PED_IN_COMBAT(l_B3._fC, 0)) {
                if (!sub_6e73c(ENTITY::GET_ENTITY_HEADING(l_B3._fC), l_B3._fC._f5, 45.0)) {
                    if ((AI::GET_SCRIPT_TASK_STATUS(l_B3._fC, 0x7276d3df) != 1) && (AI::GET_SCRIPT_TASK_STATUS(l_B3._fC, 0x7276d3df) != 0)) {
                        AI::TASK_ACHIEVE_HEADING(l_B3._fC, l_B3._fC._f5, 0);
                    }
                }
            }
        }
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(l_B2))) {
        if ((((ENTITY::IS_ENTITY_PLAYING_ANIM(l_B3._fC, l_B2, "_positive_goodbye", 3) || ENTITY::IS_ENTITY_PLAYING_ANIM(l_B3._fC, l_B2, "_impatient_a", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(l_B3._fC, l_B2, "_impatient_b", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(l_B3._fC, l_B2, "_positive_a", 3)) || ENTITY::IS_ENTITY_PLAYING_ANIM(l_B3._fC, l_B2, "_greeting", 3)) {
            return ;
        }
    }
    if (l_B3._f7) {
        if (l_B3._fB == 3) {
            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                if (!l_3FD) {
                    if (!l_3FE) {
                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            l_3FC = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600));
                        } else { 
                            l_3FB = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600);
                        }
                        l_3FE = 1;
                    } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_3FC)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_3FB) > 0))) {
                        sub_599e3(&l_B3._f298, 15, 2);
                        l_3FD = 1;
                    }
                }
                l_3F9 = 1;
            } else if (!l_3F9) {
                if (!l_3FA) {
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        l_3F8 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600));
                    } else { 
                        l_3F7 = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600);
                    }
                    l_3FA = 1;
                } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (!sub_6e6f3(-1))) && (!sub_6c461(l_B3))) {
                    if (!sub_6926c(l_B3)) {
                        sub_599e3(&l_B3._f298, 1, 2);
                        if ((!sub_6e6e2(l_B3)) && (!sub_6eef4(l_B3))) {}
                    } else { 
                        sub_599e3(&l_B3._f298, 14, 2);
                    }
                    l_3F9 = 1;
                } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_3F8)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_3F7) > 0))) {
                    if ((!sub_6926c(l_B3)) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${trevor2}) == 0)) {
                        sub_599e3(&l_B3._f298, 0, 2);
                        if (!sub_6eef4(l_B3)) {
                            if (!sub_6e6e2(l_B3)) {
                                if (!v_2) {
                                    AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AC);
                                }
                            } else if (!v_2) {
                                if ((AI::GET_SCRIPT_TASK_STATUS(l_B3._fC, 0xe763797) != 1) && (AI::GET_SCRIPT_TASK_STATUS(l_B3._fC, 0xe763797) != 0)) {
                                    AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AB);
                                }
                            }
                        }
                    } else { 
                        sub_599e3(&l_B3._f298, 14, 2);
                    }
                    l_3F9 = 1;
                }
            }
        }
    } else if (sub_68675(l_B3) > 15.0) {
        l_3F9 = 0;
        l_3FA = 0;
        l_3FE = 0;
        l_3FD = 0;
    }
    if (!l_B3._f69._f13) {
        if (l_B3._f8) {
            if (sub_6e5fa()) {
                if (!l_40C) {
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        l_40B = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600));
                    } else { 
                        l_40A = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600);
                    }
                    l_40C = 1;
                } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_40B)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_40A) > 0))) {
                    if (sub_6e5eb(&l_B3._f298, 3) && (!sub_6e5b8(&l_B3._f298, 1000))) {
                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            l_40B = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 15000));
                        } else { 
                            l_40A = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 15000);
                        }
                    } else { 
                        sub_599e3(&l_B3._f298, 3, 2);
                        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                            l_40B = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(15000, 30000));
                        } else { 
                            l_40A = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(15000, 30000);
                        }
                    }
                }
            } else { 
                l_40C = 0;
            }
        }
    }
    if ((l_B3._f8 && (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()))) && PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID())) {
        if (!l_40F) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                l_40E = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 100);
            } else { 
                l_40D = GAMEPLAY::GET_GAME_TIMER() + 100;
            }
            l_40F = 1;
        } else if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_40E)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_40D) > 0))) {
            if (sub_6e5eb(&l_B3._f298, 2) && (!sub_6e5b8(&l_B3._f298, 1000))) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    l_40E = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 15000));
                } else { 
                    l_40D = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 15000);
                }
            } else { 
                sub_599e3(&l_B3._f298, 2, 2);
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    l_40E = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(15000, 30000));
                } else { 
                    l_40D = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(15000, 30000);
                }
            }
        }
    } else { 
        l_40C = 0;
    }
    if (l_B3._f69._f13) {
        l_3F9 = 1;
        if (l_B3._f69._f1F != 2) {
            sub_599e3(&l_B3._f298, -1, 1);
        } else { 
            l_405 = 1;
            l_404 = 0;
            if (l_410 != l_B3._f69._f3) {
                l_410 = l_B3._f69._f3;
                if (l_B3._f69._f1 != -1) {
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        l_412 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1000, 2000));
                    } else { 
                        l_411 = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(1000, 2000);
                    }
                    l_413 = 1;
                }
            } else if (l_413) {
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_412)) || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && ((GAMEPLAY::GET_GAME_TIMER() - l_411) > 0))) {
                    if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2) == 0) {
                        switch (l_410) {
                        case 3:
                            sub_599e3(&l_B3._f298, 6, 1);
                            break;
                        case 6:
                            sub_599e3(&l_B3._f298, 9, 1);
                            break;
                        case 9:
                            sub_599e3(&l_B3._f298, 8, 1);
                            break;
                        case 8:
                            sub_599e3(&l_B3._f298, 7, 1);
                            break;
                        case 7:
                            sub_599e3(&l_B3._f298, 5, 1);
                            break;
                        case 16:
                            sub_599e3(&l_B3._f298, 10, 1);
                            break;
                        case 17:
                            sub_599e3(&l_B3._f298, 5, 1);
                            break;
                        case 18:
                            sub_599e3(&l_B3._f298, 7, 1);
                            break;
                        default:
                            sub_599e3(&l_B3._f298, -1, 1);
                            break;
                        }
                    } else { 
                        sub_599e3(&l_B3._f298, -1, 1);
                    }
                    l_413 = 0;
                }
            }
            if (sub_6e5b8(&l_B3._f298, l_415)) {
                if (sub_6e5eb(&l_B3._f298, 4)) {
                    l_415 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(45000, 60000);
                } else { 
                    l_415 = GAMEPLAY::GET_RANDOM_INT_IN_RANGE(30000, 45000);
                }
                sub_599e3(&l_B3._f298, 4, 0);
                if (!sub_6e6e2(l_B3)) {
                    if (!sub_6eef4(l_B3)) {
                        if (!v_2) {
                            if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2) == 0) {
                                AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AE);
                            } else { 
                                AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AF);
                            }
                        }
                    }
                }
            }
        }
    }
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if ((l_B3._f8 && (!l_B3._f69._f13)) && sub_7507(sub_10943())) {
            v_3 = sub_5fb95(sub_10943());
            if (sub_684f1()) {
                if (l_414 != v_3) {
                    sub_599e3(&l_B3._f298, 4, 2);
                    l_414 = v_3;
                }
            } else { 
                l_414 = v_3;
            }
        }
    }
    if (!l_B3._f69._f13) {
        if (l_405) {
            if (!l_404) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    l_403 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600));
                } else { 
                    l_402 = GAMEPLAY::GET_GAME_TIMER() + GAMEPLAY::GET_RANDOM_INT_IN_RANGE(300, 600);
                }
                l_404 = 1;
            } else if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_403)) {
                    if (l_B3._f69._f17) {
                        sub_599e3(&l_B3._f298, 11, 2);
                        if (!sub_6e6e2(l_B3)) {
                            if (!sub_6eef4(l_B3)) {
                                if (!v_2) {
                                    if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2) == 0) {
                                        AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_B0);
                                    } else { 
                                        AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_B1);
                                    }
                                }
                            }
                        }
                    } else { 
                        sub_599e3(&l_B3._f298, 13, 2);
                        if ((!sub_6e6e2(l_B3)) && (!sub_6eef4(l_B3))) {
                            if (!v_2) {
                                AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AD);
                            }
                        }
                    }
                    l_405 = 0;
                }
            } else if ((GAMEPLAY::GET_GAME_TIMER() - l_402) > 0) {
                if (l_B3._f69._f17) {
                    sub_599e3(&l_B3._f298, 11, 2);
                    if ((!sub_6e6e2(l_B3)) && (!sub_6eef4(l_B3))) {
                        if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2) == 0) {
                            AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_B0);
                        } else { 
                            AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_B1);
                        }
                    }
                } else { 
                    sub_599e3(&l_B3._f298, 13, 2);
                    if ((!sub_6e6e2(l_B3)) && (!sub_6eef4(l_B3))) {
                        AI::TASK_PERFORM_SEQUENCE(l_B3._fC, l_AD);
                    }
                }
                l_405 = 0;
            }
        }
    }
    if (l_B3._f298 != -1) {
        v_4 = 0;
        if (l_B3._f298 == 2) {
            v_4 = 1;
        }
        if (!sub_6e505(&l_B3._f298, l_B3, v_4)) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                if (!l_401) {
                    l_400 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 3000);
                    l_401 = 1;
                } else if (NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), l_400)) {
                    sub_48d7(&l_B3._f298);
                    l_401 = 0;
                }
            } else if (!l_401) {
                l_3FF = GAMEPLAY::GET_GAME_TIMER();
                l_401 = 1;
            } else if ((GAMEPLAY::GET_GAME_TIMER() - l_3FF) > 3000) {
                sub_48d7(&l_B3._f298);
                l_401 = 0;
            }
        } else { 
            l_401 = 0;
            switch (l_B3._f298) {
            case 0:
                switch (sub_10943()) {
                case 0:
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_GREET_MICHAEL", "SPEECH_PARAMS_FORCE", 1);
                    break;
                case 1:
                    if ((sub_68f31(43) && (game_state._f29C._f36 < 5)) && (l_B3 == 28)) {
                        sub_6c490(&l_B3._f298._f5, sub_6c4ad("D"));
                        sub_6c3c6(&l_B3._f298._f5, sub_6c4ad("D"), l_B3._fC, "AMMUCITY", 0, 1);
                        sub_6c3c6(&l_B3._f298._f5, 1, PLAYER::PLAYER_PED_ID(), "FRANKLIN", 0, 1);
                        if (game_state._f29C._f36 == 0) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_frank1", 7, 0, 0, 0);
                            game_state._f29C._f36 += 1;
                        } else if (game_state._f29C._f36 == 1) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_frank2", 7, 0, 0, 0);
                            game_state._f29C._f36 += 1;
                        } else if (game_state._f29C._f36 == 2) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_frank3", 7, 0, 0, 0);
                            game_state._f29C._f36 += 1;
                        } else if (game_state._f29C._f36 == 3) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_frank4", 7, 0, 0, 0);
                            game_state._f29C._f36 += 1;
                        } else if (game_state._f29C._f36 == 4) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_frank5", 7, 0, 0, 0);
                            game_state._f29C._f36 += 1;
                        }
                        l_41E = 1;
                    } else { 
                        AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_GREET_FRANKLIN", "SPEECH_PARAMS_FORCE", 1);
                    }
                    break;
                case 2:
                    if ((sub_68f31(63) && (game_state._f29C._f35 < 5)) && (l_B3 == 29)) {
                        sub_6c490(&l_B3._f298._f5, sub_6c4ad("D"));
                        sub_6c3c6(&l_B3._f298._f5, sub_6c4ad("D"), l_B3._fC, "MELVIN", 0, 1);
                        sub_6c3c6(&l_B3._f298._f5, 2, PLAYER::PLAYER_PED_ID(), "TREVOR", 0, 1);
                        if (game_state._f29C._f35 == 0) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_trev1", 7, 0, 0, 0);
                            game_state._f29C._f35 += 1;
                        } else if (game_state._f29C._f35 == 1) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_trev2", 7, 0, 0, 0);
                            game_state._f29C._f35 += 1;
                        } else if (game_state._f29C._f35 == 2) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_trev3", 7, 0, 0, 0);
                            game_state._f29C._f35 += 1;
                        } else if (game_state._f29C._f35 == 3) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_trev4", 7, 0, 0, 0);
                            game_state._f29C._f35 += 1;
                        } else if (game_state._f29C._f35 == 4) {
                            sub_6dee9(&l_B3._f298._f5, "gunshau", "gunsh_trev5", 7, 0, 0, 0);
                            game_state._f29C._f35 += 1;
                        }
                        l_41E = 1;
                    } else { 
                        AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_GREET_TREVOR", "SPEECH_PARAMS_FORCE", 1);
                    }
                    break;
                }
                break;
            case 1:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_GREET", "SPEECH_PARAMS_FORCE", 1);
                break;
            case 2:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_SHOOTING", "SPEECH_PARAMS_FORCE", 1);
                break;
            case 3:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_NO_WEAPON", "SPEECH_PARAMS_FORCE", 1);
                break;
            case 4:
                if (((sub_10943() == 1) && sub_68f31(43)) && (l_B3 == 28)) {
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BANTER_FRANKLIN", "SPEECH_PARAMS_FORCE", 1);
                } else if (((sub_10943() == 2) && sub_68f31(63)) && (l_B3 == 29)) {
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BANTER_TREVOR", "SPEECH_PARAMS_FORCE", 1);
                } else { 
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BANTER", "SPEECH_PARAMS_FORCE", 0);
                }
                break;
            case 5:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_MELEE", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 6:
                if (((sub_10943() == 1) && sub_68f31(43)) && (l_B3 == 28)) {
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_FRANKLIN", "SPEECH_PARAMS_FORCE", 1);
                } else if (((sub_10943() == 2) && sub_68f31(63)) && (l_B3 == 29)) {
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_TREVOR", "SPEECH_PARAMS_FORCE", 1);
                } else { 
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_GUN", "SPEECH_PARAMS_FORCE", 0);
                }
                break;
            case 7:
                if (((sub_10943() == 1) && sub_68f31(43)) && (l_B3 == 28)) {
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_FRANKLIN", "SPEECH_PARAMS_FORCE", 1);
                } else if (((sub_10943() == 2) && sub_68f31(63)) && (l_B3 == 29)) {
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_TREVOR", "SPEECH_PARAMS_FORCE", 1);
                } else { 
                    AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE", "SPEECH_PARAMS_FORCE", 0);
                }
                break;
            case 8:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_THROWN", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 9:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_BIG", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 10:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_BROWSE_ARMOUR", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 11:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_SELL", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 12:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_OUT_OF_STOCK", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 13:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_GOODBYE", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 14:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_NO_COPS", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 15:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_REMOVE_VEHICLE", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 16:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_GREET_SPECIAL", "SPEECH_PARAMS_FORCE", 0);
                break;
            case 17:
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "SHOP_SPECIAL_DISCOUNT", "SPEECH_PARAMS_FORCE", 0);
                break;
            default:
                break;
            }
            sub_6deb7(&l_B3._f298);
        }
    }
}

void sub_6deb7(auto a_0) {
    a_0._f1 = a_0;
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        a_0._f3 = NETWORK::GET_TIME_OFFSET(NETWORK::GET_NETWORK_TIME(), 0);
    } else { 
        a_0._f2 = GAMEPLAY::GET_GAME_TIMER();
    }
    a_0 = -1;
}

auto sub_6dee9(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6) {
    sub_6e4af(a_0, 145, a_1, a_4, a_5, a_6);
    if (a_3 > 7) {
        if (a_3 < 12) {
            a_3 = 7;
        }
    }
    g_3D67 = 0;
    g_3D69 = 0;
    g_3D6E = 0;
    g_413F = 0;
    g_4141 = 0;
    g_4145 = 0;
    g_280001 = 0;
    return sub_6df37(a_2, a_3, 0);
}

auto sub_6df37(auto a_0, auto a_1, auto a_2) {
    g_3D61 = 0;
    if ((g_3D60 == 0) || (g_3D62 == 2)) {
        if (g_3D60 != 0) {
            if (a_1 > g_3D62) {
                if (g_3D67 == 0) {
                    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
                    current_character._f1 = 3;
                    g_3D60 = 0;
                    g_3D61 = 1;
                    g_3D95 = 0;
                    g_3D5C = 0;
                    g_3D5D = 0;
                    g_3D6B = 0;
                    g_3D6A = 0;
                    g_384C = 0;
                } else { 
                    sub_6e458();
                    return 0;
                }
            } else { 
                return 0;
            }
        }
        if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
            return 0;
        }
        if (sub_15f05(8, -1)) {
            return 0;
        }
        g_3DAC/*{6}*/ = g_3DA6;
        sub_6e402();
        g_3A99/*{165}*/ = g_3B3E;
        g_3D66 = g_3D67;
        g_3D6D = g_3D6E;
        g_280002 = g_280001;
        g_3D6F/*{16}*/ = g_3D7F;
        g_3D68 = g_3D69;
        g_413E = g_413F;
        g_4146/*{6}*/ = g_414C;
        g_4140 = g_4141;
        g_4142 = g_4143;
        g_4144 = g_4145;
        g_3BE3._f172 = g_413D;
        g_3BE3._f170 = g_413B;
        g_3BE3._f171 = g_413C;
        g_3D5C = g_3D5D;
        if (g_3D66) {
            GAMEPLAY::CLEAR_BIT(&g_8EB, 20);
            GAMEPLAY::CLEAR_BIT(&g_8EC, 17);
            GAMEPLAY::CLEAR_BIT(&g_8ED, 0);
            if (a_2) {
                sub_6e361();
                if (g_C10[current_character/*2811*/][0/*281*/]._f103 == 2) {
                    if (a_1 == 13) {
                    } else { 
                        return 0;
                    }
                }
                if (current_character._f1 > 3) {
                    return 0;
                }
            }
            if (g_382B == 1) {
                return 0;
            }
            if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
                if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (sub_6e2c8()) {
                    return 0;
                }
                if (AI::IS_PED_SPRINTING(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_RAGDOLL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (PED::IS_PED_IN_PARACHUTE_FREE_FALL(PLAYER::PLAYER_PED_ID())) {
                    return 0;
                }
                if (WEAPON::GET_IS_PED_GADGET_EQUIPPED(PLAYER::PLAYER_PED_ID(), ${gadget_parachute})) {
                    return 0;
                }
                if (!is_in_transition) {
                    if (ENTITY::IS_ENTITY_IN_WATER(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_PLAYER_CLIMBING(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                    if (PED::IS_PED_PLANTING_BOMB(PLAYER::PLAYER_PED_ID())) {
                        return 0;
                    }
                    if (PLAYER::IS_SPECIAL_ABILITY_ACTIVE(PLAYER::PLAYER_ID())) {
                        return 0;
                    }
                }
            }
            if (sub_77ac()) {
                return 0;
            } else { 
                switch (current_character._f1) {
                case 7:
                    return 0;
                    break;
                case 8:
                    return 0;
                    break;
                case 9:
                    break;
                case 10:
                    break;
                default:
                    break;
                }
                if (GAMEPLAY::IS_BIT_SET(g_8EB, 9)) {
                    return 0;
                }
            }
            sub_6e233();
            g_3D6A = a_2;
        }
        g_3D62 = a_1;
        g_3BE3/*"24"*/ = a_0;
        g_38F2 = 0;
        sub_6e203();
        return 1;
    } else { 
        if (g_3D60 == 5) {
            return 0;
        }
        if ((a_1 < g_3D62) || (a_1 == g_3D62)) {
            return 0;
        } else { 
            if (a_1 == 2) {
            } else { 
                sub_6e458();
            }
            return 0;
        }
    }
}

void sub_6e203() {
    for (v_2 = 0; v_2 <= 69; v_2 += 1) {
        g_38F4[v_2/*6*/]/*"24"*/ = "";
    }
    AUDIO::STOP_SCRIPTED_CONVERSATION(0);
    g_3D60 = 1;
}

void sub_6e233() {
    g_3D95 = g_3D94;
    g_3D8F = g_3D90;
    g_3DBE/*{6}*/ = g_3DB2;
    g_3DC4/*{6}*/ = g_3DB8;
    g_3D97 = g_3D96;
    g_3DDC/*{6}*/ = g_3DCA;
    g_3DE2/*{6}*/ = g_3DD0;
    g_3DE8/*{6}*/ = g_3DD6;
    g_3DEE/*{6}*/ = g_3DF4;
    g_63E = g_63F;
    g_640 = g_641;
    g_3D6B = g_3D6C;
    g_3D6D = g_3D6E;
    g_3D6F/*{16}*/ = g_3D7F;
    g_3D64 = g_3D65;
    g_4158 = 0;
    g_3D91 = 0;
    g_3D92 = 0;
    GAMEPLAY::CLEAR_BIT(&g_8EC, 16);
}

auto sub_6e2c8() {
    if (is_in_transition) {
        v_2 = 0;
        WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_3, 1);
        if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
            if (((v_3 == ${weapon_sniperrifle}) || (v_3 == ${weapon_heavysniper})) || (v_3 == ${weapon_remotesniper})) {
                v_2 = 1;
            }
        }
        if (CAM::IS_AIM_CAM_ACTIVE() && (v_2 == 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else if (PLAYER::IS_PLAYER_PLAYING(PLAYER::PLAYER_ID())) {
        if (PED::GET_PED_CONFIG_FLAG(PLAYER::PLAYER_PED_ID(), 78, 1)) {
            return 1;
        } else { 
            return 0;
        }
    } else { 
        return 1;
    }
}

void sub_6e361() {
    if (sub_10a59(14)) {
        if (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[0/*29*/]) {
                current_character = 0;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[1/*29*/]) {
                current_character = 1;
            } else if (ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()) == game_state._f7F07[2/*29*/]) {
                current_character = 2;
            } else { 
                current_character = 0;
            }
        }
    } else { 
        current_character = sub_10943();
        if (current_character == 145) {
            current_character = 3;
        }
        if (is_in_transition) {
            current_character = 3;
        }
        if (current_character > 3) {
            current_character = 3;
        }
    }
}

void sub_6e402() {
    for (v_2 = 0; v_2 <= 15; v_2 += 1) {
        g_3A99[v_2/*10*/] = 0;
        g_3A99[v_2/*10*/]._f1/*"24"*/ = "";
        g_3A99[v_2/*10*/]._f7 = 0;
        g_3A99[v_2/*10*/]._f8 = 0;
    }
    g_3A99._fA1 = -99;
    g_3A99._fA2/*{3}*/ = {0.0, 0.0, 0.0 };
}

void sub_6e458() {
    AUDIO::RESTART_SCRIPTED_CONVERSATION();
    g_4153 = 0;
    if ((AUDIO::IS_MOBILE_PHONE_CALL_ONGOING() || (current_character._f1 == 9)) || (g_384C == 1)) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(0);
        g_3D60 = 6;
        current_character._f1 = 3;
        return ;
    }
    if (AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        AUDIO::STOP_SCRIPTED_CONVERSATION(1);
        g_3D60 = 6;
        return ;
    }
}

void sub_6e4af(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5) {
    g_3B3E/*{165}*/ = a_0;
    g_63F = a_1;
    g_3DA6/*"24"*/ = a_2;
    g_413D = a_5;
    if (a_3 == 0) {
        g_413B = 1;
        g_4139 = 0;
    } else { 
        g_413B = 0;
        g_4139 = 1;
    }
    if (a_4 == 0) {
        g_413C = 1;
        g_413A = 0;
    } else { 
        g_413C = 0;
        g_413A = 1;
    }
}

auto sub_6e505(auto a_0, auto a_1, auto a_2) {
    if (a_1 != -1) {
        if (sub_6e6e2(a_1)) {
            return 0;
        }
        if ((!a_2) && (!sub_67e4e(a_1))) {
            return 0;
        }
    }
    if (sub_6e7e8() || sub_6e5a1()) {
        return 0;
    }
    if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && UI::IS_MESSAGE_BEING_DISPLAYED()) {
        return 0;
    }
    if (a_0 == -1) {
        return 0;
    }
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (sub_76ed(PLAYER::PLAYER_ID(), 0)) {
            return 0;
        }
        if ((g_621D || g_1803E2) || g_1803E8) {
            return 0;
        }
    }
    return 1;
}

auto sub_6e5a1() {
    if (g_4153 == 1) {
        return 1;
    } else { 
        return 0;
    }
}

auto sub_6e5b8(auto a_0, auto a_1) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return NETWORK::_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE(a_0._f3, NETWORK::GET_TIME_OFFSET(a_0._f3, a_1));
    } else { 
        return (GAMEPLAY::GET_GAME_TIMER() - a_0._f2) > a_1;
    }
}

auto sub_6e5eb(auto a_0, auto a_1) {
    return a_0._f1 == a_1;
}

auto sub_6e5fa() {
    if (sub_5a62(1)) {
        if (WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_2, 1)) {
            if ((v_2 != 0) && (v_2 != 0xfc508e33)) {
                if ((((((((((WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_pistol}) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_smg})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_rifle})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_mg})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_shotgun})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_sniper})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_heavy})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_thrown})) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == 0x54c7ffc)) || (WEAPON::GET_WEAPONTYPE_GROUP(v_2) == ${group_stungun})) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_6e6e2(auto a_0) {
    return sub_4adf(a_0, 14, 1);
}

auto sub_6e6f3(auto a_0) {
    if (g_1406BE) {
        return 1;
    }
    if (sub_6e730()) {
        return 1;
    }
    if (sub_6e724()) {
        return 1;
    }
    return sub_5bdb0(119, a_0);
}

auto sub_6e724() {
    return g_14143B;
}

auto sub_6e730() {
    return g_14143D;
}

auto sub_6e73c(auto a_0, auto a_1, auto a_2) {
    v_6 = a_1 - a_2;
    if (v_6 < 0.0) {
        v_6 += 360.0;
    }
    v_5 = a_1 + a_2;
    if (v_5 >= 360.0) {
        v_5 -= 360.0;
    }
    if (v_5 > v_6) {
        if ((a_0 < v_5) && (a_0 > v_6)) {
            return 1;
        }
    } else if ((a_0 < v_5) || (a_0 > v_6)) {
        return 1;
    }
    return 0;
}

void sub_6e7b1(auto a_0, auto a_1) {
    if (a_1) {
        if (!sub_4adf(a_0, 1, 1)) {
            sub_9593(a_0, 1, 1);
        }
    } else if (sub_4adf(a_0, 1, 1)) {
        sub_8452(a_0, 1, 1);
    }
}

auto sub_6e7e8() {
    if ((g_3D60 != 0) || AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING()) {
        return 1;
    } else { 
        return 0;
    }
}

void sub_6e80a() {
    if (PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
        l_4FA = 1;
        return ;
    }
    if (l_4FA && l_B3._f7) {
        l_4FA = 0;
        l_B3._fC._f11 = 0;
        sub_5195("Player has returned for some more fighting", -1);
    }
    if ((!ENTITY::IS_ENTITY_DEAD(l_B3._fC)) && (!PED::IS_PED_INJURED(l_B3._fC))) {
        if (!l_B3._fC._f11) {
            if (sub_2b79c(1)) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (!WEAPON::HAS_PED_GOT_WEAPON(l_B3._fC, ${weapon_assaultshotgun}, 0)) {
                        WEAPON::GIVE_WEAPON_TO_PED(l_B3._fC, ${weapon_assaultshotgun}, -1, 0, 0);
                        WEAPON::SET_PED_DROPS_WEAPONS_WHEN_DEAD(l_B3._fC, 0);
                        PED::SET_PED_COMBAT_MOVEMENT(l_B3._fC, 1);
                        PED::SET_PED_SPHERE_DEFENSIVE_AREA(l_B3._fC, ENTITY::GET_ENTITY_COORDS(l_B3._fC, 1), 3.0, 0, 0);
                        PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_B3._fC, 0);
                    }
                }
                PED::SET_PED_CONFIG_FLAG(l_B3._fC, 185, 0);
                PED::SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(l_B3._fC, 1);
                PED::SET_PED_COMBAT_ATTRIBUTES(l_B3._fC, 5, 1);
                PED::SET_PED_COMBAT_ATTRIBUTES(l_B3._fC, 23, 1);
                if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || GAMEPLAY::IS_BULLET_IN_AREA(ENTITY::GET_ENTITY_COORDS(l_B3._fC, 1), 30.0, 1)) || (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0) && l_B3._f7)) {
                    sub_5195("Telling shop staff to attack THE PLAYER", -1);
                    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        PED::SET_PED_COMBAT_MOVEMENT(l_B3._fC, 0);
                    }
                    PED::SET_PED_RELATIONSHIP_GROUP_HASH(l_B3._fC, 0x84dcfaad);
                    if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || (l_63._f3 == PLAYER::PLAYER_ID())) {
                        AI::CLEAR_PED_TASKS(l_B3._fC);
                        AI::TASK_COMBAT_PED(l_B3._fC, PLAYER::PLAYER_PED_ID(), 0x4000000, 16);
                    } else if (!PED::IS_PED_IN_COMBAT(l_B3._fC, 0)) {
                        AI::TASK_AIM_GUN_AT_ENTITY(l_B3._fC, PLAYER::PLAYER_PED_ID(), -1, 0);
                    } else { 
                        sub_5195("No task for the gun shop keeper", -1);
                    }
                } else { 
                    sub_5195("Telling shop staff to attack SOMEONE", -1);
                    AI::CLEAR_PED_TASKS(l_B3._fC);
                    PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, ${player}, l_AA);
                    PED::SET_RELATIONSHIP_BETWEEN_GROUPS(255, l_AA, ${player});
                    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_B3._fC, 0);
                }
                PED::SET_PED_KEEP_TASK(l_B3._fC, 1);
                AUDIO::_PLAY_AMBIENT_SPEECH1(l_B3._fC, "GENERIC_INSULT_HIGH", "SPEECH_PARAMS_FORCE", 1);
                l_B3._fC._f11 = 1;
            }
        }
    }
}

void sub_6ea07(auto a_0, auto a_1, auto a_2) {
    if (a_0._fB == 4) {
        if (a_2 == 0) {
            CONTROLS::SET_INPUT_EXCLUSIVE(2, 201);
        }
        CONTROLS::SET_INPUT_EXCLUSIVE(2, 202);
        CONTROLS::SET_INPUT_EXCLUSIVE(2, 188);
        CONTROLS::SET_INPUT_EXCLUSIVE(2, 187);
        CONTROLS::SET_INPUT_EXCLUSIVE(2, 189);
        CONTROLS::SET_INPUT_EXCLUSIVE(2, 190);
        if (g_10FC9) {
            CONTROLS::DISABLE_CONTROL_ACTION(2, 201, 1);
            CONTROLS::DISABLE_CONTROL_ACTION(2, 202, 1);
            CONTROLS::DISABLE_CONTROL_ACTION(2, 188, 1);
            CONTROLS::DISABLE_CONTROL_ACTION(2, 187, 1);
            CONTROLS::DISABLE_CONTROL_ACTION(2, 189, 1);
            CONTROLS::DISABLE_CONTROL_ACTION(2, 190, 1);
        }
    } else if (a_1._f1E) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (NETWORK::_SUBTRACT_B_FROM_A_AND_CHECK_IF_NEGATIVE(NETWORK::GET_NETWORK_TIME(), NETWORK::GET_TIME_OFFSET(a_1._f1D, 1500))) {
                CONTROLS::SET_INPUT_EXCLUSIVE(2, 202);
                CONTROLS::DISABLE_CONTROL_ACTION(0, 25, 0);
            } else { 
                a_1._f1E = 0;
            }
        } else if ((GAMEPLAY::GET_GAME_TIMER() - a_1._f1C) < 1500) {
            CONTROLS::SET_INPUT_EXCLUSIVE(2, 202);
            CONTROLS::DISABLE_CONTROL_ACTION(0, 25, 0);
        } else { 
            a_1._f1E = 0;
        }
    }
    if ((((((a_0._f7 && (a_0 != 21)) && (!sub_6eea3(15.0))) && (!sub_5d1bd(64))) && (!sub_6ee93(a_0))) && (!sub_6ee82(a_0))) && (!sub_6ee1e(a_0))) {
        if (sub_6ede5(PLAYER::PLAYER_ID(), 0) && (sub_932d(a_0) == 3)) {
            return ;
        }
        if (!sub_684f1()) {
            if (WEAPON::GET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), &v_5, 1)) {
                if (v_5 != ${object}) {
                    WEAPON::SET_CURRENT_PED_WEAPON(PLAYER::PLAYER_PED_ID(), ${weapon_unarmed}, 1);
                    if (CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) {
                        PED::_2208438012482A1A(PLAYER::PLAYER_PED_ID(), 0, 0);
                    }
                }
            }
        }
        v_6 = 1;
        v_7 = sub_32c0(a_0, 0);
        if (v_7 != 226) {
            v_8/*{7}*/ = sub_6b7(v_7);
            if (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(v_8, ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 0), 1) < 1.5) {
                v_6 = 0;
            }
        }
        if (v_6) {
            CONTROLS::DISABLE_CONTROL_ACTION(0, 22, 1);
            PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 102, 1);
        }
        if (PED::GET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID())) {
            PED::SET_PED_STEALTH_MOVEMENT(PLAYER::PLAYER_PED_ID(), 0, 0);
        }
        if (sub_932d(a_0) == 3) {
            UI::_0AFC4AF510774B47();
        } else { 
            CONTROLS::DISABLE_CONTROL_ACTION(0, 37, 1);
        }
        PED::SET_PED_MAX_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID(), 1.35);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 157, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 158, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 159, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 160, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 161, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 162, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 163, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 164, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 165, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 14, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 15, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 16, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 17, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 53, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 54, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 140, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 141, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 142, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 143, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 143, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 47, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 38, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 69, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 70, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 68, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 92, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 99, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 115, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 46, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 25, 0);
        CONTROLS::DISABLE_CONTROL_ACTION(0, 36, 0);
    }
    if (!a_0._f7) {
        if (((a_0 == 28) && ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 15.0545015335083, -1115.2764892578125, 28.233673095703125, 18.64720916748047, -1116.583740234375, 30.608673095703125, 2.1875, 0, 1, 0)) || ((a_0 == 38) && ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 813.52490234375, -2147.4287109375, 27.930631637573242, 809.9389038085938, -2147.441650390625, 30.17720413208, 2.1875, 0, 1, 0))) {
            if ((((!sub_6eea3(15.0)) && (!sub_5d1bd(64))) && (!sub_6ee93(a_0))) && (!sub_6ee82(a_0))) {
                PED::SET_PED_MAX_MOVE_BLEND_RATIO(PLAYER::PLAYER_PED_ID(), 1.35);
            }
        }
    }
}

auto sub_6ede5(auto a_0, auto a_1) {
    if (g_1406BF != 0) {
        return 0;
    }
    if (!sub_69a80(a_0)) {
        return 0;
    }
    v_4 = a_0;
    if (g_1837E7[v_4/*410*/] == a_1) {
        return 1;
    }
    return 0;
}

auto sub_6ee1e(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_683b2(PLAYER::PLAYER_ID(), 27)) {
        for (v_3 = 0; v_3 < 32; v_3 += 1) {
            if (sub_47bf(PLAYER::INT_TO_PLAYERINDEX(v_3), 1, 1) && sub_67ab0(PLAYER::INT_TO_PLAYERINDEX(v_3))) {
                if (g_24E1AF[v_3/*306*/]._fE8 == a_0) {
                    return 1;
                }
            }
        }
    }
    return 0;
}

auto sub_6ee82(auto a_0) {
    return sub_4adf(a_0, 15, 1);
}

auto sub_6ee93(auto a_0) {
    return sub_4adf(a_0, 4, 1);
}

auto sub_6eea3(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()) && (!ENTITY::IS_ENTITY_DEAD(PLAYER::PLAYER_PED_ID()))) {
        if (a_0 <= 0.0) {
            return PED::_5407B7288D0478B7(PLAYER::PLAYER_PED_ID()) > 0;
        } else { 
            return PED::_336B3D200AB007CB(PLAYER::PLAYER_PED_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), a_0) > 0;
        }
    }
    return 0;
}

auto sub_6eef4(auto a_0) {
    return sub_4adf(a_0, 1, 1);
}

void sub_6ef04(auto a_0, auto a_1) {
    if (a_0._f9) {
        if (!a_0._f62) {
            if ((sub_4adf(a_0, 12, 1) || sub_4adf(a_0, 13, 1)) || sub_4adf(a_0, 2, 1)) {
                a_0._f62 = 1;
            }
        }
        if ((a_0._fB != 6) && (!GAMEPLAY::IS_BIT_SET(g_16416._f514[a_0/*1*/], 11))) {
            v_4 = sub_67e4e(a_0);
            if (a_0 == 44) {
                if (a_0._fB == 0) {
                    if (a_1._f5 == 1) {
                        if ((!sub_6f5f3(a_0)) && (!sub_67e4e(a_0))) {
                            v_4 = 1;
                        }
                    }
                }
            }
            if ((!v_4) || (((((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || a_0._fC._fF) && ENTITY::DOES_ENTITY_EXIST(a_0._fC)) && PED::IS_PED_INJURED(a_0._fC)) && (a_0 != 44))) {
                if (a_0._fB == 4) {
                    a_1._f1F = 8;
                } else { 
                    a_0._fB = 6;
                }
            }
            if (a_0._fB == 6) {
                sub_5383();
            }
        }
        if (a_0._fB == 6) {
            sub_68502(a_0);
            if (!a_0._f1) {
                if (a_0._f3 != -1) {
                    sub_12e70(&a_0._f3);
                }
                v_5 = 0;
                v_6 = 0;
                v_7 = 0;
                if (a_0._f7 || ((sub_6eef4(a_0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) && (sub_932d(a_0) != 4))) {
                    v_6 = 1;
                }
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if ((((!sub_6f4ce(a_0)) || (!sub_4adf(a_0, 0, 0))) || sub_6f4bf()) || sub_6f489(PLAYER::PLAYER_ID())) {
                        v_5 = 1;
                    }
                } else if (((!sub_6f361(a_0)) || (!sub_4adf(a_0, 0, 0))) || sub_6f489(PLAYER::PLAYER_ID())) {
                    v_5 = 1;
                }
                if (!v_5) {
                    if ((PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID()) || (!PLAYER::IS_PLAYER_CONTROL_ON(PLAYER::PLAYER_ID()))) || ((a_0._f7 && (!a_0._f8)) && (sub_932d(a_0) == 3))) {
                        v_5 = 1;
                    }
                }
                if (!v_5) {
                    if (!a_0._f7) {
                        if (sub_4adf(a_0, 0, 1) || (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0) && (!(sub_932d(a_0) == 4)))) {
                            v_5 = 1;
                        }
                        if (!v_5) {
                            v_8 = 2.5;
                            if (a_0 == 9) {
                                v_8 = 4.0;
                            }
                            if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {
                                v_8 = 7.5;
                            }
                            v_9 = sub_68675(a_0);
                            if (v_9 > v_8) {
                                v_5 = 1;
                            }
                        }
                    } else if ((!a_0._f8) && (sub_932d(a_0) == 3)) {
                        v_5 = 1;
                    }
                }
                if (sub_6ee93(a_0)) {
                    v_5 = 1;
                    v_6 = 1;
                }
                if ((a_0 == 22) && (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(${family6}) != 0)) {
                    v_7 = 1;
                    if (!v_5) {
                        v_5 = 1;
                    }
                }
                if (v_5) {
                    sub_5383();
                } else if ((!UI::IS_HELP_MESSAGE_BEING_DISPLAYED()) || sub_69253("SHOP_CLOSED", sub_84e5(a_0))) {
                    if (!sub_68fcf("VENDHLP")) {
                        sub_691f6("SHOP_CLOSED", sub_84e5(a_0));
                    }
                }
                if (!v_7) {
                    if (v_6) {
                        if (sub_6ba82(a_0)) {
                            sub_6a667(a_0, 0, 1);
                        }
                        sub_6a667(a_0, 0, 0);
                    } else { 
                        sub_6a667(a_0, 1, 0);
                    }
                }
            }
            if (sub_5a62(1)) {
                if (g_16416._f3F[a_0/*1*/]) {
                    if ((a_0._f62 && (!sub_5b77(PLAYER::PLAYER_ID(), 1))) && (!sub_6eef4(a_0))) {
                        sub_6f33a(a_0);
                    }
                } else if ((((((a_0._f62 && (!sub_10a59(11))) && (!sub_10a59(9))) && (!sub_10a59(0))) && (!sub_10a59(3))) && (!GAMEPLAY::IS_BIT_SET(g_16416._f514[a_0/*1*/], 1))) && (!GAMEPLAY::IS_BIT_SET(g_16416._f514[a_0/*1*/], 2))) {
                    if (sub_932d(a_0) == 3) {
                        sub_6f33a(a_0);
                    } else if ((!a_0._f7) && (sub_68675(a_0) > 50.0)) {
                        sub_6f33a(a_0);
                    }
                }
            }
        }
    }
}

void sub_6f33a(auto a_0) {
    if (g_16416._f11[a_0/*1*/]) {
        sub_9593(a_0, 10, 1);
        sub_9593(a_0, 19, 1);
    }
}

auto sub_6f361(auto a_0) {
    switch (a_0) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
        return 1;
        break;
    case 44:
        break;
    }
    return 0;
}

auto sub_6f489(auto a_0) {
    switch (g_1406BF) {
    case 0:
        if (!sub_68d4e(a_0)) {
            if (g_1837E7[a_0/*410*/] == 0) {
                return 1;
            }
        }
        break;
    }
    return 0;
}

auto sub_6f4bf() {
    return g_25204A._f237;
}

auto sub_6f4ce(auto a_0) {
    switch (a_0) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
        return 1;
        break;
    }
    return 0;
}

auto sub_6f5f3(auto a_0) {
    return sub_4adf(a_0, 0, 0);
}

void sub_6f603(auto a_0, auto a_1, auto a_2, auto a_3) {
    if ((((a_0._f9 && (!a_0._f1)) && sub_5a62(1)) && (!sub_6eef4(a_0))) && (!sub_6ff8c(a_0))) {
        v_6 = 0;
        v_7 = 0;
        v_8 = sub_932d(a_0);
        v_9/*{3}*/ = sub_42b9(a_0, 0);
        if ((sub_6fa65(a_0._fC) || sub_6fa65(a_2)) || ((is_in_transition == 0) && (GAMEPLAY::IS_BULLET_IN_AREA(v_9, 5.0, 0) || GAMEPLAY::IS_PROJECTILE_IN_AREA(v_9 - ({2.5, 2.5, 2.5 }), v_9 + ({2.5, 2.5, 2.5 }), 1)))) {
            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                a_1 = PLAYER::PLAYER_ID();
            } else { }
            v_6 = 1;
            v_7 = 1;
        }
        if (FIRE::GET_CLOSEST_FIRE_POS(&v_C, sub_42b9(a_0, 0))) {
            if (!INTERIOR::_ARE_COORDS_COLLIDING_WITH_EXTERIOR(v_C)) {
                v_6 = 1;
                v_7 = 1;
            }
        }
        if (a_0._f7 && (!v_7)) {
            if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (a_0._fB == 4)) && (sub_932d(a_0) == 4)) {
            } else if ((((v_8 != 4) && PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) && ((a_0 != 21) || ((a_0 == 21) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(a_0._fC, 1), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), 1) < 2.5)))) && ((v_8 != 2) || ((v_8 == 2) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(a_0._fC, 1), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), 1) < 2.5)))) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_1 = PLAYER::PLAYER_ID();
                } else { }
                v_7 = 1;
            } else if ((PED::IS_PED_SHOOTING(PLAYER::PLAYER_PED_ID()) && (!sub_6fa55(a_0))) && (!(INTERIOR::GET_ROOM_KEY_FROM_ENTITY(PLAYER::PLAYER_PED_ID()) == GAMEPLAY::GET_HASH_KEY("V_7_ShootRm")))) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_1 = PLAYER::PLAYER_ID();
                } else { }
                v_6 = 1;
                v_7 = 1;
            } else if (sub_6f9ea()) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_1 = PLAYER::PLAYER_ID();
                } else { }
                v_6 = 1;
                v_7 = 1;
            } else if ((sub_6eea3(0xbf800000) && (PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) > 0)) && (v_8 != 4)) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    a_1 = PLAYER::PLAYER_ID();
                } else { }
                v_7 = 1;
            } else if (((a_0._fB > 0) && ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || a_0._fC._fF)) && ((!ENTITY::DOES_ENTITY_EXIST(a_0._fC)) || PED::IS_PED_INJURED(a_0._fC))) {
                v_7 = 1;
            }
        } else if ((((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && (a_0._fB > 0)) && (a_0._fB != 4)) && a_0._fC._fF) && (ENTITY::DOES_ENTITY_EXIST(a_0._fC) && PED::IS_PED_INJURED(a_0._fC))) {
            v_7 = 1;
        }
        if (v_7) {
            sub_6e7b1(a_0, 1);
            if (v_6) {
                if (((PLAYER::GET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID()) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS())) && (v_8 != 3)) {
                    PLAYER::SET_PLAYER_WANTED_LEVEL(PLAYER::PLAYER_ID(), 1, 0);
                    PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(PLAYER::PLAYER_ID(), 0);
                }
            }
            switch (v_8) {
            case 3:
                break;
            default:
                sub_6f95d(a_2);
                sub_6f95d(a_3);
                sub_6f95d(a_0._fC);
                break;
            }
        }
    }
}

void sub_6f95d(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            if ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) || NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(a_0)) {
                AUDIO::_PLAY_AMBIENT_SPEECH1(a_0, "GENERIC_SHOCKED_HIGH", "SPEECH_PARAMS_FORCE", 1);
                sub_5195("Telling shop keeper to cower", -1);
                AI::CLEAR_PED_TASKS(a_0);
                PED::SET_PED_CONFIG_FLAG(a_0, 185, 0);
                PED::SET_PED_CONFIG_FLAG(a_0, 150, 1);
                PED::SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(a_0, 1);
                AI::TASK_COWER(a_0, -1);
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
                PED::SET_PED_KEEP_TASK(a_0, 1);
                ENTITY::SET_PED_AS_NO_LONGER_NEEDED(&a_0);
            } else { 
                sub_5195("Bypass telling shop keeper to cower, network doesn't have control of entity", -1);
            }
        }
    }
}

auto sub_6f9ea() {
    v_2 = 0;
    if (sub_6fa46()) {
        for (v_2 = 0; v_2 < sub_6fa39(); v_2 += 1) {
            if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(sub_6fa28(v_2), PLAYER::PLAYER_PED_ID(), 0)) {
                return 1;
            }
        }
    }
    return 0;
}

auto sub_6fa28(auto a_0) {
    return g_BB27._f25[a_0/*1*/];
}

auto sub_6fa39() {
    return g_BB27._f24;
}

auto sub_6fa46() {
    return g_BB27._f24 > 0;
}

auto sub_6fa55(auto a_0) {
    return sub_4adf(a_0, 3, 1);
}

auto sub_6fa65(auto a_0) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!PED::IS_PED_INJURED(a_0)) {
            if (FIRE::IS_ENTITY_ON_FIRE(a_0)) {
                sub_5195("Staff on fire!", -1);
                return 1;
            }
            if (WEAPON::IS_PED_ARMED(PLAYER::PLAYER_PED_ID(), 7)) {
                if ((PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(PLAYER::PLAYER_ID(), a_0) && PED::IS_PED_FACING_PED(a_0, PLAYER::PLAYER_PED_ID(), 90.0)) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 40.0)) {
                    AI::TASK_LOOK_AT_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), -1, 0, 2);
                    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
                    sub_5195("Free aiming at shop ped!", -1);
                    return 1;
                }
            }
            if (PED::IS_PED_IN_MELEE_COMBAT(PLAYER::PLAYER_PED_ID()) && (GAMEPLAY::GET_DISTANCE_BETWEEN_COORDS(ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1), ENTITY::GET_ENTITY_COORDS(a_0, 1), 1) < 4.0)) {
                AI::TASK_LOOK_AT_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), -1, 0, 2);
                PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(a_0, 0);
                sub_5195("Melee combat near shop ped!", -1);
                return 1;
            }
            if (ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(a_0, PLAYER::PLAYER_PED_ID(), 1)) {
                sub_5195("Player damaged shop ped!", -1);
                if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    ENTITY::CLEAR_ENTITY_LAST_DAMAGE_ENTITY(a_0);
                } else if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(a_0)) {
                    ENTITY::CLEAR_ENTITY_LAST_DAMAGE_ENTITY(a_0);
                }
                return 1;
            }
            if (GAMEPLAY::HAS_BULLET_IMPACTED_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 0), 5.0, 0, 0)) {
                sub_5195("Bullet near shop ped!", -1);
                return 1;
            }
            if (GAMEPLAY::IS_PROJECTILE_IN_AREA(ENTITY::GET_ENTITY_COORDS(a_0, 0) - ({7.5, 7.5, 3.5 }), ENTITY::GET_ENTITY_COORDS(a_0, 0) + ({7.5, 7.5, 3.5 }), 0)) {
                sub_5195("Projectile near shop ped!", -1);
                return 1;
            }
        }
    }
    return 0;
}

auto sub_6fbe9(auto a_0) {
    if (!g_16416._fF) {
        return 0;
    }
    if (!g_16416._f10) {
        return 0;
    }
    if (is_in_transition) {
        if (!sub_69a80(PLAYER::PLAYER_ID())) {
            return 0;
        }
    } else if (a_0._f9 && (a_0._fB == 0)) {
        if (!PED::IS_PED_INJURED(PLAYER::PLAYER_PED_ID())) {
            if (ENTITY::IS_ENTITY_IN_ANGLED_AREA(PLAYER::PLAYER_PED_ID(), 82.34221649169922, -1310.277587890625, 25.770122528076172, 142.89173889160156, -1274.1536865234375, 46.51248550415039, 62.0, 0, 1, 0)) {
                return 0;
            }
        }
    }
    if (sub_684b3()) {
        return 0;
    }
    return 1;
}

auto sub_6fc86(auto a_0, auto a_1) {
    if (g_3) {
        a_0._fA = 1;
        return 1;
    }
    if (is_in_transition) {
        if (sub_6fcfa()) {
            a_0._fA = 1;
            return 1;
        }
        if (!g_16416._f3F[a_1/*1*/]) {
            a_0._fA = 1;
            return 1;
        }
    } else if (g_16416._f3F[a_1/*1*/]) {
        a_0._fA = 1;
        return 1;
    }
    if (sub_4adf(a_1, 9, 1)) {
        a_0._fA = 1;
        return 1;
    }
    return 0;
}

auto sub_6fcfa() {
    sub_6fdf3(&v_2);
    if (v_2) {
        return 1;
    }
    if (g_14142E == 0) {
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 1;
        }
    }
    if (sub_6fde4()) {
        return 1;
    }
    if (g_254824) {
        return 1;
    }
    if (sub_6fdd8()) {
        return 1;
    }
    if (sub_6fdc1(157)) {
        if (!sub_68498()) {
            return 1;
        }
    }
    if (sub_6fdc1(155)) {
        return 1;
    }
    if (!NETWORK::NETWORK_IS_SIGNED_ONLINE()) {
        return 1;
    }
    if (sub_6fd8d() != 0) {
        if (SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT(sub_6fd8d()) == 0) {
            return 1;
        }
    }
    return 0;
}

auto sub_6fd8d() {
    switch (sub_4e69()) {
    case 0:
        return ${freemode};
        break;
    case 2:
        return ${creator};
        break;
    }
    return 0;
}

auto sub_6fdc1(auto a_0) {
    if (SCRIPT::GET_EVENT_EXISTS(1, a_0)) {
        return 1;
    }
    return 0;
}

auto sub_6fdd8() {
    return g_2540A5;
}

auto sub_6fde4() {
    return g_25204A._f239;
}

void sub_6fdf3(auto a_0) {
    for (v_3 = 0; v_3 < SCRIPT::GET_NUMBER_OF_EVENTS(1); v_3 += 1) {
        v_4 = SCRIPT::GET_EVENT_AT_INDEX(1, v_3);
        if (v_4 == 168) {
            SCRIPT::GET_EVENT_DATA(1, v_3, &v_5, 2);
            switch (v_5) {
            case 325:
                sub_6fe63(v_3);
                break;
            case 2:
                SCRIPT::GET_EVENT_DATA(1, v_3, &v_7, 3);
                if (v_7._f2 == 55) {
                    a_0 = 1;
                }
                break;
            }
        }
    }
}

void sub_6fe63(auto a_0) {
    if (SCRIPT::GET_EVENT_DATA(1, a_0, &v_3, 3)) {
        if (sub_47bf(v_3._f1, 1, 1)) {
            v_6 = PLAYER::GET_PLAYER_PED(v_3._f1);
            if (ENTITY::DOES_ENTITY_EXIST(v_6)) {
                if (PED::IS_PED_IN_ANY_VEHICLE(v_6, 0)) {
                    v_7 = PED::GET_VEHICLE_PED_IS_IN(v_6, 0);
                    if (VEHICLE::IS_VEHICLE_WINDOW_INTACT(v_7, v_3._f2) && NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()) {
                        if (sub_6fee4(v_7, &v_8)) {
                            VEHICLE::REMOVE_VEHICLE_WINDOW(v_7, v_3._f2);
                        }
                        if (v_8) {
                            ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(&v_7);
                        }
                    }
                }
            }
        }
    } else { }
}

auto sub_6fee4(auto a_0, auto a_1) {
    if (ENTITY::DOES_ENTITY_EXIST(a_0)) {
        if (!ENTITY::IS_ENTITY_A_MISSION_ENTITY(a_0)) {
            if (NETWORK::NETWORK_GET_ENTITY_IS_LOCAL(a_0)) {
                ENTITY::SET_ENTITY_AS_MISSION_ENTITY(a_0, 0, 1);
                a_1 = 1;
            }
        }
        if (ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(a_0, 0)) {
            if (NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(a_0)) {
                return 1;
            }
        } else { }
    } else { }
    return 0;
}

auto sub_6ff32(auto a_0) {
    v_3 = 120;
    if (a_0 == 21) {
        v_3 = 140;
    }
    return g_16416._fF8[a_0/*1*/] <= ((float)v_3);
}

void sub_6ff57(auto a_0) {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if (NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(l_63)) {
            a_0 = NETWORK::NET_TO_PED(l_63);
            a_0._fE = 1;
        } else { 
            a_0 = 0;
        }
        a_0._fF = l_63._f2;
    }
}

auto sub_6ff8c(auto a_0) {
    return sub_4adf(a_0, 18, 1);
}

void sub_6ff9d(auto a_0) {
    v_26 = 1;
    v_27 = 1;
    if (a_0) {
        v_26 = 20;
        v_27 = 5;
    }
    for (v_6 = 0; v_6 < v_26; v_6 += 1) {
        for (v_7 = 0; v_7 < v_27; v_7 += 1) {
            if (a_0) {
                v_3 = v_6;
                v_4 = v_7;
            } else { 
                v_3 = l_436;
                v_4 = l_437;
            }
            v_8 = (v_3 * 5) + v_4;
            if (sub_afc5(l_B3, &g_2707D2, &v_C, v_3, v_4, 0)) {
                if (ENTITY::DOES_ENTITY_EXIST(l_B3._fDC[v_8/*1*/])) {
                    OBJECT::DELETE_OBJECT(&l_B3._fDC[v_8/*1*/]);
                }
                if (sub_7044(v_C)) {
                    v_9 = 0;
                    if (v_C._f18 == 3) {
                        if (v_4 == 0) {
                            v_A = ${prop_armour_pickup};
                        } else if (v_4 == 1) {
                            v_A = ${prop_bodyarmour_02};
                        } else if (v_4 == 2) {
                            v_A = ${prop_bodyarmour_03};
                        } else if (v_4 == 3) {
                            v_A = ${prop_bodyarmour_04};
                        } else if (v_4 == 4) {
                            v_A = ${prop_bodyarmour_05};
                        }
                    } else if (v_C._f18 == 4) {
                        v_A = ${p_parachute_s_shop};
                    } else if (v_C._f18 == 7) {
                        v_A = sub_aefd(&g_2707D2, v_C._f17);
                    } else if (v_C._f18 == 6) {
                        v_A = 0xa6706f73;
                    } else if (v_C == ${weapon_knife}) {
                        v_A = ${prop_w_me_knife_01};
                    } else if (v_C == ${weapon_bottle}) {
                        v_A = ${prop_w_me_bottle};
                    } else if (v_C == 0x92a27487) {
                        v_A = ${prop_w_me_dagger};
                    } else if (v_C == 0xf9dcbf2d) {
                        v_A = ${prop_w_me_hatchet};
                    } else { 
                        v_A = WEAPON::GET_WEAPONTYPE_MODEL(v_C);
                        v_9 = 1;
                    }
                    if (v_A != 0) {
                        ENTITY::REMOVE_MODEL_HIDE(v_C._f1, 0.001, v_A, 0);
                        if (v_9) {
                            WEAPON::REMOVE_WEAPON_ASSET(v_C);
                        } else { 
                            STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_A);
                        }
                        if (v_9) {
                            v_5 = 0;
                            while (sub_21a3b(&l_4E1, v_C, v_5, 0)) {
                                if (l_4E1 != 0) {
                                    v_B = WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(l_4E1);
                                    if (v_B != 0) {
                                        STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(v_B);
                                    }
                                }
                                v_5 += 1;
                            }
                        }
                    }
                }
            }
        }
    }
    l_437 += 1;
    if (l_437 >= 5) {
        l_437 = 0;
        l_436 += 1;
        if (l_436 >= 20) {
            l_436 = 0;
            l_438 = 1;
        }
    }
    l_435 = 0;
    if (l_A7) {
        STREAMING::REQUEST_MODEL(${v_lirg_gunlight});
    }
    if (ENTITY::DOES_ENTITY_EXIST(l_A5)) {
        OBJECT::DELETE_OBJECT(&l_A5);
    }
}

auto sub_701e0(auto a_0) {
    if (a_0) {
        return g_25204A._f292._f1C && (GAMEPLAY::GET_HASH_KEY(SCRIPT::GET_THIS_SCRIPT_NAME()) == g_25204A._f292._f1F);
    } else { 
        return g_25204A._f292._f1C;
    }
}

void sub_7021c(auto a_0) {
    a_0._f1A = 0;
    a_0._f35 = 0;
    v_4 = 0;
    v_5 = 11;
    for (v_3 = 0; v_3 < 25; v_3 += 1) {
        a_0._f36[v_3/*1*/] = 0;
        a_0._f50[v_3/*1*/] = 0;
        a_0._f1B[v_3/*1*/] = -1;
        a_0[v_3/*1*/] = ${object};
    }
    for (v_3 = 0; v_3 < 4; v_3 += 1) {
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            switch (v_3) {
            case 0:
                v_45 = ${weapon_sawnoffshotgun};
                break;
            case 1:
                v_45 = ${weapon_bullpupshotgun};
                break;
            case 2:
                v_45 = 0x99aeeb3b;
                break;
            case 3:
                v_45 = ${weapon_hammer};
                break;
            }
        } else { 
            switch (v_3) {
            case 0:
                v_45 = ${weapon_assaultsmg};
                break;
            case 1:
                v_45 = ${weapon_bullpupshotgun};
                break;
            case 2:
                v_45 = 0x99aeeb3b;
                break;
            case 3:
                v_45 = ${weapon_hammer};
                break;
            }
        }
        if (sub_7044(v_45) && (!sub_71581(v_45))) {
            a_0[a_0._f1A/*1*/] = v_45;
            a_0._f1A += 1;
            v_4 += 1;
            if (v_4 >= 4) {
                v_5 += 1;
                v_4 = 0;
            }
        }
    }
    for (v_6 = 0; v_6 < DLC1::GET_NUM_DLC_WEAPONS(); v_6 += 1) {
        if (DLC1::GET_DLC_WEAPON_DATA(v_6, &v_8)) {
            v_45 = v_8._f1;
            if (((((((v_45 != 0) && sub_7044(v_45)) && (!sub_71554(a_0, v_45))) && (a_0._f1A < 25)) && (!sub_71416(v_45))) && (!sub_6f00(v_45))) && (v_45 != 0x7f7497e5)) {
                if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS() || ((!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) && (v_45 != 0x63ab0442))) {
                    if (!sub_71581(v_45)) {
                        a_0[a_0._f1A/*1*/] = v_45;
                        a_0._f1A += 1;
                        v_4 += 1;
                        if (v_4 >= 4) {
                            v_5 += 1;
                            v_4 = 0;
                        }
                    }
                    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                        sub_70e96(v_45, 1, 0, 0);
                    } else { 
                        sub_70d24(0, v_45, 1, 0);
                        sub_70d24(1, v_45, 1, 0);
                        sub_70d24(2, v_45, 1, 0);
                    }
                    for (v_7 = 0; v_7 < DLC1::GET_NUM_DLC_WEAPON_COMPONENTS(v_6); v_7 += 1) {
                        if (DLC1::GET_DLC_WEAPON_COMPONENT_DATA(v_6, v_7, &v_2F)) {
                            if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                                sub_7069a(v_2F._f3, v_45, 1, 0, 0);
                            } else { 
                                sub_6387b(0, v_45, v_2F._f3, 1);
                                sub_6387b(1, v_45, v_2F._f3, 1);
                                sub_6387b(2, v_45, v_2F._f3, 1);
                            }
                        }
                    }
                }
            }
        }
    }
    if ((sub_7044(0x7f7497e5) && (a_0._f1A < 24)) && (!sub_71416(0x7f7497e5))) {
        a_0[a_0._f1A/*1*/] = 0x7f7497e5;
        a_0._f1A += 1;
        v_4 += 1;
        if (v_4 >= 4) {
            v_5 += 1;
            v_4 = 0;
        }
    } else if (!sub_7044(0x7f7497e5)) {
    } else if (a_0._f1A > 23) {
    } else if (sub_71416(0x7f7497e5)) {}
    if ((sub_7044(0xfc508e33) && (a_0._f1A < 24)) && (!sub_71416(0xfc508e33))) {
        a_0[a_0._f1A/*1*/] = 0xfc508e33;
        a_0._f1A += 1;
        v_4 += 1;
        if (v_4 >= 4) {
            v_5 += 1;
            v_4 = 0;
        }
    }
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        if ((sub_7044(0x63ab0442) && (a_0._f1A < 24)) && (!sub_71416(0x63ab0442))) {
            a_0[a_0._f1A/*1*/] = 0x63ab0442;
            a_0._f1A += 1;
            v_4 += 1;
            if (v_4 >= 4) {
                v_5 += 1;
                v_4 = 0;
            }
        }
    }
    if (NETWORK::_EA14EEF5B7CD2C30()) {
        v_47 = NETWORK::_F2EAC213D5EA0623();
        for (v_46 = 0; v_46 < v_47; v_46 += 1) {
            v_49 = NETWORK::_2A7776C709904AB0(v_46);
            for (v_48 = 0; v_48 < v_49; v_48 += 1) {
                if (GAMEPLAY::GET_HASH_KEY(NETWORK::_6F44CBF56D79FAC0(v_46, v_48)) == GAMEPLAY::GET_HASH_KEY("Weapons")) {
                    v_4A = GAMEPLAY::GET_HASH_KEY(NETWORK::_662635855957C411(v_46));
                    if ((!sub_7044(v_4A)) && (!sub_71554(a_0, v_45))) {
                        if (a_0._f35 < 24) {
                            a_0._f1B[a_0._f35/*1*/] = v_46;
                            a_0._f50[a_0._f35/*1*/] = v_5;
                            a_0._f36[a_0._f35/*1*/] = v_4;
                            a_0._f35 += 1;
                            v_4 += 1;
                            if (v_4 >= 4) {
                                v_5 += 1;
                                v_4 = 0;
                            }
                        }
                    }
                }
            }
        }
    }
}

void sub_7069a(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4) {
    if (a_2) {
        if (!sub_57ff9(a_0, a_1, -1)) {
            sub_70cce(a_0, a_1, 1);
        }
        if (a_3) {
            if (sub_70c89(a_0, a_1) == 0) {
                sub_707e8(16, sub_20eda(a_0, 0), sub_20976(a_0, 0), sub_70a98(a_1), sub_708a7(a_1), -1, 0, 0, 0, -1);
                sub_70722(a_0, a_1, 1);
            }
        }
        if (a_4) {
            sub_57af6(a_0, a_1, 1);
        }
    } else if (sub_57ff9(a_0, a_1, -1)) {
        sub_70cce(a_0, a_1, 0);
    }
}

void sub_70722(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_1ea29(a_0, a_1);
    if (v_5 > -1) {
        if (a_2) {
            GAMEPLAY::SET_BIT(&g_259E7E._f3DF[sub_7077b(a_0, a_1)/*1*/], sub_1008b(v_5));
        } else { 
            GAMEPLAY::CLEAR_BIT(&g_259E7E._f3DF[sub_7077b(a_0, a_1)/*1*/], sub_1008b(v_5));
        }
    } else { }
}

auto sub_7077b(auto a_0, auto a_1) {
    v_4 = sub_1ea29(a_0, a_1);
    switch (sub_10156(v_4)) {
    case 0:
        return 0;
        break;
    case 1:
        return 1;
        break;
    case 2:
        return 2;
        break;
    case 3:
        return 3;
    case 4:
        return 4;
    case 5:
        return 5;
    case 6:
        return 6;
    }
    return 0;
}

void sub_707e8(auto a_0, auto a_1, auto a_2, auto a_3, auto a_4, auto a_5, auto a_6, auto a_7, auto a_8, auto a_9) {
    v_C = sub_70878(&g_148435);
    g_148435[v_C/*105*/] = a_0;
    g_148435[v_C/*105*/]._f11/*"64"*/ = a_3;
    g_148435[v_C/*105*/]._f1/*"64"*/ = a_4;
    g_148435[v_C/*105*/]._f21/*"64"*/ = a_1;
    g_148435[v_C/*105*/]._f31/*"64"*/ = a_2;
    g_148435[v_C/*105*/]._f61 = a_5;
    g_148435[v_C/*105*/]._f68 = a_9;
    if (a_6 != 0) {}
    if (a_7 != 0) {}
    if (!GAMEPLAY::IS_STRING_NULL_OR_EMPTY(a_8)) {
        g_148435[v_C/*105*/]._f62/*"24"*/ = a_8;
    }
}

auto sub_70878(auto a_0) {
    for (v_4 = 0; v_4 <= 9; v_4 += 1) {
        if (a_0[v_4/*105*/] == 0) {
            v_3 = v_4;
            v_4 = 10;
        }
    }
    return v_3;
}

auto sub_708a7(auto a_0) {
    switch (a_0) {
    case ${weapon_knife}:
        return "MPWeaponsUnusedForNow";
        break;
    case ${weapon_stungun}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_pistol}:
        return "MPWeaponsGang1_small";
        break;
    case ${weapon_appistol}:
        return "MPWeaponsGang1_small";
        break;
    case ${gadget_parachute}:
        return "MPWeaponsGang1_small";
        break;
    case ${weapon_smg}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_sniperrifle}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_carbinerifle}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_specialcarbine}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_snspistol}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_pumpshotgun}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_grenade}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_stickybomb}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_grenadelauncher}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_combatmg}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_assaultshotgun}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_rpg}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_heavysniper}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_advancedrifle}:
        return "MPWeaponsGang0_small";
        break;
    case ${weapon_microsmg}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_assaultrifle}:
        return "MPWeaponsGang1_small";
        break;
    case ${weapon_mg}:
        return "MPWeaponsGang1_small";
        break;
    case ${weapon_sawnoffshotgun}:
        return "MPWeaponsGang1_small";
        break;
    case ${weapon_minigun}:
        return "MPWeaponsGang1_small";
        break;
    case ${weapon_combatpistol}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_smokegrenade}:
        return "MPWeaponsCommon_small";
        break;
    case ${ammo_space_rocket}:
        return "MPWeaponsCommon_small";
        break;
    case ${vehicle_weapon_space_rocket}:
        return "MPWeaponsCommon_small";
        break;
    case ${weapon_molotov}:
        return "MPWeaponsUnusedForNow";
        break;
    case ${weapon_petrolcan}:
        return "MPWeaponsUnusedForNow";
        break;
    }
    return "";
}

auto sub_70a98(auto a_0) {
    switch (a_0) {
    case ${weapon_knife}:
        return "W_ME_KNIFE_01";
        break;
    case ${weapon_stungun}:
        return "W_PI_Stungun";
        break;
    case ${weapon_pistol}:
        return "W_PI_Pistol";
        break;
    case ${gadget_parachute}:
        return "Parachute_Main";
        break;
    case ${weapon_smg}:
        return "W_SB_SMG";
        break;
    case ${weapon_sniperrifle}:
        return "W_SR_SniperRifle";
        break;
    case ${weapon_carbinerifle}:
        return "W_AR_CarbineRifle";
        break;
    case ${weapon_specialcarbine}:
        return "W_AR_DLC_SpecialCarbine";
        break;
    case ${weapon_snspistol}:
        return "W_AR_DLC_SNSPISTOL";
        break;
    case ${weapon_pumpshotgun}:
        return "W_SG_PumpShotgun";
        break;
    case ${weapon_grenade}:
        return "W_Ex_GrenadeFrag";
        break;
    case ${weapon_stickybomb}:
        return "W_Ex_PE";
        break;
    case ${weapon_grenadelauncher}:
        return "W_R_GrenadeLauncher";
        break;
    case ${weapon_combatmg}:
        return "W_MG_CombatMG";
        break;
    case ${weapon_assaultshotgun}:
        return "W_SG_AssaultShotgun";
        break;
    case ${weapon_appistol}:
        return "W_PI_AppPistol";
        break;
    case ${weapon_rpg}:
        return "W_LR_RPG";
        break;
    case ${weapon_heavysniper}:
        return "W_SR_HeavySniper";
        break;
    case ${weapon_advancedrifle}:
        return "W_AR_AdvancedRifle";
        break;
    case ${weapon_microsmg}:
        return "W_SB_MicroSMG";
        break;
    case ${weapon_assaultrifle}:
        return "W_AR_AssaultRifle";
        break;
    case ${weapon_mg}:
        return "W_MG_MG";
        break;
    case ${weapon_sawnoffshotgun}:
        return "W_SG_SAWNOFF";
        break;
    case ${weapon_minigun}:
        return "W_MG_Minigun";
        break;
    case ${weapon_combatpistol}:
        return "W_PI_CombatPistol";
        break;
    case ${weapon_smokegrenade}:
        return "W_Ex_GrenadeSmoke";
        break;
    case ${weapon_petrolcan}:
        return "W_AM_Jerrycan";
        break;
    case ${weapon_molotov}:
        return "W_EX_Molotov";
        break;
    case ${ammo_space_rocket}:
        return "rocket";
        break;
    case ${vehicle_weapon_space_rocket}:
        return "rocket";
        break;
    }
    return "";
}

auto sub_70c89(auto a_0, auto a_1) {
    v_4 = sub_70cb1(a_0, a_1);
    v_5 = sub_1ea29(a_0, a_1);
    return GAMEPLAY::IS_BIT_SET(v_4, sub_1008b(v_5));
}

auto sub_70cb1(auto a_0, auto a_1) {
    v_4 = g_259E7E._f3DF[sub_7077b(a_0, a_1)/*1*/];
    return v_4;
}

void sub_70cce(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_58030(a_0, a_1, -1);
    v_6 = sub_1ea29(a_0, a_1);
    if (v_6 > -1) {
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_5, sub_1008b(v_6));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_5, sub_1008b(v_6));
        }
        sub_84ba(sub_5804b(a_0, a_1), v_5, -1, 1);
    } else { }
}

void sub_70d24(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (sub_7507(a_0)) {
        v_6 = sub_64972(a_0, a_1);
        v_7 = sub_10a67(a_1);
        v_8 = sub_1008b(v_7);
        if (a_2) {
            GAMEPLAY::SET_BIT(&v_6, v_8);
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_6, v_8);
        }
        sub_70d7e(a_0, a_1, v_6);
        if (a_3) {
            sub_63842(a_0, a_1);
        }
    }
}

void sub_70d7e(auto a_0, auto a_1, auto a_2) {
    v_5 = sub_10a67(a_1);
    v_6 = sub_10156(v_5);
    switch (v_6) {
    case 0:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x22641988, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xce8b34fd, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x7afabef9, a_2, 1);
            break;
        }
        break;
    case 1:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x3451bd63, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0xbc8c9100, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0x7e0ec521, a_2, 1);
            break;
        }
        break;
    case 2:
        switch (a_0) {
        case 0:
            STATS::STAT_SET_INT(0x7e1450e7, a_2, 1);
            break;
        case 1:
            STATS::STAT_SET_INT(0x98b64950, a_2, 1);
            break;
        case 2:
            STATS::STAT_SET_INT(0xe75817b2, a_2, 1);
            break;
        }
        break;
    default:
        break;
    }
}

void sub_70e96(auto a_0, auto a_1, auto a_2, auto a_3) {
    if (a_1) {
        if (!sub_5d0ee(a_0, -1, 0)) {
            sub_713c6(a_0, 1);
            if (((sub_4e69() == 0) || (sub_1bd8d() == 0)) || ((sub_4e69() == 999) && (sub_1bd8d() == 999))) {
                sub_84ba(1176, a_0, -1, 1);
            }
            if ((a_0 == ${weapon_sawnoffshotgun}) || (sub_7139f(sub_713b3(PLAYER::PLAYER_ID(), 1), 0) >= 5)) {
                if (!sub_1e5c5(29, -1, -1)) {
                    if (g_259D49._fFD == 0) {
                        g_259D49._fFD = 1;
                        g_146CF3._f3B2 = 0;
                    }
                }
            }
        }
        if (a_2) {
            if (sub_71360(a_0) == 0) {
                sub_707e8(15, sub_1199f(a_0, 0), sub_7101b(a_0), sub_70a98(a_0), sub_708a7(a_0), -1, 0, 0, 0, -1);
                sub_70f92(a_0, 1);
            }
        }
        if (a_3) {
            sub_6475f(a_0, 1);
        }
    } else if (sub_5d0ee(a_0, -1, 0)) {
        sub_713c6(a_0, 0);
    }
}

void sub_70f92(auto a_0, auto a_1) {
    v_4 = sub_10a67(a_0);
    if (v_4 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&g_259E7E._f3DA[sub_70fe5(a_0)/*1*/], sub_1008b(v_4));
        } else { 
            GAMEPLAY::CLEAR_BIT(&g_259E7E._f3DA[sub_70fe5(a_0)/*1*/], sub_1008b(v_4));
        }
    } else { }
}

auto sub_70fe5(auto a_0) {
    v_3 = sub_10a67(a_0);
    switch (sub_10156(v_3)) {
    case 0:
        return 0;
        break;
    case 1:
        return 1;
        break;
    }
    return 0;
}

auto sub_7101b(auto a_0) {
    switch (a_0) {
    case 0:
        return "";
        break;
    case ${weapon_unarmed}:
        return "";
        break;
    case ${weapon_pistol}:
        return "WT_PIST_DESC_S";
        break;
    case ${weapon_combatpistol}:
        return "WTD_PIST_CBT_S";
        break;
    case ${weapon_appistol}:
        return "WTD_PIST_AP_S";
        break;
    case ${weapon_snspistol}:
        return "WTD_PIST_AP_S";
        break;
    case ${weapon_smg}:
        return "WTD_SMG_MCR_S";
        break;
    case ${weapon_microsmg}:
        return "WTD_SMG_S";
        break;
    case ${weapon_assaultrifle}:
        return "WTD_RIFLE_ASL_S";
        break;
    case ${weapon_carbinerifle}:
        return "WTD_RIFLE_CBN_S";
        break;
    case ${weapon_specialcarbine}:
        return "WTD_RIFLE_CBN_S";
        break;
    case ${weapon_advancedrifle}:
        return "WTD_RIFLE_ADV_S";
        break;
    case ${weapon_mg}:
        return "WTD_MG_S";
        break;
    case ${weapon_combatmg}:
        return "WTD__MG_CBT_S";
        break;
    case ${weapon_pumpshotgun}:
        return "WTD_SG_PMP_S";
        break;
    case ${weapon_sawnoffshotgun}:
        return "WTD_SG_SOF_S";
        break;
    case ${weapon_assaultshotgun}:
        return "WTD_SG_ASL_S";
        break;
    case ${weapon_heavysniper}:
        return "WTD_SNIP_HVY_S";
        break;
    case ${weapon_remotesniper}:
        return "WTD_SNIP_RMT_S";
        break;
    case ${weapon_sniperrifle}:
        return "WTD_SNIP_RIF_S";
        break;
    case ${weapon_grenadelauncher}:
        return "WTD_GL_S";
        break;
    case ${weapon_rpg}:
        return "WTD_RPG_S";
        break;
    case ${weapon_minigun}:
        return "WTD_MINIGUN_S";
        break;
    case ${weapon_grenade}:
        return "WTD_GNADE_S";
        break;
    case ${weapon_smokegrenade}:
        return "WTD_GNADE_SMK_S";
        break;
    case ${weapon_stickybomb}:
        return "WTD_GNADE_STK_S";
        break;
    case ${weapon_molotov}:
        return "";
        break;
    case ${weapon_stungun}:
        return "WTD_STUN_S";
        break;
    case ${weapon_petrolcan}:
        return "WTD_PETROL_S";
        break;
    case ${weapon_digiscanner}:
        return "WTD_DIGI_S";
        break;
    case ${weapon_electric_fence}:
        return "WTD_ELCFEN_S";
        break;
    case ${vehicle_weapon_tank}:
        return "";
        break;
    case ${vehicle_weapon_space_rocket}:
        return "";
        break;
    case ${vehicle_weapon_player_laser}:
        return "";
        break;
    case ${object}:
        return "";
        break;
    case ${gadget_parachute}:
        return "";
        break;
    case ${ammo_rpg}:
        return "";
        break;
    case ${ammo_tank}:
        return "";
        break;
    case ${ammo_space_rocket}:
        return "";
        break;
    case ${ammo_player_laser}:
        return "";
        break;
    case ${ammo_enemy_laser}:
        return "";
        break;
    case ${weapon_knife}:
        return "WT_KNIF_DESC_S";
        break;
    case ${weapon_nightstick}:
        return "";
        break;
    case ${weapon_hammer}:
        return "";
        break;
    case ${weapon_bat}:
        return "";
        break;
    case ${weapon_crowbar}:
        return "";
        break;
    case ${weapon_golfclub}:
        return "";
        break;
    case ${weapon_rammed_by_car}:
        return "";
        break;
    case ${weapon_run_over_by_car}:
        return "";
        break;
    case ${weapon_bottle}:
        return "";
        break;
    case 0xf9dcbf2d:
        return "";
        break;
    case 0xd8df3c3c:
        return "";
        break;
    case 0xdfe37640:
        return "WTD_SWBLADE";
        break;
    case 0xc1b3c3d1:
        return "WTD_REVOLVER";
        break;
    }
    return "WT_INVALID";
}

auto sub_71360(auto a_0) {
    v_3 = sub_71384(a_0);
    v_4 = sub_10a67(a_0);
    return GAMEPLAY::IS_BIT_SET(v_3, sub_1008b(v_4));
}

auto sub_71384(auto a_0) {
    v_3 = g_259E7E._f3DA[sub_70fe5(a_0)/*1*/];
    return v_3;
}

auto sub_7139f(auto a_0, auto a_1) {
    if (a_1) {}
    return sub_69964(a_0, 0);
}

auto sub_713b3(auto a_0, auto a_1) {
    if (a_1) {}
    return sub_69a23(a_0);
}

void sub_713c6(auto a_0, auto a_1) {
    v_4 = sub_5d125(a_0, -1);
    v_5 = sub_10a67(a_0);
    if (v_5 > -1) {
        if (a_1) {
            GAMEPLAY::SET_BIT(&v_4, sub_1008b(v_5));
        } else { 
            GAMEPLAY::CLEAR_BIT(&v_4, sub_1008b(v_5));
        }
        sub_84ba(sub_5d13e(a_0), v_4, -1, 1);
    } else { }
}

auto sub_71416(auto a_0) {
    switch (a_0) {
    case 0x6d544c99:
        if ((!sub_715b()) || NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 1;
        }
        break;
    case 0xf9dcbf2d:
        if (!sub_715b()) {
            return 1;
        }
        break;
    case 0x61012683:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (((!g_40001._f1386) && (!sub_5cc8c(a_0, -1, 0))) && (!g_40001._f24F5)) {
                return 1;
            }
        }
        break;
    case 0xa89cb99e:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if ((!g_40001._f1822) && (!sub_5cc8c(a_0, -1, 0))) {
                return 1;
            }
        } else { 
            return 0;
        }
        break;
    case 0x7f7497e5:
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 1;
        } else if (g_40001._f182A) {
            return 1;
        }
        break;
    case 0x8bb05fd7:
        if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if ((!g_40001._f2509) && (!sub_5cc8c(a_0, -1, 0))) {
                return 1;
            }
        } else { 
            return 0;
        }
        break;
    }
    if (a_0 == 0xfc508e33) {
        if ((NETWORK::NETWORK_IS_GAME_IN_PROGRESS() && sub_7282()) && (!g_40001._f182B)) {
            return 0;
        } else { 
            return 1;
        }
    }
    return 0;
}

auto sub_71554(auto a_0, auto a_1) {
    for (v_4 = 0; v_4 < a_0._f1A; v_4 += 1) {
        if (a_0[v_4/*1*/] == a_1) {
            return 1;
        }
    }
    return 0;
}

auto sub_71581(auto a_0) {
    switch (a_0) {
    case 0x8bb05fd7:
    case 0x92a27487:
    case 0x99aeeb3b:
    case 0xab564b93:
    case ${weapon_snspistol}:
    case ${weapon_heavypistol}:
    case 0xd8df3c3c:
    case 0xdd5df8d9:
    case 0xdfe37640:
    case 0xf9dcbf2d:
    case ${weapon_bottle}:
    case 0x83839c4:
    case 0x47757124:
    case ${weapon_hammer}:
        return 1;
    }
    return 0;
}

void sub_715e9() {
    if (!l_432) {
        AI::OPEN_SEQUENCE_TASK(&l_AB);
        AI::TASK_PLAY_ANIM(0, l_B2, "_neutral_to_idle", 8.0, -8.0, -1, 262144, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -8.0, -1, 262144, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle_a", 8.0, -8.0, -1, 262144, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle_b", 8.0, -8.0, -1, 262144, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -8.0, -1, 262144, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle_a", 8.0, -8.0, -1, 262144, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -8.0, -1, 262145, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_AB);
        AI::OPEN_SEQUENCE_TASK(&l_AC);
        AI::TASK_PLAY_ANIM(0, l_B2, "_greeting", 8.0, -8.0, -1, 786432, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -2.0, -1, 786433, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_AC);
        AI::OPEN_SEQUENCE_TASK(&l_AD);
        AI::TASK_PLAY_ANIM(0, l_B2, "_positive_goodbye", 8.0, -8.0, -1, 786432, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -2.0, -1, 786433, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_AD);
        AI::OPEN_SEQUENCE_TASK(&l_AE);
        AI::TASK_PLAY_ANIM(0, l_B2, "_impatient_a", 8.0, -8.0, -1, 786432, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -2.0, -1, 786433, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_AE);
        AI::OPEN_SEQUENCE_TASK(&l_AF);
        AI::TASK_PLAY_ANIM(0, l_B2, "_impatient_b", 8.0, -8.0, -1, 786432, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -2.0, -1, 786433, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_AF);
        AI::OPEN_SEQUENCE_TASK(&l_B0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle_a", 4.0, -8.0, -1, 786432, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -2.0, -1, 786433, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_B0);
        AI::OPEN_SEQUENCE_TASK(&l_B1);
        AI::TASK_PLAY_ANIM(0, l_B2, "_positive_a", 8.0, -8.0, -1, 786432, 0, 0, 0, 0);
        AI::TASK_PLAY_ANIM(0, l_B2, "_idle", 8.0, -2.0, -1, 786433, 0, 0, 0, 0);
        AI::CLOSE_SEQUENCE_TASK(l_B1);
        l_432 = 1;
    }
}

auto sub_71886() {
    l_B2 = "random@shop_gunstore";
    STREAMING::REQUEST_ANIM_DICT(l_B2);
    if (STREAMING::HAS_ANIM_DICT_LOADED(l_B2)) {
        return 1;
    }
    return 0;
}

void sub_718a8(auto a_0) {
    if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        return ;
    }
    if (!NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT()) {
        return ;
    }
    for (v_3 = 0; v_3 < 2; v_3 += 1) {
        v_4 = sub_32c0(a_0, v_3);
        if (v_4 != 226) {
            v_5/*{7}*/ = sub_6b7(v_4);
            if (!OBJECT::_DOES_DOOR_EXIST(v_5._f5)) {
                OBJECT::ADD_DOOR_TO_SYSTEM(v_5._f5, v_5._f3, v_5, 0, 1, 0);
                if (a_0 == 44) {}
            }
        }
    }
}

void sub_71919() {
    if (NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
        NETWORK::NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(32, 0, l_88);
        if (!sub_719d1(0, -1, 1)) {
            sub_4e74(0);
        }
        NETWORK::NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(&l_63, 4);
        NETWORK::NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(&l_67, 33);
        NETWORK::RESERVE_NETWORK_MISSION_PEDS(1);
        GAMEPLAY::SET_THIS_SCRIPT_CAN_BE_PAUSED(0);
        if (!sub_71978()) {
            sub_4e74(0);
        }
    } else if (PLAYER::HAS_FORCE_CLEANUP_OCCURRED(66)) {
        sub_4e74(0);
    }
}

auto sub_71978() {
    v_2 = 0;
    while (1) {
        v_2 += 1;
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            return 0;
        }
        if (NETWORK::_5D10B3795F3FC886()) {
            return 1;
        }
        if (sub_6fde4()) {
            return 0;
        }
        if (sub_6fdc1(155)) {
            return 0;
        }
        if (v_2 >= 3600) {
            return 0;
        }
        SYSTEM::WAIT(0);
    }
    return 0;
}

auto sub_719d1(auto a_0, auto a_1, auto a_2) {
    v_5 = NETWORK::NETWORK_GET_SCRIPT_STATUS();
    while (v_5 != 2) {
        if ((((v_5 == 3) || (v_5 == 4)) || (v_5 == 5)) || (v_5 == 6)) {
            if (!a_2) {
                sub_71af2();
            } else { 
                return 0;
            }
        }
        if (!sub_71ae6()) {
            if (a_0 == 0) {
                if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
                    if (!a_2) {
                        sub_71af2();
                    } else { 
                        return 0;
                    }
                }
                if (sub_6fde4()) {
                    if (!a_2) {
                        sub_71af2();
                    } else { 
                        return 0;
                    }
                }
                if (sub_6fdc1(155)) {
                    if (!a_2) {
                        sub_71af2();
                    } else { 
                        return 0;
                    }
                }
            } else if (!NETWORK::NETWORK_IS_IN_SESSION()) {
                if (!a_2) {
                    sub_71af2();
                } else { 
                    return 0;
                }
            }
        }
        SYSTEM::WAIT(0);
        v_5 = NETWORK::NETWORK_GET_SCRIPT_STATUS();
    }
    if (a_1 > -1) {
        g_1406F6 = v_5;
    }
    if (a_0 == 0) {
        if (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()) {
            if (!a_2) {
                sub_71af2();
            } else { 
                return 0;
            }
        }
    } else if (!NETWORK::NETWORK_IS_IN_SESSION()) {
        if (!a_2) {
            sub_71af2();
        } else { 
            return 0;
        }
    }
    return 1;
}

auto sub_71ae6() {
    return g_14142E;
}

void sub_71af2() {
    SCRIPT::TERMINATE_THIS_THREAD();
}